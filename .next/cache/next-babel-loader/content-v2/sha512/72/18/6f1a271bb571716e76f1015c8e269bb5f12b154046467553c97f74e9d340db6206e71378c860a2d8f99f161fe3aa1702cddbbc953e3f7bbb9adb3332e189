{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport StylesVars from 'styles/StylesVars';\nconst ThemeGreen = 'green';\nconst ThemeDark = 'dark';\n\nconst BoxList = props => {\n  const addClassName = props.className ? props.className : '';\n  const className = props.active ? `${addClassName} active` : addClassName;\n  return /*#__PURE__*/_jsx(Container, {\n    theme: props.theme,\n    className: className,\n    children: /*#__PURE__*/_jsxs(\"button\", {\n      onClick: e => props.onClick && props.onClick(e),\n      children: [/*#__PURE__*/_jsx(\"label\", {\n        children: props.label\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"lamp\",\n        children: \"\\xA0\"\n      })]\n    })\n  }, props.label);\n};\n\nBoxList.defaultProps = {\n  active: false,\n  theme: ThemeGreen\n};\nexport default BoxList;\nconst Container = styled.li.withConfig({\n  displayName: \"BoxList__Container\",\n  componentId: \"rdrwvi-0\"\n})([\"display:flex;flex-flow:row wrap;align-items:center;justify-content:center;width:auto;height:\", \"px;button{display:flex;flex-flow:column wrap;align-items:center;justify-content:center;width:100%;height:100%;color:\", \";cursor:pointer;background:\", \";border:0;outline:0;transition:\", \";}button:hover{background:\", \";}.lamp{position:relative;width:50%;max-width:50px;height:10px;cursor:pointer;background:\", \";border-radius:10px;transition:\", \";}label{position:relative;margin-bottom:6px;cursor:pointer;}&.active div.lamp{cursor:pointer;background:\", \";}a{display:flex;flex-flow:column nowrap;align-items:center;justify-content:center;width:100%;height:100%;color:\", \";cursor:pointer;background:\", \";}\"], Number(StylesVars.baseHeight), props => props.theme === ThemeGreen ? 'rgba(0, 0, 0, 1)' : 'rgba(255, 255, 255, 1)', props => props.theme === ThemeGreen ? 'rgba(255, 255, 255, 1)' : 'rgba(68, 68, 68, 1)', StylesVars.transitionDuration, props => props.theme === ThemeGreen ? 'rgba(245, 245, 245, 1)' : 'rgba(98, 98, 98, 1)', props => props.theme === ThemeGreen ? StylesVars.bgColor : 'rgba(155, 155, 155, 1)', StylesVars.transitionDuration1, props => props.theme === ThemeGreen ? 'rgba(79, 174, 159, 1)' : 'rgba(79, 174, 159, 1)', props => props.theme === ThemeGreen ? 'rgba(0, 0, 0, 1)' : 'rgba(255, 255, 255, 1)', props => props.theme === ThemeGreen ? 'rgba(255, 255, 255, 1)' : 'rgba(68, 68, 68, 1)');","map":null,"metadata":{},"sourceType":"module"}