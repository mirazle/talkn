{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useRecoilState } from 'recoil';\nimport { CategoryState, MktTypeState } from 'state';\nimport styled from 'styled-components';\nimport BoxList from 'components/molecules/BoxList';\nimport StylesVars from 'styles/StylesVars';\n\nvar BoxNavigation = function BoxNavigation(props) {\n  var _useRecoilState = useRecoilState(MktTypeState),\n      _useRecoilState2 = _slicedToArray(_useRecoilState, 1),\n      mktType = _useRecoilState2[0];\n\n  var _useRecoilState3 = useRecoilState(CategoryState),\n      _useRecoilState4 = _slicedToArray(_useRecoilState3, 1),\n      category = _useRecoilState4[0];\n\n  var categories = props.categories,\n      isFixedSmallNav = props.isFixedSmallNav,\n      redirectTo = props.redirectTo;\n  return /*#__PURE__*/_jsx(Container, {\n    isFixedSmallNav: isFixedSmallNav,\n    children: /*#__PURE__*/_jsx(\"ul\", {\n      children: Array.from(categories).map(function (c) {\n        var active = c.category === category;\n        return /*#__PURE__*/_jsx(BoxList, {\n          label: c.label,\n          active: active,\n          onClick: function onClick() {\n            return redirectTo(mktType, c.category);\n          }\n        }, c.category);\n      })\n    })\n  });\n};\n\nexport default BoxNavigation;\nvar Container = styled.nav.withConfig({\n  displayName: \"BoxNavigation__Container\",\n  componentId: \"sc-1wq75th-0\"\n})([\"position:\", \";top:\", \";z-index:90;width:100%;max-width:\", \"px;height:\", \"px;margin:\", \"px auto 0;overflow:hidden;transition:\", \";ul{display:grid;grid-template-rows:1fr 1fr;grid-template-columns:repeat(5,minmax(20%,1fr));gap:1px;height:100%;overflow:hidden;}\"], function (props) {\n  return props.isFixedSmallNav ? 'fixed' : 'relative';\n}, function (props) {\n  return props.isFixedSmallNav ? \"\".concat(StylesVars.baseHeight, \"px\") : 0;\n}, StylesVars.maxWidth, Number(StylesVars.baseHeight) * 2, function (props) {\n  return props.isFixedSmallNav ? 0 : 60;\n}, StylesVars.transitionDuration);","map":null,"metadata":{},"sourceType":"module"}