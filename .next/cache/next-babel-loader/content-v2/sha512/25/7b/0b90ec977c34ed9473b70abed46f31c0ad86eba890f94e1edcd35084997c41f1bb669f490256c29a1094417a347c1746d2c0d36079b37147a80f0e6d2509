{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport * as React from 'react';\nimport { useRecoilState } from 'recoil';\nimport { UrlState } from 'state';\nimport styled from 'styled-components';\nimport NoSsr from 'components/atoms/NoSsr';\nimport StylesVars from 'styles/StylesVars';\n\nvar Thread = function Thread(props) {\n  var url = useRecoilState(UrlState)[0];\n\n  if (url === '') {\n    return /*#__PURE__*/_jsx(NoSsr, {});\n  } else {\n    var isSpLayout = props.isSpLayout,\n        threadOnlyMode = props.threadOnlyMode,\n        talknPostFixed = props.talknPostFixed,\n        talknPostTranslateY = props.talknPostTranslateY,\n        talknPostRight = props.talknPostRight,\n        talknPostWidth = props.talknPostWidth;\n    return /*#__PURE__*/_jsxs(NoSsr, {\n      children: [/*#__PURE__*/_jsx(Container, {\n        \"data-url\": url,\n        id: \"talknLiveMedia\"\n      }), /*#__PURE__*/_jsx(TalknPostWrap, {\n        id: \"talknLiveMediaPost\",\n        isSpLayout: isSpLayout,\n        threadOnlyMode: threadOnlyMode,\n        fixed: talknPostFixed,\n        translateY: talknPostTranslateY,\n        right: talknPostRight,\n        width: talknPostWidth\n      })]\n    });\n  }\n};\n\nexport default Thread;\nexport var getTalknPostLayout = function getTalknPostLayout(windowInnerWidth, isMaxLayout, isSpLayout) {\n  var right = 0;\n  var width = 0;\n\n  if (isMaxLayout) {\n    right = (windowInnerWidth - Number(StylesVars.maxWidth) + 20) / 2;\n    width = Number(StylesVars.maxWidth) / 2 - 20;\n  } else {\n    if (isSpLayout) {\n      width = window.innerWidth;\n      right = 0;\n    } else {\n      width = window.innerWidth / 2 - 20;\n      right = 10;\n    }\n  }\n\n  return {\n    width: width,\n    right: right\n  };\n};\nvar Container = styled.div.withConfig({\n  displayName: \"Thread__Container\",\n  componentId: \"sc-83z3zh-0\"\n})([\"height:800px;padding-bottom:60px;overflow-x:hidden;overflow-y:scroll;scroll-snap-align:center;@media (max-width:\", \"px){width:100%;min-width:100%;}@media (min-width:calc(\", \"px + 1px)){width:50%;}\"], StylesVars.spLayoutWidth, StylesVars.spLayoutWidth);\nvar TalknPostWrap = styled.div.withConfig({\n  displayName: \"Thread__TalknPostWrap\",\n  componentId: \"sc-83z3zh-1\"\n})([\"position:\", \";top:\", \"px;right:\", \"px;bottom:\", \";display:flex;flex-flow:row wrap;align-items:center;justify-content:flex-start;width:\", \"px;max-width:\", \"px;height:\", \"px;color:#000;background:rgba(255,255,255,0.96);border-top:1px solid \", \";border-right:\", \";border-left:\", \";border-radius:\", \";transform:translateY(\", \"px);\"], function (props) {\n  return props.fixed ? 'fixed' : 'absolute';\n}, function (props) {\n  return props.fixed ? 'unset' : '1050';\n}, function (props) {\n  return props.right;\n}, function (props) {\n  return props.fixed ? '0' : 'unset';\n}, function (props) {\n  return props.width;\n}, function (props) {\n  return props.isSpLayout ? props.width : Number(StylesVars.maxWidth) / 2 - 20;\n}, Number(StylesVars.baseHeight), StylesVars.bgColor, function (props) {\n  return props.isSpLayout ? 0 : \"1px solid \".concat(StylesVars.bgColor);\n}, function (props) {\n  return props.isSpLayout ? 0 : \"1px solid \".concat(StylesVars.bgColor);\n}, function (props) {\n  return props.isSpLayout ? 0 : '7px 7px 0 0';\n}, function (props) {\n  return props.isSpLayout ? props.translateY : 0;\n});","map":null,"metadata":{},"sourceType":"module"}