{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport sitemapJson from 'json/news/sitemap.json';\nimport * as React from 'react';\nimport { useRecoilState } from 'recoil';\nimport { CategoryState, MktTypeState } from 'state';\nimport styled from 'styled-components';\nimport StylesVars from 'styles/StylesVars';\nvar navigationScrollClassName = 'navigationScroll';\n\nvar LineNavigation = function LineNavigation(props) {\n  var lineNavScrollWidth = props.lineNavScrollWidth,\n      setLineNavScrollWidth = props.setLineNavScrollWidth,\n      categories = props.categories,\n      isFixedSmallNav = props.isFixedSmallNav,\n      redirectTo = props.redirectTo;\n\n  var _useRecoilState = useRecoilState(MktTypeState),\n      _useRecoilState2 = _slicedToArray(_useRecoilState, 1),\n      mktType = _useRecoilState2[0];\n\n  var _useRecoilState3 = useRecoilState(CategoryState),\n      _useRecoilState4 = _slicedToArray(_useRecoilState3, 1),\n      category = _useRecoilState4[0];\n\n  var setNavScrollIndex = React.useState(0)[1];\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      scrollingId = _React$useState2[0],\n      setScrolligId = _React$useState2[1];\n\n  var menus = categories.concat(categories).concat(categories);\n\n  var onScrollEnd = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(mktType) {\n      var navigationScroll, scrollY, sitemap, _categories, lineMenus, oneScroll, scrollPosCnt, scrollNavIndex, _category;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              navigationScroll = document.querySelector(\".\".concat(navigationScrollClassName));\n\n              if (!navigationScroll) {\n                _context.next = 17;\n                break;\n              }\n\n              if (!(lineNavScrollWidth === navigationScroll.scrollWidth)) {\n                _context.next = 17;\n                break;\n              }\n\n              if (!(scrollingId > 0)) {\n                _context.next = 17;\n                break;\n              }\n\n              scrollY = window.scrollY;\n              sitemap = sitemapJson.find(function (sitemap) {\n                return sitemap.Market === mktType;\n              });\n              _categories = sitemap ? sitemap.Categories : [];\n              lineMenus = _categories.concat(_categories).concat(_categories);\n              oneScroll = Math.round(lineNavScrollWidth / lineMenus.length);\n              scrollPosCnt = Math.round(navigationScroll.scrollLeft / oneScroll);\n              scrollNavIndex = scrollPosCnt + 2;\n              _category = lineMenus[scrollNavIndex].category;\n              _context.next = 14;\n              return redirectTo(mktType, _category);\n\n            case 14:\n              // scroll.\n              window.scrollTo(0, scrollY);\n              setScrolligId(0);\n              setNavScrollIndex(Number(scrollNavIndex));\n\n            case 17:\n              return _context.abrupt(\"return\", Promise.resolve());\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onScrollEnd(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var onScroll = function onScroll() {\n    if (scrollingId > 0) clearTimeout(scrollingId);\n    /* eslint-disable-next-line @typescript-eslint/no-misused-promises */\n\n    setScrolligId(Number(setTimeout(function () {\n      return onScrollEnd(mktType);\n    }, 100)));\n  }; // did update.\n\n\n  React.useEffect(function () {\n    var navigationScroll = document.querySelector(\".\".concat(navigationScrollClassName));\n\n    if (navigationScroll) {\n      var scrollNavIndex = menus.findIndex(function (menu, i) {\n        return menu.category === category && i > categories.length;\n      });\n      var oneScroll = Math.round(lineNavScrollWidth / menus.length);\n      navigationScroll.scrollTo((scrollNavIndex - 2) * oneScroll, 0);\n      setLineNavScrollWidth(navigationScroll.scrollWidth);\n      setNavScrollIndex(scrollNavIndex);\n    }\n  }, [lineNavScrollWidth, category]);\n  return /*#__PURE__*/_jsx(Container, {\n    isFixedSmallNav: isFixedSmallNav,\n    children: /*#__PURE__*/_jsx(\"ul\", {\n      className: navigationScrollClassName,\n      onScroll: onScroll,\n      children: menus.map(function (menu, i) {\n        var key = menu.label + String(i);\n        var className = menu.category === category ? 'active' : '';\n        return /*#__PURE__*/_jsxs(\"li\", {\n          className: className,\n          children: [/*#__PURE__*/_jsx(\"button\", {\n            children: /*#__PURE__*/_jsx(\"label\", {\n              children: menu.label\n            })\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"lamp\",\n            children: \"\\xA0\"\n          })]\n        }, key);\n      })\n    })\n  });\n};\n\nexport default LineNavigation;\nvar Container = styled.nav.withConfig({\n  displayName: \"LineNavigation__Container\",\n  componentId: \"sc-148d60j-0\"\n})([\"position:\", \";top:\", \";z-index:91;width:100%;height:30px;overflow-x:scroll;transition:\", \";ul{display:flex;flex-flow:row nowrap;width:100%;max-width:\", \"px;height:100%;margin:0 auto;overflow-y:hidden;background:#fff;scroll-snap-type:x mandatory;scroll-snap-points-x:repeat(100%);}li{display:flex;flex:1;align-items:center;justify-content:center;width:20%;min-width:20%;height:22px;scroll-snap-align:center;}li button{height:100%;background:rgba(255,255,255,0);border:0;outline:0;@media (max-width:\", \"px){width:80%;}@media (min-width:calc(\", \"px + 1px)){width:60%;}}li.active button{font-weight:500;color:#fff;background:rgba(79,174,159,1);border-radius:10px;}\"], function (props) {\n  return props.isFixedSmallNav ? 'fixed' : 'relative';\n}, function (props) {\n  return props.isFixedSmallNav ? \"\".concat(StylesVars.baseHeight, \"px\") : 0;\n}, StylesVars.transitionDuration, StylesVars.maxWidth, StylesVars.spLayoutWidth, StylesVars.spLayoutWidth);","map":null,"metadata":{},"sourceType":"module"}