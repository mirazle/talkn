{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n//import Memcached from 'memcached';\nimport { useRouter } from 'next/router';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { CategoryState, MktTypeState, UrlState } from 'state';\nimport styled from 'styled-components';\nimport Footer from 'components/organisms/Footer';\nimport Header from 'components/organisms/Header';\nimport ImageSlider from 'components/organisms/ImageSlider';\nimport Main from 'components/organisms/Main';\nimport { getTalknPostLayout } from 'components/organisms/Main/Thread';\nimport Navigation from 'components/organisms/Navigation';\nimport StylesVars from 'styles/StylesVars';\nimport { LocalStorageKeys } from 'utils/Constants';\nimport { urlToCh } from 'utils/Func';\nimport { talknScriptHost } from 'utils/Networks';\nvar navigationScrollClassName = 'navigationScroll';\nvar talknPostScrollTop = 1113;\nvar footerScrollTop = 1050;\n\nvar TalknMedia = function TalknMedia(props) {\n  var router = useRouter(); // disp key datas.\n\n  var _useRecoilState = useRecoilState(MktTypeState),\n      _useRecoilState2 = _slicedToArray(_useRecoilState, 2),\n      mktType = _useRecoilState2[0],\n      setMktType = _useRecoilState2[1];\n\n  var _useRecoilState3 = useRecoilState(CategoryState),\n      _useRecoilState4 = _slicedToArray(_useRecoilState3, 2),\n      category = _useRecoilState4[0],\n      setCategory = _useRecoilState4[1];\n\n  var _useRecoilState5 = useRecoilState(UrlState),\n      _useRecoilState6 = _slicedToArray(_useRecoilState5, 2),\n      url = _useRecoilState6[0],\n      setUrl = _useRecoilState6[1];\n\n  var _useState = useState(props.contents),\n      contents = _useState[0],\n      setContents = _useState[1]; // layout total\n\n\n  var _useState2 = useState(false),\n      isSpLayout = _useState2[0],\n      setIsSpLayout = _useState2[1];\n\n  var _useState3 = useState(false),\n      isMaxLayout = _useState3[0],\n      setIsMaxLayout = _useState3[1];\n\n  var _useState4 = useState(false),\n      isFixedSmallNav = _useState4[0],\n      setFixedSmallNav = _useState4[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      openSelectContentsOrder = _React$useState2[0],\n      setOpenSelectContentsOrder = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      lineNavScrollWidth = _React$useState4[0],\n      setLineNavScrollWidth = _React$useState4[1]; // layout talkn post footer TODO: 直す\n\n\n  var _useState5 = useState(String(0)),\n      talknPostWidth = _useState5[0],\n      setTalknPostWidth = _useState5[1];\n\n  var _useState6 = useState(String(0)),\n      talknPostRight = _useState6[0],\n      setTalknPostRight = _useState6[1];\n\n  var _useState7 = useState(true),\n      talknPostFixed = _useState7[0],\n      setTalknPostFixed = _useState7[1];\n\n  var _useState8 = useState(false),\n      isDispFooter = _useState8[0],\n      setIsDispFooter = _useState8[1];\n\n  var updateUrl = function updateUrl(url) {\n    var iframeContainer = document.querySelector('#talknLiveMedia');\n    var iframe = document.querySelector('#talknLiveMedia iframe');\n    setUrl(url);\n\n    if (iframeContainer && iframe) {\n      console.log('UPDATE');\n      iframeContainer.dataset.url = url;\n      iframe.src = \"https://\".concat(talknScriptHost).concat(urlToCh(url));\n      localStorage.setItem(LocalStorageKeys.url, url);\n    }\n  };\n\n  var redirectTo = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(mktType, category) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setOpenSelectContentsOrder(false);\n              _context.next = 3;\n              return router.push(\"/\".concat(mktType, \"/\").concat(category));\n\n            case 3:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function redirectTo(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var windowEvents = {\n    load: React.useCallback(function () {// console.log(window.talknAPI);\n    }, []),\n    scroll: React.useCallback(function () {\n      setFixedSmallNav(window.scrollY >= 90);\n      setTalknPostFixed(window.scrollY + window.innerHeight <= talknPostScrollTop);\n      setIsDispFooter(window.scrollY >= footerScrollTop);\n    }, []),\n    resize: React.useCallback(function () {\n      var navigationScroll = document.querySelector(\".\".concat(navigationScrollClassName));\n\n      var _isSpLayout = window.innerWidth < Number(StylesVars.spLayoutWidth);\n\n      var _isMaxLayout = Number(StylesVars.maxWidth) < window.innerWidth;\n\n      setIsSpLayout(_isSpLayout);\n      setIsMaxLayout(_isMaxLayout);\n\n      var _getTalknPostLayout = getTalknPostLayout(window.innerWidth, _isMaxLayout, _isSpLayout),\n          width = _getTalknPostLayout.width,\n          right = _getTalknPostLayout.right;\n\n      setTalknPostWidth(String(width));\n      setTalknPostRight(String(right));\n\n      if (navigationScroll) {\n        setLineNavScrollWidth(navigationScroll.scrollWidth);\n      }\n    }, [])\n  }; // did mount\n\n  React.useEffect(function () {\n    windowEvents.resize();\n\n    switch (window.document.readyState) {\n      case 'interactive':\n      case 'complete':\n        break;\n\n      case 'loading':\n        window.addEventListener('load', windowEvents.load);\n        break;\n    }\n\n    window.addEventListener('resize', windowEvents.resize);\n    window.addEventListener('scroll', windowEvents.scroll);\n    return function () {\n      window.removeEventListener('load', windowEvents.load);\n      window.removeEventListener('resize', windowEvents.resize);\n      window.removeEventListener('scroll', windowEvents.scroll);\n    };\n  }, []); // did update\n\n  React.useEffect(function () {\n    var cacheUrl = localStorage.getItem(LocalStorageKeys.url);\n    if (props.contents !== contents) setContents(props.contents);\n    if (mktType !== props.mktType) setMktType(props.mktType);\n    if (category !== props.category) setCategory(props.category);\n\n    if (url !== props.url) {\n      updateUrl(props.url);\n    }\n\n    if (cacheUrl && url !== cacheUrl) {\n      updateUrl(cacheUrl);\n    }\n  }, [props.contents, props.mktType, props.category, props.url]); // did update url\n\n  React.useEffect(function () {\n    localStorage.setItem(LocalStorageKeys.url, url);\n  }, [url]);\n  return /*#__PURE__*/_jsxs(Container, {\n    children: [/*#__PURE__*/_jsx(Header, {\n      isMaxLayout: isMaxLayout,\n      isFixedSmallNav: isFixedSmallNav,\n      isDispFooter: isDispFooter,\n      openSelectContentsOrder: openSelectContentsOrder,\n      setOpenSelectContentsOrder: setOpenSelectContentsOrder\n    }), /*#__PURE__*/_jsxs(Body, {\n      children: [/*#__PURE__*/_jsx(AdvertWrap, {\n        children: /*#__PURE__*/_jsx(Advert, {})\n      }), /*#__PURE__*/_jsxs(Content, {\n        children: [/*#__PURE__*/_jsx(Navigation, {\n          isSpLayout: isSpLayout,\n          isFixedSmallNav: isFixedSmallNav,\n          lineNavScrollWidth: lineNavScrollWidth,\n          setLineNavScrollWidth: setLineNavScrollWidth,\n          redirectTo: redirectTo\n        }), /*#__PURE__*/_jsx(ImageSlider, {\n          contents: contents,\n          isSpLayout: isSpLayout,\n          isFixedSmallNav: isFixedSmallNav\n        }), /*#__PURE__*/_jsx(Main, {\n          isFixedSmallNav: isFixedSmallNav,\n          isSpLayout: isSpLayout,\n          contents: contents,\n          talknPostFixed: talknPostFixed,\n          talknPostRight: talknPostRight,\n          talknPostWidth: talknPostWidth\n        })]\n      }), /*#__PURE__*/_jsx(AdvertWrap, {\n        children: /*#__PURE__*/_jsx(Advert, {})\n      })]\n    }), /*#__PURE__*/_jsx(Footer, {\n      mktType: mktType,\n      category: category,\n      redirectTo: redirectTo\n    })]\n  });\n};\n\nexport var __N_SSP = true;\nexport default TalknMedia;\nvar AdvertWrapSize = 300;\nvar Container = styled.div.withConfig({\n  displayName: \"pages__Container\",\n  componentId: \"hj6qpc-0\"\n})([\"width:100%;height:100%;padding:0;margin:0 auto;\"]);\nvar Body = styled.div.withConfig({\n  displayName: \"pages__Body\",\n  componentId: \"hj6qpc-1\"\n})([\"display:flex;flex-flow:row nowrap;width:100%;max-width:\", \"px;margin:0 auto;\"], Number(StylesVars.maxWidth) + AdvertWrapSize * 2);\nvar AdvertWrap = styled.div.withConfig({\n  displayName: \"pages__AdvertWrap\",\n  componentId: \"hj6qpc-2\"\n})([\"flex:1;max-width:\", \"px;height:800px;margin-top:80px;\"], AdvertWrapSize);\nvar Advert = styled.div.withConfig({\n  displayName: \"pages__Advert\",\n  componentId: \"hj6qpc-3\"\n})([\"width:100%;height:100%;background:#cdc;\"]);\nvar Content = styled.div.withConfig({\n  displayName: \"pages__Content\",\n  componentId: \"hj6qpc-4\"\n})([\"display:flex;flex-flow:row wrap;align-items:center;justify-content:center;width:100%;max-width:\", \"px;\"], StylesVars.maxWidth);","map":null,"metadata":{},"sourceType":"module"}