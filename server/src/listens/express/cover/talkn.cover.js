/*! For license information please see talkn.cover.js.LICENSE.txt */
(()=>{var e={9573:e=>{var t,n,r=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function o(e){if(t===setTimeout)return setTimeout(e,0);if((t===a||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:a}catch(e){t=a}try{n="function"==typeof clearTimeout?clearTimeout:i}catch(e){n=i}}();var l,u=[],s=!1,d=-1;function c(){s&&l&&(s=!1,l.length?u=l.concat(u):d=-1,u.length&&f())}function f(){if(!s){var e=o(c);s=!0;for(var t=u.length;t;){for(l=u,u=[];++d<t;)l&&l[d].run();d=-1,t=u.length}l=null,s=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===i||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function p(e,t){this.fun=e,this.array=t}function h(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new p(e,t)),1!==u.length||s||o(f)},p.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=h,r.addListener=h,r.once=h,r.off=h,r.removeListener=h,r.removeAllListeners=h,r.emit=h,r.prependListener=h,r.prependOnceListener=h,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},7548:(e,t,n)=>{e=n.nmd(e),function(t){"use strict";var n,r="function"==typeof(n=t.atob)?n:"function"==typeof Buffer?function(e){return new Buffer(e,"base64").toString("binary")}:"object"==typeof t.base64js?function(e){var n=t.base64js.b64ToByteArray(e);return Array.prototype.map.call(n,(function(e){return String.fromCharCode(e)})).join("")}:function(){throw new Error("You're probably in an old browser or an iOS webworker. It might help to include beatgammit's base64-js.")};t.atob=r,e&&e.exports&&(e.exports=r)}(window)},6894:(e,t,n)=>{e.exports=n(6894)},8399:e=>{var t,n,r=e.exports={};function a(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function o(e){if(t===setTimeout)return setTimeout(e,0);if((t===a||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(n){try{return t.call(null,e,0)}catch(n){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:a}catch(e){t=a}try{n="function"==typeof clearTimeout?clearTimeout:i}catch(e){n=i}}();var l,u=[],s=!1,d=-1;function c(){s&&l&&(s=!1,l.length?u=l.concat(u):d=-1,u.length&&f())}function f(){if(!s){var e=o(c);s=!0;for(var t=u.length;t;){for(l=u,u=[];++d<t;)l&&l[d].run();d=-1,t=u.length}l=null,s=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===i||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function p(e,t){this.fun=e,this.array=t}function h(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];u.push(new p(e,t)),1!==u.length||s||o(f)},p.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=h,r.addListener=h,r.once=h,r.off=h,r.removeListener=h,r.removeAllListeners=h,r.emit=h,r.prependListener=h,r.prependOnceListener=h,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},5735:(e,t,n)=>{"use strict";n.d(t,{Z:()=>l});var r=n(4015),a=n.n(r),i=n(3645),o=n.n(i)()(a());o.push([e.id,'/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n',"",{version:3,sources:["webpack://./node_modules/normalize.css/normalize.css"],names:[],mappings:"AAAA,2EAA2E;;AAE3E;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,iBAAiB,EAAE,MAAM;EACzB,8BAA8B,EAAE,MAAM;AACxC;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,SAAS;AACX;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;EACE,cAAc;EACd,gBAAgB;AAClB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;EACE,uBAAuB,EAAE,MAAM;EAC/B,SAAS,EAAE,MAAM;EACjB,iBAAiB,EAAE,MAAM;AAC3B;;AAEA;;;EAGE;;AAEF;EACE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,6BAA6B;AAC/B;;AAEA;;;EAGE;;AAEF;EACE,mBAAmB,EAAE,MAAM;EAC3B,0BAA0B,EAAE,MAAM;EAClC,iCAAiC,EAAE,MAAM;AAC3C;;AAEA;;EAEE;;AAEF;;EAEE,mBAAmB;AACrB;;AAEA;;;EAGE;;AAEF;;;EAGE,iCAAiC,EAAE,MAAM;EACzC,cAAc,EAAE,MAAM;AACxB;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,cAAc;EACd,cAAc;EACd,kBAAkB;EAClB,wBAAwB;AAC1B;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;;EAGE;;AAEF;;;;;EAKE,oBAAoB,EAAE,MAAM;EAC5B,eAAe,EAAE,MAAM;EACvB,iBAAiB,EAAE,MAAM;EACzB,SAAS,EAAE,MAAM;AACnB;;AAEA;;;EAGE;;AAEF;QACQ,MAAM;EACZ,iBAAiB;AACnB;;AAEA;;;EAGE;;AAEF;SACS,MAAM;EACb,oBAAoB;AACtB;;AAEA;;EAEE;;AAEF;;;;EAIE,0BAA0B;AAC5B;;AAEA;;EAEE;;AAEF;;;;EAIE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;;EAEE;;AAEF;;;;EAIE,8BAA8B;AAChC;;AAEA;;EAEE;;AAEF;EACE,8BAA8B;AAChC;;AAEA;;;;;EAKE;;AAEF;EACE,sBAAsB,EAAE,MAAM;EAC9B,cAAc,EAAE,MAAM;EACtB,cAAc,EAAE,MAAM;EACtB,eAAe,EAAE,MAAM;EACvB,UAAU,EAAE,MAAM;EAClB,mBAAmB,EAAE,MAAM;AAC7B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;;EAGE;;AAEF;;EAEE,sBAAsB,EAAE,MAAM;EAC9B,UAAU,EAAE,MAAM;AACpB;;AAEA;;EAEE;;AAEF;;EAEE,YAAY;AACd;;AAEA;;;EAGE;;AAEF;EACE,6BAA6B,EAAE,MAAM;EACrC,oBAAoB,EAAE,MAAM;AAC9B;;AAEA;;EAEE;;AAEF;EACE,wBAAwB;AAC1B;;AAEA;;;EAGE;;AAEF;EACE,0BAA0B,EAAE,MAAM;EAClC,aAAa,EAAE,MAAM;AACvB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,cAAc;AAChB;;AAEA;;EAEE;;AAEF;EACE,kBAAkB;AACpB;;AAEA;+EAC+E;;AAE/E;;EAEE;;AAEF;EACE,aAAa;AACf;;AAEA;;EAEE;;AAEF;EACE,aAAa;AACf",sourcesContent:['/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n'],sourceRoot:""}]);const l=o},3645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var a={};if(r)for(var i=0;i<this.length;i++){var o=this[i][0];null!=o&&(a[o]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&a[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},4015:e=>{"use strict";function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n,r,a=(r=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,i=[],o=!0,l=!1;try{for(n=n.call(e);!(o=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);o=!0);}catch(e){l=!0,a=e}finally{try{o||null==n.return||n.return()}finally{if(l)throw a}}return i}}(n,r)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=a[1],o=a[3];if(!o)return i;if("function"==typeof btoa){var l=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),u="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),s="/*# ".concat(u," */"),d=o.sources.map((function(e){return"/*# sourceURL=".concat(o.sourceRoot||"").concat(e," */")}));return[i].concat(d).concat([s]).join("\n")}return[i].join("\n")}},8679:(e,t,n)=>{"use strict";var r=n(9864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},i={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},o={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},l={};function u(e){return r.isMemo(e)?o:l[e.$$typeof]||a}l[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},l[r.Memo]=o;var s=Object.defineProperty,d=Object.getOwnPropertyNames,c=Object.getOwnPropertySymbols,f=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var a=p(n);a&&a!==h&&e(t,a,r)}var o=d(n);c&&(o=o.concat(c(n)));for(var l=u(t),g=u(n),m=0;m<o.length;++m){var b=o[m];if(!(i[b]||r&&r[b]||g&&g[b]||l&&l[b])){var y=f(n,b);try{s(t,b,y)}catch(e){}}}}return t}},7418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,i){for(var o,l,u=a(e),s=1;s<arguments.length;s++){for(var d in o=Object(arguments[s]))n.call(o,d)&&(u[d]=o[d]);if(t){l=t(o);for(var c=0;c<l.length;c++)r.call(o,l[c])&&(u[l[c]]=o[l[c]])}}return u}},4448:(e,t,n)=>{"use strict";var r=n(7294),a=n(7418),i=n(3840);function o(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(o(227));var l=new Set,u={};function s(e,t){d(e,t),d(e+"Capture",t)}function d(e,t){for(u[e]=t,e=0;e<t.length;e++)l.add(t[e])}var c=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),f=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},g={};function m(e,t,n,r,a,i,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=i,this.removeEmptyString=o}var b={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){b[e]=new m(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];b[t]=new m(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){b[e]=new m(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){b[e]=new m(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){b[e]=new m(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){b[e]=new m(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){b[e]=new m(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){b[e]=new m(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){b[e]=new m(e,5,!1,e.toLowerCase(),null,!1,!1)}));var y=/[\-:]([a-z])/g;function v(e){return e[1].toUpperCase()}function w(e,t,n,r){var a=b.hasOwnProperty(t)?b[t]:null;(null!==a?0===a.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!p.call(g,e)||!p.call(h,e)&&(f.test(e)?g[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(y,v);b[t]=new m(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(y,v);b[t]=new m(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(y,v);b[t]=new m(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){b[e]=new m(e,1,!1,e.toLowerCase(),null,!1,!1)})),b.xlinkHref=new m("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){b[e]=new m(e,1,!1,e.toLowerCase(),null,!0,!0)}));var E=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,x=60103,_=60106,S=60107,C=60108,k=60114,P=60109,M=60110,O=60112,A=60113,T=60120,I=60115,$=60116,j=60121,L=60128,N=60129,R=60130,z=60131;if("function"==typeof Symbol&&Symbol.for){var D=Symbol.for;x=D("react.element"),_=D("react.portal"),S=D("react.fragment"),C=D("react.strict_mode"),k=D("react.profiler"),P=D("react.provider"),M=D("react.context"),O=D("react.forward_ref"),A=D("react.suspense"),T=D("react.suspense_list"),I=D("react.memo"),$=D("react.lazy"),j=D("react.block"),D("react.scope"),L=D("react.opaque.id"),N=D("react.debug_trace_mode"),R=D("react.offscreen"),z=D("react.legacy_hidden")}var B,F="function"==typeof Symbol&&Symbol.iterator;function H(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=F&&e[F]||e["@@iterator"])?e:null}function U(e){if(void 0===B)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);B=t&&t[1]||""}return"\n"+B+e}var W=!1;function V(e,t){if(!e||W)return"";W=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),i=r.stack.split("\n"),o=a.length-1,l=i.length-1;1<=o&&0<=l&&a[o]!==i[l];)l--;for(;1<=o&&0<=l;o--,l--)if(a[o]!==i[l]){if(1!==o||1!==l)do{if(o--,0>--l||a[o]!==i[l])return"\n"+a[o].replace(" at new "," at ")}while(1<=o&&0<=l);break}}}finally{W=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?U(e):""}function q(e){switch(e.tag){case 5:return U(e.type);case 16:return U("Lazy");case 13:return U("Suspense");case 19:return U("SuspenseList");case 0:case 2:case 15:return V(e.type,!1);case 11:return V(e.type.render,!1);case 22:return V(e.type._render,!1);case 1:return V(e.type,!0);default:return""}}function Y(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case S:return"Fragment";case _:return"Portal";case k:return"Profiler";case C:return"StrictMode";case A:return"Suspense";case T:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case M:return(e.displayName||"Context")+".Consumer";case P:return(e._context.displayName||"Context")+".Provider";case O:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case I:return Y(e.type);case j:return Y(e._render);case $:t=e._payload,e=e._init;try{return Y(e(t))}catch(e){}}return null}function G(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Q(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function K(e){e._valueTracker||(e._valueTracker=function(e){var t=Q(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function J(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Q(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function X(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Z(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=G(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=G(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,G(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&X(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function ie(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function oe(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+G(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function le(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(o(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(o(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(o(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:G(n)}}function se(e,t){var n=G(t.value),r=G(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function de(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var ce="http://www.w3.org/1999/xhtml";function fe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?fe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,ge,me=(ge=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ge(e,t)}))}:ge);function be(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ye={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ve=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ye.hasOwnProperty(e)&&ye[e]?(""+t).trim():t+"px"}function Ee(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(ye).forEach((function(e){ve.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ye[t]=ye[e]}))}));var xe=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function _e(e,t){if(t){if(xe[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(o(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(o(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(o(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(o(62))}}function Se(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ce(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var ke=null,Pe=null,Me=null;function Oe(e){if(e=Zr(e)){if("function"!=typeof ke)throw Error(o(280));var t=e.stateNode;t&&(t=ta(t),ke(e.stateNode,e.type,t))}}function Ae(e){Pe?Me?Me.push(e):Me=[e]:Pe=e}function Te(){if(Pe){var e=Pe,t=Me;if(Me=Pe=null,Oe(e),t)for(e=0;e<t.length;e++)Oe(t[e])}}function Ie(e,t){return e(t)}function $e(e,t,n,r,a){return e(t,n,r,a)}function je(){}var Le=Ie,Ne=!1,Re=!1;function ze(){null===Pe&&null===Me||(je(),Te())}function De(e,t){var n=e.stateNode;if(null===n)return null;var r=ta(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(o(231,t,typeof n));return n}var Be=!1;if(c)try{var Fe={};Object.defineProperty(Fe,"passive",{get:function(){Be=!0}}),window.addEventListener("test",Fe,Fe),window.removeEventListener("test",Fe,Fe)}catch(ge){Be=!1}function He(e,t,n,r,a,i,o,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var Ue=!1,We=null,Ve=!1,qe=null,Ye={onError:function(e){Ue=!0,We=e}};function Ge(e,t,n,r,a,i,o,l,u){Ue=!1,We=null,He.apply(Ye,arguments)}function Qe(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ke(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Je(e){if(Qe(e)!==e)throw Error(o(188))}function Xe(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Qe(e)))throw Error(o(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(r=a.return)){n=r;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===n)return Je(a),e;if(i===r)return Je(a),t;i=i.sibling}throw Error(o(188))}if(n.return!==r.return)n=a,r=i;else{for(var l=!1,u=a.child;u;){if(u===n){l=!0,n=a,r=i;break}if(u===r){l=!0,r=a,n=i;break}u=u.sibling}if(!l){for(u=i.child;u;){if(u===n){l=!0,n=i,r=a;break}if(u===r){l=!0,r=i,n=a;break}u=u.sibling}if(!l)throw Error(o(189))}}if(n.alternate!==r)throw Error(o(190))}if(3!==n.tag)throw Error(o(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function Ze(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var et,tt,nt,rt,at=!1,it=[],ot=null,lt=null,ut=null,st=new Map,dt=new Map,ct=[],ft="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function pt(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function ht(e,t){switch(e){case"focusin":case"focusout":ot=null;break;case"dragenter":case"dragleave":lt=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":st.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":dt.delete(t.pointerId)}}function gt(e,t,n,r,a,i){return null===e||e.nativeEvent!==i?(e=pt(t,n,r,a,i),null!==t&&null!==(t=Zr(t))&&tt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function mt(e){var t=Xr(e.target);if(null!==t){var n=Qe(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ke(n)))return e.blockedOn=t,void rt(e.lanePriority,(function(){i.unstable_runWithPriority(e.priority,(function(){nt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function bt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Zr(n))&&tt(t),e.blockedOn=n,!1;t.shift()}return!0}function yt(e,t,n){bt(e)&&n.delete(t)}function vt(){for(at=!1;0<it.length;){var e=it[0];if(null!==e.blockedOn){null!==(e=Zr(e.blockedOn))&&et(e);break}for(var t=e.targetContainers;0<t.length;){var n=Xt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&it.shift()}null!==ot&&bt(ot)&&(ot=null),null!==lt&&bt(lt)&&(lt=null),null!==ut&&bt(ut)&&(ut=null),st.forEach(yt),dt.forEach(yt)}function wt(e,t){e.blockedOn===t&&(e.blockedOn=null,at||(at=!0,i.unstable_scheduleCallback(i.unstable_NormalPriority,vt)))}function Et(e){function t(t){return wt(t,e)}if(0<it.length){wt(it[0],e);for(var n=1;n<it.length;n++){var r=it[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==ot&&wt(ot,e),null!==lt&&wt(lt,e),null!==ut&&wt(ut,e),st.forEach(t),dt.forEach(t),n=0;n<ct.length;n++)(r=ct[n]).blockedOn===e&&(r.blockedOn=null);for(;0<ct.length&&null===(n=ct[0]).blockedOn;)mt(n),null===n.blockedOn&&ct.shift()}function xt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var _t={animationend:xt("Animation","AnimationEnd"),animationiteration:xt("Animation","AnimationIteration"),animationstart:xt("Animation","AnimationStart"),transitionend:xt("Transition","TransitionEnd")},St={},Ct={};function kt(e){if(St[e])return St[e];if(!_t[e])return e;var t,n=_t[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ct)return St[e]=n[t];return e}c&&(Ct=document.createElement("div").style,"AnimationEvent"in window||(delete _t.animationend.animation,delete _t.animationiteration.animation,delete _t.animationstart.animation),"TransitionEvent"in window||delete _t.transitionend.transition);var Pt=kt("animationend"),Mt=kt("animationiteration"),Ot=kt("animationstart"),At=kt("transitionend"),Tt=new Map,It=new Map,$t=["abort","abort",Pt,"animationEnd",Mt,"animationIteration",Ot,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",At,"transitionEnd","waiting","waiting"];function jt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),It.set(r,t),Tt.set(r,a),s(a,[r])}}(0,i.unstable_now)();var Lt=8;function Nt(e){if(0!=(1&e))return Lt=15,1;if(0!=(2&e))return Lt=14,2;if(0!=(4&e))return Lt=13,4;var t=24&e;return 0!==t?(Lt=12,t):0!=(32&e)?(Lt=11,32):0!=(t=192&e)?(Lt=10,t):0!=(256&e)?(Lt=9,256):0!=(t=3584&e)?(Lt=8,t):0!=(4096&e)?(Lt=7,4096):0!=(t=4186112&e)?(Lt=6,t):0!=(t=62914560&e)?(Lt=5,t):67108864&e?(Lt=4,67108864):0!=(134217728&e)?(Lt=3,134217728):0!=(t=805306368&e)?(Lt=2,t):0!=(1073741824&e)?(Lt=1,1073741824):(Lt=8,e)}function Rt(e,t){var n=e.pendingLanes;if(0===n)return Lt=0;var r=0,a=0,i=e.expiredLanes,o=e.suspendedLanes,l=e.pingedLanes;if(0!==i)r=i,a=Lt=15;else if(0!=(i=134217727&n)){var u=i&~o;0!==u?(r=Nt(u),a=Lt):0!=(l&=i)&&(r=Nt(l),a=Lt)}else 0!=(i=n&~o)?(r=Nt(i),a=Lt):0!==l&&(r=Nt(l),a=Lt);if(0===r)return 0;if(r=n&((0>(r=31-Ut(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&o)){if(Nt(t),a<=Lt)return t;Lt=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-Ut(t)),r|=e[n],t&=~a;return r}function zt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Dt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Bt(24&~t))?Dt(10,t):e;case 10:return 0===(e=Bt(192&~t))?Dt(8,t):e;case 8:return 0===(e=Bt(3584&~t))&&0===(e=Bt(4186112&~t))&&(e=512),e;case 2:return 0===(t=Bt(805306368&~t))&&(t=268435456),t}throw Error(o(358,e))}function Bt(e){return e&-e}function Ft(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Ht(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Ut(t)]=n}var Ut=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Wt(e)/Vt|0)|0},Wt=Math.log,Vt=Math.LN2,qt=i.unstable_UserBlockingPriority,Yt=i.unstable_runWithPriority,Gt=!0;function Qt(e,t,n,r){Ne||je();var a=Jt,i=Ne;Ne=!0;try{$e(a,e,t,n,r)}finally{(Ne=i)||ze()}}function Kt(e,t,n,r){Yt(qt,Jt.bind(null,e,t,n,r))}function Jt(e,t,n,r){var a;if(Gt)if((a=0==(4&t))&&0<it.length&&-1<ft.indexOf(e))e=pt(null,e,t,n,r),it.push(e);else{var i=Xt(e,t,n,r);if(null===i)a&&ht(e,r);else{if(a){if(-1<ft.indexOf(e))return e=pt(i,e,t,n,r),void it.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return ot=gt(ot,e,t,n,r,a),!0;case"dragenter":return lt=gt(lt,e,t,n,r,a),!0;case"mouseover":return ut=gt(ut,e,t,n,r,a),!0;case"pointerover":var i=a.pointerId;return st.set(i,gt(st.get(i)||null,e,t,n,r,a)),!0;case"gotpointercapture":return i=a.pointerId,dt.set(i,gt(dt.get(i)||null,e,t,n,r,a)),!0}return!1}(i,e,t,n,r))return;ht(e,r)}Tr(e,t,r,null,n)}}}function Xt(e,t,n,r){var a=Ce(r);if(null!==(a=Xr(a))){var i=Qe(a);if(null===i)a=null;else{var o=i.tag;if(13===o){if(null!==(a=Ke(i)))return a;a=null}else if(3===o){if(i.stateNode.hydrate)return 3===i.tag?i.stateNode.containerInfo:null;a=null}else i!==a&&(a=null)}}return Tr(e,t,r,a,n),null}var Zt=null,en=null,tn=null;function nn(){if(tn)return tn;var e,t,n=en,r=n.length,a="value"in Zt?Zt.value:Zt.textContent,i=a.length;for(e=0;e<r&&n[e]===a[e];e++);var o=r-e;for(t=1;t<=o&&n[r-t]===a[i-t];t++);return tn=a.slice(e,1<t?1-t:void 0)}function rn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function an(){return!0}function on(){return!1}function ln(e){function t(t,n,r,a,i){for(var o in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=i,this.currentTarget=null,e)e.hasOwnProperty(o)&&(t=e[o],this[o]=t?t(a):a[o]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?an:on,this.isPropagationStopped=on,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=an)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=an)},persist:function(){},isPersistent:an}),t}var un,sn,dn,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},fn=ln(cn),pn=a({},cn,{view:0,detail:0}),hn=ln(pn),gn=a({},pn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:kn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==dn&&(dn&&"mousemove"===e.type?(un=e.screenX-dn.screenX,sn=e.screenY-dn.screenY):sn=un=0,dn=e),un)},movementY:function(e){return"movementY"in e?e.movementY:sn}}),mn=ln(gn),bn=ln(a({},gn,{dataTransfer:0})),yn=ln(a({},pn,{relatedTarget:0})),vn=ln(a({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),wn=ln(a({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),En=ln(a({},cn,{data:0})),xn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},_n={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Cn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function kn(){return Cn}var Pn=ln(a({},pn,{key:function(e){if(e.key){var t=xn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=rn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?_n[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:kn,charCode:function(e){return"keypress"===e.type?rn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?rn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),Mn=ln(a({},gn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),On=ln(a({},pn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:kn})),An=ln(a({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Tn=ln(a({},gn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),In=[9,13,27,32],$n=c&&"CompositionEvent"in window,jn=null;c&&"documentMode"in document&&(jn=document.documentMode);var Ln=c&&"TextEvent"in window&&!jn,Nn=c&&(!$n||jn&&8<jn&&11>=jn),Rn=String.fromCharCode(32),zn=!1;function Dn(e,t){switch(e){case"keyup":return-1!==In.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Bn(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Fn=!1,Hn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Un(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Hn[e.type]:"textarea"===t}function Wn(e,t,n,r){Ae(r),0<(t=$r(t,"onChange")).length&&(n=new fn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Vn=null,qn=null;function Yn(e){Cr(e,0)}function Gn(e){if(J(ea(e)))return e}function Qn(e,t){if("change"===e)return t}var Kn=!1;if(c){var Jn;if(c){var Xn="oninput"in document;if(!Xn){var Zn=document.createElement("div");Zn.setAttribute("oninput","return;"),Xn="function"==typeof Zn.oninput}Jn=Xn}else Jn=!1;Kn=Jn&&(!document.documentMode||9<document.documentMode)}function er(){Vn&&(Vn.detachEvent("onpropertychange",tr),qn=Vn=null)}function tr(e){if("value"===e.propertyName&&Gn(qn)){var t=[];if(Wn(t,qn,e,Ce(e)),e=Yn,Ne)e(t);else{Ne=!0;try{Ie(e,t)}finally{Ne=!1,ze()}}}}function nr(e,t,n){"focusin"===e?(er(),qn=n,(Vn=t).attachEvent("onpropertychange",tr)):"focusout"===e&&er()}function rr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Gn(qn)}function ar(e,t){if("click"===e)return Gn(t)}function ir(e,t){if("input"===e||"change"===e)return Gn(t)}var or="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},lr=Object.prototype.hasOwnProperty;function ur(e,t){if(or(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!lr.call(t,n[r])||!or(e[n[r]],t[n[r]]))return!1;return!0}function sr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dr(e,t){var n,r=sr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=sr(r)}}function cr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?cr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function fr(){for(var e=window,t=X();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=X((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var hr=c&&"documentMode"in document&&11>=document.documentMode,gr=null,mr=null,br=null,yr=!1;function vr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;yr||null==gr||gr!==X(r)||(r="selectionStart"in(r=gr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},br&&ur(br,r)||(br=r,0<(r=$r(mr,"onSelect")).length&&(t=new fn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}jt("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),jt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),jt($t,2);for(var wr="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Er=0;Er<wr.length;Er++)It.set(wr[Er],0);d("onMouseEnter",["mouseout","mouseover"]),d("onMouseLeave",["mouseout","mouseover"]),d("onPointerEnter",["pointerout","pointerover"]),d("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var xr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),_r=new Set("cancel close invalid load scroll toggle".split(" ").concat(xr));function Sr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,i,l,u,s){if(Ge.apply(this,arguments),Ue){if(!Ue)throw Error(o(198));var d=We;Ue=!1,We=null,Ve||(Ve=!0,qe=d)}}(r,t,void 0,e),e.currentTarget=null}function Cr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var i=void 0;if(t)for(var o=r.length-1;0<=o;o--){var l=r[o],u=l.instance,s=l.currentTarget;if(l=l.listener,u!==i&&a.isPropagationStopped())break e;Sr(a,l,s),i=u}else for(o=0;o<r.length;o++){if(u=(l=r[o]).instance,s=l.currentTarget,l=l.listener,u!==i&&a.isPropagationStopped())break e;Sr(a,l,s),i=u}}}if(Ve)throw e=qe,Ve=!1,qe=null,e}function kr(e,t){var n=na(t),r=e+"__bubble";n.has(r)||(Ar(t,e,2,!1),n.add(r))}var Pr="_reactListening"+Math.random().toString(36).slice(2);function Mr(e){e[Pr]||(e[Pr]=!0,l.forEach((function(t){_r.has(t)||Or(t,!1,e,null),Or(t,!0,e,null)})))}function Or(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,i=n;if("selectionchange"===e&&9!==n.nodeType&&(i=n.ownerDocument),null!==r&&!t&&_r.has(e)){if("scroll"!==e)return;a|=2,i=r}var o=na(i),l=e+"__"+(t?"capture":"bubble");o.has(l)||(t&&(a|=4),Ar(i,e,a,t),o.add(l))}function Ar(e,t,n,r){var a=It.get(t);switch(void 0===a?2:a){case 0:a=Qt;break;case 1:a=Kt;break;default:a=Jt}n=a.bind(null,t,n,e),a=void 0,!Be||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Tr(e,t,n,r,a){var i=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var o=r.tag;if(3===o||4===o){var l=r.stateNode.containerInfo;if(l===a||8===l.nodeType&&l.parentNode===a)break;if(4===o)for(o=r.return;null!==o;){var u=o.tag;if((3===u||4===u)&&((u=o.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;o=o.return}for(;null!==l;){if(null===(o=Xr(l)))return;if(5===(u=o.tag)||6===u){r=i=o;continue e}l=l.parentNode}}r=r.return}!function(e,t,n){if(Re)return e();Re=!0;try{Le(e,t,n)}finally{Re=!1,ze()}}((function(){var r=i,a=Ce(n),o=[];e:{var l=Tt.get(e);if(void 0!==l){var u=fn,s=e;switch(e){case"keypress":if(0===rn(n))break e;case"keydown":case"keyup":u=Pn;break;case"focusin":s="focus",u=yn;break;case"focusout":s="blur",u=yn;break;case"beforeblur":case"afterblur":u=yn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=mn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=bn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=On;break;case Pt:case Mt:case Ot:u=vn;break;case At:u=An;break;case"scroll":u=hn;break;case"wheel":u=Tn;break;case"copy":case"cut":case"paste":u=wn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=Mn}var d=0!=(4&t),c=!d&&"scroll"===e,f=d?null!==l?l+"Capture":null:l;d=[];for(var p,h=r;null!==h;){var g=(p=h).stateNode;if(5===p.tag&&null!==g&&(p=g,null!==f&&null!=(g=De(h,f))&&d.push(Ir(h,g,p))),c)break;h=h.return}0<d.length&&(l=new u(l,s,null,n,a),o.push({event:l,listeners:d}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(l="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(s=n.relatedTarget||n.fromElement)||!Xr(s)&&!s[Kr])&&(u||l)&&(l=a.window===a?a:(l=a.ownerDocument)?l.defaultView||l.parentWindow:window,u?(u=r,null!==(s=(s=n.relatedTarget||n.toElement)?Xr(s):null)&&(s!==(c=Qe(s))||5!==s.tag&&6!==s.tag)&&(s=null)):(u=null,s=r),u!==s)){if(d=mn,g="onMouseLeave",f="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(d=Mn,g="onPointerLeave",f="onPointerEnter",h="pointer"),c=null==u?l:ea(u),p=null==s?l:ea(s),(l=new d(g,h+"leave",u,n,a)).target=c,l.relatedTarget=p,g=null,Xr(a)===r&&((d=new d(f,h+"enter",s,n,a)).target=p,d.relatedTarget=c,g=d),c=g,u&&s)e:{for(f=s,h=0,p=d=u;p;p=jr(p))h++;for(p=0,g=f;g;g=jr(g))p++;for(;0<h-p;)d=jr(d),h--;for(;0<p-h;)f=jr(f),p--;for(;h--;){if(d===f||null!==f&&d===f.alternate)break e;d=jr(d),f=jr(f)}d=null}else d=null;null!==u&&Lr(o,l,u,d,!1),null!==s&&null!==c&&Lr(o,c,s,d,!0)}if("select"===(u=(l=r?ea(r):window).nodeName&&l.nodeName.toLowerCase())||"input"===u&&"file"===l.type)var m=Qn;else if(Un(l))if(Kn)m=ir;else{m=rr;var b=nr}else(u=l.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(m=ar);switch(m&&(m=m(e,r))?Wn(o,m,n,a):(b&&b(e,l,r),"focusout"===e&&(b=l._wrapperState)&&b.controlled&&"number"===l.type&&ae(l,"number",l.value)),b=r?ea(r):window,e){case"focusin":(Un(b)||"true"===b.contentEditable)&&(gr=b,mr=r,br=null);break;case"focusout":br=mr=gr=null;break;case"mousedown":yr=!0;break;case"contextmenu":case"mouseup":case"dragend":yr=!1,vr(o,n,a);break;case"selectionchange":if(hr)break;case"keydown":case"keyup":vr(o,n,a)}var y;if($n)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else Fn?Dn(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(Nn&&"ko"!==n.locale&&(Fn||"onCompositionStart"!==v?"onCompositionEnd"===v&&Fn&&(y=nn()):(en="value"in(Zt=a)?Zt.value:Zt.textContent,Fn=!0)),0<(b=$r(r,v)).length&&(v=new En(v,e,null,n,a),o.push({event:v,listeners:b}),(y||null!==(y=Bn(n)))&&(v.data=y))),(y=Ln?function(e,t){switch(e){case"compositionend":return Bn(t);case"keypress":return 32!==t.which?null:(zn=!0,Rn);case"textInput":return(e=t.data)===Rn&&zn?null:e;default:return null}}(e,n):function(e,t){if(Fn)return"compositionend"===e||!$n&&Dn(e,t)?(e=nn(),tn=en=Zt=null,Fn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Nn&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=$r(r,"onBeforeInput")).length&&(a=new En("onBeforeInput","beforeinput",null,n,a),o.push({event:a,listeners:r}),a.data=y)}Cr(o,t)}))}function Ir(e,t,n){return{instance:e,listener:t,currentTarget:n}}function $r(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,i=a.stateNode;5===a.tag&&null!==i&&(a=i,null!=(i=De(e,n))&&r.unshift(Ir(e,i,a)),null!=(i=De(e,t))&&r.push(Ir(e,i,a))),e=e.return}return r}function jr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Lr(e,t,n,r,a){for(var i=t._reactName,o=[];null!==n&&n!==r;){var l=n,u=l.alternate,s=l.stateNode;if(null!==u&&u===r)break;5===l.tag&&null!==s&&(l=s,a?null!=(u=De(n,i))&&o.unshift(Ir(n,u,l)):a||null!=(u=De(n,i))&&o.push(Ir(n,u,l))),n=n.return}0!==o.length&&e.push({event:t,listeners:o})}function Nr(){}var Rr=null,zr=null;function Dr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Br(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Fr="function"==typeof setTimeout?setTimeout:void 0,Hr="function"==typeof clearTimeout?clearTimeout:void 0;function Ur(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Wr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function Vr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var qr=0,Yr=Math.random().toString(36).slice(2),Gr="__reactFiber$"+Yr,Qr="__reactProps$"+Yr,Kr="__reactContainer$"+Yr,Jr="__reactEvents$"+Yr;function Xr(e){var t=e[Gr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Kr]||n[Gr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=Vr(e);null!==e;){if(n=e[Gr])return n;e=Vr(e)}return t}n=(e=n).parentNode}return null}function Zr(e){return!(e=e[Gr]||e[Kr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function ea(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(o(33))}function ta(e){return e[Qr]||null}function na(e){var t=e[Jr];return void 0===t&&(t=e[Jr]=new Set),t}var ra=[],aa=-1;function ia(e){return{current:e}}function oa(e){0>aa||(e.current=ra[aa],ra[aa]=null,aa--)}function la(e,t){aa++,ra[aa]=e.current,e.current=t}var ua={},sa=ia(ua),da=ia(!1),ca=ua;function fa(e,t){var n=e.type.contextTypes;if(!n)return ua;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,i={};for(a in n)i[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function pa(e){return null!=e.childContextTypes}function ha(){oa(da),oa(sa)}function ga(e,t,n){if(sa.current!==ua)throw Error(o(168));la(sa,t),la(da,n)}function ma(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var i in r=r.getChildContext())if(!(i in e))throw Error(o(108,Y(t)||"Unknown",i));return a({},n,r)}function ba(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ua,ca=sa.current,la(sa,e),la(da,da.current),!0}function ya(e,t,n){var r=e.stateNode;if(!r)throw Error(o(169));n?(e=ma(e,t,ca),r.__reactInternalMemoizedMergedChildContext=e,oa(da),oa(sa),la(sa,e)):oa(da),la(da,n)}var va=null,wa=null,Ea=i.unstable_runWithPriority,xa=i.unstable_scheduleCallback,_a=i.unstable_cancelCallback,Sa=i.unstable_shouldYield,Ca=i.unstable_requestPaint,ka=i.unstable_now,Pa=i.unstable_getCurrentPriorityLevel,Ma=i.unstable_ImmediatePriority,Oa=i.unstable_UserBlockingPriority,Aa=i.unstable_NormalPriority,Ta=i.unstable_LowPriority,Ia=i.unstable_IdlePriority,$a={},ja=void 0!==Ca?Ca:function(){},La=null,Na=null,Ra=!1,za=ka(),Da=1e4>za?ka:function(){return ka()-za};function Ba(){switch(Pa()){case Ma:return 99;case Oa:return 98;case Aa:return 97;case Ta:return 96;case Ia:return 95;default:throw Error(o(332))}}function Fa(e){switch(e){case 99:return Ma;case 98:return Oa;case 97:return Aa;case 96:return Ta;case 95:return Ia;default:throw Error(o(332))}}function Ha(e,t){return e=Fa(e),Ea(e,t)}function Ua(e,t,n){return e=Fa(e),xa(e,t,n)}function Wa(){if(null!==Na){var e=Na;Na=null,_a(e)}Va()}function Va(){if(!Ra&&null!==La){Ra=!0;var e=0;try{var t=La;Ha(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),La=null}catch(t){throw null!==La&&(La=La.slice(e+1)),xa(Ma,Wa),t}finally{Ra=!1}}}var qa=E.ReactCurrentBatchConfig;function Ya(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Ga=ia(null),Qa=null,Ka=null,Ja=null;function Xa(){Ja=Ka=Qa=null}function Za(e){var t=Ga.current;oa(Ga),e.type._context._currentValue=t}function ei(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function ti(e,t){Qa=e,Ja=Ka=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&($o=!0),e.firstContext=null)}function ni(e,t){if(Ja!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Ja=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ka){if(null===Qa)throw Error(o(308));Ka=t,Qa.dependencies={lanes:0,firstContext:t,responders:null}}else Ka=Ka.next=t;return e._currentValue}var ri=!1;function ai(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ii(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function oi(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function li(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function ui(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,i=null;if(null!==(n=n.firstBaseUpdate)){do{var o={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===i?a=i=o:i=i.next=o,n=n.next}while(null!==n);null===i?a=i=t:i=i.next=t}else a=i=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:i,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function si(e,t,n,r){var i=e.updateQueue;ri=!1;var o=i.firstBaseUpdate,l=i.lastBaseUpdate,u=i.shared.pending;if(null!==u){i.shared.pending=null;var s=u,d=s.next;s.next=null,null===l?o=d:l.next=d,l=s;var c=e.alternate;if(null!==c){var f=(c=c.updateQueue).lastBaseUpdate;f!==l&&(null===f?c.firstBaseUpdate=d:f.next=d,c.lastBaseUpdate=s)}}if(null!==o){for(f=i.baseState,l=0,c=d=s=null;;){u=o.lane;var p=o.eventTime;if((r&u)===u){null!==c&&(c=c.next={eventTime:p,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var h=e,g=o;switch(u=t,p=n,g.tag){case 1:if("function"==typeof(h=g.payload)){f=h.call(p,f,u);break e}f=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=g.payload)?h.call(p,f,u):h))break e;f=a({},f,u);break e;case 2:ri=!0}}null!==o.callback&&(e.flags|=32,null===(u=i.effects)?i.effects=[o]:u.push(o))}else p={eventTime:p,lane:u,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===c?(d=c=p,s=f):c=c.next=p,l|=u;if(null===(o=o.next)){if(null===(u=i.shared.pending))break;o=u.next,u.next=null,i.lastBaseUpdate=u,i.shared.pending=null}}null===c&&(s=f),i.baseState=s,i.firstBaseUpdate=d,i.lastBaseUpdate=c,Ll|=l,e.lanes=l,e.memoizedState=f}}function di(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(o(191,a));a.call(r)}}}var ci=(new r.Component).refs;function fi(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var pi={isMounted:function(e){return!!(e=e._reactInternals)&&Qe(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ou(),a=lu(e),i=oi(r,a);i.payload=t,null!=n&&(i.callback=n),li(e,i),uu(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ou(),a=lu(e),i=oi(r,a);i.tag=1,i.payload=t,null!=n&&(i.callback=n),li(e,i),uu(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ou(),r=lu(e),a=oi(n,r);a.tag=2,null!=t&&(a.callback=t),li(e,a),uu(e,r,n)}};function hi(e,t,n,r,a,i,o){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,i,o):!(t.prototype&&t.prototype.isPureReactComponent&&ur(n,r)&&ur(a,i))}function gi(e,t,n){var r=!1,a=ua,i=t.contextType;return"object"==typeof i&&null!==i?i=ni(i):(a=pa(t)?ca:sa.current,i=(r=null!=(r=t.contextTypes))?fa(e,a):ua),t=new t(n,i),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=pi,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=i),t}function mi(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&pi.enqueueReplaceState(t,t.state,null)}function bi(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=ci,ai(e);var i=t.contextType;"object"==typeof i&&null!==i?a.context=ni(i):(i=pa(t)?ca:sa.current,a.context=fa(e,i)),si(e,n,a,r),a.state=e.memoizedState,"function"==typeof(i=t.getDerivedStateFromProps)&&(fi(e,t,i,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&pi.enqueueReplaceState(a,a.state,null),si(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var yi=Array.isArray;function vi(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(o(309));var r=n.stateNode}if(!r)throw Error(o(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===ci&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(o(284));if(!n._owner)throw Error(o(290,e))}return e}function wi(e,t){if("textarea"!==e.type)throw Error(o(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function Ei(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Bu(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function l(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Wu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=vi(e,t,n),r.return=e,r):((r=Fu(n.type,n.key,n.props,null,e.mode,r)).ref=vi(e,t,n),r.return=e,r)}function d(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Vu(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function c(e,t,n,r,i){return null===t||7!==t.tag?((t=Hu(n,e.mode,r,i)).return=e,t):((t=a(t,n)).return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Wu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case x:return(n=Fu(t.type,t.key,t.props,null,e.mode,n)).ref=vi(e,null,t),n.return=e,n;case _:return(t=Vu(t,e.mode,n)).return=e,t}if(yi(t)||H(t))return(t=Hu(t,e.mode,n,null)).return=e,t;wi(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case x:return n.key===a?n.type===S?c(e,t,n.props.children,r,a):s(e,t,n,r):null;case _:return n.key===a?d(e,t,n,r):null}if(yi(n)||H(n))return null!==a?null:c(e,t,n,r,null);wi(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case x:return e=e.get(null===r.key?n:r.key)||null,r.type===S?c(t,e,r.props.children,a,r.key):s(t,e,r,a);case _:return d(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(yi(r)||H(r))return c(t,e=e.get(n)||null,r,a,null);wi(t,r)}return null}function g(a,o,l,u){for(var s=null,d=null,c=o,g=o=0,m=null;null!==c&&g<l.length;g++){c.index>g?(m=c,c=null):m=c.sibling;var b=p(a,c,l[g],u);if(null===b){null===c&&(c=m);break}e&&c&&null===b.alternate&&t(a,c),o=i(b,o,g),null===d?s=b:d.sibling=b,d=b,c=m}if(g===l.length)return n(a,c),s;if(null===c){for(;g<l.length;g++)null!==(c=f(a,l[g],u))&&(o=i(c,o,g),null===d?s=c:d.sibling=c,d=c);return s}for(c=r(a,c);g<l.length;g++)null!==(m=h(c,a,g,l[g],u))&&(e&&null!==m.alternate&&c.delete(null===m.key?g:m.key),o=i(m,o,g),null===d?s=m:d.sibling=m,d=m);return e&&c.forEach((function(e){return t(a,e)})),s}function m(a,l,u,s){var d=H(u);if("function"!=typeof d)throw Error(o(150));if(null==(u=d.call(u)))throw Error(o(151));for(var c=d=null,g=l,m=l=0,b=null,y=u.next();null!==g&&!y.done;m++,y=u.next()){g.index>m?(b=g,g=null):b=g.sibling;var v=p(a,g,y.value,s);if(null===v){null===g&&(g=b);break}e&&g&&null===v.alternate&&t(a,g),l=i(v,l,m),null===c?d=v:c.sibling=v,c=v,g=b}if(y.done)return n(a,g),d;if(null===g){for(;!y.done;m++,y=u.next())null!==(y=f(a,y.value,s))&&(l=i(y,l,m),null===c?d=y:c.sibling=y,c=y);return d}for(g=r(a,g);!y.done;m++,y=u.next())null!==(y=h(g,a,m,y.value,s))&&(e&&null!==y.alternate&&g.delete(null===y.key?m:y.key),l=i(y,l,m),null===c?d=y:c.sibling=y,c=y);return e&&g.forEach((function(e){return t(a,e)})),d}return function(e,r,i,u){var s="object"==typeof i&&null!==i&&i.type===S&&null===i.key;s&&(i=i.props.children);var d="object"==typeof i&&null!==i;if(d)switch(i.$$typeof){case x:e:{for(d=i.key,s=r;null!==s;){if(s.key===d){switch(s.tag){case 7:if(i.type===S){n(e,s.sibling),(r=a(s,i.props.children)).return=e,e=r;break e}break;default:if(s.elementType===i.type){n(e,s.sibling),(r=a(s,i.props)).ref=vi(e,s,i),r.return=e,e=r;break e}}n(e,s);break}t(e,s),s=s.sibling}i.type===S?((r=Hu(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=Fu(i.type,i.key,i.props,null,e.mode,u)).ref=vi(e,r,i),u.return=e,e=u)}return l(e);case _:e:{for(s=i.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=a(r,i.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Vu(i,e.mode,u)).return=e,e=r}return l(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,i)).return=e,e=r):(n(e,r),(r=Wu(i,e.mode,u)).return=e,e=r),l(e);if(yi(i))return g(e,r,i,u);if(H(i))return m(e,r,i,u);if(d&&wi(e,i),void 0===i&&!s)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(o(152,Y(e.type)||"Component"))}return n(e,r)}}var xi=Ei(!0),_i=Ei(!1),Si={},Ci=ia(Si),ki=ia(Si),Pi=ia(Si);function Mi(e){if(e===Si)throw Error(o(174));return e}function Oi(e,t){switch(la(Pi,t),la(ki,e),la(Ci,Si),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}oa(Ci),la(Ci,t)}function Ai(){oa(Ci),oa(ki),oa(Pi)}function Ti(e){Mi(Pi.current);var t=Mi(Ci.current),n=pe(t,e.type);t!==n&&(la(ki,e),la(Ci,n))}function Ii(e){ki.current===e&&(oa(Ci),oa(ki))}var $i=ia(0);function ji(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Li=null,Ni=null,Ri=!1;function zi(e,t){var n=zu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Di(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Bi(e){if(Ri){var t=Ni;if(t){var n=t;if(!Di(e,t)){if(!(t=Wr(n.nextSibling))||!Di(e,t))return e.flags=-1025&e.flags|2,Ri=!1,void(Li=e);zi(Li,n)}Li=e,Ni=Wr(t.firstChild)}else e.flags=-1025&e.flags|2,Ri=!1,Li=e}}function Fi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Li=e}function Hi(e){if(e!==Li)return!1;if(!Ri)return Fi(e),Ri=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Br(t,e.memoizedProps))for(t=Ni;t;)zi(e,t),t=Wr(t.nextSibling);if(Fi(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(o(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ni=Wr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ni=null}}else Ni=Li?Wr(e.stateNode.nextSibling):null;return!0}function Ui(){Ni=Li=null,Ri=!1}var Wi=[];function Vi(){for(var e=0;e<Wi.length;e++)Wi[e]._workInProgressVersionPrimary=null;Wi.length=0}var qi=E.ReactCurrentDispatcher,Yi=E.ReactCurrentBatchConfig,Gi=0,Qi=null,Ki=null,Ji=null,Xi=!1,Zi=!1;function eo(){throw Error(o(321))}function to(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!or(e[n],t[n]))return!1;return!0}function no(e,t,n,r,a,i){if(Gi=i,Qi=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,qi.current=null===e||null===e.memoizedState?Oo:Ao,e=n(r,a),Zi){i=0;do{if(Zi=!1,!(25>i))throw Error(o(301));i+=1,Ji=Ki=null,t.updateQueue=null,qi.current=To,e=n(r,a)}while(Zi)}if(qi.current=Mo,t=null!==Ki&&null!==Ki.next,Gi=0,Ji=Ki=Qi=null,Xi=!1,t)throw Error(o(300));return e}function ro(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Ji?Qi.memoizedState=Ji=e:Ji=Ji.next=e,Ji}function ao(){if(null===Ki){var e=Qi.alternate;e=null!==e?e.memoizedState:null}else e=Ki.next;var t=null===Ji?Qi.memoizedState:Ji.next;if(null!==t)Ji=t,Ki=e;else{if(null===e)throw Error(o(310));e={memoizedState:(Ki=e).memoizedState,baseState:Ki.baseState,baseQueue:Ki.baseQueue,queue:Ki.queue,next:null},null===Ji?Qi.memoizedState=Ji=e:Ji=Ji.next=e}return Ji}function io(e,t){return"function"==typeof t?t(e):t}function oo(e){var t=ao(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=Ki,a=r.baseQueue,i=n.pending;if(null!==i){if(null!==a){var l=a.next;a.next=i.next,i.next=l}r.baseQueue=a=i,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=l=i=null,s=a;do{var d=s.lane;if((Gi&d)===d)null!==u&&(u=u.next={lane:0,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),r=s.eagerReducer===e?s.eagerState:e(r,s.action);else{var c={lane:d,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===u?(l=u=c,i=r):u=u.next=c,Qi.lanes|=d,Ll|=d}s=s.next}while(null!==s&&s!==a);null===u?i=r:u.next=l,or(r,t.memoizedState)||($o=!0),t.memoizedState=r,t.baseState=i,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function lo(e){var t=ao(),n=t.queue;if(null===n)throw Error(o(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,i=t.memoizedState;if(null!==a){n.pending=null;var l=a=a.next;do{i=e(i,l.action),l=l.next}while(l!==a);or(i,t.memoizedState)||($o=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function uo(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(Gi&e)===e)&&(t._workInProgressVersionPrimary=r,Wi.push(t))),e)return n(t._source);throw Wi.push(t),Error(o(350))}function so(e,t,n,r){var a=Pl;if(null===a)throw Error(o(349));var i=t._getVersion,l=i(t._source),u=qi.current,s=u.useState((function(){return uo(a,t,n)})),d=s[1],c=s[0];s=Ji;var f=e.memoizedState,p=f.refs,h=p.getSnapshot,g=f.source;f=f.subscribe;var m=Qi;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=d;var e=i(t._source);if(!or(l,e)){e=n(t._source),or(c,e)||(d(e),e=lu(m),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,o=e;0<o;){var u=31-Ut(o),s=1<<u;r[u]|=e,o&=~s}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=lu(m);a.mutableReadLanes|=r&a.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),or(h,n)&&or(g,t)&&or(f,r)||((e={pending:null,dispatch:null,lastRenderedReducer:io,lastRenderedState:c}).dispatch=d=Po.bind(null,Qi,e),s.queue=e,s.baseQueue=null,c=uo(a,t,n),s.memoizedState=s.baseState=c),c}function co(e,t,n){return so(ao(),e,t,n)}function fo(e){var t=ro();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:io,lastRenderedState:e}).dispatch=Po.bind(null,Qi,e),[t.memoizedState,e]}function po(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Qi.updateQueue)?(t={lastEffect:null},Qi.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function ho(e){return e={current:e},ro().memoizedState=e}function go(){return ao().memoizedState}function mo(e,t,n,r){var a=ro();Qi.flags|=e,a.memoizedState=po(1|t,n,void 0,void 0===r?null:r)}function bo(e,t,n,r){var a=ao();r=void 0===r?null:r;var i=void 0;if(null!==Ki){var o=Ki.memoizedState;if(i=o.destroy,null!==r&&to(r,o.deps))return void po(t,n,i,r)}Qi.flags|=e,a.memoizedState=po(1|t,n,i,r)}function yo(e,t){return mo(516,4,e,t)}function vo(e,t){return bo(516,4,e,t)}function wo(e,t){return bo(4,2,e,t)}function Eo(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function xo(e,t,n){return n=null!=n?n.concat([e]):null,bo(4,2,Eo.bind(null,t,e),n)}function _o(){}function So(e,t){var n=ao();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&to(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function Co(e,t){var n=ao();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&to(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function ko(e,t){var n=Ba();Ha(98>n?98:n,(function(){e(!0)})),Ha(97<n?97:n,(function(){var n=Yi.transition;Yi.transition=1;try{e(!1),t()}finally{Yi.transition=n}}))}function Po(e,t,n){var r=ou(),a=lu(e),i={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},o=t.pending;if(null===o?i.next=i:(i.next=o.next,o.next=i),t.pending=i,o=e.alternate,e===Qi||null!==o&&o===Qi)Zi=Xi=!0;else{if(0===e.lanes&&(null===o||0===o.lanes)&&null!==(o=t.lastRenderedReducer))try{var l=t.lastRenderedState,u=o(l,n);if(i.eagerReducer=o,i.eagerState=u,or(u,l))return}catch(e){}uu(e,a,r)}}var Mo={readContext:ni,useCallback:eo,useContext:eo,useEffect:eo,useImperativeHandle:eo,useLayoutEffect:eo,useMemo:eo,useReducer:eo,useRef:eo,useState:eo,useDebugValue:eo,useDeferredValue:eo,useTransition:eo,useMutableSource:eo,useOpaqueIdentifier:eo,unstable_isNewReconciler:!1},Oo={readContext:ni,useCallback:function(e,t){return ro().memoizedState=[e,void 0===t?null:t],e},useContext:ni,useEffect:yo,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,mo(4,2,Eo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return mo(4,2,e,t)},useMemo:function(e,t){var n=ro();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=ro();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Po.bind(null,Qi,e),[r.memoizedState,e]},useRef:ho,useState:fo,useDebugValue:_o,useDeferredValue:function(e){var t=fo(e),n=t[0],r=t[1];return yo((function(){var t=Yi.transition;Yi.transition=1;try{r(e)}finally{Yi.transition=t}}),[e]),n},useTransition:function(){var e=fo(!1),t=e[0];return ho(e=ko.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=ro();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},so(r,e,t,n)},useOpaqueIdentifier:function(){if(Ri){var e=!1,t=function(e){return{$$typeof:L,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(qr++).toString(36))),Error(o(355))})),n=fo(t)[1];return 0==(2&Qi.mode)&&(Qi.flags|=516,po(5,(function(){n("r:"+(qr++).toString(36))}),void 0,null)),t}return fo(t="r:"+(qr++).toString(36)),t},unstable_isNewReconciler:!1},Ao={readContext:ni,useCallback:So,useContext:ni,useEffect:vo,useImperativeHandle:xo,useLayoutEffect:wo,useMemo:Co,useReducer:oo,useRef:go,useState:function(){return oo(io)},useDebugValue:_o,useDeferredValue:function(e){var t=oo(io),n=t[0],r=t[1];return vo((function(){var t=Yi.transition;Yi.transition=1;try{r(e)}finally{Yi.transition=t}}),[e]),n},useTransition:function(){var e=oo(io)[0];return[go().current,e]},useMutableSource:co,useOpaqueIdentifier:function(){return oo(io)[0]},unstable_isNewReconciler:!1},To={readContext:ni,useCallback:So,useContext:ni,useEffect:vo,useImperativeHandle:xo,useLayoutEffect:wo,useMemo:Co,useReducer:lo,useRef:go,useState:function(){return lo(io)},useDebugValue:_o,useDeferredValue:function(e){var t=lo(io),n=t[0],r=t[1];return vo((function(){var t=Yi.transition;Yi.transition=1;try{r(e)}finally{Yi.transition=t}}),[e]),n},useTransition:function(){var e=lo(io)[0];return[go().current,e]},useMutableSource:co,useOpaqueIdentifier:function(){return lo(io)[0]},unstable_isNewReconciler:!1},Io=E.ReactCurrentOwner,$o=!1;function jo(e,t,n,r){t.child=null===e?_i(t,null,n,r):xi(t,e.child,n,r)}function Lo(e,t,n,r,a){n=n.render;var i=t.ref;return ti(t,a),r=no(e,t,n,r,i,a),null===e||$o?(t.flags|=1,jo(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zo(e,t,a))}function No(e,t,n,r,a,i){if(null===e){var o=n.type;return"function"!=typeof o||Du(o)||void 0!==o.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Fu(n.type,null,r,t,t.mode,i)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=o,Ro(e,t,o,r,a,i))}return o=e.child,0==(a&i)&&(a=o.memoizedProps,(n=null!==(n=n.compare)?n:ur)(a,r)&&e.ref===t.ref)?Zo(e,t,i):(t.flags|=1,(e=Bu(o,r)).ref=t.ref,e.return=t,t.child=e)}function Ro(e,t,n,r,a,i){if(null!==e&&ur(e.memoizedProps,r)&&e.ref===t.ref){if($o=!1,0==(i&a))return t.lanes=e.lanes,Zo(e,t,i);0!=(16384&e.flags)&&($o=!0)}return Bo(e,t,n,r,i)}function zo(e,t,n){var r=t.pendingProps,a=r.children,i=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},mu(0,n);else{if(0==(1073741824&n))return e=null!==i?i.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},mu(0,e),null;t.memoizedState={baseLanes:0},mu(0,null!==i?i.baseLanes:n)}else null!==i?(r=i.baseLanes|n,t.memoizedState=null):r=n,mu(0,r);return jo(e,t,a,n),t.child}function Do(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Bo(e,t,n,r,a){var i=pa(n)?ca:sa.current;return i=fa(t,i),ti(t,a),n=no(e,t,n,r,i,a),null===e||$o?(t.flags|=1,jo(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zo(e,t,a))}function Fo(e,t,n,r,a){if(pa(n)){var i=!0;ba(t)}else i=!1;if(ti(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),gi(t,n,r),bi(t,n,r,a),r=!0;else if(null===e){var o=t.stateNode,l=t.memoizedProps;o.props=l;var u=o.context,s=n.contextType;s="object"==typeof s&&null!==s?ni(s):fa(t,s=pa(n)?ca:sa.current);var d=n.getDerivedStateFromProps,c="function"==typeof d||"function"==typeof o.getSnapshotBeforeUpdate;c||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(l!==r||u!==s)&&mi(t,o,r,s),ri=!1;var f=t.memoizedState;o.state=f,si(t,r,o,a),u=t.memoizedState,l!==r||f!==u||da.current||ri?("function"==typeof d&&(fi(t,n,d,r),u=t.memoizedState),(l=ri||hi(t,n,l,r,f,u,s))?(c||"function"!=typeof o.UNSAFE_componentWillMount&&"function"!=typeof o.componentWillMount||("function"==typeof o.componentWillMount&&o.componentWillMount(),"function"==typeof o.UNSAFE_componentWillMount&&o.UNSAFE_componentWillMount()),"function"==typeof o.componentDidMount&&(t.flags|=4)):("function"==typeof o.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),o.props=r,o.state=u,o.context=s,r=l):("function"==typeof o.componentDidMount&&(t.flags|=4),r=!1)}else{o=t.stateNode,ii(e,t),l=t.memoizedProps,s=t.type===t.elementType?l:Ya(t.type,l),o.props=s,c=t.pendingProps,f=o.context,u="object"==typeof(u=n.contextType)&&null!==u?ni(u):fa(t,u=pa(n)?ca:sa.current);var p=n.getDerivedStateFromProps;(d="function"==typeof p||"function"==typeof o.getSnapshotBeforeUpdate)||"function"!=typeof o.UNSAFE_componentWillReceiveProps&&"function"!=typeof o.componentWillReceiveProps||(l!==c||f!==u)&&mi(t,o,r,u),ri=!1,f=t.memoizedState,o.state=f,si(t,r,o,a);var h=t.memoizedState;l!==c||f!==h||da.current||ri?("function"==typeof p&&(fi(t,n,p,r),h=t.memoizedState),(s=ri||hi(t,n,s,r,f,h,u))?(d||"function"!=typeof o.UNSAFE_componentWillUpdate&&"function"!=typeof o.componentWillUpdate||("function"==typeof o.componentWillUpdate&&o.componentWillUpdate(r,h,u),"function"==typeof o.UNSAFE_componentWillUpdate&&o.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof o.componentDidUpdate&&(t.flags|=4),"function"==typeof o.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof o.componentDidUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),o.props=r,o.state=h,o.context=u,r=s):("function"!=typeof o.componentDidUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),"function"!=typeof o.getSnapshotBeforeUpdate||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=256),r=!1)}return Ho(e,t,n,r,i,a)}function Ho(e,t,n,r,a,i){Do(e,t);var o=0!=(64&t.flags);if(!r&&!o)return a&&ya(t,n,!1),Zo(e,t,i);r=t.stateNode,Io.current=t;var l=o&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&o?(t.child=xi(t,e.child,null,i),t.child=xi(t,null,l,i)):jo(e,t,l,i),t.memoizedState=r.state,a&&ya(t,n,!0),t.child}function Uo(e){var t=e.stateNode;t.pendingContext?ga(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ga(0,t.context,!1),Oi(e,t.containerInfo)}var Wo,Vo,qo,Yo={dehydrated:null,retryLane:0};function Go(e,t,n){var r,a=t.pendingProps,i=$i.current,o=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&i)),r?(o=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(i|=1),la($i,1&i),null===e?(void 0!==a.fallback&&Bi(t),e=a.children,i=a.fallback,o?(e=Qo(t,e,i,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Yo,e):"number"==typeof a.unstable_expectedLoadTime?(e=Qo(t,e,i,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Yo,t.lanes=33554432,e):((n=Uu({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,o?(a=function(e,t,n,r,a){var i=t.mode,o=e.child;e=o.sibling;var l={mode:"hidden",children:n};return 0==(2&i)&&t.child!==o?((n=t.child).childLanes=0,n.pendingProps=l,null!==(o=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=o,o.nextEffect=null):t.firstEffect=t.lastEffect=null):n=Bu(o,l),null!==e?r=Bu(e,r):(r=Hu(r,i,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,a.children,a.fallback,n),o=t.child,i=e.child.memoizedState,o.memoizedState=null===i?{baseLanes:n}:{baseLanes:i.baseLanes|n},o.childLanes=e.childLanes&~n,t.memoizedState=Yo,a):(n=function(e,t,n,r){var a=e.child;return e=a.sibling,n=Bu(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,a.children,n),t.memoizedState=null,n))}function Qo(e,t,n,r){var a=e.mode,i=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==i?(i.childLanes=0,i.pendingProps=t):i=Uu(t,a,0,null),n=Hu(n,a,r,null),i.return=e,n.return=e,i.sibling=n,e.child=i,n}function Ko(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),ei(e.return,t)}function Jo(e,t,n,r,a,i){var o=e.memoizedState;null===o?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:i}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=a,o.lastEffect=i)}function Xo(e,t,n){var r=t.pendingProps,a=r.revealOrder,i=r.tail;if(jo(e,t,r.children,n),0!=(2&(r=$i.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Ko(e,n);else if(19===e.tag)Ko(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(la($i,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===ji(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Jo(t,!1,a,n,i,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===ji(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Jo(t,!0,n,null,i,t.lastEffect);break;case"together":Jo(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Zo(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ll|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(o(153));if(null!==t.child){for(n=Bu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Bu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function el(e,t){if(!Ri)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function tl(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return pa(t.type)&&ha(),null;case 3:return Ai(),oa(da),oa(sa),Vi(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Hi(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Ii(t);var i=Mi(Pi.current);if(n=t.type,null!==e&&null!=t.stateNode)Vo(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(o(166));return null}if(e=Mi(Ci.current),Hi(t)){r=t.stateNode,n=t.type;var l=t.memoizedProps;switch(r[Gr]=t,r[Qr]=l,n){case"dialog":kr("cancel",r),kr("close",r);break;case"iframe":case"object":case"embed":kr("load",r);break;case"video":case"audio":for(e=0;e<xr.length;e++)kr(xr[e],r);break;case"source":kr("error",r);break;case"img":case"image":case"link":kr("error",r),kr("load",r);break;case"details":kr("toggle",r);break;case"input":ee(r,l),kr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!l.multiple},kr("invalid",r);break;case"textarea":ue(r,l),kr("invalid",r)}for(var s in _e(n,l),e=null,l)l.hasOwnProperty(s)&&(i=l[s],"children"===s?"string"==typeof i?r.textContent!==i&&(e=["children",i]):"number"==typeof i&&r.textContent!==""+i&&(e=["children",""+i]):u.hasOwnProperty(s)&&null!=i&&"onScroll"===s&&kr("scroll",r));switch(n){case"input":K(r),re(r,l,!0);break;case"textarea":K(r),de(r);break;case"select":case"option":break;default:"function"==typeof l.onClick&&(r.onclick=Nr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(s=9===i.nodeType?i:i.ownerDocument,e===ce&&(e=fe(n)),e===ce?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(n,{is:r.is}):(e=s.createElement(n),"select"===n&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,n),e[Gr]=t,e[Qr]=r,Wo(e,t),t.stateNode=e,s=Se(n,r),n){case"dialog":kr("cancel",e),kr("close",e),i=r;break;case"iframe":case"object":case"embed":kr("load",e),i=r;break;case"video":case"audio":for(i=0;i<xr.length;i++)kr(xr[i],e);i=r;break;case"source":kr("error",e),i=r;break;case"img":case"image":case"link":kr("error",e),kr("load",e),i=r;break;case"details":kr("toggle",e),i=r;break;case"input":ee(e,r),i=Z(e,r),kr("invalid",e);break;case"option":i=ie(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},i=a({},r,{value:void 0}),kr("invalid",e);break;case"textarea":ue(e,r),i=le(e,r),kr("invalid",e);break;default:i=r}_e(n,i);var d=i;for(l in d)if(d.hasOwnProperty(l)){var c=d[l];"style"===l?Ee(e,c):"dangerouslySetInnerHTML"===l?null!=(c=c?c.__html:void 0)&&me(e,c):"children"===l?"string"==typeof c?("textarea"!==n||""!==c)&&be(e,c):"number"==typeof c&&be(e,""+c):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(u.hasOwnProperty(l)?null!=c&&"onScroll"===l&&kr("scroll",e):null!=c&&w(e,l,c,s))}switch(n){case"input":K(e),re(e,r,!1);break;case"textarea":K(e),de(e);break;case"option":null!=r.value&&e.setAttribute("value",""+G(r.value));break;case"select":e.multiple=!!r.multiple,null!=(l=r.value)?oe(e,!!r.multiple,l,!1):null!=r.defaultValue&&oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof i.onClick&&(e.onclick=Nr)}Dr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)qo(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(o(166));n=Mi(Pi.current),Mi(Ci.current),Hi(t)?(r=t.stateNode,n=t.memoizedProps,r[Gr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Gr]=t,t.stateNode=r)}return null;case 13:return oa($i),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Hi(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&$i.current)?0===Il&&(Il=3):(0!==Il&&3!==Il||(Il=4),null===Pl||0==(134217727&Ll)&&0==(134217727&Nl)||fu(Pl,Ol))),(r||n)&&(t.flags|=4),null);case 4:return Ai(),null===e&&Mr(t.stateNode.containerInfo),null;case 10:return Za(t),null;case 17:return pa(t.type)&&ha(),null;case 19:if(oa($i),null===(r=t.memoizedState))return null;if(l=0!=(64&t.flags),null===(s=r.rendering))if(l)el(r,!1);else{if(0!==Il||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(s=ji(e))){for(t.flags|=64,el(r,!1),null!==(l=s.updateQueue)&&(t.updateQueue=l,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(l=n).flags&=2,l.nextEffect=null,l.firstEffect=null,l.lastEffect=null,null===(s=l.alternate)?(l.childLanes=0,l.lanes=e,l.child=null,l.memoizedProps=null,l.memoizedState=null,l.updateQueue=null,l.dependencies=null,l.stateNode=null):(l.childLanes=s.childLanes,l.lanes=s.lanes,l.child=s.child,l.memoizedProps=s.memoizedProps,l.memoizedState=s.memoizedState,l.updateQueue=s.updateQueue,l.type=s.type,e=s.dependencies,l.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return la($i,1&$i.current|2),t.child}e=e.sibling}null!==r.tail&&Da()>Bl&&(t.flags|=64,l=!0,el(r,!1),t.lanes=33554432)}else{if(!l)if(null!==(e=ji(s))){if(t.flags|=64,l=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),el(r,!0),null===r.tail&&"hidden"===r.tailMode&&!s.alternate&&!Ri)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Da()-r.renderingStartTime>Bl&&1073741824!==n&&(t.flags|=64,l=!0,el(r,!1),t.lanes=33554432);r.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=r.last)?n.sibling=s:t.child=s,r.last=s)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Da(),n.sibling=null,t=$i.current,la($i,l?1&t|2:1&t),n):null;case 23:case 24:return bu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(o(156,t.tag))}function nl(e){switch(e.tag){case 1:pa(e.type)&&ha();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Ai(),oa(da),oa(sa),Vi(),0!=(64&(t=e.flags)))throw Error(o(285));return e.flags=-4097&t|64,e;case 5:return Ii(e),null;case 13:return oa($i),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return oa($i),null;case 4:return Ai(),null;case 10:return Za(e),null;case 23:case 24:return bu(),null;default:return null}}function rl(e,t){try{var n="",r=t;do{n+=q(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function al(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Wo=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Vo=function(e,t,n,r){var i=e.memoizedProps;if(i!==r){e=t.stateNode,Mi(Ci.current);var o,l=null;switch(n){case"input":i=Z(e,i),r=Z(e,r),l=[];break;case"option":i=ie(e,i),r=ie(e,r),l=[];break;case"select":i=a({},i,{value:void 0}),r=a({},r,{value:void 0}),l=[];break;case"textarea":i=le(e,i),r=le(e,r),l=[];break;default:"function"!=typeof i.onClick&&"function"==typeof r.onClick&&(e.onclick=Nr)}for(c in _e(n,r),n=null,i)if(!r.hasOwnProperty(c)&&i.hasOwnProperty(c)&&null!=i[c])if("style"===c){var s=i[c];for(o in s)s.hasOwnProperty(o)&&(n||(n={}),n[o]="")}else"dangerouslySetInnerHTML"!==c&&"children"!==c&&"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(u.hasOwnProperty(c)?l||(l=[]):(l=l||[]).push(c,null));for(c in r){var d=r[c];if(s=null!=i?i[c]:void 0,r.hasOwnProperty(c)&&d!==s&&(null!=d||null!=s))if("style"===c)if(s){for(o in s)!s.hasOwnProperty(o)||d&&d.hasOwnProperty(o)||(n||(n={}),n[o]="");for(o in d)d.hasOwnProperty(o)&&s[o]!==d[o]&&(n||(n={}),n[o]=d[o])}else n||(l||(l=[]),l.push(c,n)),n=d;else"dangerouslySetInnerHTML"===c?(d=d?d.__html:void 0,s=s?s.__html:void 0,null!=d&&s!==d&&(l=l||[]).push(c,d)):"children"===c?"string"!=typeof d&&"number"!=typeof d||(l=l||[]).push(c,""+d):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&(u.hasOwnProperty(c)?(null!=d&&"onScroll"===c&&kr("scroll",e),l||s===d||(l=[])):"object"==typeof d&&null!==d&&d.$$typeof===L?d.toString():(l=l||[]).push(c,d))}n&&(l=l||[]).push("style",n);var c=l;(t.updateQueue=c)&&(t.flags|=4)}},qo=function(e,t,n,r){n!==r&&(t.flags|=4)};var il="function"==typeof WeakMap?WeakMap:Map;function ol(e,t,n){(n=oi(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Wl||(Wl=!0,Vl=r),al(0,t)},n}function ll(e,t,n){(n=oi(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return al(0,t),r(a)}}var i=e.stateNode;return null!==i&&"function"==typeof i.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===ql?ql=new Set([this]):ql.add(this),al(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ul="function"==typeof WeakSet?WeakSet:Set;function sl(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){ju(e,t)}else t.current=null}function dl(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Ya(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Ur(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(o(163))}function cl(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Tu(n,e),Au(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Ya(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&di(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}di(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Dr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&Et(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(o(163))}function fl(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=we("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function pl(e,t){if(wa&&"function"==typeof wa.onCommitFiberUnmount)try{wa.onCommitFiberUnmount(va,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Tu(t,n);else{r=t;try{a()}catch(e){ju(r,e)}}n=n.next}while(n!==e)}break;case 1:if(sl(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){ju(t,e)}break;case 5:sl(t);break;case 4:vl(e,t)}}function hl(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function gl(e){return 5===e.tag||3===e.tag||4===e.tag}function ml(e){e:{for(var t=e.return;null!==t;){if(gl(t))break e;t=t.return}throw Error(o(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(o(161))}16&n.flags&&(be(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||gl(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?bl(e,n,t):yl(e,n,t)}function bl(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Nr));else if(4!==r&&null!==(e=e.child))for(bl(e,t,n),e=e.sibling;null!==e;)bl(e,t,n),e=e.sibling}function yl(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(yl(e,t,n),e=e.sibling;null!==e;)yl(e,t,n),e=e.sibling}function vl(e,t){for(var n,r,a=t,i=!1;;){if(!i){i=a.return;e:for(;;){if(null===i)throw Error(o(160));switch(n=i.stateNode,i.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}i=i.return}i=!0}if(5===a.tag||6===a.tag){e:for(var l=e,u=a,s=u;;)if(pl(l,s),null!==s.child&&4!==s.tag)s.child.return=s,s=s.child;else{if(s===u)break e;for(;null===s.sibling;){if(null===s.return||s.return===u)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}r?(l=n,u=a.stateNode,8===l.nodeType?l.parentNode.removeChild(u):l.removeChild(u)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(pl(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(i=!1)}a.sibling.return=a.return,a=a.sibling}}function wl(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[Qr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),Se(e,a),t=Se(e,r),a=0;a<i.length;a+=2){var l=i[a],u=i[a+1];"style"===l?Ee(n,u):"dangerouslySetInnerHTML"===l?me(n,u):"children"===l?be(n,u):w(n,l,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":se(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(i=r.value)?oe(n,!!r.multiple,i,!1):e!==!!r.multiple&&(null!=r.defaultValue?oe(n,!!r.multiple,r.defaultValue,!0):oe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(o(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,Et(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Dl=Da(),fl(t.child,!0)),void El(t);case 19:return void El(t);case 17:return;case 23:case 24:return void fl(t,null!==t.memoizedState)}throw Error(o(163))}function El(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ul),t.forEach((function(t){var r=Nu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function xl(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var _l=Math.ceil,Sl=E.ReactCurrentDispatcher,Cl=E.ReactCurrentOwner,kl=0,Pl=null,Ml=null,Ol=0,Al=0,Tl=ia(0),Il=0,$l=null,jl=0,Ll=0,Nl=0,Rl=0,zl=null,Dl=0,Bl=1/0;function Fl(){Bl=Da()+500}var Hl,Ul=null,Wl=!1,Vl=null,ql=null,Yl=!1,Gl=null,Ql=90,Kl=[],Jl=[],Xl=null,Zl=0,eu=null,tu=-1,nu=0,ru=0,au=null,iu=!1;function ou(){return 0!=(48&kl)?Da():-1!==tu?tu:tu=Da()}function lu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Ba()?1:2;if(0===nu&&(nu=jl),0!==qa.transition){0!==ru&&(ru=null!==zl?zl.pendingLanes:0),e=nu;var t=4186112&~ru;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Ba(),e=Dt(0!=(4&kl)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),nu)}function uu(e,t,n){if(50<Zl)throw Zl=0,eu=null,Error(o(185));if(null===(e=su(e,t)))return null;Ht(e,t,n),e===Pl&&(Nl|=t,4===Il&&fu(e,Ol));var r=Ba();1===t?0!=(8&kl)&&0==(48&kl)?pu(e):(du(e,n),0===kl&&(Fl(),Wa())):(0==(4&kl)||98!==r&&99!==r||(null===Xl?Xl=new Set([e]):Xl.add(e)),du(e,n)),zl=e}function su(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function du(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,i=e.expirationTimes,l=e.pendingLanes;0<l;){var u=31-Ut(l),s=1<<u,d=i[u];if(-1===d){if(0==(s&r)||0!=(s&a)){d=t,Nt(s);var c=Lt;i[u]=10<=c?d+250:6<=c?d+5e3:-1}}else d<=t&&(e.expiredLanes|=s);l&=~s}if(r=Rt(e,e===Pl?Ol:0),t=Lt,0===r)null!==n&&(n!==$a&&_a(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==$a&&_a(n)}15===t?(n=pu.bind(null,e),null===La?(La=[n],Na=xa(Ma,Va)):La.push(n),n=$a):n=14===t?Ua(99,pu.bind(null,e)):Ua(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(o(358,e))}}(t),cu.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function cu(e){if(tu=-1,ru=nu=0,0!=(48&kl))throw Error(o(327));var t=e.callbackNode;if(Ou()&&e.callbackNode!==t)return null;var n=Rt(e,e===Pl?Ol:0);if(0===n)return null;var r=n,a=kl;kl|=16;var i=wu();for(Pl===e&&Ol===r||(Fl(),yu(e,r));;)try{_u();break}catch(t){vu(e,t)}if(Xa(),Sl.current=i,kl=a,null!==Ml?r=0:(Pl=null,Ol=0,r=Il),0!=(jl&Nl))yu(e,0);else if(0!==r){if(2===r&&(kl|=64,e.hydrate&&(e.hydrate=!1,Ur(e.containerInfo)),0!==(n=zt(e))&&(r=Eu(e,n))),1===r)throw t=$l,yu(e,0),fu(e,n),du(e,Da()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(o(345));case 2:ku(e);break;case 3:if(fu(e,n),(62914560&n)===n&&10<(r=Dl+500-Da())){if(0!==Rt(e,0))break;if(((a=e.suspendedLanes)&n)!==n){ou(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=Fr(ku.bind(null,e),r);break}ku(e);break;case 4:if(fu(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var l=31-Ut(n);i=1<<l,(l=r[l])>a&&(a=l),n&=~i}if(n=a,10<(n=(120>(n=Da()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*_l(n/1960))-n)){e.timeoutHandle=Fr(ku.bind(null,e),n);break}ku(e);break;case 5:ku(e);break;default:throw Error(o(329))}}return du(e,Da()),e.callbackNode===t?cu.bind(null,e):null}function fu(e,t){for(t&=~Rl,t&=~Nl,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Ut(t),r=1<<n;e[n]=-1,t&=~r}}function pu(e){if(0!=(48&kl))throw Error(o(327));if(Ou(),e===Pl&&0!=(e.expiredLanes&Ol)){var t=Ol,n=Eu(e,t);0!=(jl&Nl)&&(n=Eu(e,t=Rt(e,t)))}else n=Eu(e,t=Rt(e,0));if(0!==e.tag&&2===n&&(kl|=64,e.hydrate&&(e.hydrate=!1,Ur(e.containerInfo)),0!==(t=zt(e))&&(n=Eu(e,t))),1===n)throw n=$l,yu(e,0),fu(e,t),du(e,Da()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,ku(e),du(e,Da()),null}function hu(e,t){var n=kl;kl|=1;try{return e(t)}finally{0===(kl=n)&&(Fl(),Wa())}}function gu(e,t){var n=kl;kl&=-2,kl|=8;try{return e(t)}finally{0===(kl=n)&&(Fl(),Wa())}}function mu(e,t){la(Tl,Al),Al|=t,jl|=t}function bu(){Al=Tl.current,oa(Tl)}function yu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Hr(n)),null!==Ml)for(n=Ml.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&ha();break;case 3:Ai(),oa(da),oa(sa),Vi();break;case 5:Ii(r);break;case 4:Ai();break;case 13:case 19:oa($i);break;case 10:Za(r);break;case 23:case 24:bu()}n=n.return}Pl=e,Ml=Bu(e.current,null),Ol=Al=jl=t,Il=0,$l=null,Rl=Nl=Ll=0}function vu(e,t){for(;;){var n=Ml;try{if(Xa(),qi.current=Mo,Xi){for(var r=Qi.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}Xi=!1}if(Gi=0,Ji=Ki=Qi=null,Zi=!1,Cl.current=null,null===n||null===n.return){Il=1,$l=t,Ml=null;break}e:{var i=e,o=n.return,l=n,u=t;if(t=Ol,l.flags|=2048,l.firstEffect=l.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var s=u;if(0==(2&l.mode)){var d=l.alternate;d?(l.updateQueue=d.updateQueue,l.memoizedState=d.memoizedState,l.lanes=d.lanes):(l.updateQueue=null,l.memoizedState=null)}var c=0!=(1&$i.current),f=o;do{var p;if(p=13===f.tag){var h=f.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var g=f.memoizedProps;p=void 0!==g.fallback&&(!0!==g.unstable_avoidThisFallback||!c)}}if(p){var m=f.updateQueue;if(null===m){var b=new Set;b.add(s),f.updateQueue=b}else m.add(s);if(0==(2&f.mode)){if(f.flags|=64,l.flags|=16384,l.flags&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var y=oi(-1,1);y.tag=2,li(l,y)}l.lanes|=1;break e}u=void 0,l=t;var v=i.pingCache;if(null===v?(v=i.pingCache=new il,u=new Set,v.set(s,u)):void 0===(u=v.get(s))&&(u=new Set,v.set(s,u)),!u.has(l)){u.add(l);var w=Lu.bind(null,i,s,l);s.then(w,w)}f.flags|=4096,f.lanes=t;break e}f=f.return}while(null!==f);u=Error((Y(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Il&&(Il=2),u=rl(u,l),f=o;do{switch(f.tag){case 3:i=u,f.flags|=4096,t&=-t,f.lanes|=t,ui(f,ol(0,i,t));break e;case 1:i=u;var E=f.type,x=f.stateNode;if(0==(64&f.flags)&&("function"==typeof E.getDerivedStateFromError||null!==x&&"function"==typeof x.componentDidCatch&&(null===ql||!ql.has(x)))){f.flags|=4096,t&=-t,f.lanes|=t,ui(f,ll(f,i,t));break e}}f=f.return}while(null!==f)}Cu(n)}catch(e){t=e,Ml===n&&null!==n&&(Ml=n=n.return);continue}break}}function wu(){var e=Sl.current;return Sl.current=Mo,null===e?Mo:e}function Eu(e,t){var n=kl;kl|=16;var r=wu();for(Pl===e&&Ol===t||yu(e,t);;)try{xu();break}catch(t){vu(e,t)}if(Xa(),kl=n,Sl.current=r,null!==Ml)throw Error(o(261));return Pl=null,Ol=0,Il}function xu(){for(;null!==Ml;)Su(Ml)}function _u(){for(;null!==Ml&&!Sa();)Su(Ml)}function Su(e){var t=Hl(e.alternate,e,Al);e.memoizedProps=e.pendingProps,null===t?Cu(e):Ml=t,Cl.current=null}function Cu(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=tl(n,t,Al)))return void(Ml=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Al)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=nl(t)))return n.flags&=2047,void(Ml=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(Ml=t);Ml=t=e}while(null!==t);0===Il&&(Il=5)}function ku(e){var t=Ba();return Ha(99,Pu.bind(null,e,t)),null}function Pu(e,t){do{Ou()}while(null!==Gl);if(0!=(48&kl))throw Error(o(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(o(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,i=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var l=e.eventTimes,u=e.expirationTimes;0<i;){var s=31-Ut(i),d=1<<s;a[s]=0,l[s]=-1,u[s]=-1,i&=~d}if(null!==Xl&&0==(24&r)&&Xl.has(e)&&Xl.delete(e),e===Pl&&(Ml=Pl=null,Ol=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=kl,kl|=32,Cl.current=null,Rr=Gt,pr(l=fr())){if("selectionStart"in l)u={start:l.selectionStart,end:l.selectionEnd};else e:if(u=(u=l.ownerDocument)&&u.defaultView||window,(d=u.getSelection&&u.getSelection())&&0!==d.rangeCount){u=d.anchorNode,i=d.anchorOffset,s=d.focusNode,d=d.focusOffset;try{u.nodeType,s.nodeType}catch(e){u=null;break e}var c=0,f=-1,p=-1,h=0,g=0,m=l,b=null;t:for(;;){for(var y;m!==u||0!==i&&3!==m.nodeType||(f=c+i),m!==s||0!==d&&3!==m.nodeType||(p=c+d),3===m.nodeType&&(c+=m.nodeValue.length),null!==(y=m.firstChild);)b=m,m=y;for(;;){if(m===l)break t;if(b===u&&++h===i&&(f=c),b===s&&++g===d&&(p=c),null!==(y=m.nextSibling))break;b=(m=b).parentNode}m=y}u=-1===f||-1===p?null:{start:f,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;zr={focusedElem:l,selectionRange:u},Gt=!1,au=null,iu=!1,Ul=r;do{try{Mu()}catch(e){if(null===Ul)throw Error(o(330));ju(Ul,e),Ul=Ul.nextEffect}}while(null!==Ul);au=null,Ul=r;do{try{for(l=e;null!==Ul;){var v=Ul.flags;if(16&v&&be(Ul.stateNode,""),128&v){var w=Ul.alternate;if(null!==w){var E=w.ref;null!==E&&("function"==typeof E?E(null):E.current=null)}}switch(1038&v){case 2:ml(Ul),Ul.flags&=-3;break;case 6:ml(Ul),Ul.flags&=-3,wl(Ul.alternate,Ul);break;case 1024:Ul.flags&=-1025;break;case 1028:Ul.flags&=-1025,wl(Ul.alternate,Ul);break;case 4:wl(Ul.alternate,Ul);break;case 8:vl(l,u=Ul);var x=u.alternate;hl(u),null!==x&&hl(x)}Ul=Ul.nextEffect}}catch(e){if(null===Ul)throw Error(o(330));ju(Ul,e),Ul=Ul.nextEffect}}while(null!==Ul);if(E=zr,w=fr(),v=E.focusedElem,l=E.selectionRange,w!==v&&v&&v.ownerDocument&&cr(v.ownerDocument.documentElement,v)){null!==l&&pr(v)&&(w=l.start,void 0===(E=l.end)&&(E=w),"selectionStart"in v?(v.selectionStart=w,v.selectionEnd=Math.min(E,v.value.length)):(E=(w=v.ownerDocument||document)&&w.defaultView||window).getSelection&&(E=E.getSelection(),u=v.textContent.length,x=Math.min(l.start,u),l=void 0===l.end?x:Math.min(l.end,u),!E.extend&&x>l&&(u=l,l=x,x=u),u=dr(v,x),i=dr(v,l),u&&i&&(1!==E.rangeCount||E.anchorNode!==u.node||E.anchorOffset!==u.offset||E.focusNode!==i.node||E.focusOffset!==i.offset)&&((w=w.createRange()).setStart(u.node,u.offset),E.removeAllRanges(),x>l?(E.addRange(w),E.extend(i.node,i.offset)):(w.setEnd(i.node,i.offset),E.addRange(w))))),w=[];for(E=v;E=E.parentNode;)1===E.nodeType&&w.push({element:E,left:E.scrollLeft,top:E.scrollTop});for("function"==typeof v.focus&&v.focus(),v=0;v<w.length;v++)(E=w[v]).element.scrollLeft=E.left,E.element.scrollTop=E.top}Gt=!!Rr,zr=Rr=null,e.current=n,Ul=r;do{try{for(v=e;null!==Ul;){var _=Ul.flags;if(36&_&&cl(v,Ul.alternate,Ul),128&_){w=void 0;var S=Ul.ref;if(null!==S){var C=Ul.stateNode;switch(Ul.tag){case 5:w=C;break;default:w=C}"function"==typeof S?S(w):S.current=w}}Ul=Ul.nextEffect}}catch(e){if(null===Ul)throw Error(o(330));ju(Ul,e),Ul=Ul.nextEffect}}while(null!==Ul);Ul=null,ja(),kl=a}else e.current=n;if(Yl)Yl=!1,Gl=e,Ql=t;else for(Ul=r;null!==Ul;)t=Ul.nextEffect,Ul.nextEffect=null,8&Ul.flags&&((_=Ul).sibling=null,_.stateNode=null),Ul=t;if(0===(r=e.pendingLanes)&&(ql=null),1===r?e===eu?Zl++:(Zl=0,eu=e):Zl=0,n=n.stateNode,wa&&"function"==typeof wa.onCommitFiberRoot)try{wa.onCommitFiberRoot(va,n,void 0,64==(64&n.current.flags))}catch(e){}if(du(e,Da()),Wl)throw Wl=!1,e=Vl,Vl=null,e;return 0!=(8&kl)||Wa(),null}function Mu(){for(;null!==Ul;){var e=Ul.alternate;iu||null===au||(0!=(8&Ul.flags)?Ze(Ul,au)&&(iu=!0):13===Ul.tag&&xl(e,Ul)&&Ze(Ul,au)&&(iu=!0));var t=Ul.flags;0!=(256&t)&&dl(e,Ul),0==(512&t)||Yl||(Yl=!0,Ua(97,(function(){return Ou(),null}))),Ul=Ul.nextEffect}}function Ou(){if(90!==Ql){var e=97<Ql?97:Ql;return Ql=90,Ha(e,Iu)}return!1}function Au(e,t){Kl.push(t,e),Yl||(Yl=!0,Ua(97,(function(){return Ou(),null})))}function Tu(e,t){Jl.push(t,e),Yl||(Yl=!0,Ua(97,(function(){return Ou(),null})))}function Iu(){if(null===Gl)return!1;var e=Gl;if(Gl=null,0!=(48&kl))throw Error(o(331));var t=kl;kl|=32;var n=Jl;Jl=[];for(var r=0;r<n.length;r+=2){var a=n[r],i=n[r+1],l=a.destroy;if(a.destroy=void 0,"function"==typeof l)try{l()}catch(e){if(null===i)throw Error(o(330));ju(i,e)}}for(n=Kl,Kl=[],r=0;r<n.length;r+=2){a=n[r],i=n[r+1];try{var u=a.create;a.destroy=u()}catch(e){if(null===i)throw Error(o(330));ju(i,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return kl=t,Wa(),!0}function $u(e,t,n){li(e,t=ol(0,t=rl(n,t),1)),t=ou(),null!==(e=su(e,1))&&(Ht(e,1,t),du(e,t))}function ju(e,t){if(3===e.tag)$u(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){$u(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===ql||!ql.has(r))){var a=ll(n,e=rl(t,e),1);if(li(n,a),a=ou(),null!==(n=su(n,1)))Ht(n,1,a),du(n,a);else if("function"==typeof r.componentDidCatch&&(null===ql||!ql.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Lu(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ou(),e.pingedLanes|=e.suspendedLanes&n,Pl===e&&(Ol&n)===n&&(4===Il||3===Il&&(62914560&Ol)===Ol&&500>Da()-Dl?yu(e,0):Rl|=n),du(e,t)}function Nu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Ba()?1:2:(0===nu&&(nu=jl),0===(t=Bt(62914560&~nu))&&(t=4194304))),n=ou(),null!==(e=su(e,t))&&(Ht(e,t,n),du(e,n))}function Ru(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function zu(e,t,n,r){return new Ru(e,t,n,r)}function Du(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Bu(e,t){var n=e.alternate;return null===n?((n=zu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Fu(e,t,n,r,a,i){var l=2;if(r=e,"function"==typeof e)Du(e)&&(l=1);else if("string"==typeof e)l=5;else e:switch(e){case S:return Hu(n.children,a,i,t);case N:l=8,a|=16;break;case C:l=8,a|=1;break;case k:return(e=zu(12,n,t,8|a)).elementType=k,e.type=k,e.lanes=i,e;case A:return(e=zu(13,n,t,a)).type=A,e.elementType=A,e.lanes=i,e;case T:return(e=zu(19,n,t,a)).elementType=T,e.lanes=i,e;case R:return Uu(n,a,i,t);case z:return(e=zu(24,n,t,a)).elementType=z,e.lanes=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case P:l=10;break e;case M:l=9;break e;case O:l=11;break e;case I:l=14;break e;case $:l=16,r=null;break e;case j:l=22;break e}throw Error(o(130,null==e?e:typeof e,""))}return(t=zu(l,n,t,a)).elementType=e,t.type=r,t.lanes=i,t}function Hu(e,t,n,r){return(e=zu(7,e,r,t)).lanes=n,e}function Uu(e,t,n,r){return(e=zu(23,e,r,t)).elementType=R,e.lanes=n,e}function Wu(e,t,n){return(e=zu(6,e,null,t)).lanes=n,e}function Vu(e,t,n){return(t=zu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function qu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=Ft(0),this.expirationTimes=Ft(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Ft(0),this.mutableSourceEagerHydrationData=null}function Yu(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:_,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Gu(e,t,n,r){var a=t.current,i=ou(),l=lu(a);e:if(n){t:{if(Qe(n=n._reactInternals)!==n||1!==n.tag)throw Error(o(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(pa(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(o(171))}if(1===n.tag){var s=n.type;if(pa(s)){n=ma(n,s,u);break e}}n=u}else n=ua;return null===t.context?t.context=n:t.pendingContext=n,(t=oi(i,l)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),li(a,t),uu(a,l,i),l}function Qu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Ku(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Ju(e,t){Ku(e,t),(e=e.alternate)&&Ku(e,t)}function Xu(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new qu(e,t,null!=n&&!0===n.hydrate),t=zu(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,ai(t),e[Kr]=n.current,Mr(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function Zu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function es(e,t,n,r,a){var i=n._reactRootContainer;if(i){var o=i._internalRoot;if("function"==typeof a){var l=a;a=function(){var e=Qu(o);l.call(e)}}Gu(t,o,e,a)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Xu(e,0,t?{hydrate:!0}:void 0)}(n,r),o=i._internalRoot,"function"==typeof a){var u=a;a=function(){var e=Qu(o);u.call(e)}}gu((function(){Gu(t,o,e,a)}))}return Qu(o)}function ts(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Zu(t))throw Error(o(200));return Yu(e,t,null,n)}Hl=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||da.current)$o=!0;else{if(0==(n&r)){switch($o=!1,t.tag){case 3:Uo(t),Ui();break;case 5:Ti(t);break;case 1:pa(t.type)&&ba(t);break;case 4:Oi(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;la(Ga,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Go(e,t,n):(la($i,1&$i.current),null!==(t=Zo(e,t,n))?t.sibling:null);la($i,1&$i.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Xo(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),la($i,$i.current),r)break;return null;case 23:case 24:return t.lanes=0,zo(e,t,n)}return Zo(e,t,n)}$o=0!=(16384&e.flags)}else $o=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=fa(t,sa.current),ti(t,n),a=no(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,pa(r)){var i=!0;ba(t)}else i=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,ai(t);var l=r.getDerivedStateFromProps;"function"==typeof l&&fi(t,r,l,e),a.updater=pi,t.stateNode=a,a._reactInternals=t,bi(t,r,e,n),t=Ho(null,t,r,!0,i,n)}else t.tag=0,jo(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(i=a._init)(a._payload),t.type=a,i=t.tag=function(e){if("function"==typeof e)return Du(e)?1:0;if(null!=e){if((e=e.$$typeof)===O)return 11;if(e===I)return 14}return 2}(a),e=Ya(a,e),i){case 0:t=Bo(null,t,a,e,n);break e;case 1:t=Fo(null,t,a,e,n);break e;case 11:t=Lo(null,t,a,e,n);break e;case 14:t=No(null,t,a,Ya(a.type,e),r,n);break e}throw Error(o(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,Bo(e,t,r,a=t.elementType===r?a:Ya(r,a),n);case 1:return r=t.type,a=t.pendingProps,Fo(e,t,r,a=t.elementType===r?a:Ya(r,a),n);case 3:if(Uo(t),r=t.updateQueue,null===e||null===r)throw Error(o(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,ii(e,t),si(t,r,null,n),(r=t.memoizedState.element)===a)Ui(),t=Zo(e,t,n);else{if((i=(a=t.stateNode).hydrate)&&(Ni=Wr(t.stateNode.containerInfo.firstChild),Li=t,i=Ri=!0),i){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(i=e[a])._workInProgressVersionPrimary=e[a+1],Wi.push(i);for(n=_i(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else jo(e,t,r,n),Ui();t=t.child}return t;case 5:return Ti(t),null===e&&Bi(t),r=t.type,a=t.pendingProps,i=null!==e?e.memoizedProps:null,l=a.children,Br(r,a)?l=null:null!==i&&Br(r,i)&&(t.flags|=16),Do(e,t),jo(e,t,l,n),t.child;case 6:return null===e&&Bi(t),null;case 13:return Go(e,t,n);case 4:return Oi(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=xi(t,null,r,n):jo(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Lo(e,t,r,a=t.elementType===r?a:Ya(r,a),n);case 7:return jo(e,t,t.pendingProps,n),t.child;case 8:case 12:return jo(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,l=t.memoizedProps,i=a.value;var u=t.type._context;if(la(Ga,u._currentValue),u._currentValue=i,null!==l)if(u=l.value,0==(i=or(u,i)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,i):1073741823))){if(l.children===a.children&&!da.current){t=Zo(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var s=u.dependencies;if(null!==s){l=u.child;for(var d=s.firstContext;null!==d;){if(d.context===r&&0!=(d.observedBits&i)){1===u.tag&&((d=oi(-1,n&-n)).tag=2,li(u,d)),u.lanes|=n,null!==(d=u.alternate)&&(d.lanes|=n),ei(u.return,n),s.lanes|=n;break}d=d.next}}else l=10===u.tag&&u.type===t.type?null:u.child;if(null!==l)l.return=u;else for(l=u;null!==l;){if(l===t){l=null;break}if(null!==(u=l.sibling)){u.return=l.return,l=u;break}l=l.return}u=l}jo(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(i=t.pendingProps).children,ti(t,n),r=r(a=ni(a,i.unstable_observedBits)),t.flags|=1,jo(e,t,r,n),t.child;case 14:return i=Ya(a=t.type,t.pendingProps),No(e,t,a,i=Ya(a.type,i),r,n);case 15:return Ro(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:Ya(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,pa(r)?(e=!0,ba(t)):e=!1,ti(t,n),gi(t,r,a),bi(t,r,a,n),Ho(null,t,r,!0,e,n);case 19:return Xo(e,t,n);case 23:case 24:return zo(e,t,n)}throw Error(o(156,t.tag))},Xu.prototype.render=function(e){Gu(e,this._internalRoot,null,null)},Xu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Gu(null,e,null,(function(){t[Kr]=null}))},et=function(e){13===e.tag&&(uu(e,4,ou()),Ju(e,4))},tt=function(e){13===e.tag&&(uu(e,67108864,ou()),Ju(e,67108864))},nt=function(e){if(13===e.tag){var t=ou(),n=lu(e);uu(e,n,t),Ju(e,n)}},rt=function(e,t){return t()},ke=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ta(r);if(!a)throw Error(o(90));J(r),ne(r,a)}}}break;case"textarea":se(e,n);break;case"select":null!=(t=n.value)&&oe(e,!!n.multiple,t,!1)}},Ie=hu,$e=function(e,t,n,r,a){var i=kl;kl|=4;try{return Ha(98,e.bind(null,t,n,r,a))}finally{0===(kl=i)&&(Fl(),Wa())}},je=function(){0==(49&kl)&&(function(){if(null!==Xl){var e=Xl;Xl=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,du(e,Da())}))}Wa()}(),Ou())},Le=function(e,t){var n=kl;kl|=2;try{return e(t)}finally{0===(kl=n)&&(Fl(),Wa())}};var ns={Events:[Zr,ea,ta,Ae,Te,Ou,{current:!1}]},rs={findFiberByHostInstance:Xr,bundleType:0,version:"17.0.2",rendererPackageName:"react-dom"},as={bundleType:rs.bundleType,version:rs.version,rendererPackageName:rs.rendererPackageName,rendererConfig:rs.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:E.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Xe(e))?null:e.stateNode},findFiberByHostInstance:rs.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var is=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!is.isDisabled&&is.supportsFiber)try{va=is.inject(as),wa=is}catch(ge){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ns,t.createPortal=ts,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(o(188));throw Error(o(268,Object.keys(e)))}return null===(e=Xe(t))?null:e.stateNode},t.flushSync=function(e,t){var n=kl;if(0!=(48&n))return e(t);kl|=1;try{if(e)return Ha(99,e.bind(null,t))}finally{kl=n,Wa()}},t.hydrate=function(e,t,n){if(!Zu(t))throw Error(o(200));return es(null,e,t,!0,n)},t.render=function(e,t,n){if(!Zu(t))throw Error(o(200));return es(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Zu(e))throw Error(o(40));return!!e._reactRootContainer&&(gu((function(){es(null,null,e,!1,(function(){e._reactRootContainer=null,e[Kr]=null}))})),!0)},t.unstable_batchedUpdates=hu,t.unstable_createPortal=function(e,t){return ts(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Zu(n))throw Error(o(200));if(null==e||void 0===e._reactInternals)throw Error(o(38));return es(e,t,n,!1,r)},t.version="17.0.2"},3935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(4448)},9921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,a=n?Symbol.for("react.portal"):60106,i=n?Symbol.for("react.fragment"):60107,o=n?Symbol.for("react.strict_mode"):60108,l=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,s=n?Symbol.for("react.context"):60110,d=n?Symbol.for("react.async_mode"):60111,c=n?Symbol.for("react.concurrent_mode"):60111,f=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,h=n?Symbol.for("react.suspense_list"):60120,g=n?Symbol.for("react.memo"):60115,m=n?Symbol.for("react.lazy"):60116,b=n?Symbol.for("react.block"):60121,y=n?Symbol.for("react.fundamental"):60117,v=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function E(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case d:case c:case i:case l:case o:case p:return e;default:switch(e=e&&e.$$typeof){case s:case f:case m:case g:case u:return e;default:return t}}case a:return t}}}function x(e){return E(e)===c}t.AsyncMode=d,t.ConcurrentMode=c,t.ContextConsumer=s,t.ContextProvider=u,t.Element=r,t.ForwardRef=f,t.Fragment=i,t.Lazy=m,t.Memo=g,t.Portal=a,t.Profiler=l,t.StrictMode=o,t.Suspense=p,t.isAsyncMode=function(e){return x(e)||E(e)===d},t.isConcurrentMode=x,t.isContextConsumer=function(e){return E(e)===s},t.isContextProvider=function(e){return E(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return E(e)===f},t.isFragment=function(e){return E(e)===i},t.isLazy=function(e){return E(e)===m},t.isMemo=function(e){return E(e)===g},t.isPortal=function(e){return E(e)===a},t.isProfiler=function(e){return E(e)===l},t.isStrictMode=function(e){return E(e)===o},t.isSuspense=function(e){return E(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===i||e===c||e===l||e===o||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===m||e.$$typeof===g||e.$$typeof===u||e.$$typeof===s||e.$$typeof===f||e.$$typeof===y||e.$$typeof===v||e.$$typeof===w||e.$$typeof===b)},t.typeOf=E},9864:(e,t,n)=>{"use strict";e.exports=n(9921)},2408:(e,t,n)=>{"use strict";var r=n(7418),a=60103,i=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var o=60109,l=60110,u=60112;t.Suspense=60113;var s=60115,d=60116;if("function"==typeof Symbol&&Symbol.for){var c=Symbol.for;a=c("react.element"),i=c("react.portal"),t.Fragment=c("react.fragment"),t.StrictMode=c("react.strict_mode"),t.Profiler=c("react.profiler"),o=c("react.provider"),l=c("react.context"),u=c("react.forward_ref"),t.Suspense=c("react.suspense"),s=c("react.memo"),d=c("react.lazy")}var f="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g={};function m(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||h}function b(){}function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||h}m.prototype.isReactComponent={},m.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},m.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=m.prototype;var v=y.prototype=new b;v.constructor=y,r(v,m.prototype),v.isPureReactComponent=!0;var w={current:null},E=Object.prototype.hasOwnProperty,x={key:!0,ref:!0,__self:!0,__source:!0};function _(e,t,n){var r,i={},o=null,l=null;if(null!=t)for(r in void 0!==t.ref&&(l=t.ref),void 0!==t.key&&(o=""+t.key),t)E.call(t,r)&&!x.hasOwnProperty(r)&&(i[r]=t[r]);var u=arguments.length-2;if(1===u)i.children=n;else if(1<u){for(var s=Array(u),d=0;d<u;d++)s[d]=arguments[d+2];i.children=s}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===i[r]&&(i[r]=u[r]);return{$$typeof:a,type:e,key:o,ref:l,props:i,_owner:w.current}}function S(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var C=/\/+/g;function k(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function P(e,t,n,r,o){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var u=!1;if(null===e)u=!0;else switch(l){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case a:case i:u=!0}}if(u)return o=o(u=e),e=""===r?"."+k(u,0):r,Array.isArray(o)?(n="",null!=e&&(n=e.replace(C,"$&/")+"/"),P(o,t,n,"",(function(e){return e}))):null!=o&&(S(o)&&(o=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(o,n+(!o.key||u&&u.key===o.key?"":(""+o.key).replace(C,"$&/")+"/")+e)),t.push(o)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var s=0;s<e.length;s++){var d=r+k(l=e[s],s);u+=P(l,t,n,d,o)}else if("function"==typeof(d=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=f&&e[f]||e["@@iterator"])?e:null}(e)))for(e=d.call(e),s=0;!(l=e.next()).done;)u+=P(l=l.value,t,n,d=r+k(l,s++),o);else if("object"===l)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function M(e,t,n){if(null==e)return e;var r=[],a=0;return P(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function O(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var A={current:null};function T(){var e=A.current;if(null===e)throw Error(p(321));return e}var I={ReactCurrentDispatcher:A,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:M,forEach:function(e,t,n){M(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return M(e,(function(){t++})),t},toArray:function(e){return M(e,(function(e){return e}))||[]},only:function(e){if(!S(e))throw Error(p(143));return e}},t.Component=m,t.PureComponent=y,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=I,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var i=r({},e.props),o=e.key,l=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(l=t.ref,u=w.current),void 0!==t.key&&(o=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(d in t)E.call(t,d)&&!x.hasOwnProperty(d)&&(i[d]=void 0===t[d]&&void 0!==s?s[d]:t[d])}var d=arguments.length-2;if(1===d)i.children=n;else if(1<d){s=Array(d);for(var c=0;c<d;c++)s[c]=arguments[c+2];i.children=s}return{$$typeof:a,type:e.type,key:o,ref:l,props:i,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:l,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=_,t.createFactory=function(e){var t=_.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=S,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:O}},t.memo=function(e,t){return{$$typeof:s,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return T().useCallback(e,t)},t.useContext=function(e,t){return T().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return T().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return T().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return T().useLayoutEffect(e,t)},t.useMemo=function(e,t){return T().useMemo(e,t)},t.useReducer=function(e,t,n){return T().useReducer(e,t,n)},t.useRef=function(e){return T().useRef(e)},t.useState=function(e){return T().useState(e)},t.version="17.0.2"},7294:(e,t,n)=>{"use strict";e.exports=n(2408)},53:(e,t)=>{"use strict";var n,r,a,i;if("object"==typeof performance&&"function"==typeof performance.now){var o=performance;t.unstable_now=function(){return o.now()}}else{var l=Date,u=l.now();t.unstable_now=function(){return l.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var s=null,d=null,c=function(){if(null!==s)try{var e=t.unstable_now();s(!0,e),s=null}catch(e){throw setTimeout(c,0),e}};n=function(e){null!==s?setTimeout(n,0,e):(s=e,setTimeout(c,0))},r=function(e,t){d=setTimeout(e,t)},a=function(){clearTimeout(d)},t.unstable_shouldYield=function(){return!1},i=t.unstable_forceFrameRate=function(){}}else{var f=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var g=!1,m=null,b=-1,y=5,v=0;t.unstable_shouldYield=function(){return t.unstable_now()>=v},i=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):y=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,E=w.port2;w.port1.onmessage=function(){if(null!==m){var e=t.unstable_now();v=e+y;try{m(!0,e)?E.postMessage(null):(g=!1,m=null)}catch(e){throw E.postMessage(null),e}}else g=!1},n=function(e){m=e,g||(g=!0,E.postMessage(null))},r=function(e,n){b=f((function(){e(t.unstable_now())}),n)},a=function(){p(b),b=-1}}function x(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<C(a,t)))break e;e[r]=t,e[n]=a,n=r}}function _(e){return void 0===(e=e[0])?null:e}function S(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var i=2*(r+1)-1,o=e[i],l=i+1,u=e[l];if(void 0!==o&&0>C(o,n))void 0!==u&&0>C(u,o)?(e[r]=u,e[l]=n,r=l):(e[r]=o,e[i]=n,r=i);else{if(!(void 0!==u&&0>C(u,n)))break e;e[r]=u,e[l]=n,r=l}}}return t}return null}function C(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var k=[],P=[],M=1,O=null,A=3,T=!1,I=!1,$=!1;function j(e){for(var t=_(P);null!==t;){if(null===t.callback)S(P);else{if(!(t.startTime<=e))break;S(P),t.sortIndex=t.expirationTime,x(k,t)}t=_(P)}}function L(e){if($=!1,j(e),!I)if(null!==_(k))I=!0,n(N);else{var t=_(P);null!==t&&r(L,t.startTime-e)}}function N(e,n){I=!1,$&&($=!1,a()),T=!0;var i=A;try{for(j(n),O=_(k);null!==O&&(!(O.expirationTime>n)||e&&!t.unstable_shouldYield());){var o=O.callback;if("function"==typeof o){O.callback=null,A=O.priorityLevel;var l=o(O.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?O.callback=l:O===_(k)&&S(k),j(n)}else S(k);O=_(k)}if(null!==O)var u=!0;else{var s=_(P);null!==s&&r(L,s.startTime-n),u=!1}return u}finally{O=null,A=i,T=!1}}var R=i;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){I||T||(I=!0,n(N))},t.unstable_getCurrentPriorityLevel=function(){return A},t.unstable_getFirstCallbackNode=function(){return _(k)},t.unstable_next=function(e){switch(A){case 1:case 2:case 3:var t=3;break;default:t=A}var n=A;A=t;try{return e()}finally{A=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=R,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=A;A=e;try{return t()}finally{A=n}},t.unstable_scheduleCallback=function(e,i,o){var l=t.unstable_now();switch(o="object"==typeof o&&null!==o&&"number"==typeof(o=o.delay)&&0<o?l+o:l,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:M++,callback:i,priorityLevel:e,startTime:o,expirationTime:u=o+u,sortIndex:-1},o>l?(e.sortIndex=o,x(P,e),null===_(k)&&e===_(P)&&($?a():$=!0,r(L,o-l))):(e.sortIndex=u,x(k,e),I||T||(I=!0,n(N))),e},t.unstable_wrapCallback=function(e){var t=A;return function(){var n=A;A=t;try{return e.apply(this,arguments)}finally{A=n}}}},3840:(e,t,n)=>{"use strict";e.exports=n(53)},6774:e=>{e.exports=function(e,t,n,r){var a=n?n.call(r,e,t):void 0;if(void 0!==a)return!!a;if(e===t)return!0;if("object"!=typeof e||!e||"object"!=typeof t||!t)return!1;var i=Object.keys(e),o=Object.keys(t);if(i.length!==o.length)return!1;for(var l=Object.prototype.hasOwnProperty.bind(t),u=0;u<i.length;u++){var s=i[u];if(!l(s))return!1;var d=e[s],c=t[s];if(!1===(a=n?n.call(r,d,c,s):void 0)||void 0===a&&d!==c)return!1}return!0}},9232:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>b});var r=n(3379),a=n.n(r),i=n(7795),o=n.n(i),l=n(569),u=n.n(l),s=n(3565),d=n.n(s),c=n(9216),f=n.n(c),p=n(4589),h=n.n(p),g=n(5735),m={};m.styleTagTransform=h(),m.setAttributes=d(),m.insert=u().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=f(),a()(g.Z,m);const b=g.Z&&g.Z.locals?g.Z.locals:void 0},3379:e=>{"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},o=[],l=0;l<e.length;l++){var u=e[l],s=r.base?u[0]+r.base:u[0],d=i[s]||0,c="".concat(s," ").concat(d);i[s]=d+1;var f=n(c),p={css:u[1],media:u[2],sourceMap:u[3]};-1!==f?(t[f].references++,t[f].updater(p)):t.push({identifier:c,updater:a(p,r),references:1}),o.push(c)}return o}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var i=r(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<i.length;o++){var l=n(i[o]);t[l].references--}for(var u=r(e,a),s=0;s<i.length;s++){var d=n(i[s]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}i=u}}},569:e=>{"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},9216:e=>{"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t),t}},3565:(e,t,n)=>{"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},7795:e=>{"use strict";e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r=n.css,a=n.media,i=n.sourceMap;a?e.setAttribute("media",a):e.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},4589:e=>{"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},9163:(e,t,n)=>{"use strict";n.r(t),n.d(t,{ServerStyleSheet:()=>Fe,StyleSheetConsumer:()=>ie,StyleSheetContext:()=>ae,StyleSheetManager:()=>ce,ThemeConsumer:()=>$e,ThemeContext:()=>Ie,ThemeProvider:()=>je,__PRIVATE__:()=>We,createGlobalStyle:()=>De,css:()=>Ee,default:()=>Ve,isStyledComponent:()=>E,keyframes:()=>Be,useTheme:()=>Ue,version:()=>_,withTheme:()=>He});var r=n(9864),a=n(7294),i=n(6774),o=n.n(i);const l=function(e){function t(e,r,u,s,f){for(var p,h,g,m,w,x=0,_=0,S=0,C=0,k=0,I=0,j=g=p=0,N=0,R=0,z=0,D=0,B=u.length,F=B-1,H="",U="",W="",V="";N<B;){if(h=u.charCodeAt(N),N===F&&0!==_+C+S+x&&(0!==_&&(h=47===_?10:47),C=S=x=0,B++,F++),0===_+C+S+x){if(N===F&&(0<R&&(H=H.replace(c,"")),0<H.trim().length)){switch(h){case 32:case 9:case 59:case 13:case 10:break;default:H+=u.charAt(N)}h=59}switch(h){case 123:for(p=(H=H.trim()).charCodeAt(0),g=1,D=++N;N<B;){switch(h=u.charCodeAt(N)){case 123:g++;break;case 125:g--;break;case 47:switch(h=u.charCodeAt(N+1)){case 42:case 47:e:{for(j=N+1;j<F;++j)switch(u.charCodeAt(j)){case 47:if(42===h&&42===u.charCodeAt(j-1)&&N+2!==j){N=j+1;break e}break;case 10:if(47===h){N=j+1;break e}}N=j}}break;case 91:h++;case 40:h++;case 34:case 39:for(;N++<F&&u.charCodeAt(N)!==h;);}if(0===g)break;N++}switch(g=u.substring(D,N),0===p&&(p=(H=H.replace(d,"").trim()).charCodeAt(0)),p){case 64:switch(0<R&&(H=H.replace(c,"")),h=H.charCodeAt(1)){case 100:case 109:case 115:case 45:R=r;break;default:R=T}if(D=(g=t(r,R,g,h,f+1)).length,0<$&&(w=l(3,g,R=n(T,H,z),r,M,P,D,h,f,s),H=R.join(""),void 0!==w&&0===(D=(g=w.trim()).length)&&(h=0,g="")),0<D)switch(h){case 115:H=H.replace(E,o);case 100:case 109:case 45:g=H+"{"+g+"}";break;case 107:g=(H=H.replace(b,"$1 $2"))+"{"+g+"}",g=1===A||2===A&&i("@"+g,3)?"@-webkit-"+g+"@"+g:"@"+g;break;default:g=H+g,112===s&&(U+=g,g="")}else g="";break;default:g=t(r,n(r,H,z),g,s,f+1)}W+=g,g=z=R=j=p=0,H="",h=u.charCodeAt(++N);break;case 125:case 59:if(1<(D=(H=(0<R?H.replace(c,""):H).trim()).length))switch(0===j&&(p=H.charCodeAt(0),45===p||96<p&&123>p)&&(D=(H=H.replace(" ",":")).length),0<$&&void 0!==(w=l(1,H,r,e,M,P,U.length,s,f,s))&&0===(D=(H=w.trim()).length)&&(H="\0\0"),p=H.charCodeAt(0),h=H.charCodeAt(1),p){case 0:break;case 64:if(105===h||99===h){V+=H+u.charAt(N);break}default:58!==H.charCodeAt(D-1)&&(U+=a(H,p,h,H.charCodeAt(2)))}z=R=j=p=0,H="",h=u.charCodeAt(++N)}}switch(h){case 13:case 10:47===_?_=0:0===1+p&&107!==s&&0<H.length&&(R=1,H+="\0"),0<$*L&&l(0,H,r,e,M,P,U.length,s,f,s),P=1,M++;break;case 59:case 125:if(0===_+C+S+x){P++;break}default:switch(P++,m=u.charAt(N),h){case 9:case 32:if(0===C+x+_)switch(k){case 44:case 58:case 9:case 32:m="";break;default:32!==h&&(m=" ")}break;case 0:m="\\0";break;case 12:m="\\f";break;case 11:m="\\v";break;case 38:0===C+_+x&&(R=z=1,m="\f"+m);break;case 108:if(0===C+_+x+O&&0<j)switch(N-j){case 2:112===k&&58===u.charCodeAt(N-3)&&(O=k);case 8:111===I&&(O=I)}break;case 58:0===C+_+x&&(j=N);break;case 44:0===_+S+C+x&&(R=1,m+="\r");break;case 34:case 39:0===_&&(C=C===h?0:0===C?h:C);break;case 91:0===C+_+S&&x++;break;case 93:0===C+_+S&&x--;break;case 41:0===C+_+x&&S--;break;case 40:if(0===C+_+x){if(0===p)switch(2*k+3*I){case 533:break;default:p=1}S++}break;case 64:0===_+S+C+x+j+g&&(g=1);break;case 42:case 47:if(!(0<C+x+S))switch(_){case 0:switch(2*h+3*u.charCodeAt(N+1)){case 235:_=47;break;case 220:D=N,_=42}break;case 42:47===h&&42===k&&D+2!==N&&(33===u.charCodeAt(D+2)&&(U+=u.substring(D,N+1)),m="",_=0)}}0===_&&(H+=m)}I=k,k=h,N++}if(0<(D=U.length)){if(R=r,0<$&&void 0!==(w=l(2,U,R,e,M,P,D,s,f,s))&&0===(U=w).length)return V+U+W;if(U=R.join(",")+"{"+U+"}",0!=A*O){switch(2!==A||i(U,2)||(O=0),O){case 111:U=U.replace(v,":-moz-$1")+U;break;case 112:U=U.replace(y,"::-webkit-input-$1")+U.replace(y,"::-moz-$1")+U.replace(y,":-ms-input-$1")+U}O=0}}return V+U+W}function n(e,t,n){var a=t.trim().split(g);t=a;var i=a.length,o=e.length;switch(o){case 0:case 1:var l=0;for(e=0===o?"":e[0]+" ";l<i;++l)t[l]=r(e,t[l],n).trim();break;default:var u=l=0;for(t=[];l<i;++l)for(var s=0;s<o;++s)t[u++]=r(e[s]+" ",a[l],n).trim()}return t}function r(e,t,n){var r=t.charCodeAt(0);switch(33>r&&(r=(t=t.trim()).charCodeAt(0)),r){case 38:return t.replace(m,"$1"+e.trim());case 58:return e.trim()+t.replace(m,"$1"+e.trim());default:if(0<1*n&&0<t.indexOf("\f"))return t.replace(m,(58===e.charCodeAt(0)?"":"$1")+e.trim())}return e+t}function a(e,t,n,r){var o=e+";",l=2*t+3*n+4*r;if(944===l){e=o.indexOf(":",9)+1;var u=o.substring(e,o.length-1).trim();return u=o.substring(0,e).trim()+u+";",1===A||2===A&&i(u,1)?"-webkit-"+u+u:u}if(0===A||2===A&&!i(o,1))return o;switch(l){case 1015:return 97===o.charCodeAt(10)?"-webkit-"+o+o:o;case 951:return 116===o.charCodeAt(3)?"-webkit-"+o+o:o;case 963:return 110===o.charCodeAt(5)?"-webkit-"+o+o:o;case 1009:if(100!==o.charCodeAt(4))break;case 969:case 942:return"-webkit-"+o+o;case 978:return"-webkit-"+o+"-moz-"+o+o;case 1019:case 983:return"-webkit-"+o+"-moz-"+o+"-ms-"+o+o;case 883:if(45===o.charCodeAt(8))return"-webkit-"+o+o;if(0<o.indexOf("image-set(",11))return o.replace(k,"$1-webkit-$2")+o;break;case 932:if(45===o.charCodeAt(4))switch(o.charCodeAt(5)){case 103:return"-webkit-box-"+o.replace("-grow","")+"-webkit-"+o+"-ms-"+o.replace("grow","positive")+o;case 115:return"-webkit-"+o+"-ms-"+o.replace("shrink","negative")+o;case 98:return"-webkit-"+o+"-ms-"+o.replace("basis","preferred-size")+o}return"-webkit-"+o+"-ms-"+o+o;case 964:return"-webkit-"+o+"-ms-flex-"+o+o;case 1023:if(99!==o.charCodeAt(8))break;return"-webkit-box-pack"+(u=o.substring(o.indexOf(":",15)).replace("flex-","").replace("space-between","justify"))+"-webkit-"+o+"-ms-flex-pack"+u+o;case 1005:return p.test(o)?o.replace(f,":-webkit-")+o.replace(f,":-moz-")+o:o;case 1e3:switch(t=(u=o.substring(13).trim()).indexOf("-")+1,u.charCodeAt(0)+u.charCodeAt(t)){case 226:u=o.replace(w,"tb");break;case 232:u=o.replace(w,"tb-rl");break;case 220:u=o.replace(w,"lr");break;default:return o}return"-webkit-"+o+"-ms-"+u+o;case 1017:if(-1===o.indexOf("sticky",9))break;case 975:switch(t=(o=e).length-10,l=(u=(33===o.charCodeAt(t)?o.substring(0,t):o).substring(e.indexOf(":",7)+1).trim()).charCodeAt(0)+(0|u.charCodeAt(7))){case 203:if(111>u.charCodeAt(8))break;case 115:o=o.replace(u,"-webkit-"+u)+";"+o;break;case 207:case 102:o=o.replace(u,"-webkit-"+(102<l?"inline-":"")+"box")+";"+o.replace(u,"-webkit-"+u)+";"+o.replace(u,"-ms-"+u+"box")+";"+o}return o+";";case 938:if(45===o.charCodeAt(5))switch(o.charCodeAt(6)){case 105:return u=o.replace("-items",""),"-webkit-"+o+"-webkit-box-"+u+"-ms-flex-"+u+o;case 115:return"-webkit-"+o+"-ms-flex-item-"+o.replace(_,"")+o;default:return"-webkit-"+o+"-ms-flex-line-pack"+o.replace("align-content","").replace(_,"")+o}break;case 973:case 989:if(45!==o.charCodeAt(3)||122===o.charCodeAt(4))break;case 931:case 953:if(!0===C.test(e))return 115===(u=e.substring(e.indexOf(":")+1)).charCodeAt(0)?a(e.replace("stretch","fill-available"),t,n,r).replace(":fill-available",":stretch"):o.replace(u,"-webkit-"+u)+o.replace(u,"-moz-"+u.replace("fill-",""))+o;break;case 962:if(o="-webkit-"+o+(102===o.charCodeAt(5)?"-ms-"+o:"")+o,211===n+r&&105===o.charCodeAt(13)&&0<o.indexOf("transform",10))return o.substring(0,o.indexOf(";",27)+1).replace(h,"$1-webkit-$2")+o}return o}function i(e,t){var n=e.indexOf(1===t?":":"{"),r=e.substring(0,3!==t?n:10);return n=e.substring(n+1,e.length-1),j(2!==t?r:r.replace(S,"$1"),n,t)}function o(e,t){var n=a(t,t.charCodeAt(0),t.charCodeAt(1),t.charCodeAt(2));return n!==t+";"?n.replace(x," or ($1)").substring(4):"("+t+")"}function l(e,t,n,r,a,i,o,l,u,d){for(var c,f=0,p=t;f<$;++f)switch(c=I[f].call(s,e,p,n,r,a,i,o,l,u,d)){case void 0:case!1:case!0:case null:break;default:p=c}if(p!==t)return p}function u(e){return void 0!==(e=e.prefix)&&(j=null,e?"function"!=typeof e?A=1:(A=2,j=e):A=0),u}function s(e,n){var r=e;if(33>r.charCodeAt(0)&&(r=r.trim()),r=[r],0<$){var a=l(-1,n,r,r,M,P,0,0,0,0);void 0!==a&&"string"==typeof a&&(n=a)}var i=t(T,r,n,0,0);return 0<$&&void 0!==(a=l(-2,i,r,r,M,P,i.length,0,0,0))&&(i=a),O=0,P=M=1,i}var d=/^\0+/g,c=/[\0\r\f]/g,f=/: */g,p=/zoo|gra/,h=/([,: ])(transform)/g,g=/,\r+?/g,m=/([\t\r\n ])*\f?&/g,b=/@(k\w+)\s*(\S*)\s*/,y=/::(place)/g,v=/:(read-only)/g,w=/[svh]\w+-[tblr]{2}/,E=/\(\s*(.*)\s*\)/g,x=/([\s\S]*?);/g,_=/-self|flex-/g,S=/[^]*?(:[rp][el]a[\w-]+)[^]*/,C=/stretch|:\s*\w+\-(?:conte|avail)/,k=/([^-])(image-set\()/,P=1,M=1,O=0,A=1,T=[],I=[],$=0,j=null,L=0;return s.use=function e(t){switch(t){case void 0:case null:$=I.length=0;break;default:if("function"==typeof t)I[$++]=t;else if("object"==typeof t)for(var n=0,r=t.length;n<r;++n)e(t[n]);else L=0|!!t}return e},s.set=u,void 0!==e&&u(e),s},u={animationIterationCount:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1};var s=/^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/;const d=(c={},function(e){return void 0===c[e]&&(c[e]=(t=e,s.test(t)||111===t.charCodeAt(0)&&110===t.charCodeAt(1)&&t.charCodeAt(2)<91)),c[e];var t});var c,f=n(8679),p=n.n(f);function h(){return(h=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var g=function(e,t){for(var n=[e[0]],r=0,a=t.length;r<a;r+=1)n.push(t[r],e[r+1]);return n},m=function(e){return null!==e&&"object"==typeof e&&"[object Object]"===(e.toString?e.toString():Object.prototype.toString.call(e))&&!(0,r.typeOf)(e)},b=Object.freeze([]),y=Object.freeze({});function v(e){return"function"==typeof e}function w(e){return e.displayName||e.name||"Component"}function E(e){return e&&"string"==typeof e.styledComponentId}var x="undefined"!=typeof process&&(process.env.REACT_APP_SC_ATTR||process.env.SC_ATTR)||"data-styled",_="5.3.1",S="undefined"!=typeof window&&"HTMLElement"in window,C=Boolean("boolean"==typeof SC_DISABLE_SPEEDY?SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&""!==process.env.REACT_APP_SC_DISABLE_SPEEDY?"false"!==process.env.REACT_APP_SC_DISABLE_SPEEDY&&process.env.REACT_APP_SC_DISABLE_SPEEDY:"undefined"!=typeof process&&void 0!==process.env.SC_DISABLE_SPEEDY&&""!==process.env.SC_DISABLE_SPEEDY&&"false"!==process.env.SC_DISABLE_SPEEDY&&process.env.SC_DISABLE_SPEEDY),k={};function P(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];throw new Error("An error occurred. See https://git.io/JUIaE#"+e+" for more information."+(n.length>0?" Args: "+n.join(", "):""))}var M=function(){function e(e){this.groupSizes=new Uint32Array(512),this.length=512,this.tag=e}var t=e.prototype;return t.indexOfGroup=function(e){for(var t=0,n=0;n<e;n++)t+=this.groupSizes[n];return t},t.insertRules=function(e,t){if(e>=this.groupSizes.length){for(var n=this.groupSizes,r=n.length,a=r;e>=a;)(a<<=1)<0&&P(16,""+e);this.groupSizes=new Uint32Array(a),this.groupSizes.set(n),this.length=a;for(var i=r;i<a;i++)this.groupSizes[i]=0}for(var o=this.indexOfGroup(e+1),l=0,u=t.length;l<u;l++)this.tag.insertRule(o,t[l])&&(this.groupSizes[e]++,o++)},t.clearGroup=function(e){if(e<this.length){var t=this.groupSizes[e],n=this.indexOfGroup(e),r=n+t;this.groupSizes[e]=0;for(var a=n;a<r;a++)this.tag.deleteRule(n)}},t.getGroup=function(e){var t="";if(e>=this.length||0===this.groupSizes[e])return t;for(var n=this.groupSizes[e],r=this.indexOfGroup(e),a=r+n,i=r;i<a;i++)t+=this.tag.getRule(i)+"/*!sc*/\n";return t},e}(),O=new Map,A=new Map,T=1,I=function(e){if(O.has(e))return O.get(e);for(;A.has(T);)T++;var t=T++;return O.set(e,t),A.set(t,e),t},$=function(e){return A.get(e)},j=function(e,t){t>=T&&(T=t+1),O.set(e,t),A.set(t,e)},L="style["+x+'][data-styled-version="5.3.1"]',N=new RegExp("^"+x+'\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),R=function(e,t,n){for(var r,a=n.split(","),i=0,o=a.length;i<o;i++)(r=a[i])&&e.registerName(t,r)},z=function(e,t){for(var n=(t.innerHTML||"").split("/*!sc*/\n"),r=[],a=0,i=n.length;a<i;a++){var o=n[a].trim();if(o){var l=o.match(N);if(l){var u=0|parseInt(l[1],10),s=l[2];0!==u&&(j(s,u),R(e,s,l[3]),e.getTag().insertRules(u,r)),r.length=0}else r.push(o)}}},D=function(){return"undefined"!=typeof window&&void 0!==window.__webpack_nonce__?window.__webpack_nonce__:null},B=function(e){var t=document.head,n=e||t,r=document.createElement("style"),a=function(e){for(var t=e.childNodes,n=t.length;n>=0;n--){var r=t[n];if(r&&1===r.nodeType&&r.hasAttribute(x))return r}}(n),i=void 0!==a?a.nextSibling:null;r.setAttribute(x,"active"),r.setAttribute("data-styled-version","5.3.1");var o=D();return o&&r.setAttribute("nonce",o),n.insertBefore(r,i),r},F=function(){function e(e){var t=this.element=B(e);t.appendChild(document.createTextNode("")),this.sheet=function(e){if(e.sheet)return e.sheet;for(var t=document.styleSheets,n=0,r=t.length;n<r;n++){var a=t[n];if(a.ownerNode===e)return a}P(17)}(t),this.length=0}var t=e.prototype;return t.insertRule=function(e,t){try{return this.sheet.insertRule(t,e),this.length++,!0}catch(e){return!1}},t.deleteRule=function(e){this.sheet.deleteRule(e),this.length--},t.getRule=function(e){var t=this.sheet.cssRules[e];return void 0!==t&&"string"==typeof t.cssText?t.cssText:""},e}(),H=function(){function e(e){var t=this.element=B(e);this.nodes=t.childNodes,this.length=0}var t=e.prototype;return t.insertRule=function(e,t){if(e<=this.length&&e>=0){var n=document.createTextNode(t),r=this.nodes[e];return this.element.insertBefore(n,r||null),this.length++,!0}return!1},t.deleteRule=function(e){this.element.removeChild(this.nodes[e]),this.length--},t.getRule=function(e){return e<this.length?this.nodes[e].textContent:""},e}(),U=function(){function e(e){this.rules=[],this.length=0}var t=e.prototype;return t.insertRule=function(e,t){return e<=this.length&&(this.rules.splice(e,0,t),this.length++,!0)},t.deleteRule=function(e){this.rules.splice(e,1),this.length--},t.getRule=function(e){return e<this.length?this.rules[e]:""},e}(),W=S,V={isServer:!S,useCSSOMInjection:!C},q=function(){function e(e,t,n){void 0===e&&(e=y),void 0===t&&(t={}),this.options=h({},V,{},e),this.gs=t,this.names=new Map(n),this.server=!!e.isServer,!this.server&&S&&W&&(W=!1,function(e){for(var t=document.querySelectorAll(L),n=0,r=t.length;n<r;n++){var a=t[n];a&&"active"!==a.getAttribute(x)&&(z(e,a),a.parentNode&&a.parentNode.removeChild(a))}}(this))}e.registerId=function(e){return I(e)};var t=e.prototype;return t.reconstructWithOptions=function(t,n){return void 0===n&&(n=!0),new e(h({},this.options,{},t),this.gs,n&&this.names||void 0)},t.allocateGSInstance=function(e){return this.gs[e]=(this.gs[e]||0)+1},t.getTag=function(){return this.tag||(this.tag=(n=(t=this.options).isServer,r=t.useCSSOMInjection,a=t.target,e=n?new U(a):r?new F(a):new H(a),new M(e)));var e,t,n,r,a},t.hasNameForId=function(e,t){return this.names.has(e)&&this.names.get(e).has(t)},t.registerName=function(e,t){if(I(e),this.names.has(e))this.names.get(e).add(t);else{var n=new Set;n.add(t),this.names.set(e,n)}},t.insertRules=function(e,t,n){this.registerName(e,t),this.getTag().insertRules(I(e),n)},t.clearNames=function(e){this.names.has(e)&&this.names.get(e).clear()},t.clearRules=function(e){this.getTag().clearGroup(I(e)),this.clearNames(e)},t.clearTag=function(){this.tag=void 0},t.toString=function(){return function(e){for(var t=e.getTag(),n=t.length,r="",a=0;a<n;a++){var i=$(a);if(void 0!==i){var o=e.names.get(i),l=t.getGroup(a);if(o&&l&&o.size){var u=x+".g"+a+'[id="'+i+'"]',s="";void 0!==o&&o.forEach((function(e){e.length>0&&(s+=e+",")})),r+=""+l+u+'{content:"'+s+'"}/*!sc*/\n'}}}return r}(this)},e}(),Y=/(a)(d)/gi,G=function(e){return String.fromCharCode(e+(e>25?39:97))};function Q(e){var t,n="";for(t=Math.abs(e);t>52;t=t/52|0)n=G(t%52)+n;return(G(t%52)+n).replace(Y,"$1-$2")}var K=function(e,t){for(var n=t.length;n;)e=33*e^t.charCodeAt(--n);return e},J=function(e){return K(5381,e)};function X(e){for(var t=0;t<e.length;t+=1){var n=e[t];if(v(n)&&!E(n))return!1}return!0}var Z=J("5.3.1"),ee=function(){function e(e,t,n){this.rules=e,this.staticRulesId="",this.isStatic=(void 0===n||n.isStatic)&&X(e),this.componentId=t,this.baseHash=K(Z,t),this.baseStyle=n,q.registerId(t)}return e.prototype.generateAndInjectStyles=function(e,t,n){var r=this.componentId,a=[];if(this.baseStyle&&a.push(this.baseStyle.generateAndInjectStyles(e,t,n)),this.isStatic&&!n.hash)if(this.staticRulesId&&t.hasNameForId(r,this.staticRulesId))a.push(this.staticRulesId);else{var i=ve(this.rules,e,t,n).join(""),o=Q(K(this.baseHash,i)>>>0);if(!t.hasNameForId(r,o)){var l=n(i,"."+o,void 0,r);t.insertRules(r,o,l)}a.push(o),this.staticRulesId=o}else{for(var u=this.rules.length,s=K(this.baseHash,n.hash),d="",c=0;c<u;c++){var f=this.rules[c];if("string"==typeof f)d+=f;else if(f){var p=ve(f,e,t,n),h=Array.isArray(p)?p.join(""):p;s=K(s,h+c),d+=h}}if(d){var g=Q(s>>>0);if(!t.hasNameForId(r,g)){var m=n(d,"."+g,void 0,r);t.insertRules(r,g,m)}a.push(g)}}return a.join(" ")},e}(),te=/^\s*\/\/.*$/gm,ne=[":","[",".","#"];function re(e){var t,n,r,a,i=void 0===e?y:e,o=i.options,u=void 0===o?y:o,s=i.plugins,d=void 0===s?b:s,c=new l(u),f=[],p=function(e){function t(t){if(t)try{e(t+"}")}catch(e){}}return function(n,r,a,i,o,l,u,s,d,c){switch(n){case 1:if(0===d&&64===r.charCodeAt(0))return e(r+";"),"";break;case 2:if(0===s)return r+"/*|*/";break;case 3:switch(s){case 102:case 112:return e(a[0]+r),"";default:return r+(0===c?"/*|*/":"")}case-2:r.split("/*|*/}").forEach(t)}}}((function(e){f.push(e)})),h=function(e,r,i){return 0===r&&-1!==ne.indexOf(i[n.length])||i.match(a)?e:"."+t};function g(e,i,o,l){void 0===l&&(l="&");var u=e.replace(te,""),s=i&&o?o+" "+i+" { "+u+" }":u;return t=l,n=i,r=new RegExp("\\"+n+"\\b","g"),a=new RegExp("(\\"+n+"\\b){2,}"),c(o||!i?"":i,s)}return c.use([].concat(d,[function(e,t,a){2===e&&a.length&&a[0].lastIndexOf(n)>0&&(a[0]=a[0].replace(r,h))},p,function(e){if(-2===e){var t=f;return f=[],t}}])),g.hash=d.length?d.reduce((function(e,t){return t.name||P(15),K(e,t.name)}),5381).toString():"",g}var ae=a.createContext(),ie=ae.Consumer,oe=a.createContext(),le=(oe.Consumer,new q),ue=re();function se(){return(0,a.useContext)(ae)||le}function de(){return(0,a.useContext)(oe)||ue}function ce(e){var t=(0,a.useState)(e.stylisPlugins),n=t[0],r=t[1],i=se(),l=(0,a.useMemo)((function(){var t=i;return e.sheet?t=e.sheet:e.target&&(t=t.reconstructWithOptions({target:e.target},!1)),e.disableCSSOMInjection&&(t=t.reconstructWithOptions({useCSSOMInjection:!1})),t}),[e.disableCSSOMInjection,e.sheet,e.target]),u=(0,a.useMemo)((function(){return re({options:{prefix:!e.disableVendorPrefixes},plugins:n})}),[e.disableVendorPrefixes,n]);return(0,a.useEffect)((function(){o()(n,e.stylisPlugins)||r(e.stylisPlugins)}),[e.stylisPlugins]),a.createElement(ae.Provider,{value:l},a.createElement(oe.Provider,{value:u},e.children))}var fe=function(){function e(e,t){var n=this;this.inject=function(e,t){void 0===t&&(t=ue);var r=n.name+t.hash;e.hasNameForId(n.id,r)||e.insertRules(n.id,r,t(n.rules,r,"@keyframes"))},this.toString=function(){return P(12,String(n.name))},this.name=e,this.id="sc-keyframes-"+e,this.rules=t}return e.prototype.getName=function(e){return void 0===e&&(e=ue),this.name+e.hash},e}(),pe=/([A-Z])/,he=/([A-Z])/g,ge=/^ms-/,me=function(e){return"-"+e.toLowerCase()};function be(e){return pe.test(e)?e.replace(he,me).replace(ge,"-ms-"):e}var ye=function(e){return null==e||!1===e||""===e};function ve(e,t,n,r){if(Array.isArray(e)){for(var a,i=[],o=0,l=e.length;o<l;o+=1)""!==(a=ve(e[o],t,n,r))&&(Array.isArray(a)?i.push.apply(i,a):i.push(a));return i}return ye(e)?"":E(e)?"."+e.styledComponentId:v(e)?"function"!=typeof(s=e)||s.prototype&&s.prototype.isReactComponent||!t?e:ve(e(t),t,n,r):e instanceof fe?n?(e.inject(n,r),e.getName(r)):e:m(e)?function e(t,n){var r,a,i=[];for(var o in t)t.hasOwnProperty(o)&&!ye(t[o])&&(Array.isArray(t[o])&&t[o].isCss||v(t[o])?i.push(be(o)+":",t[o],";"):m(t[o])?i.push.apply(i,e(t[o],o)):i.push(be(o)+": "+(r=o,(null==(a=t[o])||"boolean"==typeof a||""===a?"":"number"!=typeof a||0===a||r in u?String(a).trim():a+"px")+";")));return n?[n+" {"].concat(i,["}"]):i}(e):e.toString();var s}var we=function(e){return Array.isArray(e)&&(e.isCss=!0),e};function Ee(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];return v(e)||m(e)?we(ve(g(b,[e].concat(n)))):0===n.length&&1===e.length&&"string"==typeof e[0]?e:we(ve(g(e,n)))}new Set;var xe=function(e,t,n){return void 0===n&&(n=y),e.theme!==n.theme&&e.theme||t||n.theme},_e=/[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,Se=/(^-|-$)/g;function Ce(e){return e.replace(_e,"-").replace(Se,"")}var ke=function(e){return Q(J(e)>>>0)};function Pe(e){return"string"==typeof e&&!0}var Me=function(e){return"function"==typeof e||"object"==typeof e&&null!==e&&!Array.isArray(e)},Oe=function(e){return"__proto__"!==e&&"constructor"!==e&&"prototype"!==e};function Ae(e,t,n){var r=e[n];Me(t)&&Me(r)?Te(r,t):e[n]=t}function Te(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];for(var a=0,i=n;a<i.length;a++){var o=i[a];if(Me(o))for(var l in o)Oe(l)&&Ae(e,o[l],l)}return e}var Ie=a.createContext(),$e=Ie.Consumer;function je(e){var t=(0,a.useContext)(Ie),n=(0,a.useMemo)((function(){return function(e,t){return e?v(e)?e(t):Array.isArray(e)||"object"!=typeof e?P(8):t?h({},t,{},e):e:P(14)}(e.theme,t)}),[e.theme,t]);return e.children?a.createElement(Ie.Provider,{value:n},e.children):null}var Le={};function Ne(e,t,n){var r=E(e),i=!Pe(e),o=t.attrs,l=void 0===o?b:o,u=t.componentId,s=void 0===u?function(e,t){var n="string"!=typeof e?"sc":Ce(e);Le[n]=(Le[n]||0)+1;var r=n+"-"+ke("5.3.1"+n+Le[n]);return t?t+"-"+r:r}(t.displayName,t.parentComponentId):u,c=t.displayName,f=void 0===c?function(e){return Pe(e)?"styled."+e:"Styled("+w(e)+")"}(e):c,g=t.displayName&&t.componentId?Ce(t.displayName)+"-"+t.componentId:t.componentId||s,m=r&&e.attrs?Array.prototype.concat(e.attrs,l).filter(Boolean):l,x=t.shouldForwardProp;r&&e.shouldForwardProp&&(x=t.shouldForwardProp?function(n,r,a){return e.shouldForwardProp(n,r,a)&&t.shouldForwardProp(n,r,a)}:e.shouldForwardProp);var _,S=new ee(n,g,r?e.componentStyle:void 0),C=S.isStatic&&0===l.length,k=function(e,t){return function(e,t,n,r){var i=e.attrs,o=e.componentStyle,l=e.defaultProps,u=e.foldedComponentIds,s=e.shouldForwardProp,c=e.styledComponentId,f=e.target,p=function(e,t,n){void 0===e&&(e=y);var r=h({},t,{theme:e}),a={};return n.forEach((function(e){var t,n,i,o=e;for(t in v(o)&&(o=o(r)),o)r[t]=a[t]="className"===t?(n=a[t],i=o[t],n&&i?n+" "+i:n||i):o[t]})),[r,a]}(xe(t,(0,a.useContext)(Ie),l)||y,t,i),g=p[0],m=p[1],b=function(e,t,n,r){var a=se(),i=de();return t?e.generateAndInjectStyles(y,a,i):e.generateAndInjectStyles(n,a,i)}(o,r,g),w=n,E=m.$as||t.$as||m.as||t.as||f,x=Pe(E),_=m!==t?h({},t,{},m):t,S={};for(var C in _)"$"!==C[0]&&"as"!==C&&("forwardedAs"===C?S.as=_[C]:(s?s(C,d,E):!x||d(C))&&(S[C]=_[C]));return t.style&&m.style!==t.style&&(S.style=h({},t.style,{},m.style)),S.className=Array.prototype.concat(u,c,b!==c?b:null,t.className,m.className).filter(Boolean).join(" "),S.ref=w,(0,a.createElement)(E,S)}(_,e,t,C)};return k.displayName=f,(_=a.forwardRef(k)).attrs=m,_.componentStyle=S,_.displayName=f,_.shouldForwardProp=x,_.foldedComponentIds=r?Array.prototype.concat(e.foldedComponentIds,e.styledComponentId):b,_.styledComponentId=g,_.target=r?e.target:e,_.withComponent=function(e){var r=t.componentId,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(t,["componentId"]),i=r&&r+"-"+(Pe(e)?e:Ce(w(e)));return Ne(e,h({},a,{attrs:m,componentId:i}),n)},Object.defineProperty(_,"defaultProps",{get:function(){return this._foldedDefaultProps},set:function(t){this._foldedDefaultProps=r?Te({},e.defaultProps,t):t}}),_.toString=function(){return"."+_.styledComponentId},i&&p()(_,e,{attrs:!0,componentStyle:!0,displayName:!0,foldedComponentIds:!0,shouldForwardProp:!0,styledComponentId:!0,target:!0,withComponent:!0}),_}var Re=function(e){return function e(t,n,a){if(void 0===a&&(a=y),!(0,r.isValidElementType)(n))return P(1,String(n));var i=function(){return t(n,a,Ee.apply(void 0,arguments))};return i.withConfig=function(r){return e(t,n,h({},a,{},r))},i.attrs=function(r){return e(t,n,h({},a,{attrs:Array.prototype.concat(a.attrs,r).filter(Boolean)}))},i}(Ne,e)};["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","big","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","data","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","marquee","menu","menuitem","meta","meter","nav","noscript","object","ol","optgroup","option","output","p","param","picture","pre","progress","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr","circle","clipPath","defs","ellipse","foreignObject","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","text","textPath","tspan"].forEach((function(e){Re[e]=Re(e)}));var ze=function(){function e(e,t){this.rules=e,this.componentId=t,this.isStatic=X(e),q.registerId(this.componentId+1)}var t=e.prototype;return t.createStyles=function(e,t,n,r){var a=r(ve(this.rules,t,n,r).join(""),""),i=this.componentId+e;n.insertRules(i,i,a)},t.removeStyles=function(e,t){t.clearRules(this.componentId+e)},t.renderStyles=function(e,t,n,r){e>2&&q.registerId(this.componentId+e),this.removeStyles(e,n),this.createStyles(e,t,n,r)},e}();function De(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var i=Ee.apply(void 0,[e].concat(n)),o="sc-global-"+ke(JSON.stringify(i)),l=new ze(i,o);function u(e){var t=se(),n=de(),r=(0,a.useContext)(Ie),i=(0,a.useRef)(t.allocateGSInstance(o)).current;return t.server&&s(i,e,t,r,n),(0,a.useLayoutEffect)((function(){if(!t.server)return s(i,e,t,r,n),function(){return l.removeStyles(i,t)}}),[i,e,t,r,n]),null}function s(e,t,n,r,a){if(l.isStatic)l.renderStyles(e,k,n,a);else{var i=h({},t,{theme:xe(t,r,u.defaultProps)});l.renderStyles(e,i,n,a)}}return a.memo(u)}function Be(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];var a=Ee.apply(void 0,[e].concat(n)).join(""),i=ke(a);return new fe(i,a)}var Fe=function(){function e(){var e=this;this._emitSheetCSS=function(){var t=e.instance.toString();if(!t)return"";var n=D();return"<style "+[n&&'nonce="'+n+'"',x+'="true"','data-styled-version="5.3.1"'].filter(Boolean).join(" ")+">"+t+"</style>"},this.getStyleTags=function(){return e.sealed?P(2):e._emitSheetCSS()},this.getStyleElement=function(){var t;if(e.sealed)return P(2);var n=((t={})[x]="",t["data-styled-version"]="5.3.1",t.dangerouslySetInnerHTML={__html:e.instance.toString()},t),r=D();return r&&(n.nonce=r),[a.createElement("style",h({},n,{key:"sc-0-0"}))]},this.seal=function(){e.sealed=!0},this.instance=new q({isServer:!0}),this.sealed=!1}var t=e.prototype;return t.collectStyles=function(e){return this.sealed?P(2):a.createElement(ce,{sheet:this.instance},e)},t.interleaveWithNodeStream=function(e){return P(3)},e}(),He=function(e){var t=a.forwardRef((function(t,n){var r=(0,a.useContext)(Ie),i=e.defaultProps,o=xe(t,r,i);return a.createElement(e,h({},t,{theme:o,ref:n}))}));return p()(t,e),t.displayName="WithTheme("+w(e)+")",t},Ue=function(){return(0,a.useContext)(Ie)},We={StyleSheet:q,masterSheet:le};const Ve=Re},4817:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(1216)),i=r(n(1960)),o=r(n(5537));class l extends a.default{constructor(e={},t=""){super(),this.offsetTimelineFindId=i.default.defaultFindId,this.offsetSingleFindId=i.default.defaultFindId,this.offsetMultiFindId=i.default.defaultFindId,this.offsetChildFindId=i.default.defaultFindId,this.offsetLogsFindId=i.default.defaultFindId;const n=e.ch?e.ch:"/",r=e.id?e.id:"",u=a.default.isSet(e.isMediaCh)?e.isMediaCh:l.getIsMediaCh(n),s=!!a.default.isSet(e.isLinkCh)&&e.isLinkCh,d=e.rootCh?e.rootCh:n,c=a.default.isSet(e.isRootCh)?e.isRootCh:d===n,f=e.rootTitle?e.rootTitle:"talkn",p=l.getMediaSrc(e.protocol,n),h=l.getMediaType(p,e),g=e&&e.tuned?e.tuned:"",m=l.getDispThreadType(e,u),b=!a.default.isSet(e.multistream)||e.multistream,y=e&&e.findType?e.findType:o.default.findTypeAll,v=e&&e.offsetFindId?e.offsetFindId:l.defaultOffsetFindId,w=e&&e.offsetTimelineFindId?e.offsetTimelineFindId:l.defaultOffsetFindId,E=e&&e.offsetSingleFindId?e.offsetSingleFindId:l.defaultOffsetFindId,x=e&&e.offsetMultiFindId?e.offsetMultiFindId:l.defaultOffsetFindId,_=e&&e.offsetChildFindId?e.offsetChildFindId:l.defaultOffsetFindId,S=e&&e.offsetLogsFindId?e.offsetLogsFindId:l.defaultOffsetFindId,C=e.inputPost?e.inputPost:"",k=!!e.inputStampId&&e.inputStampId,P=e.inputCurrentTime?e.inputCurrentTime:0,M=e.inputSearch?e.inputSearch:"",O=!!a.default.isSet(e.isToggleMultistream)&&e.isToggleMultistream,A=!!a.default.isSet(e.isRankDetailMode)&&e.isRankDetailMode,T=e&&e.actioned?e.actioned:"",I=a.default.isSet(e.debug)?e.debug:"";return this.create({id:r,isRootCh:c,isLinkCh:s,isMediaCh:u,rootCh:d,rootTitle:f,chType:h,dispThreadType:m,tuned:g,multistream:b,findType:y,offsetFindId:v,offsetTimelineFindId:w,offsetSingleFindId:E,offsetMultiFindId:x,offsetChildFindId:_,offsetLogsFindId:S,inputPost:C,inputStampId:k,inputCurrentTime:P,inputSearch:M,isToggleMultistream:O,isRankDetailMode:A,actioned:T,debug:I})}static get defaultOffsetFindId(){return i.default.defaultFindId}static get dispThreadTypeTimeline(){return"Timeline"}static get dispThreadTypeSingle(){return"Single"}static get dispThreadTypeMulti(){return"Multi"}static get dispThreadTypeChild(){return"Child"}static get dispThreadTypeLogs(){return"Logs"}static get mediaTagTypeNo(){return"html"}static get mediaTagTypeAudio(){return"audio"}static get mediaTagTypeVideo(){return"video"}static get mediaTypeMp3(){return"mp3"}static get mediaTypeMp4(){return"mp4"}static get mediaTypeM4a(){return"m4a"}static get mediaChs(){return[l.mediaTypeMp3,l.mediaTypeMp4,l.mediaTypeM4a]}static get mediaChTagTypes(){return{[l.mediaTypeMp3]:l.mediaTagTypeAudio,[l.mediaTypeMp4]:l.mediaTagTypeVideo,[l.mediaTypeM4a]:l.mediaTagTypeAudio}}static getMediaType(e,t){return t&&t.chType?t.chType:l.getMediaTypeFromSrc(e)}static getMediaTypeFromSrc(e){const t=Object.keys(l.mediaChTagTypes),n=t.length;let r="html";for(let a=0;a<n;a++){const n=new RegExp(`.${t[a]}$`);if(e.match(n)){r=l.mediaChTagTypes[t[a]];break}}return r}static validInputPost(e){return!!/\r\n$|\n$|\r$/gim.test(e)&&"LAST TYPE BREAK LINE."}static validPost(e){return""===e?"NO INPUT POST":/^\r\n+$|\n+$|\r+$/g.test(e)?"ONLY NEW LINE":/^\s+$/g.test(e)?"only space":!!/^\r\n+(\s|\S)+$|^\n+(\s|\S)+$|^\r+(\s|\S)+$/.test(e)&&"EMPTY POST"}static getWidth(e){return"object"==typeof window&&window.innerWidth?window.innerWidth:e.width?"string"==typeof e.width&&e.width.indexOf("px")>=0?Number(e.width.replace("px","")):e.width:0}static getHeight(e={}){return"object"==typeof window&&window.innerHeight?window.innerHeight:0}static isMediaContentType(e){return l.isAudioContentType(e)||l.isVideoContentType(e)}static isAudioContentType(e){return e.indexOf(l.mediaTagTypeAudio)>=0}static isVideoContentType(e){return e.indexOf(l.mediaTagTypeVideo)>=0}static getMediaSrc(e,t){return e+"/"+t.replace(/\/$/,"")}static getIsMediaCh(e){return l.mediaChs.some((t=>{const n=new RegExp(`.${t}/$|.${t}$`);return e.match(n)}))}static getDispThreadType(e,t){return e&&e.dispThreadType?e.dispThreadType:t?l.dispThreadTypeTimeline:l.dispThreadTypeMulti}static getOffsetFindId({posts:e}){return e&&e[0]&&e[0]._id?e[0]._id:i.default.defaultFindId}static getStepToDispThreadType({app:e,ranks:t},n,r,a=""){let i="";const o=e&&e.dispThreadType?e.dispThreadType:l.dispThreadTypeMulti;return i=(e=l.getStepDispThreadType({app:e,ranks:t},n,r,a)).dispThreadType,{app:e,stepTo:`${o} to ${i}`}}static getStepDispThreadType({app:e,ranks:t},n={},r,a){const i=e||{};if(i.offsetFindId=l.defaultOffsetFindId,n.isMediaCh)return i.dispThreadType=l.dispThreadTypeTimeline,i.offsetFindId=i.offsetTimelineFindId?i.offsetTimelineFindId:l.defaultOffsetFindId,i.isLinkCh="Links"===a||"findMediaCh"===a||"ToMedia"===a,i.isMediaCh=!0,i;if("BackToRootCh"===a&&(i.isLinkCh=!1),"Links"===a&&t.length>0){if(!t.some((e=>e.ch===r||e.ch===r+"/")))return i.offsetFindId=l.defaultOffsetFindId,i.dispThreadType=l.dispThreadTypeChild,i.isLinkCh=!0,i}return i.rootCh===r?i.multistream?i.dispThreadType=l.dispThreadTypeMulti:i.dispThreadType=l.dispThreadTypeSingle:i.dispThreadType=l.dispThreadTypeChild,i}}t.default=l},1960:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(1216)),i=r(n(300));class o extends a.default{constructor(e){super(),this.ch=o.defaultValues.ch,this.chs=o.defaultValues.chs,this.favicon=o.defaultValues.favicon,this.findType=o.defaultValues.findType,this.layer=o.defaultValues.layer,this.post=o.defaultValues.post,this.protocol=o.defaultValues.protocol,this.stampId=o.defaultValues.stampId,this.title=o.defaultValues.title,this.liveCnt=o.defaultValues.liveCnt,this.uid=o.defaultValues.uid,this.utype=o.defaultValues.utype,this.dispFlg=o.defaultValues.dispFlg,this.data=o.defaultValues.data,this.createTime=o.defaultValues.createTime,this.currentTime=o.defaultValues.currentTime,this.updateTime=o.defaultValues.updateTime;const t=e?{...o.defaultValues,...e}:o.defaultValues;return this.create(t)}static get defaultFindId(){return"000000000000000000000000"}static get defaultValues(){return{ch:"/",chs:["/"],favicon:i.default.defaultFavicon,findType:"Html",layer:1,post:"",protocol:"https:",stampId:0,title:"talkn",liveCnt:0,uid:"",utype:"",dispFlg:!0,data:null,createTime:new Date,currentTime:new Date,updateTime:new Date}}}t.default=o},5537:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(1216)),i=r(n(7771)),o=r(n(300)),l=r(n(4817));class u extends a.default{constructor(e={},t){super(),this.chs=["/"],this.protocol=i.default.TALKN_PROTOCOL,this.charset="UTF-8",this.host="",this.favicon=u.getDefaultFavicon(),this.findType=u.findTypeAll,this.title=u.getDefaultTitle(),this.metas=[],this.emotions={},this.serverMetas={},this.clientMetas={},this.links=[],this.h1s=[],this.audios=[],this.videos=[],this.layer=u.getLayer(),this.mediaIndex=[],this.postCnt=0,this.multiPostCnt=0,this.isSelfCh=!1,this.createTime="",this.updateTime="";const n=u.isWindowObj(e)?u.constructorFromWindow(e,t):e;return this.create(n)}static get findTypeAll(){return"All"}static get findTypeHtml(){return"Html"}static get findTypeMusic(){return"Music"}static get findTypeVideo(){return"Video"}static get findTypeOther(){return"Other"}static get findTypes(){return{[u.findTypeHtml]:["text/html"],[u.findTypeMusic]:["audio","audio/mpeg","audio/mp4","audio/x-wav","audio/midi","application/x-smaf"],[u.findTypeVideo]:["video","video/mpeg","video/mp4","video/quicktime","video/x-ms-wmv","application/x-shockwave-flash","video/3gpp2"]}}static getDefaultTitle(){return"talkn"}static getDefaultFavicon(){return`https://${o.default.assetsURL}/favicon.ico`}static isWindowObj(e){return!!e.alert}static constructorFromWindow(e,t){const n=!!t.ch&&t.ch,r=u.getCh(t);let i={};return i.ch=r,i.chs=["/"],i.hasSlash=!!t.hasslash&&a.default.getBool(t.hasslash),i.protocol="talkn:",i.contentType="",i.charset="UTF-8",i.host="",i.favicon=u.getDefaultFavicon(),i.findType=u.findTypeAll,n?(i.protocol=u.getProtocol(n),i.host=u.getHost(n),i.chs=n.chs&&n.chs.length>0?n.chs:u.getChs(r)):(i.protocol=location.protocol?location.protocol:"????:",i.chs=e.chs&&e.chs.length>0?e.chs:u.getChs(r),i.contentType=document.contentType?document.contentType:"",i.charset=document.charset?document.charset:"",i.host=location.host?location.host:"",i.favicon=u.getFaviconFromWindow(window)),i.title=u.getDefaultTitle(),i.metas=[],i.serverMetas={},i.clientMetas={},i.emotions={},i.links=[],i.h1s=[],i.audios=[],i.videos=[],i.layer=u.getLayer(i.ch),i.mediaIndex=[],i.postCnt=0,i.multiPostCnt=0,i.isSelfCh=u.getIsSelfCh("",i.ch),i.createTime="",i.updateTime="",i}static getCh(e){return e&&e.ch&&""!==e.ch?e.ch:"/"}static getChTop(e){return""!==e?"/"+e.split("/")[1]:""}static getChs(e){let t=["/"];if(""!==e){const r="/"===e.slice(-1)?e:e+"/";if("/"!==r){const e=r.split("/"),a=e.length;let i="";for(var n=1;n<a;n++)""!==e[n]&&(i+=e[n],i="/"===i.slice(-1)?i:i+"/",i="/"===i.slice(0,1)?i:"/"+i,t.push(i))}}return t}static getHost(e){return e.indexOf(".")>=0?(e=e.replace("https://","").replace("http://","")).replace(/^\//,"").replace(/\/.*$/,""):o.default.domain}static getProtocol(e){return e.indexOf("http:")>=0?"http:":e.indexOf("https:")>=0?"https:":location&&location.protocol?location.protocol:"????:"}static getIsSelfCh(e,t){return e.replace("http:/","").replace("https:/","").replace(/\u002f$/,"")===t}static getLayer(e="/"){return e.split("/").length-1}static getMediaSrc(e){return l.default.getMediaSrc(e.protocol,e.ch)}static getMediaTagType(e){const t=u.getMediaSrc(e);return l.default.getMediaType(t,null)}static getFaviconFromWindow(e){if(e&&e.document){const t=e.document.evaluate("//link[contains(@rel,'icon')or(contains(@rel,'ICON'))][1]/@href",e.document,null,2,null).stringValue,n="http://",r="https://",a=location.host;if(t.indexOf(n)||t.indexOf(r)){const e=n+a+(t||"/favicon.ico");return 1==e.split("//").length-1?e:t}return t}return""}static getStatus(e,t,n){let r={dispType:"",isCreate:!1,isRequireUpsert:!1,isMultistream:!1,isMediaCh:!1,isToggleMultistream:!1,getMore:!1};return r.isCreate=u.getStatusCreate(n),r.isRequireUpsert=u.getStatusIsRequireUpsert(e,r.isCreate),r.isMultistream=u.getStatusIsMultistream(t),r.isToggleMultistream=u.getStatusIsToggleMultistream(t),r.isMediaCh=u.getStatusIsMediaCh(e.ch),r}static getStatusCreate(e){return!e}static getStatusIsRequireUpsert(e,t=!1){if(!t)return!0;if(e.updateTime){const t=e.updateTime.getTime?e.updateTime.getTime():e.updateTime,n=new Date,r=n.getFullYear(),a=n.getMonth(),i=n.getDate(),l=n.getHours();return n.getMinutes(),t<new Date(r,a,i,l-o.default.findOneThreadActiveHour).getTime()}return!1}static getStatusIsMultistream(e){return void 0===e||void 0===e.dispThreadType||e.dispThreadType===l.default.dispThreadTypeMulti&&e.multistream}static getStatusIsMediaCh(e){return l.default.getIsMediaCh(e)}static getStatusIsToggleMultistream(e){return void 0!==e&&void 0!==e.actioned&&e.isToggleMultistream}static getContentTypeFromFindType(e){const t=u.findTypes[u.findTypeHtml],n=u.findTypes[u.findTypeMusic],r=u.findTypes[u.findTypeVideo];let a;if(e&&""!==e){let i="";e.indexOf(";")>0&&(i=e.split(";")[0]),(t.includes(e)||t.includes(i))&&(a=u.findTypeHtml),(n.includes(e)||n.includes(i))&&(a=u.findTypeMusic),(r.includes(e)||r.includes(i))&&(a=u.findTypeVideo)}return a}static getFindTypeFromSrc(e){const t=l.default.getMediaTypeFromSrc(e);return t.charAt(0).toUpperCase()+t.slice(1)}}t.default=u},7638:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(9573)),i=r(n(300)),o=r(n(1665));if("browser"===a.default.title){const{SUB_DOMAINS:e,DEVELOPMENT:t}=o.default,{env:n,domain:r}=i.default;i.default.mediaSecondInterval=200,i.default.screenSize={small:600,middle:960},i.default.defaultFavicon=`//${e.ASSETS}.${r}/favicon.ico`,i.default.portalPath=n===t?`//${e.CLIENT}.${r}/`:`//${e.PORTAL}.${r}/`,i.default.clientPath=`//${e.CLIENT}.${r}/`,i.default.assetsPath=`//${e.ASSETS}.${r}/`,i.default.sessionPath=`//${e.SESSION}.${r}/`,i.default.cacheKey={index:"talknIndexList",setting:"talknSettingParams"}}t.default=i.default},7865:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(1216)),i=r(n(4817)),o=r(n(7638));class l extends a.default{constructor(e={}){super();const t=e.iFrameId?e.iFrameId:"",n=l.getWidth(e),r=l.getHeight(e),i=e.postsHeight?e.postsHeight:0,o=l.getScreenSize(n),u=e.extensionMode?e.extensionMode:l.extensionModeNone,s=e.extensionWidth?e.extensionWidth:"0%",d=e.extensionHeight?e.extensionHeight:0,c=e&&e.threadScrollY?e.threadScrollY:0,f=l.getIsOpenPosts({height:r,extensionMode:u,extensionHeight:d}),p=!!e.isOpenSetting&&e.isOpenSetting,h=a.default.isSet(e.isOpenMenu)?e.isOpenMenu:l.getIsOpenMenu({screenSize:o}),g=o===l.screenSizeDetailLabel||!!a.default.isSet(e.isOpenDetail)&&e.isOpenDetail,m=!!e.isOpenNewPost&&e.isOpenNewPost,b=!!e.isOpenNotif&&e.isOpenNotif,y=!!a.default.isSet(e.isOpenPostsSupporter)&&e.isOpenPostsSupporter,v=a.default.isSet(e.isOpenBoard)?e.isOpenBoard:l.getIsOpenBoard({screenSize:o}),w=!!a.default.isSet(e.isOpenSetChModal)&&e.isOpenSetChModal,E=!a.default.isSet(e.isBubblePost)||e.isBubblePost,x=!!a.default.isSet(e.isDispPosts)&&e.isDispPosts,_=!!a.default.isSet(e.isOpenLinks)&&e.isOpenLinks,S=!a.default.isSet(e.isTransition)||e.isTransition,C=e.menuComponent?e.menuComponent:l.getDefaultMenuComponent(),k=e.openLockMenu?e.openLockMenu:l.openLockMenuLabelNo,P=e.openInnerNotif?e.openInnerNotif:"",M=e.clicked?e.clicked:"",O=e.detailCh?e.detailCh:"/",A=e.inputPost?e.inputPost:"",T=!!e.inputStampId&&e.inputStampId,I=e.inputCurrentTime?e.inputCurrentTime:0,$=e.inputSearch?e.inputSearch:"",j=!a.default.isSet(e.isLoading)||e.isLoading;return this.create({iFrameId:t,width:n,height:r,postsHeight:i,screenSize:o,extensionMode:u,extensionWidth:s,extensionHeight:d,threadScrollY:c,isOpenPosts:f,isOpenSetting:p,isOpenMenu:h,isOpenDetail:g,isOpenNewPost:m,isOpenNotif:b,isOpenPostsSupporter:y,isOpenBoard:v,isOpenSetChModal:w,isBubblePost:E,isDispPosts:x,isOpenLinks:_,isTransition:S,menuComponent:C,openLockMenu:k,openInnerNotif:P,clicked:M,detailCh:O,inputPost:A,inputStampId:T,inputCurrentTime:I,inputSearch:$,isLoading:j})}static get openLockMenuLabelNo(){return"No"}static get openLockMenuLabelLike(){return"Like"}static get openLockMenuLabelShare(){return"Share"}static get openLockMenuLabelAbout(){return"About"}static get screenSizeSmallLabel(){return"SMALL"}static get screenSizeMiddleLabel(){return"MIDDLE"}static get screenSizeLargeLabel(){return"LARGE"}static get screenSizeIndexLabel(){return"MENU"}static get screenSizeThreadLabel(){return"THREAD"}static get screenSizeDetailLabel(){return"DETAIL"}static get screenSizeSmallWidthPx(){return o.default.screenSize.small}static get screenSizeMiddleWidthPx(){return o.default.screenSize.middle}static get extensionModeModal(){return"Modal"}static get extensionModeBottom(){return"Bottom"}static get extensionModeEmbed(){return"Embed"}static get extensionModeLiveMedia(){return"LiveMedia"}static get extensionModeOutWindow(){return"OutWindow"}static get extensionModeNone(){return"None"}static get menuComponentUsersLabel(){return"Users"}static get menuComponentRankLabel(){return"Rank"}static get menuComponentLogsLabel(){return"Logs"}static get menuComponentSettingLabel(){return"Setting"}static getDefaultMenuComponent(){return l.menuComponentRankLabel}static getWidth(e){return e&&e.extensionWidth>0?e.extensionWidth:e&&e.width>0?e.width:"object"==typeof window&&window.innerWidth?window.innerWidth:e.width?"string"==typeof e.width&&e.width.indexOf("px")>=0?Number(e.width.replace("px","")):e.width:0}static getHeight(e={}){return e&&e.extensionHeigt>0?e.extensionHeigt:e&&e.height>0?e.height:"object"==typeof window&&window.innerHeight?window.innerHeight:0}static getScreenSize(e=0){if(!e){if(window&&0===window.innerWidth||0===window.innerHeight)return;window&&window.innerWidth>0&&(e=window.innerWidth)}return"string"==typeof e&&(e=e.replace("px","")),l.screenSizeSmallWidthPx>=e?l.screenSizeSmallLabel:l.screenSizeSmallWidthPx<=e&&l.screenSizeMiddleWidthPx>=e?l.screenSizeMiddleLabel:l.screenSizeLargeLabel}static getIsOpenMenu(e){switch(e.screenSize){case l.screenSizeSmallLabel:return!1;case l.screenSizeMiddleLabel:case l.screenSizeLargeLabel:return!0}}static getIsOpenBoard(e){switch(e.screenSize){case l.screenSizeSmallLabel:return!1;case l.screenSizeMiddleLabel:case l.screenSizeLargeLabel:return!0}}static getIsOpenPosts(e,t=""){let{extensionMode:n,height:r,extensionHeight:a,extensionCloseHeight:i}=e;return n!==l.extensionModeBottom&&n!==l.extensionModeModal||("number"!=typeof r&&(r=Number(r)),"number"!=typeof a&&(a=Number(a)),0!==r&&a<=r)}static getUiUpdatedOpenFlgs({app:e,ui:t},n=""){switch(n){case"toggleMain":case"headerDetailIcon":switch(t.screenSize){case l.screenSizeSmallLabel:t.isOpenDetail=!t.isOpenDetail;break;case l.screenSizeMiddleLabel:t.isOpenDetail?e.detailCh===e.rootCh?(t.isOpenDetail=!1,t.isOpenMenu=!0):(t.isOpenMenu=!1,t.isOpenDetail=!1):(t.isOpenMenu=!1,t.isOpenDetail=!0)}break;case"headerMenuIcon":switch(t.screenSize){case l.screenSizeMiddleLabel:t.isOpenDetail,t.isOpenMenu=!0,t.isOpenDetail=!1}break;case"changeThreadDetail":case"post":switch(t.screenSize){case l.screenSizeSmallLabel:t.isOpenDetail=!t.isOpenDetail;break;case l.screenSizeMiddleLabel:t.isOpenMenu=!1,t.isOpenDetail=!0;case l.screenSizeLargeLabel:t.isOpenMenu=!0,t.isOpenDetail=!0}}return t}static isActiveMultistream({app:e,ui:t},n=""){return t.menuComponent===l.menuComponentRankLabel&&e.dispThreadType===i.default.dispThreadTypeMulti}}t.default=l},453:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getMyHost=t.getMediaType=t.getNetwork=t.NetworkList=t.defaultMediaType=t.NetworkCategoryList=t.NetworkCategoryListBuzzCycleBelongType=t.NetworkCategoryListRankingBelongType=t.NetworkCategoryListBaseBelongType=t.MediaTypeTrendWord=t.MediaTypeGirlsNews=t.MediaTypeNews=t.MediaTypeBooks=t.MediaTypeApps=t.MediaTypeMovies=t.MediaTypeMusic=t.MediaTypeContents=t.MediaTypeArtists=t.defaultMediaTypeCategory=t.MediaTypeCategoryBuzzCycle=t.MediaTypeCategoryRanking=t.MediaTypeCategoryBase=t.talknLiveMediaHost=t.producthost=t.localhost=void 0;const a=r(n(8399)),i=r(n(6365)),o="production",l=a.default.env.ENVIROMENT;t.localhost="localhost",t.producthost="talkn.io",t.talknLiveMediaHost="development"===l?t.localhost:t.producthost,t.MediaTypeCategoryBase="Base Media",t.MediaTypeCategoryRanking="Rank Media",t.MediaTypeCategoryBuzzCycle="Buzz Media",t.defaultMediaTypeCategory=t.MediaTypeCategoryBuzzCycle,t.MediaTypeArtists="artists",t.MediaTypeContents="contents",t.MediaTypeMusic="music",t.MediaTypeMovies="movies",t.MediaTypeApps="apps",t.MediaTypeBooks="books",t.MediaTypeNews="news",t.MediaTypeGirlsNews="girls-news",t.MediaTypeTrendWord="trend-word",t.NetworkCategoryListBaseBelongType=[t.MediaTypeArtists,t.MediaTypeContents],t.NetworkCategoryListRankingBelongType=[t.MediaTypeMusic,t.MediaTypeMovies,t.MediaTypeApps,t.MediaTypeBooks],t.NetworkCategoryListBuzzCycleBelongType=[t.MediaTypeNews,t.MediaTypeGirlsNews,t.MediaTypeTrendWord],t.NetworkCategoryList={[t.MediaTypeCategoryBase]:t.NetworkCategoryListBaseBelongType,[t.MediaTypeCategoryRanking]:t.NetworkCategoryListRankingBelongType,[t.MediaTypeCategoryBuzzCycle]:t.NetworkCategoryListBuzzCycleBelongType},t.defaultMediaType=t.MediaTypeNews;const u={subDomain:"news",label:"News",method:"GET",endpoint:`https://${String(i.default.news.endpointHost)}`,headers:{"x-rapidapi-host":String(i.default.news.endpointHost),"x-rapidapi-key":i.default.news.endpointKey,useQueryString:"true"},devPort:6001,getImageParams:"&w=300&dpr=2&qlt=190",count:50};t.NetworkList={[t.MediaTypeArtists]:{subDomain:"artists",label:"Artists",method:"GET",endpoint:"",headers:{},devPort:4001,getImageParams:"",count:50},[t.MediaTypeContents]:{subDomain:"contents",label:"Contents",method:"GET",endpoint:"",headers:{},devPort:4002,getImageParams:"",count:50},[t.MediaTypeMusic]:{subDomain:"music",label:"Music Rank",method:"GET",endpoint:"",headers:{},devPort:5001,getImageParams:"",count:50},[t.MediaTypeMovies]:{subDomain:"movies",label:"Movies Rank",method:"GET",endpoint:"",headers:{},devPort:5002,getImageParams:"",count:50},[t.MediaTypeApps]:{subDomain:"apps",label:"Apps Rank",method:"GET",endpoint:"",headers:{},devPort:5003,getImageParams:"",count:50},[t.MediaTypeBooks]:{subDomain:"books",label:"Books Rank",method:"GET",endpoint:"",headers:{},devPort:5004,getImageParams:"",count:50},[t.MediaTypeNews]:u,[t.MediaTypeGirlsNews]:{subDomain:"girls-news",label:"Girls News",method:"GET",endpoint:"",headers:{},devPort:6002,getImageParams:"",count:50},[t.MediaTypeTrendWord]:{subDomain:"trend-word",label:"Trend Word",method:"GET",endpoint:"",headers:{},devPort:6003,getImageParams:"",count:50}},t.getNetwork=e=>t.NetworkList[e]?t.NetworkList[e]:t.NetworkList[t.defaultMediaType],t.getMediaType=e=>{const n=l===o?n=>e.indexOf(`${t.NetworkList[n].subDomain}.${t.producthost}`)>=0:n=>e.indexOf(`${t.localhost}:${t.NetworkList[n].devPort}`)>=0,r=Object.keys(t.NetworkList).find(n);return t.NetworkList[r]?r:t.defaultMediaType},t.getMyHost=e=>l===o?`https://${e}.${t.producthost}`:`http://${t.localhost}:${(0,t.getNetwork)(e).devPort}`},1216:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0});class n{constructor(e={}){}static getType(e){return null===e?"Null":void 0===e?"Undefined":e.constructor.name}static isSet(e){return"Undefined"!==n.getType(e)&&"Null"!==n.getType(e)}static getBool(e){return"boolean"==typeof e?e:"true"===e}static isAnonymousFunc(e){const t=e.toString();return"function(){}"===t||"function() {}"===t||"function (){}"===t||"function () {}"===t||"()=>{}"===t}create(e){const t=this.constructor.name;return n.getType(e),Object.keys(e).forEach((r=>{let a,i,o=null,l=!1,u=!1,s=()=>{},d=null;if("Object"===n.getType(e[r])){a=e[r];let t=0===Object.keys(a).length;l=a.isAcceptNull?a.isAcceptNull:l,u=a.isAcceptBlank?a.isAcceptBlank:u,o=!t&&a.def?a.def:o,d=t||!a.value&&""!==a.value?a:a.value,d=t&&o?o:d,i=n.getType(d),s=a.valid?a.valid:s}else d=e[r],o=d,l=l,u=u,i=n.getType(d),s=s;const c=e=>{let a=null;const o=`${t}.${r}`,c=d,f=i,p=e,h=n.getType(e);return h!==i&&(a=`SCHEMA_TYPE : ${o} [validType: ${i}][paramsType: ${h}]`),l&&null===e&&(a=`SCHEMA_IS_ACCEPT_NULL :  ${o}`),u&&""===e&&(a=`SCHEMA_IS_ACCEPT_BLANK :  ${o}`),"Function"===n.getType(s)&&s(e)&&(a=`SCHEMA_YOUR_VALID_METHOD :  ${o}`),{pointer:o,validValue:c,validType:f,paramsValue:p,paramsType:h,error:a}},{pointer:f,validValue:p,validType:h,paramsValue:g,paramsType:m,error:b}=c(d);if(null===b)Object.defineProperty(this,r,{get:()=>d,set:e=>{const t=c(d);if(null===b)return d=e,{...this,[r]:d};throw this.validWarn(t),b},enumerable:!0,configurable:!0});else{if(this.errorThrow)throw b;console.warn(b)}})),this}canSet(e,t){try{const n=this[e];if(void 0===n)return!0;if(null===n)return!0;if(void 0===t)return!0;if(null===t)return!0;const{error:r}=this[e]=t;return!r&&(this[e]=n,!0)}catch(n){throw console.warn("BAD CAN SET KEY: "+this.constructor.name+" "+e),console.warn("BEFOER VALUE"),console.warn(typeof this[e]),console.warn(this[e]),console.warn("AFTER VALUE"),console.warn(typeof t),console.warn(t),`BAD CAN SET: ${n}`}}merge(e={},t=!0){try{const r=n.getType(e),a=Object.keys(e);if(a.length>0){let n={...this};return a.forEach((t=>{this[t]!==e[t]&&(this.canSet(t,e[t])?n[t]=e[t]:console.warn("BAD MERGE A : "+t+" "+e[t]+" "+typeof e[t]))})),"Array"===r?(n=Object.values(n),t?new this.constructor(n):n):t?new this.constructor(n):n}return new this.constructor}catch(t){if(this.errorThrow)throw console.warn(e),console.warn(t),`BAD MERGE B : ${n.getType(e)} ${t}`;return console.warn(e),console.warn(t),console.warn(`BAD MERGE C : ${n.getType(e)} ${t}`),e}}toJSON(e=this){let t={};return Object.keys(e).forEach((n=>{let r=e[n];"Object"===r.constructor.name&&(r.type||r.default||(r=this.toJSON(r))),r.default||""===r.default||0===r.default?t[n]=r.default:t[n]=r})),t}forEach(e){return Object.values(this).forEach(e)}concat(e){return this.returnImmutable(Object.values(this).concat(e),e)}map(e){return this.returnImmutable(Object.values(this).map(e),e)}filter(e){return this.returnImmutable(Object.values(this).filter(e),e)}reduce(e){return this.returnImmutable(Object.values(this).reduce(e),e)}find(e){return Object.values(this).find(e)}sort(e){return Object.values(this).sort(e)}push(e){const t=Object.values(this);return t.push(e),this.returnImmutable(t)}unshift(e){const t=Object.values(this);return t.unshift(e),this.returnImmutable(t)}getShift(){const e=Object.values(this).shift();return this.returnImmutable(e)}pop(e){const t=Object.values(this);return t.pop(e),this.returnImmutable(t)}returnImmutable(e,t=(()=>{})){return void 0===e?new this.constructor:0===e.length&&0===Object.keys(this).length?String(t).indexOf("createElement")>0?[]:new this.constructor(e):e[0]&&e[0].$$typeof&&"Symbol"===e[0].$$typeof.constructor.name?e:new this.constructor(e)}validWarn(e){console.warn("##########################"),console.warn("#"+e.pointer),console.warn("##########################"),console.warn("### initializedValidType"),console.warn(e.validType),console.warn("### initializedValidValue"),console.warn(e.validValue),console.warn("### paramsType"),console.warn(e.paramsType),console.warn("### paramsValue"),console.warn(e.paramsValue),console.warn("##########################")}}t.default=n},7771:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(1216));class i{static get TALKN_PROTOCOL(){return"talkn:"}static get HTTP_PROTOCOL(){return"http:"}static get HTTPS_PROTOCOL(){return"https:"}static get UNKNOWN_PROTOCOL(){return"????:"}static get CATCH_ME_KEY(){return"@CATCH_ME"}static get API_SEPARATE_IO_TYPE_START(){return"["}static get API_SEPARATE_IO_TYPE_END(){return"]"}static get API_REQUEST_TYPE(){return"REQUEST"}static get API_RESPONSE_TYPE_EMIT(){return"EMIT"}static get API_RESPONSE_TYPE_BROADCAST(){return"BROADCAST"}static get API_SETUP(){return"API_SETUP"}static get UNKNOWN(){return"UNKNOWN"}static get CONNECTION_SERVER_KEY(){return"CONNECTION_SERVER"}static get API_TO_SERVER_REQUEST(){return`API_TO_SERVER[${i.API_REQUEST_TYPE}]${i.METHOD_COLON}`}static get SERVER_TO_API_EMIT(){return`SERVER_TO_API[${i.API_RESPONSE_TYPE_EMIT}]${i.METHOD_COLON}`}static get SERVER_TO_API_BROADCAST(){return`SERVER_TO_API[${i.API_RESPONSE_TYPE_BROADCAST}]${i.METHOD_COLON}`}static get API_TO_CLIENT_REQUEST(){return`API_TO_CLIENT[${i.API_REQUEST_TYPE}]${i.METHOD_COLON}`}static get API_TO_CLIENT_EMIT(){return`API_TO_CLIENT[${i.API_RESPONSE_TYPE_EMIT}]${i.METHOD_COLON}`}static get API_TO_CLIENT_BROADCAST(){return`API_TO_CLIENT[${i.API_RESPONSE_TYPE_BROADCAST}]${i.METHOD_COLON}`}static get API_BROADCAST_CALLBACK(){return"tune"}static get REDUX_ACTION_KEY(){return"type"}static get METHOD_COLON(){return":"}static get ADD_CLIENT_ACTION_PREFIX(){return"API_TO_CLIENT"}static get map(){return{tune:{requestPublicState:{},requestPrivateState:{thread:["ch","hasSlash","protocol"],app:["multistream","rootCh","dispThreadType","actioned","offsetFindId","isToggleMultistream"]},responseEmitState:{user:["uid"],setting:"*",thread:"*"},responseBroadcastState:{thread:["liveCnt","ch"]}},fetchPosts:{requestPublicState:{},requestPrivateState:{thread:["ch","protocol","host","hasSlash"],app:["multistream","rootCh","dispThreadType","actioned","offsetFindId","isToggleMultistream"]},responseEmitState:{posts:"*",thread:"*"},responseBroadcastState:{}},getMore:{requestPublicState:{},requestPrivateState:{thread:["ch"],app:["multistream","dispThreadType","offsetFindId"]},responseEmitState:{app:["dispThreadType","offsetFindId"],posts:"*"},responseBroadcastState:{}},updateThread:{requestPublicState:{},requestPrivateState:{thread:["ch","protocol","host","hasSlash"]},responseEmitState:{thread:"*"},responseBroadcastState:{}},changeThread:{requestPublicState:{},requestPrivateState:{thread:["ch","hasSlash","protocol"],app:["tuned","multistream","rootCh","dispThreadType","actioned","offsetFindId","isToggleMultistream"]},responseEmitState:{thread:"*"},responseBroadcastState:{thread:["liveCnt","ch"]}},changeThreadDetail:{requestPublicState:{},requestPrivateState:{thread:["ch"]},responseEmitState:{thread:"*"},responseBroadcastState:{}},addFindChild:{requestPublicState:{},requestPrivateState:{thread:["ch"]},responseEmitState:{thread:"*"},responseBroadcastState:{}},rank:{requestPublicState:{},requestPrivateState:{app:["findType","rootCh","isRankDetailMode"]},responseEmitState:{rank:"*"},responseBroadcastState:{}},post:{requestPublicState:{},requestPrivateState:{user:["uid","utype"],app:["inputPost","inputStampId","inputCurrentTime","dispThreadType"],thread:["findType","title","protocol","ch","chs","emotions","favicon","contentType"]},responseEmitState:{},responseBroadcastState:{posts:"*",thread:["ch","emotions","postCnt"],user:["uid"]}},updateThreadServerMetas:{requestPublicState:{thread:["serverMetas"]},requestPrivateState:{thread:["host","protocol","ch"],user:["uid"]},responseEmitState:{thread:"*"},responseBroadcastState:{}},disconnect:{requestPublicState:{},requestPrivateState:{},responseEmitState:{},responseBroadcastState:{thread:["liveCnt","ch"]}}}}static getSequenceActionMap(e){const t=e.split(i.METHOD_COLON),n=t[0].split("[")[0];let r;return r=t[0].indexOf(`[${i.API_REQUEST_TYPE}]`)>0?i.API_REQUEST_TYPE:t[0].indexOf(`[${i.API_RESPONSE_TYPE_EMIT}]`)>0?i.API_RESPONSE_TYPE_EMIT:i.API_RESPONSE_TYPE_BROADCAST,{sequence:n,actionType:r,actionName:t[1]}}static updateCallbackExeConditionMap(e){let t={emit:!0,broadcast:!0};return i.map[e]&&(t.emit=!(Object.keys(i.map[e].responseEmitState).length>0),t.broadcast=!(Object.keys(i.map[e].responseBroadcastState).length>0)),t}static convertServerToApiIoType(e,t){return t.indexOf(`${i.API_SEPARATE_IO_TYPE_START}${i.API_REQUEST_TYPE}${i.API_SEPARATE_IO_TYPE_END}`)>=0?i.API_REQUEST_TYPE:t.indexOf(`${i.API_SEPARATE_IO_TYPE_START}${i.API_RESPONSE_TYPE_BROADCAST}${i.API_SEPARATE_IO_TYPE_END}`)>=0?i.API_RESPONSE_TYPE_BROADCAST:t.indexOf(`${i.API_SEPARATE_IO_TYPE_START}${i.API_RESPONSE_TYPE_EMIT}${i.API_SEPARATE_IO_TYPE_END}`)>=0?i.API_RESPONSE_TYPE_EMIT:i.API_SETUP}static convertExtToClientActionType(e,t){return i.convertApiToClientActionType(t)}static convertApiToClientActionType(e){return 0===e.indexOf(i.API_TO_SERVER_REQUEST)?e.replace(i.API_TO_SERVER_REQUEST,i.API_TO_CLIENT_REQUEST):0===e.indexOf(i.SERVER_TO_API_EMIT)?e.replace(i.SERVER_TO_API_EMIT,i.API_TO_CLIENT_EMIT):0===e.indexOf(i.SERVER_TO_API_BROADCAST)?e.replace(i.SERVER_TO_API_BROADCAST,i.API_TO_CLIENT_BROADCAST):e}static getRequestState(e,t,n){const r=e.replace(i.API_TO_SERVER_REQUEST,""),{requestPublicState:o,requestPrivateState:l}=i.map[r];let u={[i.REDUX_ACTION_KEY]:r};return Object.keys(l).forEach((e=>{u[e]||(u[e]={}),l[e].forEach((r=>{if(!u[e][r]){let i=t[e][r];n&&n[e]&&a.default.isSet(n[e][r])&&(i=n[e][r]),u[e][r]=i}}))})),Object.keys(o).forEach((e=>{u[e]||(u[e]={}),o[e].forEach((t=>{u[e][t]||(u[e][t]=n)}))})),u}static getResponseState(e,t,n){const r=t.type,a=i.map[r][`response${e}State`];let o={[i.REDUX_ACTION_KEY]:r};return Object.keys(a).forEach((e=>{if(!n[e])throw`SEQUENCE ERROR: NO_UPDATE_STATE_KEY: ${t.type}: ${e}`;{const r=a[e];let i=n[e];switch(i.constructor.name){case"model":i=i.toJSON(),delete i._id,delete i.__v}"*"===r?o={...o,[e]:i}:r.forEach((r=>{if(void 0===n[e][r])throw`SEQUENCE ERROR: NO_UPDATE_STATE_COLUMN_NAME: ${t.type}: ${e}.${r}`;o={...o,[e]:{...o[e],[r]:n[e][r]}}}))}})),o}static getRequestActionState(e,t=null,n=null){return"string"==typeof t&&null===n?{type:e}:"object"==typeof t&&"object"==typeof n?{...t,...n,type:e}:"string"==typeof t&&"object"==typeof n?{...n,type:e}:{...t,type:e}}}t.default=i},300:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(6894)),i=r(n(8399)),o=r(n(1665)),{PRODUCTION:l,DEVELOPMENT:u,PRODUCTION_DOMAIN:s,DEVELOPMENT_DOMAIN:d,SUB_DOMAINS:c,PORTS:f}=o.default,p=a.default.hasOwnProperty("hostname")?a.default.hostname():d,h=function(e){if("browser"===i.default.title){if(location.href.indexOf(o.default.DEVELOPMENT_DOMAIN)>=0){const e=Number(location.port);return e===o.default.PORTS.DEVELOPMENT_CLIENT||e===o.default.PORTS.DEVELOPMENT_API||e===o.default.PORTS.DEVELOPMENT_COVER||e===o.default.PORTS.DEVELOPMENT_COMPONENTS||e===o.default.PORTS.DEVELOPMENT_TUNE?o.default.DEVELOPMENT:o.default.LOCALHOST}return o.default.PRODUCTION}return e.indexOf(o.default.AWS_HOST_KEY)>=0?o.default.PRODUCTION:o.default.DEVELOPMENT}(p),g={client:"talkn.client.js",api:"talkn.api.js",wsWorker:"ws.api.worker.js",ext:"talkn.ext.js",cover:"talkn.cover.js",tune:"talkn.tune.js",components:"talkn.components.js"},m=h===u,b=h===l?s:d,y=`${c.WWW}.${b}`,v=`${c.COVER}.${b}`,w=`${c.API}.${b}`,E=m?`${b}:${f.DEVELOPMENT_API}/${g.api}`:`${w}/v1`,x=m?`${b}:${f.DEVELOPMENT_CLIENT}/${g.client}`:`${c.CLIENT}.${b}`,_=`${c.DESC}.${b}`,S=`${c.PORTAL}.${b}`,C=`${c.ASSETS}.${b}`,k=`${c.AUTO}.${b}`,P=`${c.EXT}.${b}`,M=`${c.COMP}.${b}`,O=`${c.OWN}.${b}`,A=`${c.NEWS}.${b}`,T=`${c.TUNE}.${b}`,I=`${c.COMPONENTS}.${b}`,$=`${C}/img/`,j={domain:b,isDev:m,env:h,files:g,hostName:p,apiURL:w,apiAccessURL:E,coverURL:v,wwwURL:y,descURL:_,portalURL:S,clientURL:x,assetsURL:C,autoURL:k,extURL:P,compURL:M,ownURL:O,newsURL:A,tuneURL:T,bannerURL:`${c.BANNER}.${b}`,componentsURL:I,transactionURL:`${c.TRANSACTION}.${b}`,assetsImgPath:$,assetsCoverPath:`${C}/cover/`,assetsIconPath:`${C}/icon/`,assetsJsPath:`${C}/js/`,sessionURL:`${c.SESSION}.${b}`,description:"talkn can share comments with users watching the same WEB page. Please enjoy the world of talkn.",apiVer:1,lpLanguages:["en","zh","ja","de","fr","hi","pt","it","ru","ko","es","id","tr","nl","ar","zh-TW","pl","sv","th","fa","nn","ga","he","mr"],defaultBirthdayUnixtime:1e12,findOneThreadActiveHour:1,findOnePostCnt:30,findOneLimitCnt:300,ogpImages:{Html:`//${$}talkn_logo_html.png`,Music:`//${$}talkn_logo_music.png`,Video:`//${$}talkn_logo_video.png`},defaultFavicon:`//${c.ASSETS}.${b}/favicon.ico`};t.default={...j}},1665:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(8399)),i={APP_NAME:"talkn",PRODUCTION:"PRODUCTION",LOCALHOST:"LOCALHOST",DEVELOPMENT:"DEVELOPMENT",PRODUCTION_IP:a.default.env.HOSTNAME?a.default.env.HOSTNAME:"localhost",PRODUCTION_DOMAIN:"talkn.io",DEVELOPMENT_DOMAIN:"localhost",AWS_HOST_KEY:"ec2.internal",PORTS:{HTTP:80,HTTPS:443,DEVELOPMENT_COVER:8e3,DEVELOPMENT_API:8001,DEVELOPMENT_COMPONENTS:8002,DEVELOPMENT_TUNE:8003,DEVELOPMENT_CLIENT:8080,REDIS:6379,MONGO:27017,SOCKET_IO:10443},SUB_DOMAINS:{WWW:"www",API:"api",DESC:"desc",PORTAL:"portal",CLIENT:"client",ASSETS:"assets",SESSION:"session",AUTO:"auto",OWN:"own",NEWS:"news",BANNER:"banner",COVER:"cover",RANK:"rank",EXT:"ext",COMPONENTS:"components",TUNE:"tune",TRANSACTION:"transaction"},APP_TYPES:{CLIENT:"CLIENT",PORTAL:"PORTAL",EXTENSION:"EXTENSION",API:"API",COVER:"COVER",COMPONENTS:"COMPONENTS",TUNE:"TUNE"},URL:{twitter:"https://twitter.com/",facebook:"https://www.facebook.com/",appstore:"https://itunes.apple.com/app/id",playstore:"https://play.google.com/store/apps/details?id=",chromeExtension:"https://chrome.google.com/webstore/detail/talkn-for-chrome/dkngnmdlcofambpfaccepbnjgfholgbo?hl=en"},talknClientJs:"talkn.client.js",talknApiJs:"talkn.api.js",talknRankJs:"talkn.rank.js",noInnerNotif:"Sorry, No Function.",bannerClass:"talkn_banner",storageKey:{baseKey:"@talkn@",postsTimelineZero:"postsTimelineZero",postsTimeline:"postsTimeline",postsSingle:"postsSingle",postsMulti:"postsMulti",postsChild:"postsChild",postsLogs:"postsLogs",threads:"threads"}};t.default=i},6365:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={news:{endpointHost:"microsoft-azure-bing-news-search-v1.p.rapidapi.com",endpointSearchHost:"microsoft-azure-bing-news-search-v1.p.rapidapi.com/search?q=",endpointKey:"2ca25813c0msh9db483c3530c143p1009bdjsnde50b6575cf1"},music:{endpointHost:"https://rss.itunes.apple.com/api/v1/${country}/${media}/${genre}/all/${limit}/explicit.json",endpointSearchHost:"",endpointKey:""}}},2865:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.storiesIndexInit=t.configInit=t.configStoriesLimit=t.configUserCategoryChLimit=void 0,t.configUserCategoryChLimit=10,t.configStoriesLimit=10,t.configInit={version:"1.0.0",storiesIndex:[],userCategoryChs:[],favicon:"",ogpImage:"",iamTags:[],relationTags:[]},t.storiesIndexInit={title:"",eyeCatch:"",interview:""}},6562:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7548)),i=r(n(7865));t.default={isUrl:e=>!!new RegExp("^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*|\\/)?$","i").test(e),getSaveFaviconName:e=>{if(e){const t=e.replace(/\u002f/g,"_");return t.indexOf(".png")>0?t:t+".png"}},trimPx:e=>e.toString().replace("px",""),getUpperPrefix:e=>{let t=e.charAt(0).toUpperCase()+e.slice(1);return t.substring(0,1).toUpperCase()+t.substring(1)},timeAgoFormatter:(e,t,n,r=i.default.extensionModeNone)=>{let a=String(t);switch(String(t)){case"year":a="YR";break;case"month":a="mo";break;case"week":a="wk";break;case"hour":a="hr";break;case"minute":a="min";break;case"second":a="sec"}return`${e} ${a} ${r===i.default.extensionModeNone?n:n.replace("ago","")}`},parseJwt:e=>{if(null===e)return null;const t=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),n=decodeURIComponent((0,a.default)(t).split("").map((e=>"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2))).join(""));return JSON.parse(n)},deepCopy:e=>JSON.parse(JSON.stringify(e)),deepEquals:(e,t)=>JSON.stringify(e)===JSON.stringify(t),getAgeByBirthday:e=>{let t;if(0!==e){const n=new Date(e),r=new Date;t=r.getFullYear()-n.getFullYear()+(new Date(r.getFullYear(),n.getMonth(),n.getDate()).getTime()>r.getTime()?-1:0)}return t||"-"}}},8957:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(3935)),o=r(n(7303));t.default=()=>{i.default.render(a.default.createElement(o.default,null),document.querySelector("div#talkn"))}},8203:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.formData=t.json=void 0;const a=r(n(300)),i="POST",o="cors";t.json=async(e,t)=>{const n=JSON.stringify(t);if(JSON.parse(n)){const t=await fetch(`https://${a.default.coverURL}/api/${e}`,{method:i,mode:o,headers:{Accept:"application/json","Content-Type":"application/x-www-form-urlencoded; charset=utf-8"},cache:"no-cache",body:n});return await t.json()}},t.formData=async(e,t,n)=>{const r=await fetch(`https://${a.default.coverURL}/api/${e}`,{method:i,mode:o,cache:"no-cache",body:n});200!==r.status&&console.warn(r)},t.default={json:t.json,formData:t.formData}},4034:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Button=t.buttonThemeDefault=t.buttonThemeBase=t.buttonThemeBright=t.buttonThemeCold=t.buttonThemeFlat=t.buttonThemeHot=void 0;const l=i(n(7294)),u=o(n(9163)),s=n(8352),d=i(n(9749)),c=o(n(6032));t.buttonThemeHot=c.default.hotColor,t.buttonThemeFlat=c.default.flatColor,t.buttonThemeCold=c.default.coldColor,t.buttonThemeBright=c.default.brightColor,t.buttonThemeBase=c.default.baseColor,t.buttonThemeDefault=c.default.themeColor,t.default=e=>{const[n,r]=(0,l.useState)(!1),a={...s.flexLayoutCenterPropsInit,...d.layoutPropsInit,theme:t.buttonThemeDefault,animation:!0,className:"Button",width:"auto",...e};return(0,l.useEffect)((()=>{r(!0)}),[]),l.default.createElement(t.Button,{...a,didMount:n},a.children)},t.Button=u.default.button`
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: center;
  min-height: ${c.default.baseHeight}px;
  ${d.LayoutCss};
  padding: ${c.default.doublePadding}px ${2*c.default.doublePadding}px;
  color: ${e=>f(e)};
  outline: none;
  cursor: ${e=>e.disabled||void 0===e.onClick?"normal":"pointer"};
  background: ${e=>p(e)};
  border: ${e=>e.disabled?1:0}px solid ${c.default.borderColor};
  border-radius: 7px;
  transition: ${e=>e.didMount&&e.animation?c.default.transitionDuration:0}ms;
  white-space: nowrap;
  user-select: none;
  :hover {
    box-shadow: ${e=>e.disabled||void 0===e.onClick?0:c.default.shadowHorizonBright};
  }
`;const f=e=>{if(e.disabled)return c.default.brightColor;switch(e.theme){case t.buttonThemeDefault:case t.buttonThemeHot:case t.buttonThemeBright:return c.default.whiteColor}},p=e=>e.disabled?"none":e.theme},8117:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(2848));t.default=({ch:e})=>a.default.createElement(l,null,a.default.createElement(o.default,null,"Update your site that"),a.default.createElement(o.default,null,`/${e}talkn.config.json`));const l=i.default.div`
  display: flex;
  flex-flow: column wrap;
  align-items: center;
  justify-content: center;
  height: 340px;
`},8352:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.FlexCss=t.flexPropsInit=t.flexLayoutCenterPropsInit=t.flexLayoutPropsInit=void 0;const l=o(n(7294)),u=i(n(9163)),s=i(n(9749));t.flexLayoutPropsInit={flow:"row nowrap",alignItems:"flex-start",justifyContent:"flex-start",inline:!1},t.flexLayoutCenterPropsInit={flow:"row nowrap",alignItems:"center",justifyContent:"center",inline:!1},t.flexPropsInit={children:l.default.createElement(l.default.Fragment,null),tagType:"div",...s.layoutPropsInit,...t.flexLayoutPropsInit},t.default=e=>{const n={...t.flexPropsInit,...e,className:e.className?`Flex ${e.className}`:"Flex"};switch(n.tagType){default:case"div":return l.default.createElement(c,{...n},n.children);case"span":return l.default.createElement(f,{...n},n.children)}},t.FlexCss=u.css`
  display: ${e=>e.inline?"inline-flex":"flex"};
  flex-flow: ${e=>e.flow};
  align-items: ${e=>e.alignItems};
  justify-content: ${e=>e.justifyContent};
`;const d=u.css`
  ${t.FlexCss};
  ${s.LayoutCss};
`,c=u.default.div`
  ${d}
`,f=u.default.span`
  ${d}
`},819:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=i(n(9163)),s=n(8352),d=i(n(9749)),c=o(n(6032)),f=(e,t)=>{const n=h[e],r={...d.layoutPropsInit,...s.flexLayoutPropsInit,...t};return l.default.createElement(n,{className:`H${e}`,...r},r.children)},p=u.css`
  ${s.FlexCss};
  ${d.LayoutCss};
`,h={1:u.default.h1`
    margin: 0;
    ${p}
    font-size: ${e=>e.fontSize?e.fontSize:"24px"};
    font-weight: ${e=>e.fontWeight?e.fontWeight:"200"};
    line-height: ${e=>e.lineHeight?e.lineHeight:"24px"};
    color: ${e=>e.color?e.color:c.default.fontColor};
  `,2:u.default.h2`
    margin: 0;
    ${p}
    font-size: ${e=>e.fontSize?e.fontSize:"20px"};
    font-weight: ${e=>e.fontWeight?e.fontWeight:"200"};
    line-height: ${e=>e.lineHeight?e.lineHeight:"24px"};
    color: ${e=>e.color?e.color:c.default.fontColor};
  `,3:u.default.h3`
    margin: 0;
    ${p}
    font-size: ${e=>e.fontSize?e.fontSize:"24px"};
    font-weight: ${e=>e.fontWeight?e.fontWeight:"200"};
    line-height: ${e=>e.lineHeight?e.lineHeight:"24px"};
    color: ${e=>e.color?e.color:c.default.fontColor};
  `,4:u.default.h4`
    margin: 0;
    ${p}
    font-size: ${e=>e.fontSize?e.fontSize:"24px"};
    font-weight: ${e=>e.fontWeight?e.fontWeight:"200"};
    line-height: ${e=>e.lineHeight?e.lineHeight:"24px"};
    color: ${e=>e.color?e.color:c.default.fontColor};
  `,5:u.default.h5`
    margin: 0;
    ${p}
    font-size: ${e=>e.fontSize?e.fontSize:"24px"};
    font-weight: ${e=>e.fontWeight?e.fontWeight:"200"};
    line-height: ${e=>e.lineHeight?e.lineHeight:"24px"};
    color: ${e=>e.color?e.color:c.default.fontColor};
  `,6:u.default.h6`
    margin: 0;
    ${p}
    font-size: ${e=>e.fontSize?e.fontSize:"24px"};
    font-weight: ${e=>e.fontWeight?e.fontWeight:"200"};
    line-height: ${e=>e.lineHeight?e.lineHeight:"24px"};
    color: ${e=>e.color?e.color:c.default.fontColor};
  `};t.default={One:e=>f(1,e),Two:e=>f(2,e),Three:e=>f(3,e),Four:e=>f(4,e),Five:e=>f(5,e),Six:e=>f(6,e)}},2375:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(9163)),s=n(8352),d=i(n(9749));t.default=e=>{const t={...d.layoutPropsInit,...s.flexLayoutPropsInit,...e};return l.default.createElement(l.default.Fragment,null,l.default.createElement(c,{...t},t.children),t.br&&l.default.createElement("br",null))};const c=u.default.label`
  ${s.FlexCss};
  ${d.LayoutCss};
  font-weight: 200;
`},6020:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(9163)),s=n(8352),d=i(n(7344)),c=i(n(9749));t.default=e=>{const t={...c.layoutPropsInit,...s.flexLayoutPropsInit,...d.contentPropsInit,...e};return l.default.createElement(f,{...t},t.children)};const f=u.default.li`
  ${s.FlexCss};
  ${c.LayoutCss};
  ${d.ContentCss}
`},4158:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(4158));t.default=e=>{const{type:t,nodes:n}=e;let{props:r}=e;if("string"==typeof n&&(e=>e.indexOf("&lt;")>=0&&e.indexOf("&gt;")>=0?1:e.indexOf("<")>=0&&e.indexOf("</")>=0?2:e.indexOf("<")>=0&&e.indexOf("/>")>=0?3:0)(n)){void 0===r&&(r={});const e=n.replace(/&lt;/g,"<").replace(/&gt;/g,">");return r.dangerouslySetInnerHTML={__html:e},a.default.createElement(t,r)}return"object"==typeof n&&"Array"===n.constructor.name&&n.length>0?a.default.createElement(t,r,n.map(((e,t)=>a.default.createElement(i.default,{key:`${e.type}${t}`,type:e.type,props:e.props,nodes:e.nodes})))):n&&n.length>0?a.default.createElement(t,r,n):a.default.createElement(t,r)}},2848:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(6032));t.default=({lv:e=1,className:t="P",children:n})=>{switch(e){case 1:return a.default.createElement(l,{className:t},n);case 2:return a.default.createElement(u,{className:t},n);case 3:return a.default.createElement(s,{className:t},n);case 4:return a.default.createElement(d,{className:t},n);case 5:default:return a.default.createElement(c,{className:t},n)}};const l=i.default.p`
  margin: 0 auto;
  font-size: 20px;
  font-weight: 200;
  line-height: 32px;
  user-select: none;
  color: ${o.default.fontColor};
`,u=i.default.p`
  margin: 0 auto;
  line-height: 30px;
  font-size: 18px;
  font-weight: 200;
  user-select: none;
  color: ${o.default.fontColor};
`,s=i.default.p`
  margin: 0 auto;
  font-size: 16px;
  font-weight: 200;
  user-select: none;
  color: ${o.default.fontColor};
`,d=i.default.p`
  margin: 0 auto;
  font-size: 16px;
  font-weight: 200;
  user-select: none;
  color: ${o.default.fontColor};
`,c=i.default.p`
  margin: 0 auto;
  font-size: 16px;
  user-select: none;
  color: ${o.default.fontColor};
`},5990:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(9163)),s=n(8352),d=i(n(9749));t.default=e=>{const t={...d.layoutPropsInit,...s.flexLayoutPropsInit,...e};return l.default.createElement(c,{...t},t.children)};const c=u.default.section`
  ${s.FlexCss};
  ${d.LayoutCss};
`},3193:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)).default.div`
  width: ${e=>e.size}px;
  height: ${e=>e.size}px;
  border-top: 0.3em solid rgba(79, 174, 159, 0.7);
  border-right: 0.3em solid rgba(0, 0, 0, 0);
  border-bottom: 0.3em solid rgba(0, 0, 0, 0);
  border-left: 0.3em solid rgba(0, 0, 0, 0);
  border-radius: 50%;
  animation: load8 1s infinite cubic-bezier(0.39, 0.58, 0.57, 1);
  @keyframes load8 {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
`;t.default=({size:e="60"})=>a.default.createElement(i,{size:e})},1434:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(8352)),d=o(n(2375)),c=n(3549);t.default=({name:e,value:t=0,label:n,disabled:r=!1,width:a="auto",className:i="InputDate",onChange:o})=>{const u=`InputDate${e}`,[s,c]=(0,l.useState)(h(t));return(0,l.useEffect)((()=>{const e=h(t);c(e)}),[t]),l.default.createElement(f,{className:i||e,width:a,flow:"row wrap",alignItems:"center",justifyContent:"flex-start"},n&&l.default.createElement(d.default,{htmlFor:u,inline:!0,sideMargin:!0},n),l.default.createElement(p,{type:"date",id:u,name:e,className:i,value:s,onChange:e=>{const t=e.target.value,n=new Date(t).getTime();c(t),o&&o(n)},disabled:r}))};const f=(0,u.default)(s.default)`
  label {
    flex: 1 1 auto;
  }
  input {
    flex: 1 1 auto;
  }
`,p=u.default.input`
  ${c.InputCss};
`,h=e=>{const t=new Date(e);return t.getFullYear()+"-"+("00"+(t.getMonth()+1)).slice(-2)+"-"+("00"+t.getDate()).slice(-2)}},2584:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.imageDefault=t.imageIcon=t.imageBg=void 0;const l=i(n(7294)),u=i(n(9163)),s=o(n(300)),d=o(n(6032)),c="dragover";t.imageBg="bg",t.imageIcon="icon",t.imageDefault=t.imageBg,t.default=({type:e=t.imageDefault,email:n,value:r="",className:a,onChange:i})=>{const o=(0,l.useRef)(l.default.createElement("div",null)),u=(0,l.useRef)(l.default.createElement("input",null)),[s,d]=(0,l.useState)("dragleave"),f=t=>{if(u.current){const r=o.current;let a=new FileReader;a.onload=()=>{const o=new FormData,l=String(a.result),u=new File([l],n,{type:t.type,lastModified:(new Date).getTime()});let s=t.type.split("/")[1];s="jpeg"===s?"jpg":s;const d=`${e}.${s}`;r.style.backgroundImage=`url(${l})`,o.append(e,u),i(o,d)},t&&a.readAsDataURL(t)}};return(0,l.useEffect)((()=>{if(u.current){const e=u.current;e.addEventListener("dragover",(e=>{e.preventDefault(),d(c)})),e.addEventListener("dragleave",(e=>{e.preventDefault(),d("dragleave")})),e.addEventListener("drop",(e=>{e.preventDefault(),d("draged");let t=e.dataTransfer.files;f(t[0])}))}}),[]),l.default.createElement(h,{ref:o,email:n,type:e,dragStatus:s,className:a,value:r},l.default.createElement(g,{ref:u,type:"file",className:e,accept:"image/*",name:"photo",dragStatus:s,onChange:e=>{const t=e.target.files[0];f(t)}}))};const f=u.css`
  width: 100%;
  height: 230px;
  background-color: ${d.default.brightColor};
  border: ${e=>e.dragStatus===c?3:0}px dashed ${d.default.themeColor};
  :hover {
    box-shadow: ${d.default.shadowHorizonBright};
  }
`,p=u.css`
  width: 90px;
  height: 90px;
  border-radius: 50%;
  background-color: rgb(190, 190, 190, 0.9);
  border: ${e=>e.dragStatus===c?3:0}px dashed ${d.default.themeColor};
  :hover {
    box-shadow: 0px 0px 15px rgb(150 150 150);
  }
`,h=u.default.div`
  display: flex;
  align-items: center;
  justify-content: center;
  ${e=>e.type===t.imageBg?f:p}
  ${d.default.brightColor};
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  background-image: url(${e=>m({email:e.email,image:e.value})});
  background-position: center;
  transition: ${d.default.transitionDuration}ms;
`,g=u.default.input`
  display: flex;
  align-items: center;
  justify-content: center;
  width: inherit;
  height: inherit;
  opacity: 0;
  cursor: pointer;
`,m=({email:e,image:t})=>t&&""!==t?`https://${s.default.assetsCoverPath}${e}/${t}`:"none"},752:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(8352)),d=o(n(2375)),c=o(n(6032)),f=n(3549);t.default=({name:e,value:t="",label:n,width:r="auto",className:a="InputText",onChange:i})=>{const o=`InputText${e}`,[u,s]=(0,l.useState)(t);return l.default.createElement(p,{className:a||e,width:r,flow:"row wrap",alignItems:"center",justifyContent:"flex-start"},n&&l.default.createElement(d.default,{htmlFor:o,sideMargin:!0},n),l.default.createElement(h,{type:"text",id:o,name:e,className:a,value:u,onChange:e=>{s(e.target.value),i&&i(e.target.value)}}))};const p=(0,u.default)(s.default)`
  label {
    flex: 1 1 auto;
  }
  input {
    flex: 1 1 auto;
  }
`,h=u.default.input`
  ${f.InputCss};
  appearance: none;
  -webkit-appearance: none;
  margin: ${c.default.baseMargin}px 0;
`},3549:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.InputCss=void 0;const a=n(9163),i=r(n(6032)),o=n(2404);t.InputCss=a.css`
  display: block;
  min-width: fit-content;
  max-width: calc(100% - ${i.default.quadMargin}px);
  padding: ${i.default.doublePadding}px;
  margin-left: ${i.default.quadMargin}px;
  margin-right: ${i.default.quadMargin}px;
  outline-color: ${(0,o.getRgbaColor)(i.default.themeRgb)};
  color: ${i.default.fontColor};
  border-radius: 3px;
  border: 1px solid ${i.default.borderColor};
  background: rgb(250, 250, 250, 0.4);
  cursor: ${e=>!0===e.disabled&&void 0!==e.disabled?"normal":"pointer"};
  transition: ${i.default.transitionDuration}ms;
  appearance: none;
  -webkit-appearance: none;
  margin: ${i.default.baseMargin}px 0;
  :focus {
    ${e=>!0===e.disabled&&void 0!==e.disabled?"":"background: rgba(129, 224, 209, 0.1)"};
  }
  :hover {
    ${e=>!0===e.disabled&&void 0!==e.disabled?"":"background: rgba(129, 224, 209, 0.1)"};
  }
`},6490:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(1434)),i=r(n(2584)),o=r(n(752));t.default={DropImage:i.default,Text:o.default,Date:a.default}},723:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294));t.default=({value:e,children:t})=>a.default.createElement("option",{value:e},t)},962:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=n(5391),l=r(n(6032)),u=n(6392);t.default=({name:e,value:t,className:n="Select",disabled:r=!1,noSelectOption:i=!1,width:l="auto",onChange:u,children:d})=>a.default.createElement(s,{className:n,name:e,onChange:e=>{const t=e.target.value===o.noSelectOptionLabel?"":String(e.target.value);u&&u(t)},disabled:r,value:t,width:l},i&&(0,o.getNoSelectOption)(),d);const s=i.default.select`
  ${u.InputCss};
  width: ${e=>e.width};
  margin: 0 ${l.default.baseMargin}px ${l.default.baseMargin}px 0;
`},6392:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.InputCss=void 0;const a=n(9163),i=r(n(6032)),o=n(2404),l=i.default.baseTension/3,u=`rgb(${l} ${l} ${l})`;t.InputCss=a.css`
  display: block;
  min-width: fit-content;
  max-width: calc(100% - ${i.default.quadMargin}px);
  padding: ${i.default.doublePadding}px;
  margin-left: ${i.default.quadMargin}px;
  margin-right: ${i.default.quadMargin}px;
  outline-color: ${(0,o.getRgbaColor)(i.default.themeRgb)};
  color: ${i.default.fontColor};
  border-radius: 3px;
  border: 1px solid ${i.default.borderColor};
  background: rgb(250, 250, 250, 0.4);
  cursor: ${e=>!0===e.disabled&&void 0!==e.disabled?"normal":"pointer"};
  transition: ${i.default.transitionDuration}ms;
  appearance: none;
  -webkit-appearance: none;
  margin: ${i.default.baseMargin}px 0;
  :focus {
    ${e=>!0===e.disabled&&void 0!==e.disabled?"":"background: rgba(129, 224, 209, 0.1)"};
  }
  :hover {
    ${e=>!0===e.disabled&&void 0!==e.disabled?"":"background: rgba(129, 224, 209, 0.1)"};
  }
  :disabled {
    color: ${u};
  }
`},5391:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getNoSelectOption=t.noSelectOptionLabel=void 0;const a=r(n(7294)),i=r(n(723)),o=r(n(962));t.noSelectOptionLabel="-",t.getNoSelectOption=()=>a.default.createElement("option",{value:void 0},t.noSelectOptionLabel),t.default={Single:o.default,Option:i.default}},1187:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(8352)),l=r(n(6032));t.default=()=>a.default.createElement(u,{className:"checkwrapper",alignItems:"center",justifyContent:"center"},a.default.createElement("svg",{version:"1.1",id:"Layer_1",x:"0px",y:"0px",viewBox:"0 0 98.5 98.5",enableBackground:"new 0 0 98.5 98.5"},a.default.createElement("path",{className:"checkmark",fill:"none",strokeWidth:"4",strokeMiterlimit:"50",d:"M81.7,17.8C73.5,9.3,62,4,49.2,4\n\tC24.3,4,4,24.3,4,49.2s20.3,45.2,45.2,45.2s45.2-20.3,45.2-45.2c0-8.6-2.4-16.6-6.5-23.4l0,0L45.6,68.2L24.7,47.3"})));const u=(0,i.default)(o.default)`
  position: absolute;
  width: 100%;
  height: 100%;

  svg {
    width: 100px;
    height: 100px;
  }

  .checkmark {
    stroke: ${l.default.saveCheckColor};
    stroke-dashoffset: 745.74853515625;
    stroke-dasharray: 745.74853515625;
    animation: dash 2s ease-out forwards;
  }

  @keyframes dash {
    0% {
      stroke-dashoffset: 745.74853515625;
    }
    100% {
      stroke-dashoffset: 0;
    }
  }
`},9946:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(8352)),l=n(9749);t.default=e=>{const t={...l.layoutPropsInit,...e};return a.default.createElement(u,{...t},a.default.createElement("svg",{version:"1.1",id:"_x32_",xmlns:"http://www.w3.org/2000/svg",x:"0px",y:"0px",viewBox:"0 0 512 512",xmlSpace:"preserve"},a.default.createElement("g",null,a.default.createElement("path",{d:"M165.628,461.127c0,0,0.827-0.828,1.838-1.839l194.742-194.742c1.012-1.011,1.92-1.92,2.019-2.019\n\t\tc0.099-0.099,1.008-1.008,2.019-2.019l103.182-103.182c0.018-0.018,0.018-0.048,0-0.067L354.259,42.092\n\t\tc-0.018-0.018-0.048-0.018-0.067,0L251.01,145.274c-1.011,1.011-1.92,1.92-2.019,2.019c-0.099,0.099-1.008,1.008-2.019,2.019\n\t\tL50.401,345.884c-0.006,0.006-0.01,0.012-0.012,0.02L0.002,511.459c-0.011,0.036,0.023,0.07,0.059,0.059l163.079-49.633\n\t\tC164.508,461.468,165.628,461.127,165.628,461.127z M36.734,474.727l25.159-82.666c0.01-0.034,0.053-0.045,0.078-0.02\n\t\tl57.507,57.507c0.025,0.025,0.014,0.068-0.02,0.078l-82.666,25.16C36.756,474.797,36.722,474.764,36.734,474.727z"}),a.default.createElement("path",{d:"M502.398,104.432c12.803-12.804,12.803-33.754,0-46.558l-47.791-47.792c-12.804-12.803-33.754-12.803-46.558,0\n\t\tl-23.862,23.862c-0.018,0.018-0.018,0.048,0,0.067l94.282,94.282c0.018,0.018,0.048,0.018,0.067,0L502.398,104.432z"}))))};const u=(0,i.default)(o.default)`
  width: 100%;
  height: 100%;
`},5246:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(8352)),l=n(9749);t.default=e=>{const t={...l.layoutPropsInit,...e};return a.default.createElement(u,{...t},a.default.createElement("svg",{version:"1.1",id:"_x32_",xmlns:"http://www.w3.org/2000/svg",x:"0px",y:"0px",viewBox:"0 0 512 512",xmlSpace:"preserve"},a.default.createElement("g",null,a.default.createElement("path",{d:"M446.025,92.206c-40.762-42.394-97.487-69.642-160.383-72.182c-15.791-0.638-29.114,11.648-29.752,27.433\n\t\tc-0.638,15.791,11.648,29.114,27.426,29.76c47.715,1.943,90.45,22.481,121.479,54.681c30.987,32.235,49.956,75.765,49.971,124.011\n\t\tc-0.015,49.481-19.977,94.011-52.383,126.474c-32.462,32.413-76.999,52.368-126.472,52.382\n\t\tc-49.474-0.015-94.025-19.97-126.474-52.382c-32.405-32.463-52.368-76.992-52.382-126.474c0-3.483,0.106-6.938,0.302-10.364\n\t\tl34.091,16.827c3.702,1.824,8.002,1.852,11.35,0.086c3.362-1.788,5.349-5.137,5.264-8.896l-3.362-149.834\n\t\tc-0.114-4.285-2.88-8.357-7.094-10.464c-4.242-2.071-9.166-1.809-12.613,0.738L4.008,182.45c-3.05,2.221-4.498,5.831-3.86,9.577\n\t\tc0.61,3.759,3.249,7.143,6.966,8.974l35.722,17.629c-1.937,12.166-3.018,24.602-3.018,37.279\n\t\tc-0.014,65.102,26.475,124.31,69.153,166.944C151.607,465.525,210.8,492.013,275.91,492\n\t\tc65.095,0.014,124.302-26.475,166.937-69.146c42.678-42.635,69.167-101.842,69.154-166.944\n\t\tC512.014,192.446,486.844,134.565,446.025,92.206z"}))))};const u=(0,i.default)(o.default)`
  width: 100%;
  height: 100%;
`},9819:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(8352)),l=n(9749),u=r(n(6032));t.default=e=>{const t={...l.layoutPropsInit,...e};return a.default.createElement(s,{...t},a.default.createElement("svg",{version:"1.0",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 64.000000 64.000000",preserveAspectRatio:"xMidYMid meet"},a.default.createElement("g",{transform:"translate(0.000000,64.000000) scale(0.100000,-0.100000)",stroke:"none"},a.default.createElement("path",{d:"M77 545 c-4 -9 -7 -90 -7 -180 0 -182 4 -195 64 -195 41 0 121 -27\n137 -46 6 -8 15 -14 20 -14 5 0 9 82 9 183 0 178 -1 184 -22 203 -45 40 -82\n56 -138 61 -47 5 -58 3 -63 -12z"}),a.default.createElement("path",{d:"M455 553 c-23 -6 -62 -30 -92 -57 -22 -19 -23 -25 -23 -203 0 -101 4\n-183 9 -183 5 0 14 6 20 14 16 19 96 46 137 46 60 0 64 13 64 195 0 90 -3 170\n-6 179 -6 16 -63 20 -109 9z"}),a.default.createElement("path",{d:"M11 476 c-8 -9 -11 -72 -9 -202 l3 -189 127 0 c100 0 124 3 116 12\n-13 16 -101 43 -138 43 -14 0 -36 7 -48 16 -21 15 -22 21 -22 169 0 150 -6\n179 -29 151z"}),a.default.createElement("path",{d:"M607 483 c-4 -3 -7 -75 -7 -159 0 -147 -1 -154 -22 -168 -12 -9 -34\n-16 -48 -16 -37 0 -125 -27 -138 -43 -8 -9 16 -12 116 -12 l127 0 3 191 c2\n152 0 194 -11 203 -8 6 -17 8 -20 4z"}))))};const s=(0,i.default)(o.default)`
  width: 32px;
  height: 32px;
  svg {
    width: inherit;
    height: inherit;
  }
  path {
    fill: ${u.default.baseColor};
  }
`},4827:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(8352)),l=n(9749),u=r(n(6032));t.default=e=>{const t={...l.layoutPropsInit,...e};return a.default.createElement(s,{...t},a.default.createElement("svg",{version:"1.1",id:"_x32_",xmlns:"http://www.w3.org/2000/svg",x:"0px",y:"0px",viewBox:"0 0 512 512",xmlSpace:"preserve"},a.default.createElement("g",null,a.default.createElement("path",{d:"M490.249,308.087v-0.01L348.89,449.436c-17.525,17.525-40.416,26.237-63.459,26.256\n\t\tc-23.042-0.02-45.935-8.732-63.458-26.256L21.751,249.215L0,270.984l200.222,200.211c23.472,23.474,54.416,35.27,85.209,35.26\n\t\tc30.794,0.01,61.737-11.776,85.21-35.26L512,329.838L490.249,308.087z"}),a.default.createElement("path",{d:"M54.376,228.916l200.221,200.222c17.024,17.024,44.643,17.024,61.667,0l141.358-141.369\n\t\tc17.044-17.034,17.024-44.643,0-61.656L257.422,25.891c-7.651-7.631-17.846-12.168-28.62-12.708L79.852,5.601\n\t\tC67.535,4.971,55.538,9.597,46.805,18.32c-8.712,8.722-13.339,20.73-12.698,33.046l7.571,148.939\n\t\tC42.22,211.09,46.746,221.285,54.376,228.916z M115.041,86.535c14.02-14.02,36.732-14.02,50.751,0\n\t\tc14.02,14.02,14.02,36.742,0,50.761c-14.02,14.02-36.731,14.02-50.751,0C101.022,123.277,101.022,100.555,115.041,86.535z"}))))};const s=(0,i.default)(o.default)`
  width: 24px;
  height: 24px;
  svg {
    width: inherit;
    height: inherit;
  }
  path {
    fill: ${u.default.baseColor};
  }
`},5570:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(9163)),s=i(n(8352));t.default=e=>{const t={...s.flexLayoutCenterPropsInit,...e};return l.default.createElement(d,{...t},l.default.createElement("svg",{version:"1.1",id:"_x32_",xmlns:"http://www.w3.org/2000/svg",x:"0px",y:"0px",viewBox:"0 0 512 512",xmlSpace:"preserve"},l.default.createElement("g",null,l.default.createElement("path",{d:"M256,265.308c73.252,0,132.644-59.391,132.644-132.654C388.644,59.412,329.252,0,256,0\n\t\tc-73.262,0-132.643,59.412-132.643,132.654C123.357,205.917,182.738,265.308,256,265.308z"}),l.default.createElement("path",{d:"M425.874,393.104c-5.922-35.474-36-84.509-57.552-107.465c-5.829-6.212-15.948-3.628-19.504-1.427\n\t\tc-27.04,16.672-58.782,26.399-92.819,26.399c-34.036,0-65.778-9.727-92.818-26.399c-3.555-2.201-13.675-4.785-19.505,1.427\n\t\tc-21.55,22.956-51.628,71.991-57.551,107.465C71.573,480.444,164.877,512,256,512C347.123,512,440.427,480.444,425.874,393.104z"}))))};const d=(0,u.default)(s.default)`
  width: 100%;
  height: 100%;
`},5565:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.svgCss=void 0;const a=n(9163),i=r(n(1187)),o=r(n(9946)),l=r(n(5246)),u=r(n(9819)),s=r(n(4827)),d=r(n(5570));t.svgCss=a.css`
  width: 32px;
  height: 32px;
`,t.default={Checkmark:i.default,Edit:o.default,Reset:l.default,Tag:s.default,User:d.default,Story:u.default}},6874:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(300)),d=o(n(6562)),c=o(n(8203)),f=o(n(8352)),p=o(n(1765)),h="myMenu",g="selectAccount",m="logout",b=[{key:h,label:"MY PAGE"},{key:g,label:"ACCOUNTS"},{key:m,label:"LOGOUT"}];t.default=({session:e,setSession:t})=>{const[n,r]=(0,l.useState)(!1),a=async e=>{localStorage.setItem("talknCoverSession",e.credential);const n=d.default.parseJwt(e.credential);t(n);const r=d.default.deepCopy(n);delete r.iss,delete r.nbf,delete r.aud,delete r.sub,delete r.azp,delete r.picture,delete r.iat,delete r.exp,delete r.jti,delete r.given_name,delete r.family_name,r.email_verified&&(delete r.email_verified,c.default.json("logined",r)),window.location.reload()};return(0,l.useEffect)((()=>{const e=localStorage.getItem("talknCoverSession");let n=null;e&&(n=d.default.parseJwt(e),t(n)),window.google&&(window.google.accounts.id.initialize({client_id:"429873683760-v2hk18nua5vgf37ae0ovuhfbdrmah42d.apps.googleusercontent.com",cancel_on_tap_outside:!0,callback:a}),null===n&&null===e&&window.google.accounts.id.prompt((e=>{e.isNotDisplayed()||e.isSkippedMoment()})))}),[]),l.default.createElement(l.default.Fragment,null,l.default.createElement(y,{className:"Account",onClick:()=>{document.cookie="g_state=''",null===localStorage.getItem("talknCoverSession")?window.google.accounts.id.prompt():r(!0)}},e&&""===e.picture&&l.default.createElement(v,{alignItems:"center",justifyContent:"center",width:"48px",height:"48px",border:!0,borderRadius:"circle"},l.default.createElement("svg",{version:"1.1",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 48 48"},l.default.createElement("g",null,l.default.createElement("path",{fill:"#EA4335",d:"M24 9.5c3.54 0 6.71 1.22 9.21 3.6l6.85-6.85C35.9 2.38 30.47 0 24 0 14.62 0 6.51 5.38 2.56 13.22l7.98 6.19C12.43 13.72 17.74 9.5 24 9.5z"}),l.default.createElement("path",{fill:"#4285F4",d:"M46.98 24.55c0-1.57-.15-3.09-.38-4.55H24v9.02h12.94c-.58 2.96-2.26 5.48-4.78 7.18l7.73 6c4.51-4.18 7.09-10.36 7.09-17.65z"}),l.default.createElement("path",{fill:"#FBBC05",d:"M10.53 28.59c-.48-1.45-.76-2.99-.76-4.59s.27-3.14.76-4.59l-7.98-6.19C.92 16.46 0 20.12 0 24c0 3.88.92 7.54 2.56 10.78l7.97-6.19z"}),l.default.createElement("path",{fill:"#34A853",d:"M24 48c6.48 0 11.93-2.13 15.89-5.81l-7.73-6c-2.15 1.45-4.92 2.3-8.16 2.3-6.26 0-11.57-4.22-13.47-9.91l-7.98 6.19C6.51 42.62 14.62 48 24 48z"}),l.default.createElement("path",{fill:"none",d:"M0 0h48v48H0z"})))),e&&""!==e.picture&&l.default.createElement(w,{backgroundImage:e.picture})),l.default.createElement(p.default,{show:n,setShow:r,menus:b,onClick:t=>{const n=location.pathname.split("/")[2];switch(t){case h:window.location.replace(`//${s.default.coverURL}/${e.email}/${n}`);break;case g:window.google.accounts.id.prompt();break;case m:window.google.accounts.id.disableAutoSelect(),document.cookie="g_state=''",localStorage.removeItem("talknCoverSession"),window.location.reload()}r(!1)},fitRight:!0}))};const y=(0,u.default)(f.default)`
  width: 38px;
  height: 38px;
  min-width: 38px;
  min-height: 38px;
  cursor: pointer;
`,v=(0,u.default)(f.default)`
  width: inherit;
  height: inherit;
  min-width: inherit;
  min-height: inherit;
  svg {
    width: 24px;
    height: 24px;
  }
`,w=u.default.div`
  width: 38px;
  height: 38px;
  background-image: url(${e=>e.backgroundImage});
  background-size: 38px;
  background-repeat: no-repeat;
  border-radius: 50%;
`},990:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(6032)),d="green",c=e=>l.createElement(l.Fragment,null,l.createElement("label",null,e.label),l.createElement("div",{className:"lamp"}," ")),f=e=>l.createElement("button",{onClick:t=>e.onClick&&e.onClick(t)},l.createElement(c,{label:e.label})),p=e=>l.createElement("a",{href:e.href},l.createElement(c,{label:e.label})),h=e=>e.href?l.createElement(p,{...e}):l.createElement(f,{...e}),g=e=>{const t=e.className?e.className:"",n=e.active?`${t} active`:t;return l.createElement(m,{key:e.label,theme:e.theme,className:n},l.createElement(h,{...e}))};g.defaultProps={active:!1,theme:d},t.default=g;const m=u.default.li`
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: center;
  width: auto;
  min-width: 180px;
  height: 70px;
  padding: ${s.default.basePadding}px;
  margin: ${s.default.baseMargin}px;
  button {
    display: flex;
    flex-flow: column wrap;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: inherit;
    color: ${e=>e.theme===d?"rgba(0, 0, 0, 1)":"rgba(255, 255, 255, 1)"};
    cursor: pointer;
    background: ${e=>e.theme===d?"rgba(255, 255, 255, 1)":"rgba(68, 68, 68, 1)"};
    border: 0;
    outline: 0;
    transition: ${s.default.transitionDuration}ms;
  }
  a {
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: inherit;
    padding: 15px;
    color: #ddd;
    cursor: pointer;
    transition: ${s.default.transitionDuration}ms;
    background: ${e=>e.theme===d?"rgba(255, 255, 255, 1)":"rgba(68, 68, 68, 1)"};
  }
  a:hover,
  button:hover {
    background: ${e=>e.theme===d?"rgba(245, 245, 245, 1)":"rgba(98, 98, 98, 1)"};
  }
  .lamp {
    position: relative;
    width: 50%;
    max-width: 50px;
    height: 10px;
    max-height: 10px;
    cursor: pointer;
    background: ${e=>e.theme===d?s.default.markupColor:"rgba(155, 155, 155, 1)"};
    border-radius: 10px;
    transition: ${s.default.transitionDuration}ms;
  }
  label {
    position: relative;
    margin-bottom: 10px;
    cursor: pointer;
  }

  &.active div.lamp {
    cursor: pointer;
    background: ${e=>(e.theme,"rgba(79, 174, 159, 1)")};
  }
`},9425:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(8352)),l=r(n(819)),u=r(n(5990)),s=r(n(5565)),d=r(n(1187)),c=r(n(6032));t.default=({title:e,headerMenu:t,content:n,iconType:r="Tag",checkAnimation:i})=>{const u=s.default[r];return a.default.createElement(f,{className:"ProfileSection",flow:"column nowrap",resetOrigin:!0,border:!0,borderRadius:!0,upperMargin:!0,sideMargin:!0,sidePadding:!0,bottomPadding:!0,bottomMargin:!0},a.default.createElement(p,{className:"ProfileSectionHeader",width:"100%",alignItems:"center",justifyContent:"space-between",border:"underline",upperPadding:!0,sidePadding:!0,bottomPadding:!0},a.default.createElement(l.default.Five,{className:e,upperMargin:!0,bottomMargin:!0},a.default.createElement(u,{className:"ProfileSectionSvgIcon"}),e),t&&a.default.createElement(o.default,{className:"ProfileSectionMenu",flow:"column nowrap"},t)),a.default.createElement(o.default,{width:"100%",className:"ProfileSectionContent",flow:"column nowrap",upperPadding:!0,sidePadding:!0,sideMargin:!0,bottomPadding:!0},n),i&&a.default.createElement(d.default,null))};const f=(0,i.default)(u.default)`
  @media (max-width: ${c.default.spLayoutStrictWidth}px) {
    margin-right: 0;
    margin-left: 0;
    padding-right: 0;
    padding-left: 0;
    border-right: 0;
    border-left: 0;
    border-radius: 0;
  }
`,p=(0,i.default)(o.default)`
  .ProfileSectionSvgIcon {
    margin: 0 ${c.default.baseMargin}px 0 0;
  }
`},226:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(819)),l=r(n(6032));t.default=({number:e,title:t,flow:n="column wrap",children:r})=>a.default.createElement(c,{className:"Section"},a.default.createElement(f,{className:"upperLeft"},a.default.createElement(m,null,(e=>1===String(e).length?`0${e}`:String(e))(e))),a.default.createElement(p,{className:"upperRight"},a.default.createElement(o.default.Three,null,t)),a.default.createElement(h,{className:"bottomLeft"}),a.default.createElement(g,{className:"bottomRight",flow:n},r));const u=l.default.sepSize,s=l.default.sectionMarginColumn,d=l.default.sectionPadding,c=i.default.section`
  display: flex;
  flex-flow: row wrap;
  align-items: flex-end;
  justify-content: flex-start;
  padding: ${2*d}px ${d}px;
  margin: ${s}px 0;
  background: rgba(255, 255, 255, 0.9);
  border: 1px solid #eee;
  border-radius: ${l.default.baseSize}px;
  > * {
    box-sizing: border-content;
  }
  @media (max-width: ${l.default.spLayoutStrictWidth}px) {
    padding: ${d}px ${d/2}px;
    margin: ${s}px 0;
    border-radius: 0;
  }
`,f=i.default.span`
  flex: 1 1 ${u}px;
  display: flex;
  align-items: flex-end;
  justify-content: flex-end;
  width: ${u}px;
  padding-right: ${d}px;
  padding-bottom: ${d}px;
  border-bottom: 1px solid ${l.default.fontColor};
  @media (max-width: ${l.default.spLayoutStrictWidth}px) {
    align-items: center;
    justify-content: center;
    max-width: 80px;
    padding-right: 0;
  }
`,p=i.default.span`
  display: flex;
  align-items: flex-end;
  justify-content: flex-start;
  flex: 1 1 calc(100% - ${u+2*d}px);
  padding: ${d}px;
  border-left: 1px solid #666;
  border-bottom: 1px solid ${l.default.fontColor};
`,h=i.default.span`
  flex: 1 1 ${u}px;
  @media (max-width: ${l.default.spLayoutWidth}px) {
  }
  @media (max-width: ${l.default.spLayoutStrictWidth}px) {
    display: contents;
  }
`,g=i.default.span`
  flex: 1 1 calc(100% - ${u+2*d}px);
  flex-flow: ${e=>e.flow};
  padding: ${d}px ${d}px 0;
  border-left 1px solid ${l.default.fontColor};
  @media (max-width: ${l.default.spLayoutWidth}px) {
  }
  @media (max-width: ${l.default.spLayoutStrictWidth}px) {
    padding: ${d}px 0;
    border-left 0;
  }
`,m=i.default.span`
  font-size: 70px;
  font-weight: 200;
  font-style: italic;
  line-height: 70px;
  @media (max-width: ${l.default.spLayoutStrictWidth}px) {
    font-size: 50px;
    line-height: 50px;
  }
`},3991:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.AdvertLeft=t.AdvertRight=t.Left=t.Right=t.Header=void 0;const l=i(n(7294)),u=i(n(9163)),s=o(n(6032));t.Header=({showAdvert:e,handleOnClickControlAdvert:t})=>l.createElement(f,{showAdvert:e},l.createElement(p,{showAdvert:e,onClick:t},"AD",l.createElement("br",null),e?"OFF":"ON"));const d=()=>l.createElement(l.Fragment,null,"スポンサー",l.createElement("br",null),"募集中",l.createElement("br",null),l.createElement("br",null),"¥0~");t.Right=({showAdvert:e})=>l.createElement(t.AdvertRight,{showAdvert:e},l.createElement(d,null)),t.Left=({showAdvert:e})=>l.createElement(t.AdvertLeft,{showAdvert:e},l.createElement(d,null)),t.default={Header:t.Header,Right:t.Right,Left:t.Left};const c=u.css`
  position: sticky;
  top: ${2*s.default.baseHeight+s.default.baseMargin}px;
  flex: 1 1 ${s.default.advertWidth}px;
  display: ${e=>e.showAdvert?"flex":"none"};
  opacity: ${e=>e.showAdvert?1:0};
  align-items: center;
  justify-content: center;
  width: ${s.default.advertWidth}px;
  min-width: ${s.default.advertWidth}px;
  max-width: ${s.default.advertWidth}px;
  height: calc(100vh - ${2*s.default.baseHeight+2*s.default.baseMargin}px);
  margin: ${s.default.baseHeight+s.default.baseMargin}px ${s.default.baseMargin}px;
  background: ${s.default.advertColor};
  color: #fff;
  text-align: center;
  transition-property: background, transform;
  transition-duration: ${s.default.transitionDuration}ms, ${s.default.transitionDuration}ms;
  :hover {
    background: ${s.default.advertHoverColor};
  }
  @media (max-width: ${s.default.spLayoutWidth}px) {
    display: flex;
    position: relative;
    top: 0;
    width: calc(100% - ${s.default.doubleMargin}px);
    max-width: calc(100% - ${s.default.doubleMargin}px);
    margin: 0 ${s.default.baseMargin}px;
  }
`,f=u.default.div`
  display: flex;
  align-items: center;
  justify-content: flex-end;
  width: 100%;
  padding-right: ${s.default.doublePadding}px;
  @media (max-width: ${s.default.doubleAdvertWidth}px) {
    padding-right: ${s.default.basePadding}px;
  }
`,p=u.default.div`
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
  width: 50px;
  height: 50px;
  background: ${s.default.advertColor};
  color: #fff;
  font-size: 10px;
  text-align: center;
  line-height: 14px;
  border-radius: 5px;
  cursor: pointer;
  transition: ${s.default.transitionDuration}ms;
  :hover {
    background: ${s.default.advertHoverColor};
  }
  @media (max-width: ${s.default.spLayoutWidth}px) {
    display: none;
  }
`;t.AdvertRight=u.default.div`
  ${c};
`,t.AdvertLeft=u.default.div`
  ${c};
  @media (max-width: ${s.default.doubleAdvertWidth}px) {
    display: none;
  }
  @media (max-width: ${s.default.spLayoutWidth}px) {
    display: flex;
    margin-bottom: ${s.default.baseMargin}px;
  }
`},2900:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(8117));t.default=({ch:e,userCategoryChs:t,talknFrameRef:n})=>t.length>0?l.createElement(d,null,t.map(((e,t)=>e&&""!==e?l.createElement(l.Fragment,null):null))):l.createElement(s.default,{ch:e});const d=u.default.div``},9154:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(300)),d=o(n(819)),c=o(n(6032)),f=n(9293);t.default=({ch:e,selectContentMenu:t,contentMenuRef:n})=>l.createElement(p,{ref:n},l.createElement(h,null,l.createElement(g,{className:t===f.selectContentMenuProfile&&"active"},l.createElement("a",{href:`//${s.default.coverURL}${e}profile`},l.createElement(d.default.Two,null,"PROFILE"),l.createElement("div",{className:"underBar"}))),l.createElement(g,{className:t===f.selectContentMenuBusiness&&"active"},l.createElement("a",{href:`//${s.default.coverURL}${e}business`},l.createElement(d.default.Two,null,"BUSINESS"),l.createElement("div",{className:"underBar"}))),l.createElement(g,{className:t===f.selectContentMenuStory&&"active"},l.createElement("a",{href:`//${s.default.coverURL}${e}story`},l.createElement(d.default.Two,null,"STORY"),l.createElement("div",{className:"underBar"})))));const p=u.default.ol`
  position: sticky;
  top: ${c.default.baseHeight}px;
  z-index: ${c.default.zIndex.contentsMenu};
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: ${c.default.baseHeight}px;
  margin-top: ${c.default.doubleMargin}px;
  margin-right: 0;
  margin-left: 0;
  margin-bottom: ${c.default.doubleMargin}px;
  padding-right: 0;
  padding-left: 0;
  ${c.default.alphaBgSet};
  box-shadow: 0 0 0 1px ${c.default.borderColor};
`,h=u.default.ul`
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: space-around;
  width: 100%;
  height: inherit;
  max-width: ${c.default.appWidth}px;
  padding: 0;
  margin: 0;
  color: ${c.default.fontColor};
  border-left: 1px solid ${c.default.borderColor};
  font-size: 19px;
  font-weight: 200;
  letter-spacing: 5px;
  list-style: none;
`,g=u.default.li`
  display: flex;
  flex-flow: column nowrap;
  flex: 1 1 auto;
  align-items: center;
  justify-content: center;
  width: 25%;
  height: inherit;
  border-right: 1px solid ${c.default.borderColor};
  cursor: pointer;
  .underBar {
    width: 30%;
    min-width: 60px;
    height: 8px;
    margin-top: 8px;
    background: rgba(0, 0, 0, 0.25);
    border-radius: ${c.default.baseSize}px;
    transition: ${2*c.default.transitionDuration}ms;
  }

  :hover {
    .underBar {
      background: ${c.default.darkColor};
    }
  }
  &.active {
    .underBar {
      background: ${c.default.themeColor};
      color: #fff;
    }
  }
  a {
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 100%;
    color: #666;
  }
`},8385:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(8352)),o=r(n(819)),l=r(n(5990)),u=r(n(9425)),s=n(9416),d=r(n(5424)),c=r(n(6413)),f=r(n(704)),p=r(n(3190)),h=r(n(4829)),g={industory:"",industoryParent:"",startupSeries:"",jobParent:"",job:"",story:""};t.default=({session:e,isMyPage:t=!1,tagParent:n,someTags:r,isEditables:g,isChangeUserTag:b,isSavedAnimations:y,setIsEditables:v,handleOnClickReset:w,handleOnClickTag:E,handleOnClickRemove:x,handleOnClickSave:_})=>a.default.createElement(u.default,{key:`${n} Tags`,title:`${n} Tags`,headerMenu:t&&a.default.createElement(i.default,{flow:"row nowrap"},a.default.createElement(d.default,{onClick:()=>{g[n]&&b&&_(n),t&&v({...g,[n]:!g[n]})},isEditable:g[n],isChangeUserTag:b}),a.default.createElement(c.default,{onClick:()=>w(n),disabled:!b})),content:(()=>{if(n===s.tagParentProfile)return a.default.createElement(l.default,{key:`${s.tagParentStory}`,flow:"column nowrap",upperPadding:!0,sideMargin:!0,sidePadding:!0},e.name);if(n===s.tagParentStory){const e=s.tagParentStory.toLocaleLowerCase();return a.default.createElement(l.default,{key:`${s.tagParentStory}`,flow:"column nowrap",upperPadding:!0,sideMargin:!0,sidePadding:!0},a.default.createElement(o.default.Five,null,s.tagParentStory),a.default.createElement(i.default,{flow:"row wrap",alignItems:"center",width:"100%",upperMargin:!0},r&&r[e]&&r[e].map(((e,t)=>{const r=m(s.tagStory,e);return a.default.createElement(h.default,{key:`story_${e.storyId}`,isEditable:g[n],onClick:()=>E(g[n],s.tagStory,s.tagStory,t,e),onClickRemove:()=>x(n,s.tagStory,t),label:r.story})})),t&&a.default.createElement(f.default,{show:g[n],onClick:()=>E(!0,s.tagStory,s.tagStory,r&&r[e]?r[e].length:0)})))}return s.tagTypes.map(((e,u)=>{if(e!==s.tagStory){const d=e.toLocaleLowerCase(),c=r&&r[d]?r[d].length:0;return a.default.createElement(l.default,{key:`${e}_${u}`,className:`${e}_${u}`,flow:"column nowrap"},a.default.createElement(o.default.Five,null,e),a.default.createElement(i.default,{flow:"row wrap",alignItems:"center",width:"100%",upperMargin:!0},r&&r[d]&&r[d].map(((t,r)=>{const i=m(e,t);return((e,t,n,r,i)=>{switch(t){case s.tagInvestor:case s.tagFounder:return a.default.createElement(p.default,{key:`${e}_${t}_${n}`,isEditable:g[e],onClick:()=>E(g[e],e,t,n,r),onClickRemove:()=>x(e,t,n),upperLeft:i.industoryParent,upperRight:i.industory,bottomLeft:i.startupSeries,bottomRight:`(${r.year})`});case s.tagMember:return a.default.createElement(p.default,{key:`${e}_${t}_${n}`,isEditable:g[e],onClick:()=>E(g[e],e,t,n,r),onClickRemove:()=>x(e,t,n),upperLeft:i.industoryParent,upperRight:i.industory,bottomLeft:i.job,bottomRight:`(${r.year})`})}})(n,e,r,t,i)})),t&&a.default.createElement(f.default,{show:g[n],onClick:()=>E(!0,n,e,c)})))}}))})(),checkAnimation:y});const m=(e,t)=>{let n="",r="",a="",i="",o="",l="",u={...g};switch(e){case s.tagInvestor:case s.tagFounder:n=t.industoryId,r=n.split("-")[0],a=t.startupSeriesId,u.industory=window.talknStaticTagsById.industory[n].ja,u.industoryParent=window.talknStaticTagsById.industoryParent[r].ja,u.startupSeries=window.talknStaticTagsById.startupSeries[a].ja;break;case s.tagMember:n=t.industoryId,r=n.split("-")[0],i=t.jobId,o=i.split("-")[0],u.industory=window.talknStaticTagsById.industory[n].ja,u.industoryParent=window.talknStaticTagsById.industoryParent[r].ja,u.job=window.talknStaticTagsById.jobs[i].ja,u.jobParent=window.talknStaticTagsById.jobParents[o].ja;break;case s.tagStory:l=t.storyId,u.story=window.talknStaticTagsById.story[l].ja}return u}},5424:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(8352)),l=r(n(6032));t.default=({onClick:e,isEditable:t,isChangeUserTag:n})=>{let r="EDIT";return n&&t?r="SAVE":t&&(r="VIEW"),a.default.createElement(u,{onClick:e,isEditable:t,isChangeUserTag:n,sideMargin:"small"},r)};const u=(0,i.default)(o.default)`
  padding: ${l.default.doublePadding}px;
  border-radius: 5px;
  cursor: pointer;
  transition: ${l.default.transitionDuration}ms;
  ${e=>s(e)};
`,s=e=>e.isChangeUserTag&&e.isEditable?`\n      color: #fff;\n      background: ${l.default.saveColor};\n      border: 1px solid ${l.default.saveColor};\n      :hover {\n        box-shadow: ${l.default.shadowHorizonBright};\n      }\n    `:e.isEditable?`\n      color: #fff;\n      background:  ${l.default.tagBgColor};\n      border: 1px solid ${l.default.tagBgColor};\n      :hover {\n        color: #fff;\n        background:  ${l.default.tagBgColor};\n        box-shadow: ${l.default.shadowHorizonBright};\n      }\n    `:`\n      color: #fff;\n      background: ${l.default.themeColor};\n      border: 1px solid ${l.default.themeColor};\n      :hover {\n        background: ${l.default.themeColor};\n        color: #fff;\n        box-shadow: ${l.default.shadowHorizonBright};\n      }\n    `},6413:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(8352)),l=r(n(6032));t.default=({onClick:e,disabled:t=!1})=>a.default.createElement(u,{onClick:e,disabled:t},"RESET");const u=(0,i.default)(o.default)`
  padding: ${l.default.doublePadding}px;
  border: 1px solid ${l.default.brightColor};
  border-radius: 5px;
  cursor: ${e=>e.disabled?"default":"pointer"};
  background: ${e=>e.disabled?"none":l.default.brightColor};
  color: ${e=>e.disabled?l.default.brightColor:"#fff"};
  transition: ${l.default.transitionDuration}ms;
  ${e=>s(e.disabled)};
`,s=e=>e?"":`\n    :hover {\n      background: ${e=>(e.disabled,l.default.brightColor)};\n      color: #fff;\n      box-shadow: ${l.default.shadowHorizonBright};\n    }\n  `},9639:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getIsDisabled=t.handleOnSearch=t.ModalFooter=t.Profiles=t.TagId=t.getNoSelectOption=t.NoSetComponens=t.noSelectOptionLabel=void 0;const l=o(n(7294)),u=o(n(9163)),s=o(n(6562)),d=o(n(8203)),c=i(n(4034)),f=o(n(8352)),p=o(n(5015)),h=o(n(5226)),g=o(n(5993));t.noSelectOptionLabel="-",t.NoSetComponens=()=>l.default.createElement(c.default,{className:"NoSetButton",disabled:!0,bottomMargin:!0},"NO SET"),t.getNoSelectOption=()=>l.default.createElement("option",{value:void 0},t.noSelectOptionLabel),t.TagId=u.default.div`
  font-size: 12px;
  font-weight: 300;
`,t.Profiles=({type:e="Profiles",userModalOptions:t,handleOnChangeLanguages:n,handleOnChangeSexes:r,handleOnChangeBirthday:a,underline:i=!1})=>l.default.createElement(f.default,{flow:"column nowrap",width:"100%",border:i?"underline":void 0,bottomPadding:!0,bottomMargin:!0},l.default.createElement(g.default,{type:e,isEditable:t.isEditable,sexes:t.sexes,onChange:r}),l.default.createElement(h.default,{type:e,isEditable:t.isEditable,languages:t.languages,onChange:n}),l.default.createElement(p.default,{type:e,isEditable:t.isEditable,birthday:t.birthday,onChange:a})),t.ModalFooter=({userModalOptions:e,onClickPositive:t,handleOnClose:n,positiveDisabeld:r=!1,showPositive:a=!0})=>{const i=e.isEditable;return l.default.createElement(l.default.Fragment,null,l.default.createElement(c.default,{disabled:!1,theme:c.buttonThemeBright,onClick:n,sideMargin:!0},i?"CANCEL":"CLOSE"),a&&l.default.createElement(c.default,{disabled:r,onClick:()=>{t&&t(),n()},sideMargin:!0},i?"OK":"SEARCH"))},t.handleOnSearch=e=>{const t=s.default.deepCopy(e);delete t.isEditable,delete t.index,d.default.json("search",t)},t.getIsDisabled=e=>Boolean(Object.keys(e).find((t=>{switch(typeof e[t]){case"object":return 0===e[t].length;case"string":return""===e[t]||"-"===e[t];case"number":return 0===e[t]||isNaN(e[t]);default:return console.warn(`Confirm type ${t} ${e[t]} ${typeof e[t]}`),!0}})))},9416:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.userModalOptionInit=t.tagTypes=t.tagStory=t.tagMember=t.tagFounder=t.tagInvestor=t.tagModeEdit=t.tagModeView=t.tagParentTypes=t.tagParentStory=t.tagParentSearch=t.tagParentSelf=t.tagParentProfile=void 0;const l=i(n(7294)),u=o(n(300)),s=o(n(6562)),d=o(n(8203)),c=o(n(8352)),f=o(n(819)),p=o(n(5565)),h=o(n(7474)),g=n(9293),m=o(n(8385)),b=o(n(3263)),y=o(n(7947)),v=o(n(5744)),w=o(n(1004));t.tagParentProfile="Profile",t.tagParentSelf="Self",t.tagParentSearch="Search",t.tagParentStory="Story",t.tagParentTypes=[t.tagParentSelf,t.tagParentSearch,t.tagParentStory],t.tagModeView="view",t.tagModeEdit="edit";let E={},x={},_={};t.tagParentTypes.forEach((e=>{E[e]=!1,x[e]=!1,_[e]=!1})),t.tagInvestor="Investor",t.tagFounder="Founder",t.tagMember="Member",t.tagStory="Story",t.tagTypes=[t.tagInvestor,t.tagFounder,t.tagMember,t.tagStory],t.userModalOptionInit={_id:"",email:"",isEditable:!1,tagParentType:"",tagType:"",index:void 0,bg:"",icon:"",languages:[],sexes:[],birthday:u.default.defaultBirthdayUnixtime,industoryParentId:"",industoryId:"",jobParentId:"",jobCategoryId:"",jobId:"",startupSeriesId:"",storyId:"",year:0},t.default=({isMyPage:e,session:n,user:r,userTags:a,userTagsInit:i,setUser:o,setUserTags:C,setUserTagsInit:k,setShowSearchModalOption:P})=>{const[M,O]=(0,l.useState)(E),[A,T]=(0,l.useState)(x),[I,$]=(0,l.useState)({...t.userModalOptionInit}),[j,L]=(0,l.useState)({...t.userModalOptionInit}),[N,R]=(0,l.useState)({...t.userModalOptionInit}),[z,D]=(0,l.useState)({...t.userModalOptionInit}),[B,F]=(0,l.useState)(_),H=(e,n,a,i,o)=>{let l="",s=[],d=[],c=u.default.defaultBirthdayUnixtime,f="",p="",h="",g=0,m="",b="",y="";switch(n){case t.tagParentSelf:s=r.languages?r.languages:[],d=r.sexes?r.sexes:[],c=r.birthday?r.birthday:"";break;case t.tagParentSearch:o&&(s=o.languages?o.languages:[],d=o.sexes?o.sexes:[],c=o.birthday?o.birthday:"");break;case t.tagParentStory:default:s=o.languages?o.languages:[],d=o.sexes?o.sexes:[],c=o.birthday?o.birthday:"",y=o&&o.storyId?o.storyId:""}switch(o&&(l=o._id?o._id:"",f=o.industoryId?o.industoryId.split("-")[0]:"",p=o.industoryId?o.industoryId:"",h=o.startupSeriesId?o.startupSeriesId:"",g=o.year?o.year:0,m=o.jobId?o.jobId.split("-")[0]:"",b=o.jobId?o.jobId:"",y=o.storyId?o.storyId:""),a){case t.tagInvestor:$({...t.userModalOptionInit,_id:l,isEditable:e,languages:s,sexes:d,birthday:c,tagParentType:n,tagType:a,industoryParentId:f,industoryId:p,startupSeriesId:h,year:g,index:i});break;case t.tagFounder:L({...t.userModalOptionInit,_id:l,isEditable:e,languages:s,sexes:d,birthday:c,tagParentType:n,tagType:a,industoryParentId:f,industoryId:p,startupSeriesId:h,year:g,index:i});break;case t.tagMember:R({...t.userModalOptionInit,_id:l,isEditable:e,languages:s,sexes:d,birthday:c,tagParentType:n,tagType:a,industoryParentId:f,industoryId:p,jobParentId:m,jobId:b,year:g,index:i});break;case t.tagStory:D({...t.userModalOptionInit,_id:l,isEditable:e,tagParentType:n,tagType:a,languages:s,sexes:d,birthday:c,storyId:y,index:i})}},U=(e,t,n)=>{const r=e.toLocaleLowerCase(),i=t.toLocaleLowerCase();a[r][i][n]&&(a[r][i].splice(n,1),C({...a,[r]:{...a[r],[i]:[...a[r][i]]}}))},W=(e,t)=>{e.isEditable?V({...e,...t}):P(e)},V=e=>{const n=e.tagParentType.toLocaleLowerCase(),i=e.tagType.toLocaleLowerCase(),o=e.index;let l=e.tagType===t.tagMember?"jobId":"startupSeriesId",u=a[n][i];switch(e.year=Number(e.year),e.tagParentType){case t.tagParentSelf:a[n][i][o]?u=a[n][i].map(((t,n)=>o===n?{...t,industoryId:e.industoryId,[l]:e[l],email:r.email,sexes:e.sexes,languages:e.languages,birthday:e.birthday,year:e.year}:t)):u.push({tagParentType:n,tagType:i,email:r.email,sexes:e.sexes,languages:e.languages,birthday:e.birthday,industoryId:e.industoryId,[l]:e[l],year:e.year});break;case t.tagParentSearch:a[n][i][o]?u=a[n][i].map(((t,n)=>o===n?{...t,sexes:e.sexes,languages:e.languages,birthday:e.birthday,industoryId:e.industoryId,[l]:e[l],year:e.year}:t)):u.push({tagParentType:n,tagType:i,email:r.email,sexes:e.sexes,languages:e.languages,birthday:e.birthday,industoryId:e.industoryId,[l]:e[l],year:e.year});break;case t.tagStory:a[n][i][o]?u=a[n][i].map(((t,n)=>o===n?{...t,email:r.email,sexes:r.sexes,languages:r.languages,birthday:r.birthday,storyId:e.storyId}:t)):u.push({tagParentType:n,tagType:i,email:r.email,sexes:r.sexes,languages:r.languages,birthday:r.birthday,storyId:e.storyId})}C({...a,[n]:{...a[n],[i]:u}})},q=async e=>{const n=e.toLocaleLowerCase();if(e===t.tagParentSelf){const e=t.tagParentProfile.toLocaleLowerCase();C(s.default.deepCopy({...a,[e]:i[e],[n]:i[n]}))}else C(s.default.deepCopy({...a,[n]:i[n]}))},Y=async e=>{const n=e.toLocaleLowerCase(),l=e===t.tagParentSelf;let u={...g.userHasSelfTagsInit},c=[];Object.keys(a[n]).forEach((e=>{if(l){const t=e.toLocaleLowerCase();u[t]=a[n][t].length>0}c=c.concat(a[n][e])})),d.default.json("saveUserTags",{email:r.email,tagParentType:n,userTags:c}),l&&(console.log({...r,hasSelfTags:u}.hasSelfTags),o({...r,hasSelfTags:u})),k(s.default.deepCopy({...i,[n]:a[n]})),T({...A,[n]:!1}),F({...B,[n]:!0}),setTimeout((()=>{F({...B,[n]:!1})}),2e3)};return(0,l.useEffect)((()=>{if(S(a)&&(void 0===i&&k(s.default.deepCopy(a)),S(i))){const e={...A};Object.keys(A).forEach((t=>{const n=t.toLocaleLowerCase();e[t]=!s.default.deepEquals(a[n],i[n])})),T({...e})}}),[a]),l.default.createElement(l.default.Fragment,null,l.default.createElement(c.default,{flow:"column nowrap",alignItems:"flex-start",justifyContent:"center",sideMargin:!0,sidePadding:!0},l.default.createElement(f.default.Five,{alignItems:"center"},l.default.createElement(p.default.Story,{sideMargin:!0,className:"MyStory"}),"My Story"),l.default.createElement("br",null),l.default.createElement(h.default,{slide:!0})),t.tagParentTypes.map((t=>{const r=t.toLocaleLowerCase(),i=a?a[r]:[];return l.default.createElement(m.default,{session:n,isMyPage:e,key:t,tagParent:t,someTags:i,isEditables:M,isChangeUserTag:A[t],isSavedAnimations:B[r],setIsEditables:O,handleOnClickReset:q,handleOnClickTag:H,handleOnClickRemove:U,handleOnClickSave:Y})})),l.default.createElement(y.default,{show:void 0!==I.index,user:r,userTags:a,userModalOptions:I,onClickPositive:W,onCancel:()=>$({...t.userModalOptionInit})}),l.default.createElement(b.default,{show:void 0!==j.index,user:r,userTags:a,userModalOptions:j,onClickPositive:W,onCancel:()=>L({...t.userModalOptionInit})}),l.default.createElement(v.default,{show:void 0!==N.index,user:r,userTags:a,userModalOptions:N,onClickPositive:W,onCancel:()=>R({...t.userModalOptionInit})}),l.default.createElement(w.default,{show:void 0!==z.index,user:r,userTags:a,userModalOptions:z,onClickPositive:W,onCancel:()=>D({...t.userModalOptionInit})}))};const S=e=>!!e&&Boolean(t.tagParentTypes.find((t=>{const n=t.toLocaleLowerCase();return e[n]})))},3263:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fixValuesInit=void 0;const l=i(n(7294)),u=o(n(300)),s=o(n(819)),d=n(9416),c=n(9639),f=o(n(3940)),p=o(n(2834)),h=o(n(2068));t.fixValuesInit={sexes:[],languages:[],birthday:u.default.defaultBirthdayUnixtime,industoryParentId:"",industoryId:"",startupSeriesId:"",year:0},t.default=({show:e,user:n,userModalOptions:r,onClickPositive:a,onCancel:i})=>{const[o,u]=(0,l.useState)(!1),[g,m]=(0,l.useState)(!1),[b,y]=(0,l.useState)(t.fixValuesInit),[v,w]=(0,l.useState)(t.fixValuesInit),E=r.isEditable,x=()=>{w({...b}),i()};return(0,l.useEffect)((()=>{e&&(o?m((0,c.getIsDisabled)(v)):u(!0))}),[e,v]),(0,l.useEffect)((()=>{const e={...v,languages:r.languages,sexes:r.sexes,birthday:r.birthday,industoryParentId:r.industoryParentId,industoryId:r.industoryId,startupSeriesId:r.startupSeriesId,year:r.year};w(e),y(e)}),[r]),l.default.createElement(h.default.Structure,{show:e,closeModal:x,flow:"column nowrap",header:l.default.createElement(s.default.Five,null,r.tagParentType," - ",r.tagType,E&&"(Edit)"),content:l.default.createElement(l.default.Fragment,null,l.default.createElement(c.Profiles,{type:`${r.tagParentType}_${r.tagType}`,userModalOptions:r.tagParentType===d.tagParentSelf?{...r,isEditable:!1}:r,handleOnChangeLanguages:e=>{w({...v,languages:e})},handleOnChangeSexes:e=>{w({...v,sexes:e})},handleOnChangeBirthday:e=>{w({...v,birthday:e})},underline:!0}),l.default.createElement(f.default,{type:`${r.tagParentType}_${r.tagType}`,isEditable:E,industoryParentId:v.industoryParentId,industoryId:v.industoryId,onChange:(e,t)=>{w({...v,industoryParentId:e,industoryId:t})}}),l.default.createElement(p.default,{type:`${r.tagParentType}_${r.tagType}`,isEditable:E,startupSeriesId:v.startupSeriesId,year:v.year,onChangeStartupSeriesId:e=>{w({...v,startupSeriesId:e})},onChangeYear:e=>{w({...v,year:e})}}),l.default.createElement("br",null),l.default.createElement(c.TagId,null,"ID: ",r._id&&""!==r._id?r._id:"-")),footer:l.default.createElement(c.ModalFooter,{userModalOptions:r,positiveDisabeld:g,onClickPositive:()=>a(r,v),handleOnClose:x}),upperPadding:!0,sidePadding:!0,bottomPadding:!0})}},7947:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fixValuesInit=void 0;const l=i(n(7294)),u=o(n(300)),s=o(n(819)),d=n(9416),c=n(9639),f=o(n(3940)),p=o(n(2834)),h=o(n(2068));t.fixValuesInit={sexes:[],languages:[],birthday:u.default.defaultBirthdayUnixtime,industoryParentId:"",industoryId:"",startupSeriesId:"",year:0},t.default=({show:e,user:n,userModalOptions:r,onClickPositive:a,onCancel:i})=>{const[o,u]=(0,l.useState)(!1),[g,m]=(0,l.useState)(!1),[b,y]=(0,l.useState)(t.fixValuesInit),[v,w]=(0,l.useState)(t.fixValuesInit),E=r.isEditable,x=()=>{w({...b}),i()};return(0,l.useEffect)((()=>{e&&(o?m((0,c.getIsDisabled)(v)):u(!0))}),[e,v]),(0,l.useEffect)((()=>{const e={...v,languages:r.languages,sexes:r.sexes,birthday:r.birthday,industoryParentId:r.industoryParentId,industoryId:r.industoryId,startupSeriesId:r.startupSeriesId,year:r.year};w(e),y(e)}),[r]),l.default.createElement(h.default.Structure,{show:e,closeModal:x,flow:"column nowrap",header:l.default.createElement(s.default.Five,null,r.tagParentType," - ",r.tagType,E&&"(Edit)"),content:l.default.createElement(l.default.Fragment,null,l.default.createElement(c.Profiles,{type:`${r.tagParentType}_${r.tagType}`,userModalOptions:r.tagParentType===d.tagParentSelf?{...r,isEditable:!1}:r,handleOnChangeLanguages:e=>{console.log("handleOnChangeLanguages"),w({...v,languages:e})},handleOnChangeSexes:e=>{console.log("handleOnChangeSexes"),w({...v,sexes:e})},handleOnChangeBirthday:e=>{console.log("handleOnChangeBirthday"),w({...v,birthday:e})},underline:!0}),l.default.createElement(f.default,{type:`${r.tagParentType}_${r.tagType}`,isEditable:E,industoryParentId:v.industoryParentId,industoryId:v.industoryId,onChange:(e,t)=>{console.log("handleOnChangeIndustory"),w({...v,industoryParentId:e,industoryId:t})}}),l.default.createElement(p.default,{type:`${r.tagParentType}_${r.tagType}`,isEditable:E,startupSeriesId:v.startupSeriesId,year:v.year,onChangeStartupSeriesId:e=>{console.log("handleOnChangeStartupSeries"),w({...v,startupSeriesId:e})},onChangeYear:e=>{console.log("handleOnChangeYear"),w({...v,year:e})}}),l.default.createElement("br",null),l.default.createElement(c.TagId,null,"ID: ",r._id&&""!==r._id?r._id:"-")),footer:l.default.createElement(c.ModalFooter,{userModalOptions:r,positiveDisabeld:g,onClickPositive:()=>a(r,v),handleOnClose:x}),upperPadding:!0,sidePadding:!0,bottomPadding:!0})}},5744:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fixValuesInit=void 0;const l=i(n(7294)),u=o(n(300)),s=o(n(819)),d=n(9416),c=n(9639),f=o(n(3940)),p=o(n(6412)),h=o(n(2068));t.fixValuesInit={sexes:[],languages:[],birthday:u.default.defaultBirthdayUnixtime,industoryParentId:"",industoryId:"",jobParentId:"",jobId:"",year:0},t.default=({show:e,user:n,userModalOptions:r,onClickPositive:a,onCancel:i})=>{const[o,u]=(0,l.useState)(!1),[g,m]=(0,l.useState)(!1),[b,y]=(0,l.useState)(t.fixValuesInit),[v,w]=(0,l.useState)(t.fixValuesInit),E=r.isEditable,x=()=>{w({...b}),i()};return(0,l.useEffect)((()=>{e&&(o?m((0,c.getIsDisabled)(v)):u(!0))}),[e,v]),(0,l.useEffect)((()=>{const e={...v,languages:r.languages,sexes:r.sexes,birthday:r.birthday,industoryParentId:r.industoryParentId,industoryId:r.industoryId,jobParentId:r.jobParentId,jobId:r.jobId,year:r.year};w(e),y(e)}),[r]),l.default.createElement(h.default.Structure,{show:e,closeModal:x,flow:"column nowrap",header:l.default.createElement(s.default.Five,null,r.tagParentType," - ",r.tagType,E&&"(Edit)"),content:l.default.createElement(l.default.Fragment,null,l.default.createElement(c.Profiles,{type:`${r.tagParentType}_${r.tagType}`,userModalOptions:r.tagParentType===d.tagParentSelf?{...r,isEditable:!1}:r,handleOnChangeLanguages:e=>{w({...v,languages:e})},handleOnChangeSexes:e=>{w({...v,sexes:e})},handleOnChangeBirthday:e=>{w({...v,birthday:e})},underline:!0}),l.default.createElement(f.default,{type:`${r.tagParentType}_${r.tagType}`,isEditable:E,industoryParentId:v.industoryParentId,industoryId:v.industoryId,onChange:(e,t)=>{w({...v,industoryParentId:e,industoryId:t})}}),l.default.createElement(p.default,{type:`${r.tagParentType}_${r.tagType}`,isEditable:E,jobParentId:v.jobParentId,jobId:v.jobId,year:v.year,onChangeJob:(e,t)=>{w({...v,jobParentId:e,jobId:t})},onChangeYear:e=>{w({...v,year:e})}}),l.default.createElement("br",null),l.default.createElement(c.TagId,null,"ID: ",r._id&&""!==r._id?r._id:"-")),footer:l.default.createElement(c.ModalFooter,{userModalOptions:r,positiveDisabeld:g,onClickPositive:()=>a(r,v),handleOnClose:x}),upperPadding:!0,sidePadding:!0,bottomPadding:!0})}},1004:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fixValuesInit=void 0;const l=i(n(7294)),u=o(n(819)),s=n(9639),d=o(n(7596)),c=o(n(2068));t.fixValuesInit={storyId:""},t.default=({show:e,userTags:n,userModalOptions:r,onClickPositive:a,onCancel:i})=>{const[o,f]=(0,l.useState)(!1),[p,h]=(0,l.useState)(!1),[g,m]=(0,l.useState)(t.fixValuesInit),[b,y]=(0,l.useState)(t.fixValuesInit),v=r.isEditable,w=()=>{y({...g}),i()};return(0,l.useEffect)((()=>{e&&(o?h(Boolean(Object.keys(b).find((e=>""===b[e])))):f(!0))}),[e,b]),(0,l.useEffect)((()=>{const e={...b,storyId:r.storyId};y(e),m(e)}),[r]),l.default.createElement(c.default.Structure,{show:e,closeModal:w,flow:"column nowrap",header:l.default.createElement(u.default.Five,null,r.tagParentType),content:l.default.createElement(l.default.Fragment,null,l.default.createElement(d.default,{isEditable:v,clickedStoryId:r.storyId,selected:n?n.story.story.map((e=>e.storyId)):[],storyId:b.storyId,onChange:e=>{y({...b,storyId:e})}}),l.default.createElement("br",null),l.default.createElement(s.TagId,null,"ID: ",r._id&&""!==r._id?r._id:"-")),footer:l.default.createElement(s.ModalFooter,{userModalOptions:r,positiveDisabeld:p,onClickPositive:()=>a(r,b),handleOnClose:w}),upperPadding:!0,sidePadding:!0,bottomPadding:!0})}},5015:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(6562)),d=o(n(8352)),c=o(n(2375)),f=o(n(2848)),p=o(n(6490)),h=n(9639),g=o(n(6032)),m=({value:e})=>l.default.createElement(b,{className:"AgeParam"},"AGE: ",e);t.default=({type:e,isEditable:t,birthday:n,onChange:r})=>{const[a,i]=(0,l.useState)(n),[o,u]=(0,l.useState)(s.default.getAgeByBirthday(a)),f=e=>{i(e),u(s.default.getAgeByBirthday(e)),r(e)};return(0,l.useEffect)((()=>{i(n),u(s.default.getAgeByBirthday(n))}),[n]),t?l.default.createElement(d.default,{flow:"column nowrap"},l.default.createElement(c.default,{bottomMargin:!0},"Birthday"),l.default.createElement(d.default,{flow:"row wrap",alignItems:"center"},l.default.createElement(p.default.Date,{name:e,onChange:f,value:a,disabled:!t}),0!==a&&l.default.createElement(m,{value:o}))):0===a?l.default.createElement(d.default,{flow:"column nowrap"},l.default.createElement(c.default,{bottomMargin:!0},"Birthday"),l.default.createElement(h.NoSetComponens,null)):l.default.createElement(d.default,{flow:"column nowrap"},l.default.createElement(c.default,{bottomMargin:!0},"Birthday"),l.default.createElement(d.default,{flow:"row wrap",alignItems:"center"},l.default.createElement(p.default.Date,{name:e,onChange:f,value:a,disabled:!t}),0!==a&&l.default.createElement(m,{value:o})))};const b=(0,u.default)(f.default)`
  text-indent: ${g.default.doubleSize}px;
`},3940:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(8352)),s=o(n(2375)),d=o(n(5391));t.default=({type:e,isEditable:t,industoryParentId:n,industoryId:r,onChange:a})=>{const[i,o]=(0,l.useState)(n),[c,f]=(0,l.useState)(r),[p,h]=(0,l.useState)([]);return(0,l.useEffect)((()=>{o(n)}),[n]),(0,l.useEffect)((()=>{f(r)}),[r]),(0,l.useEffect)((()=>{const e=window.talknStaticTags.industory.filter((e=>e.parentId===i));h(e)}),[i]),l.default.createElement(u.default,{flow:"column nowrap"},l.default.createElement(s.default,{bottomMargin:!0},"Industory"),l.default.createElement(u.default,{flow:"row wrap",alignItems:"center"},l.default.createElement(d.default.Single,{name:`${e}_industoryParent}`,disabled:!t,label:"Industory",onChange:e=>{o(e),f(""),a(e,"")},value:i,noSelectOption:!0},window.talknStaticTags.industoryParent.map((e=>l.default.createElement(d.default.Option,{key:`IndustoryParentId_${e.uniqueId}`,value:e.uniqueId},e.ja)))),l.default.createElement(d.default.Single,{name:"industory[]",disabled:!t,onChange:e=>{f(e),a(i,e)},value:c,noSelectOption:!0},p.map((e=>l.default.createElement(d.default.Option,{key:`IndustoryId_${e.uniqueId}`,value:e.uniqueId},e.ja))))))}},6412:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(8352)),s=o(n(2375)),d=o(n(5391)),c=o(n(1579));t.default=({type:e,isEditable:t,jobParentId:n,jobId:r,year:a,onChangeJob:i,onChangeYear:o})=>{const[f,p]=(0,l.useState)(n),[h,g]=(0,l.useState)(r),[m,b]=(0,l.useState)([]),[y,v]=(0,l.useState)(a);return(0,l.useEffect)((()=>{p(n)}),[n]),(0,l.useEffect)((()=>{g(r)}),[r]),(0,l.useEffect)((()=>{v(a)}),[a]),(0,l.useEffect)((()=>{const e=window.talknStaticTags.jobs.filter((e=>e.parentId===f));b(e)}),[f]),l.default.createElement(u.default,{flow:"column nowrap"},l.default.createElement(s.default,{bottomMargin:!0},"Job"),l.default.createElement(u.default,{flow:"row wrap",alignItems:"center"},l.default.createElement(d.default.Single,{name:`${e}_jobParent}`,disabled:!t,label:"Job",onChange:e=>{p(e),g(""),i(e,"")},value:f,noSelectOption:!0},window.talknStaticTags.jobParents.map(((t,n)=>l.default.createElement(d.default.Option,{key:`JobParents_${e}_${t.uniqueId}_${n}`,value:t.uniqueId},t.ja)))),l.default.createElement(d.default.Single,{name:"job[]",disabled:!t,onChange:e=>{g(e),i(f,e)},value:h,noSelectOption:!0},m.map(((t,n)=>l.default.createElement(d.default.Option,{key:`Job_${e}_${t.uniqueId}_${n}`,value:t.uniqueId},t.ja)))),l.default.createElement(c.default,{type:e,isEditable:t,year:y,onChange:e=>{v(y),o(e)}})))}},5226:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.languagesInit=t.defaultLanguages=t.allLanguage=void 0;const l=i(n(7294)),u=o(n(9163)),s=i(n(4034)),d=o(n(8352)),c=o(n(2375)),f=n(9639),p=o(n(6032));t.allLanguage={uniqueId:"All",ja:"全て",en:"All"},t.defaultLanguages=[{uniqueId:"1",ja:"英語",en:"English"},{uniqueId:"2",ja:"中国語",en:"German"},{uniqueId:"3",ja:"日本語",en:"Japanease"},{uniqueId:"4",ja:"イギリス語",en:"British"},{uniqueId:"5",ja:"ヒンドゥー語",en:"Hindu"}],t.languagesInit=t.defaultLanguages.map((e=>e.uniqueId)),t.default=({type:e,isEditable:n,languages:r,onChange:a})=>{const[i,o]=(0,l.useState)(!1),[u,s]=(0,l.useState)(r);return(0,l.useEffect)((()=>{if(r){const e=r.length===t.defaultLanguages.length,n=e?h():[...r];o(e),s(n)}}),[r]),u?l.default.createElement(d.default,{flow:"column nowrap"},l.default.createElement(c.default,{bottomMargin:!0},"Language"),n?l.default.createElement(d.default,{className:"languages",flow:"row wrap",alignItems:"center"},l.default.createElement(m,{key:`${e}_${t.allLanguage.uniqueId}`,className:`ButtonCustom${e}_${t.allLanguage.uniqueId}`,theme:g(i),onClick:()=>{const e=i?new Array:h();o(!i),s(e),a(e)}},t.allLanguage.ja),t.defaultLanguages.map((n=>l.default.createElement(m,{key:`${e}_${n.uniqueId}`,className:`ButtonCustom${e}_${t.allLanguage.uniqueId}`,theme:g(u.includes(n.uniqueId)),onClick:()=>(e=>{let n=[...u];u.includes(e)?n=u.filter((t=>t!==e)):n.push(e),o(n.length===t.defaultLanguages.length),s(n),a(n)})(n.uniqueId)},n.ja)))):0===u.length?l.default.createElement(f.NoSetComponens,null):l.default.createElement(d.default,{className:"languages",flow:"row wrap",alignItems:"center"},t.defaultLanguages.map((n=>u.includes(n.uniqueId)&&l.default.createElement(m,{key:`${e}_${n.uniqueId}`,className:`ButtonCustom${e}_${t.allLanguage.uniqueId}`,theme:g()},n.ja))))):null};const h=()=>t.defaultLanguages.map((e=>e.uniqueId)),g=(e=!0)=>e?s.buttonThemeDefault:s.buttonThemeBright,m=(0,u.default)(s.default)`
  margin-top: 0;
  margin-right: ${p.default.doubleMargin}px;
  margin-bottom: ${p.default.doubleMargin}px;
  margin-left: 0;
`},5993:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.sexesInit=t.defaultSexes=t.allSex=void 0;const l=i(n(7294)),u=o(n(9163)),s=i(n(4034)),d=o(n(8352)),c=o(n(2375)),f=n(9639),p=o(n(6032));t.allSex={uniqueId:"All",ja:"全て",en:"All"},t.defaultSexes=[{uniqueId:"1",ja:"男",en:"Man"},{uniqueId:"2",ja:"女",en:"Woman"}],t.sexesInit=["1","2"],t.default=({type:e,isEditable:n,sexes:r,onChange:a})=>{const[i,o]=(0,l.useState)(!1),[u,s]=(0,l.useState)(r);return(0,l.useEffect)((()=>{if(r){const e=r.length===t.defaultSexes.length,n=e?h():[...r];o(e),s(n)}}),[r]),u?l.default.createElement(d.default,{flow:"column wrap"},l.default.createElement(c.default,{bottomMargin:!0},"Sex"),n?l.default.createElement(d.default,{className:"sexes",flow:"row wrap",alignItems:"center"},l.default.createElement(m,{key:`${e}_${t.allSex.uniqueId}`,theme:g(i),onClick:()=>{const e=i?new Array:h();o(!i),s(e),a(e)}},t.allSex.ja),t.defaultSexes.map((n=>l.default.createElement(m,{key:`${e}_${n.uniqueId}`,theme:g(u.includes(n.uniqueId)),onClick:()=>(e=>{let n=[...u];u.includes(e)?n=u.filter((t=>t!==e)):n.push(e),o(n.length===t.defaultSexes.length),s(n),a(n)})(n.uniqueId)},n.ja)))):0===u.length?l.default.createElement(f.NoSetComponens,null):l.default.createElement(d.default,{className:"sexes",flow:"row nowrap",alignItems:"center"},t.defaultSexes.map((t=>u.includes(t.uniqueId)&&l.default.createElement(m,{key:`${e}_${t.uniqueId}`,theme:g()},t.ja))))):null};const h=()=>t.defaultSexes.map((e=>e.uniqueId)),g=(e=!0)=>e?s.buttonThemeDefault:s.buttonThemeBright,m=(0,u.default)(s.default)`
  margin-top: 0;
  margin-right: ${p.default.doubleMargin}px;
  margin-bottom: ${p.default.doubleMargin}px;
  margin-left: 0;
`},2834:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(8352)),s=o(n(2375)),d=o(n(5391)),c=o(n(1579));t.default=({type:e,isEditable:t,startupSeriesId:n,year:r,onChangeStartupSeriesId:a,onChangeYear:i})=>{const[o,f]=(0,l.useState)(n),[p,h]=(0,l.useState)(r);return(0,l.useEffect)((()=>{f(n)}),[n]),(0,l.useEffect)((()=>{h(r)}),[r]),l.default.createElement(u.default,{flow:"column nowrap"},l.default.createElement(s.default,{bottomMargin:!0},"Phase"),l.default.createElement(u.default,{flow:"row wrap",alignItems:"center"},l.default.createElement(d.default.Single,{onChange:e=>{f(e),a(e)},disabled:!t,name:"startupSeries[]",value:o,noSelectOption:!0},window.talknStaticTags.startupSeries.map((e=>l.default.createElement(d.default.Option,{key:`StartupSeries_${e.uniqueId}`,value:e.uniqueId},e.ja)))),l.default.createElement(c.default,{type:e,isEditable:t,year:p,onChange:e=>{h(e),i(e)}})))}},7596:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(5391));t.default=({storyId:e,clickedStoryId:t,isEditable:n,selected:r,onChange:a})=>{const[i,o]=(0,l.useState)(e);return(0,l.useEffect)((()=>{o(e)}),[e]),l.default.createElement(u.default.Single,{name:"story[]",disabled:!n,onChange:e=>{o(e),a(e)},value:i,noSelectOption:!0},window.talknStaticTags.story.map((e=>s(n,r,t,e.uniqueId)&&l.default.createElement(u.default.Option,{key:`StartupSeries_${e.uniqueId}`,value:String(e.uniqueId)},e.ja))))};const s=(e,t,n,r)=>!e||n===r||!t.includes(r)},1579:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.defaultYears=void 0;const l=i(n(7294)),u=o(n(5391));t.defaultYears=[{uniqueId:"1",ja:1},{uniqueId:"2",ja:2},{uniqueId:"3",ja:3},{uniqueId:"4",ja:4},{uniqueId:"5",ja:5},{uniqueId:"6",ja:6},{uniqueId:"7",ja:7},{uniqueId:"8",ja:8},{uniqueId:"9",ja:9},{uniqueId:"10",ja:10},{uniqueId:"11",ja:11},{uniqueId:"12",ja:12},{uniqueId:"13",ja:13},{uniqueId:"14",ja:14},{uniqueId:"15",ja:15},{uniqueId:"16",ja:16},{uniqueId:"17",ja:17},{uniqueId:"18",ja:18},{uniqueId:"19",ja:19},{uniqueId:"20",ja:20}],t.default=({type:e,isEditable:n,year:r,onChange:a})=>{const[i,o]=(0,l.useState)(r);return(0,l.useEffect)((()=>{o(r)}),[r]),l.default.createElement(u.default.Single,{name:e,disabled:!n,onChange:e=>{o(e),a(e)},value:String(i),noSelectOption:!0},t.defaultYears.map((t=>l.default.createElement(u.default.Option,{key:`Year_${e}_${t.uniqueId}`,value:String(t.uniqueId)},String(t.ja)))))}},704:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(6032));t.default=({show:e,onClick:t})=>a.default.createElement(l,{onClick:t,show:e},a.default.createElement("div",{className:"addLineHorizon"}),a.default.createElement("div",{className:"addLineVertical"}));const l=i.default.div`
  width: 54px;
  height: 54px;
  min-width: 54px;
  min-height: 54px;
  margin: ${o.default.baseMargin}px;
  background: ${o.default.themeColor};
  border: 3px solid #fff;
  border-radius: 50%;
  cursor: pointer;
  transform: ${e=>e.show?"rotate(0deg) scale(1)":"rotate(0deg) scale(0)"};
  transition: transform ${o.default.transitionDuration}ms, background ${o.default.transitionDuration}ms, box-shadow ${o.default.transitionDuration}ms;
  box-shadow: 0 0 4px 1px rgb(0, 0, 0, 0.2);
  :hover {
    background: ${o.default.themeColor};
    box-shadow: ${o.default.shadowCircleDark};
  }
  .addLineHorizon {
    position: relative;
    top: 25%;
    margin: 0 auto;
    width: ${10}%;
    height: ${48}%;
    background: #fff;
    border-radius: 10%;
  }
  .addLineVertical {
    position: relative;
    top: -4%;
    margin: 0 auto;
    width: ${48}%;
    height: ${10}%;
    background: #fff;
    border-radius: 10%;
  }
`},3190:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(8352)),l=r(n(6032));t.default=({onClick:e,onClickRemove:t,isEditable:n=!1,upperLeft:r,upperRight:i,bottomLeft:o,bottomRight:l})=>a.default.createElement(u,{flow:"column nowrap"},a.default.createElement(s,{className:"CloseHeaeer",alignItems:"center",justifyContent:"flex-end"},a.default.createElement(d,{className:"CloseIcon",onClick:t,show:n},a.default.createElement("div",{className:"lineHorizon"}),a.default.createElement("div",{className:"lineVertical"}))),a.default.createElement(c,{flow:"column nowrap",onClick:e,isEditable:n},a.default.createElement(f,{flow:"row nowrap"},a.default.createElement(h,null,r),a.default.createElement("span",null,"/"),a.default.createElement(g,null,i)),a.default.createElement(p,{flow:"row nowrap","align-items":"center"},a.default.createElement(m,null,o),a.default.createElement(b,null,l))));const u=(0,i.default)(o.default)`
  transform: translate(0px, 0px);
`,s=(0,i.default)(o.default)``,d=i.default.div`
  position: absolute;
  top: -5px;
  right: -5px;
  width: 38px;
  height: 38px;
  background: ${l.default.themeColor};
  border: 3px solid #fff;
  border-radius: 50%;
  opacity: 0.9;
  transform: ${e=>e.show?"rotate(45deg) scale(1)":"rotate(45deg) scale(0)"};
  transition: transform ${l.default.transitionDuration}ms, background ${l.default.transitionDuration}ms, box-shadow ${l.default.transitionDuration}ms;
  box-shadow: 0 0 4px 1px rgb(0, 0, 0, 0.2);
  cursor: pointer;
  :hover {
    box-shadow: ${l.default.shadowCircleDark};
  }
  .lineHorizon {
    position: relative;
    top: 25%;
    margin: 0 auto;
    width: ${10}%;
    height: ${48}%;
    background: #fff;
    border-radius: 10%;
  }
  .lineVertical {
    position: relative;
    top: -4%;
    margin: 0 auto;
    width: ${48}%;
    height: ${10}%;
    background: #fff;
    border-radius: 10%;
  }
`,c=(0,i.default)(o.default)`
  height: inherit;
  padding: 10px 30px;
  margin: 10px;
  background: ${e=>e.isEditable?l.default.themeColor:l.default.tagBgColor};
  border-radius: 30px;
  color: #fff;
  cursor: pointer;
  transition: background ${l.default.transitionDuration}ms, box-shadow ${l.default.transitionDuration}ms;
  :hover {
    box-shadow: ${l.default.shadowHorizonBright};
  }
`,f=(0,i.default)(o.default)`
  font-size: 10px;
  line-height: 15px;
`,p=(0,i.default)(o.default)`
  line-height: 20px;
`,h=i.default.div``,g=i.default.div``,m=i.default.div``,b=i.default.div``},4829:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(8352)),l=r(n(6032));t.default=({onClick:e,onClickRemove:t,isEditable:n,label:r})=>a.default.createElement(u,{flow:"column nowrap"},a.default.createElement(s,{className:"CloseHeaeer",alignItems:"center",justifyContent:"flex-end"},a.default.createElement(d,{className:"CloseIcon",onClick:t,show:n},a.default.createElement("div",{className:"lineHorizon"}),a.default.createElement("div",{className:"lineVertical"}))),a.default.createElement(c,{flow:"column nowrap",alignItems:"center",justifyContent:"center",onClick:e,isEditable:n},r));const u=(0,i.default)(o.default)`
  transform: translate(0px, 0px);
`,s=(0,i.default)(o.default)``,d=i.default.div`
  position: absolute;
  top: -5px;
  right: -5px;
  width: 38px;
  height: 38px;
  background: ${l.default.themeColor};
  border: 3px solid rgba(255, 255, 255, 0.8);
  border-radius: 50%;
  opacity: 0.9;
  transform: ${e=>e.show?"rotate(45deg) scale(1)":"rotate(45deg) scale(0)"};
  transition: transform ${l.default.transitionDuration}ms, background ${l.default.transitionDuration}ms, box-shadow ${l.default.transitionDuration}ms;
  box-shadow: 0 0 4px 1px rgb(0, 0, 0, 0.2);
  cursor: pointer;
  :hover {
    box-shadow: ${l.default.shadowCircleDark};
  }
  .lineHorizon {
    position: relative;
    top: 25%;
    margin: 0 auto;
    width: ${10}%;
    height: ${48}%;
    background: #fff;
    border-radius: 10%;
  }
  .lineVertical {
    position: relative;
    top: -4%;
    margin: 0 auto;
    width: ${48}%;
    height: ${10}%;
    background: #fff;
    border-radius: 10%;
  }
`,c=(0,i.default)(o.default)`
  height: 55px;
  padding: 10px 30px;
  margin: 10px;
  background: ${e=>e.isEditable?l.default.themeColor:l.default.tagBgColor};
  border-radius: 30px;
  color: #fff;
  cursor: pointer;
  transition: background ${l.default.transitionDuration}ms, box-shadow ${l.default.transitionDuration}ms;
  :hover {
    background: ${l.default.themeColor};
    box-shadow: ${l.default.shadowHorizonBright};
  }
`},5987:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(300)),d=o(n(819)),c=o(n(6032));t.default=({ch:e,openMenu:t,storiesIndexPointer:n,menuOrderRef:r})=>l.createElement(f,{className:"SideMenuOrder",ref:r,openMenu:t,focusMenuNo:n},window.talknConfig.storiesIndex.length>0&&window.talknConfig.storiesIndex.map(((t,n)=>l.createElement(d.default.Five,{key:`Index${n}`,id:"Index",className:`MenuList MenuList-${t.no}`},l.createElement(p,{href:`https://${s.default.coverURL}${e}story/${t.no}`},l.createElement("span",{className:"number"},"#",t.no," "),l.createElement("span",{className:"resume"},t.title))))));const f=u.default.div`
  position: fixed;
  z-index: ${c.default.zIndex.sideMenu};
  top: ${c.default.appHeaderHeight}px;
  right: 0;
  overflow-x: hidden;
  overflow-y: scroll;
  display: flex;
  flex-flow: column;
  align-items: flex-start;
  justify-content: flex-start;
  background: ${c.default.componentBgColor};
  color: ${c.default.fontColor};
  width: ${c.default.menuPcWidth}px;
  height: calc(100% - ${c.default.appHeaderHeight}px);
  min-height: calc(100% - ${c.default.appHeaderHeight}px);
  max-height: calc(100% - ${c.default.appHeaderHeight}px);
  padding: ${c.default.basePadding}px;
  border-left: 1px solid ${c.default.borderColor};
  transition: ${c.default.transitionDuration}ms;
  transform: translate(${e=>e.openMenu?0:`${c.default.menuPcWidth}px`}, 0px);
  a,
  a:visited,
  a:hover,
  a:active {
    color: ${c.default.fontColor};
  }
  @media (max-width: ${c.default.spLayoutWidth}px) {
    width: ${c.default.menuTabWidth}px;
    transform: translate(${e=>e.openMenu?0:`${c.default.menuTabWidth}px`}, 0px);
  }
  @media (max-width: ${c.default.spLayoutStrictWidth}px) {
    width: 100%;
    transform: translate(${e=>e.openMenu?0:"100%"}, 0px);
  }
  .MenuList-${e=>e.focusMenuNo} {
    font-weight: 300;
    line-height: 40px;
  }
`,p=u.default.a`
  display: flex;
  flex-flow: row nowrap;
  align-items: flex-start;
  justify-content: flex-start;
  line-height: 40px;
  :hover {
    font-weight: 300;
    .resume {
      text-decoration: underline;
    }
  }
  .number {
    width: 35px;
    min-width: 35px;
  }
`},9610:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(819)),d=o(n(4158)),c=o(n(226)),f=o(n(6032));t.default=({navigationLayout:e,storiesRef:t,resumeRef:n,storiesPointer:r,handleOnClickNav:a})=>l.createElement(p,{navigationLayout:e},l.createElement(g,{className:"Stories",ref:t},window.talknStories.sections.map((({title:e,flow:t,nodes:n},r)=>l.createElement(c.default,{key:`Section${r}`,number:r+1,title:e,flow:t},n.map(((e,t)=>l.createElement(d.default,{key:`${e.type}-${r}-${t}`,type:e.type,props:e.props,nodes:e.nodes}))))))),l.createElement(m,{ref:n,navigationLayout:e},l.createElement(v,null,"- 目次 -"),window.talknStories&&window.talknStories.sections.length>0&&l.createElement(b,{storiesPointer:r},window.talknStories.sections.map((({resume:e},t)=>{const n=t<9?`0${t+1}`:t+1;return l.createElement("li",{key:`${e}${t}`},l.createElement(y,{onClick:()=>a(t)},l.createElement("span",{className:"number"},n,"."),l.createElement("span",{className:"resume"},e)))})))));const p=u.default.div`
  display: flex;
  flex-flow: ${e=>e.navigationLayout?"row nowrap":"column nowrap"};
  align-items: flex-start;
  justify-content: flex-start;
  width: 100%;
  max-width: ${f.default.appWidth}px;
  height: auto;
  margin: 0 auto;
  @media (max-width: ${f.default.spLayoutWidth}px) {
    flex-flow: column-reverse;
  }
`,h=f.default.doublePadding,g=u.default.div`
  flex: 1 1 auto;
  overflow: hidden;
  height: auto;
  padding-right: 0;
  padding-left: ${h}px;
  @media (max-width: ${f.default.spLayoutWidth}px) {
    padding-right: ${f.default.basePadding}px;
    padding-left: ${f.default.basePadding}px;
  }
  @media (max-width: ${f.default.spLayoutStrictWidth}px) {
    padding-right: 0;
    padding-left: 0;
  }
`,m=u.default.nav`
  flex: 1 1 auto;
  z-index: 0;
  position: sticky;
  top: ${2*f.default.appHeaderHeight+f.default.baseMargin}px;
  width: 100%;
  min-width: 320px;
  max-width: 320px;
  padding-top: ${f.default.basePadding}px;
  padding-right: ${f.default.basePadding}px;
  padding-bottom: ${f.default.doublePadding}px;
  padding-left: ${f.default.basePadding}px;
  margin: ${f.default.quadMargin}px ${f.default.baseMargin}px ${f.default.baseMargin}px ${f.default.baseMargin}px;
  background: rgba(255, 255, 255, 0.9);
  border: 1px solid ${f.default.borderColor};
  border-radius: 15px;
  ol,
  li {
    list-style: none;
  }
  li {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    font-size: 20px;
    font-weight: 200;
    line-height: 24px;
  }
  a {
    display: flex;
    flex-flow: row nowrap;
    align-items: flex-start;
    justify-content: flex-start;
    line-height: 40px;
  }
  @media (max-width: ${f.default.spLayoutWidth}px) {
    z-index: auto;
    position: relative;
    top: 0;
    width: calc(100% - ${f.default.doubleMargin}px);
    min-width: calc(100% - ${f.default.doubleMargin}px);
    padding: 0;
    text-align: center;
    li {
      justify-content: center;
    }
  }
`,b=u.default.ol`
  padding: 0;
  margin: 0 auto;
  li:nth-child(${e=>e.storiesPointer+1}) a {
    font-weight: 400;
    letter-spacing: 1.5px;
  }
`,y=u.default.a`
  display: flex;
  flex-flow: row nowrap;
  align-items: flex-start;
  justify-content: flex-start;
  line-height: 40px;
  :hover {
    font-weight: 300;
    .resume {
      text-decoration: underline;
    }
  }
  .number {
    width: 35px;
    min-width: 35px;
  }
`,v=(0,u.default)(s.default.Five)`
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: center;
`},2376:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ViewAnchor=t.HeadEyeCatchList=t.getScrollWidth=t.storiesIndexContentsInit=void 0;const l=i(n(7294)),u=o(n(9163)),s=o(n(300)),d=n(2865),c=o(n(6032));t.storiesIndexContentsInit=[],t.getScrollWidth=()=>window.innerWidth>c.default.appWidth?c.default.appWidth:window.innerWidth,t.default=()=>{const e=(0,l.useRef)(),[n,r]=(0,l.useState)([]),[a,i]=(0,l.useState)(0),[o,u]=(0,l.useState)(t.storiesIndexContentsInit);return(0,l.useEffect)((()=>{const e=window.talknStoriesPointer-d.configStoriesLimit/2,t=0<=e?e:0,n=d.configStoriesLimit,a=[...window.talknConfig.storiesIndex].reverse();let i=[...window.talknConfig.storiesIndex].map(((e,t)=>(window.talknThread.ch,e))).splice(t,n);i=i.reverse(),r(a),u(i)}),[window.talknConfig.storiesIndex]),l.default.createElement(f,{ref:e,onScroll:e=>{const n=(0,t.getScrollWidth)(),r=e.target.scrollLeft/n;Number.isInteger(r)&&i(r)},storiesIndexCnt:window.talknConfig.storiesIndex.length},o.map(((e,n)=>l.default.createElement(t.HeadEyeCatchList,{key:`HeadEyeCatchList${n}`,className:"HeadEyeCatchList","data-no":e.no,eyeCatch:e.eyeCatch,storiesIndexCnt:window.talknConfig.storiesIndex.length},l.default.createElement(t.ViewAnchor,{href:`https://${s.default.coverURL}${e.ch}story/${e.no}`},l.default.createElement("div",{className:"creatorBg"},""===e.eyeCatch&&"NO IMAGE"),l.default.createElement("div",{className:"creatorDescription"},e.title))))))};const f=u.default.ol`
  ${e=>e.slide?"overflow: scroll hidden":""};
  display: flex;
  flex-flow: row ${e=>e.slide?"nowrap":"wrap"};
  align-items: flex-start;
  justify-content: ${e=>e.slide&&e.storiesIndexCnt<3?"center":"flex-start"};
  width: 100%;
  max-width: ${c.default.appWidth}px;
  padding: 0;
  margin: 0 auto;
  ${e=>e.slide?"scroll-snap-type: x mandatory":""};
  @media (max-width: ${c.default.spLayoutWidth}px) {
    justify-content: flex-start;
  }
  @media (max-width: ${c.default.spLayoutStrictWidth}px) {
    justify-content: flex-start;
  }
`;t.HeadEyeCatchList=u.default.li`
  display: flex;
  flex-flow: column nowrap;
  align-items: flex-start;
  justify-content: flex-end;
  width: 33.33%;
  min-width: 400px;
  height: fit-content;
  padding: 10px;
  overflow: hidden;
  text-align: right;
  ${e=>e.slide?"scroll-snap-align: start":""};
  color: #fff;
  list-style: none;
  :hover {
    a {
      transform: scale(1.03);
      opacity: 0.8;
    }
    div.creatorDescription {
      text-decoration: underline solid ${c.default.fontColor} 1px;
    }
  }
  a {
    display: flex;
    flex-flow: column nowrap;
    align-items: flex-start;
    justify-content: center;
    width: 100%;
    color: #fff;
    transition: ${c.default.transitionDuration}ms;
    cursor: pointer;
  }
  div.creatorBg {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    height: 160px;
    background-color: ${c.default.articleBgColor};
    background-size: cover;
    background-image: url('${e=>""!==e.eyeCatch?e.eyeCatch:"none"}');
    background-position: 50%;
    background-repeat: no-repeat;
    border: 1px solid ${c.default.borderColor};
    border-radius: ${c.default.baseSize}px;
    transition: ${c.default.transitionDuration}ms;
    :hover {
      background-color: ${c.default.articleBgHoverColor};
    }
  }
  div.creatorDescription {
    margin: ${c.default.baseMargin}px 0;
    text-align: left;
    line-height: 30px;
    font-size: 20px;
    font-weight: 200;
    color: ${c.default.fontColor};
  }
  @media (max-width: ${c.default.spLayoutWidth}px) {
    width: 50%;
    min-width: 50%;
  }
  @media (max-width: ${c.default.spLayoutStrictWidth}px) {
    width: 100%;
    min-width: 100%;
  }
`,t.ViewAnchor=u.default.a`
  display: flex;
  align-items: center;
  justify-content: center;
  width: auto;
  height: 100%;
`},5662:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fixValuesInit=t.hoverAnimationDefault=t.hoverAnimationBlur=t.hoverAnimationBoxShadow=void 0;const l=i(n(7294)),u=o(n(9163)),s=o(n(300)),d=o(n(6562)),c=o(n(8352)),f=o(n(1187)),p=n(7303),h=o(n(6032));t.hoverAnimationBoxShadow="shadow",t.hoverAnimationBlur="blur",t.hoverAnimationDefault=t.hoverAnimationBlur,t.fixValuesInit={email:"",bg:"",icon:"",sexes:[],languages:[],birthday:s.default.defaultBirthdayUnixtime};const g=({label:e})=>l.default.createElement(E,null,l.default.createElement("span",{className:"label"},e));t.default=({user:e={},handleOnClick:n,isSavedAnimation:r,hoverAnimationType:a=t.hoverAnimationDefault,fullWidth:i=!0})=>{const{innerWidth:o,innerHeight:u}=(0,p.useGlobalContext)(),[s,h]=(0,l.useState)(!1),[E,_]=(0,l.useState)(!1),S=x(o,u);return(0,l.useEffect)((()=>{_(!0)}),[]),l.default.createElement(m,null,l.default.createElement(b,{email:e.email,image:e.bg,isHover:s,hoverAnimationType:a,controlHeight:S,fullWidth:i}),E&&l.default.createElement(y,{className:"EyeCatchMainBody",onMouseOver:()=>h(!0),onMouseLeave:()=>h(!1),onClick:n&&n,fullWidth:i,flow:"row nowrap",alignItems:"center",justifyContent:"center",controlHeight:S},l.default.createElement(v,{className:"ProfileContent",flow:"row nowrap",alignItems:"flex-start",justifyContent:"flex-start"},l.default.createElement(w,{email:e.email,image:e.icon}),l.default.createElement(c.default,{className:"userData",flow:"column nowrap",sideMargin:!0,sidePadding:!0},l.default.createElement("div",{className:"name"},e.name),l.default.createElement("div",{className:"age"},"AGE: ",d.default.getAgeByBirthday(e.birthday)),l.default.createElement(c.default,{className:"userTags",flow:"row wrap",upperMargin:!0},e&&e.hasSelfTags&&Object.keys(e.hasSelfTags).map((t=>e.hasSelfTags[t]&&l.default.createElement(g,{key:t,label:t})))),l.default.createElement(c.default,{className:"selfIntro",flow:"row wrap",upperMargin:!0},"Self Introduction Text......"))),r&&l.default.createElement(f.default,null)))};const m=u.default.section`
  display: contents;
`,b=u.default.div`
  overflow: hidden;
  display: flex;
  flex-flow: row nowrap;
  align-items: flex-start;
  justify-content: flex-start;
  width: ${e=>e.fullWidth?`${h.default.eyeCatchVwValue}vw`:"100%"};
  height: ${e=>e.controlHeight}px;
  min-height: ${h.default.eyeCatchMinHeightPxValue}px;
  background-size: cover;
  background-image: url(${e=>_({email:e.email,image:e.image})});
  background-position: center;
  color: ${h.default.whiteColor};
  opacity: 1;
  box-shadow: ${e=>k(e)};
  transition: ${h.default.transitionDuration}ms;
  transform: ${e=>S(e)};
  :before {
    background-color: rgba(0, 0, 0, 0.3);
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    content: ' ';
    backdrop-filter: ${e=>C(e)};
    transition: ${h.default.transitionDuration}ms;
  }

  @media (max-width: ${h.default.spLayoutStrictWidth}px) {
    height: ${h.default.eyeCatchVhValue}vh;
    min-height: unset;
  }
`,y=(0,u.default)(c.default)`
  width: ${e=>e.fullWidth?`${h.default.eyeCatchVwValue}vw`:"100%"};
  height: ${e=>e.controlHeight}px;
  min-height: ${h.default.eyeCatchMinHeightPxValue}px;
  margin-top: -${e=>e.controlHeight}px;
  z-index: ${h.default.zIndex.eyeCatch};
  cursor: pointer;
  @media (max-width: ${h.default.spLayoutStrictWidth}px) {
    height: ${h.default.eyeCatchVhValue}vh;
    min-height: unset;
  }
`,v=(0,u.default)(c.default)`
  width: 100%;
  max-width: ${h.default.appWidth}px;
  margin-left: 5%;
  color: ${h.default.whiteColor};

  .name {
    font-weight: 500;
    font-size: 35px;
  }

  .age {
    font-size: 20px;
  }

  .userTags {
    margin-left: -${h.default.baseMargin}px;
    font-size: 20px;
  }

  .selfIntro {
    font-size: 20px;
  }

  @media (max-width: ${h.default.spLayoutStrictWidth}px) {
    align-items: center;
    margin-left: 5vw;
    font-weight: 300;
    .userData {
      padding: 0;
      margin-top: 0;
      margin-right: 0;
      margin-bottom: 0;
      margin-left: 10px;
    }

    .name {
      font-weight: 500;
      font-size: 25px;
    }

    .age {
      font-size: 12px;
    }

    .userTags {
      margin-left: -${h.default.baseMargin}px;
      font-size: 12px;
    }

    .selfIntro {
      font-size: 12px;
    }
  }
`,w=u.default.div`
  width: 120px;
  height: 120px;
  background-size: cover;
  background-image: url(${e=>_({email:e.email,image:e.image})});
  background-position: center;
  border-radius: 50%;
  transition: ${h.default.transitionDuration}ms;
  @media (max-width: ${h.default.spLayoutStrictWidth}px) {
    width: 60px;
    height: 60px;
  }
`,E=u.default.div`
  background: ${h.default.themeColor};
  padding: ${h.default.basePadding}px ${2*h.default.basePadding}px;
  margin-right: ${h.default.doubleMargin}px;
  color: ${h.default.whiteColor};
  border-radius: 30px;
`,x=(e,t)=>{const{spLayoutStrictWidth:n,eyeCatchMinHeightPxValue:r}=h.default;let a=Math.floor(t*(h.default.eyeCatchVhValue/100));return e<n?a:a<r?r:a},_=({email:e,image:t})=>t&&""!==t?`https://${s.default.assetsCoverPath}${e}/${t}`:"none",S=e=>e.isHover?e.hoverAnimationType===t.hoverAnimationBlur?"scale(1.03)":(e.hoverAnimationType,t.hoverAnimationBoxShadow,"scale(1)"):"scale(1)",C=e=>e.isHover?"blur(2px) brightness(0.7)":"blur(0) brightness(1)",k=e=>e.isHover&&e.hoverAnimationType===t.hoverAnimationBoxShadow?h.default.shadowHorizonBase:"none"},5367:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.fixValuesInit=void 0;const l=i(n(7294)),u=o(n(9163)),s=o(n(300)),d=o(n(8203)),c=i(n(4034)),f=o(n(8352)),p=o(n(819)),h=o(n(6490)),g=n(2584),m=n(9639),b=o(n(5662)),y=o(n(2068)),v=o(n(6032));t.fixValuesInit={email:"",bg:"",icon:"",sexes:[],languages:[],birthday:s.default.defaultBirthdayUnixtime},t.default=({isMyPage:e,userTags:n,userModalOptions:r,user:a,setUser:i,setSelectProfileModalOption:o})=>{const[u,s]=(0,l.useState)(!1),[v,E]=(0,l.useState)(!1),[x,_]=(0,l.useState)(!1),[S,C]=(0,l.useState)(new FormData),[k,P]=(0,l.useState)(new FormData),[M,O]=(0,l.useState)(t.fixValuesInit),A=a&&a.email?a.email:"";return(0,l.useEffect)((()=>{M.languages&&M.sexes&&M.languages.length>0&&M.sexes.length>0&&0!==M.birthday?E(!1):E(!0)}),[M]),(0,l.useEffect)((()=>{O({...M,bg:r.bg,icon:r.icon,languages:r.languages,sexes:r.sexes,birthday:r.birthday})}),[r]),l.default.createElement(l.default.Fragment,null,l.default.createElement(b.default,{user:a,handleOnClick:()=>e&&_(!x),isSavedAnimation:u}),l.default.createElement(y.default.Structure,{show:x,closeModal:()=>_(!1),header:l.default.createElement(p.default.Five,null,"Profile(Edit)"),content:l.default.createElement(f.default,{flow:"column nowrap"},l.default.createElement(h.default.DropImage,{type:g.imageBg,email:A,className:"InputDropImageBg",onChange:(e,t)=>{C(e),O({...M,bg:t})},value:r.bg}),l.default.createElement(w,{type:g.imageIcon,email:A,className:"InputDropImageIcon",onChange:(e,t)=>{P(e),O({...M,icon:t})},value:r.icon}),l.default.createElement("br",null),l.default.createElement(m.Profiles,{type:"EyeCatchMain",userModalOptions:{...r,isEditable:!0},handleOnChangeLanguages:e=>{O({...M,languages:e})},handleOnChangeSexes:e=>{O({...M,sexes:e})},handleOnChangeBirthday:e=>{O({...M,birthday:e})}})),footer:l.default.createElement(l.default.Fragment,null,l.default.createElement(c.default,{disabled:!1,theme:c.buttonThemeBright,onClick:()=>_(!1),sideMargin:!0},"CLOSE"),l.default.createElement(c.default,{disabled:v,theme:c.buttonThemeHot,onClick:()=>{(()=>{const e=[],t=a.email,n={...a,email:t,bg:M.bg,icon:M.icon,languages:M.languages,sexes:M.sexes,birthday:M.birthday};let l=!1;i(n),o({...r,bg:n.bg,icon:n.icon,languages:n.languages,sexes:n.sexes,birthday:n.birthday}),k.has("icon")&&(l=!0,k.set("email",t),e.push(d.default.formData("saveUserIcon",t,k))),S.has("bg")&&(l=!0,S.set("email",t),e.push(d.default.formData("saveUserBg",t,S))),e.push(d.default.json("saveUser",n)),Promise.all(e).then((()=>{l?window.location.reload():(s(!0),setTimeout((()=>{s(!1)}),2e3))}))})(),_(!1)},sideMargin:!0},"SAVE"))}))};const w=(0,u.default)(h.default.DropImage)`
  margin-top: -190px;
  margin-left: 32px;
  margin-bottom: 100px;
`;u.default.div`
  background: ${v.default.themeColor};
  padding: 10px ${1.5*v.default.doublePadding}px;
  margin-right: ${v.default.doubleMargin}px;
  color: ${v.default.whiteColor};
  border-radius: 30px;
  .cnt {
    font-size: 15px;
  }
  @media (max-width: ${v.default.spLayoutStrictWidth}px) {
    font-size: 16px;
  }
`},7474:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.storiesIndexContentsInit=void 0;const l=i(n(7294)),u=o(n(9163)),s=o(n(300)),d=n(2865),c=n(2376),f=o(n(6032));t.storiesIndexContentsInit=[],t.default=({slide:e})=>{const n=(0,l.useRef)(),[r,a]=(0,l.useState)(t.storiesIndexContentsInit),[i,o]=(0,l.useState)(t.storiesIndexContentsInit),[u,f]=(0,l.useState)(0),g=window.talknConfig.storiesIndex.length;(0,l.useEffect)((()=>{if(n.current){const e=Array.from(n.current.children).findIndex((e=>Number(e.getAttribute("data-no"))===window.talknStoriesPointer));e>=0&&(n.current.scrollLeft=(0,c.getScrollWidth)()*e,f(e))}}),[n.current,window.talknStoriesPointer]),(0,l.useEffect)((()=>{const e=window.talknStoriesPointer-d.configStoriesLimit/2,t=0<=e?e:0,n=d.configStoriesLimit,r=[...window.talknConfig.storiesIndex].reverse();let i=[...window.talknConfig.storiesIndex].map(((e,t)=>(window.talknThread.ch,e))).splice(t,n);i=i.reverse(),a(r),o(i)}),[window.talknConfig.storiesIndex]);const m=e=>{n.current&&n.current.scrollTo({left:(0,c.getScrollWidth)()*e.target.dataset.index,behavior:"smooth"})};return l.default.createElement(l.default.Fragment,null,l.default.createElement(p,{ref:n,slide:!0,onScroll:e=>{},storiesIndexCnt:g},i.map(((e,t)=>l.default.createElement(c.HeadEyeCatchList,{key:`HeadEyeCatchList${t}`,slide:!0,className:"HeadEyeCatchList","data-no":e.no,eyeCatch:e.eyeCatch,storiesIndexCnt:g},l.default.createElement(c.ViewAnchor,{href:`https://${s.default.coverURL}${e.ch}story/${e.no}`},l.default.createElement("div",{className:"creatorBg"},""===e.eyeCatch&&"NO IMAGE"),l.default.createElement("div",{className:"creatorDescription"},e.title)))))),window.talknConfig&&window.talknConfig.storiesIndex.length>0&&l.default.createElement(h,{storiesIndexCnt:g,eyeCatchScrollIndex:u},window.talknConfig&&window.talknConfig.storiesIndex.map(((e,t)=>l.default.createElement("li",{key:`${e.no}-${t}`,"data-index":t,onClick:m})))))};const p=u.default.div`
  ${e=>e.slide?"overflow: scroll hidden":""};
  display: flex;
  flex-flow: row ${e=>e.slide?"nowrap":"wrap"};
  align-items: flex-start;
  justify-content: ${e=>e.slide&&e.storiesIndexCnt<3?"center":"flex-start"};
  width: 100%;
  max-width: ${f.default.appWidth}px;
  padding: 0;
  margin: 0 auto;
  ${e=>e.slide?"scroll-snap-type: x mandatory":""};
  @media (max-width: ${f.default.spLayoutWidth}px) {
    justify-content: flex-start;
  }
  @media (max-width: ${f.default.spLayoutStrictWidth}px) {
    justify-content: flex-start;
  }
`,h=u.default.ol`
  display: none;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: space-around;
  width: calc(${e=>g(e.storiesIndexCnt)}% - ${f.default.doubleMargin}px);
  padding: 0;
  margin: 0 auto;
  li {
    width: ${f.default.baseSize}px;
    height: ${f.default.baseSize}px;
    margin: ${f.default.baseSize}px;
    background: ${f.default.borderColor};
    border-radius: ${f.default.baseSize}px;
    list-style: none;
    cursor: pointer;
  }
  li[data-index='${e=>e.eyeCatchScrollIndex}'] {
    background: ${f.default.fontColor};
  }
  @media (max-width: ${f.default.spLayoutWidth}px) {
    li {
      margin: ${f.default.baseSize/2}px;
    }
  }
  @media (max-width: ${f.default.spLayoutStrictWidth}px) {
    display: flex;
    li {
      width: 10px;
      min-width: 10px;
      height: 10px;
      min-height: 10px;
      margin: 10px;
    }
  }
`,g=e=>e<10?Number(`${e}0`):100},1765:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=i(n(8352)),d=o(n(2375)),c=o(n(6020)),f=n(9749),p=o(n(6032));t.default=e=>{const t=(0,l.useRef)(l.default.createElement("ol",null)),n={...f.layoutPropsInit,...s.flexLayoutPropsInit,fitRight:!1,...e};return l.default.createElement(l.default.Fragment,null,l.default.createElement(h,{show:n.show,onClick:()=>n.setShow(!1)}),l.default.createElement(s.default,{flow:"column nowrap",className:"FloatMenuContainer"},n.label&&l.default.createElement(d.default,{onClick:()=>n.setShow(!0)},n.label),n.show&&l.default.createElement(g,{ref:t,show:n.show,fitRight:n.fitRight,className:"MenuOl"},n.menus.map((e=>l.default.createElement(c.default,{key:e.key,onClick:()=>n.onClick(e.key),lineHeight:"36px",sidePadding:!0,pointer:!0,hover:!0},e.label))))))};const h=u.default.div`
  position: fixed;
  top: 0;
  left: 0;
  display: ${e=>e.show?"flex":"none"};
  align-items: center;
  justify-content: center;
  width: 100vw;
  height: 100vh;
  z-index: ${e=>e.show?1e3:-1};
  opacity: ${e=>e.show?1:0};
`,g=u.default.ol`
  position: absolute;
  ${e=>e.show&&e.fitRight?"right: 0":""};
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
  width: fit-content;
  height: fit-content;
  padding: ${p.default.doublePadding}px ${p.default.basePadding}px;
  margin: ${p.default.doubleMargin}px;
  ${p.default.alphaBgSet};
  border: 1px solid ${p.default.borderColor};
  border-radius: ${p.default.borderRadius}px;
  box-shadow: ${p.default.shadowHorizonBright};
  transition: transform ${p.default.transitionDuration}ms;
  z-index: ${e=>e.show?1001:-1};
  opacity: ${e=>e.show?1:0};
  transform: translateY(${e=>e.show?0:2*p.default.baseSize+"px"});
  @media (max-width: ${p.default.spLayoutStrictWidth}px) {
    width: 100vw;
    height: 100vh;
    border-radius: 0;
  }
`},456:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(300)),d=o(n(8352)),c=o(n(819)),f=o(n(990)),p=o(n(6032));t.default=({ch:e})=>{const[t,n]=(0,l.useState)(!1),r=e=>{e.target.select(),document.execCommand("copy"),n(!0),setTimeout((()=>{n(!1)}),2e3)};return l.default.createElement(h,null,l.default.createElement(c.default.Five,{color:p.default.fontLightColor},"- Actions -"),l.default.createElement("br",null),l.default.createElement("br",null),l.default.createElement("h3",null,"Update"),l.default.createElement(d.default,{flow:"row wrap",alignItems:"center",justifyContent:"center"},l.default.createElement(f.default,{label:"Live Pages",theme:"dark",href:`https://${s.default.coverURL}${e}build`}),l.default.createElement(f.default,{label:"Config",theme:"dark",href:`https://${s.default.coverURL}${e}updateConfig`})),l.default.createElement("br",null),l.default.createElement("br",null),l.default.createElement("h3",null,"Include your site"),l.default.createElement(g,{copied:t},t&&"Copied"),l.default.createElement("ul",null,l.default.createElement("li",null,l.default.createElement("span",null,"LiveCntをサイトに組み込む"),l.default.createElement("input",{onClick:r,onChange:()=>{},value:'<script src="//tune.talkn.io/" type="text/javascript" />'})),l.default.createElement("li",null,l.default.createElement("span",null,"Componentをサイトに組み込む"),l.default.createElement("input",{onClick:r,onChange:()=>{},value:'<script src="//components.talkn.io/" type="text/javascript" />'})),l.default.createElement("li",null,l.default.createElement("span",null,"Full Packageをサイトに組み込む"),l.default.createElement("input",{onClick:r,onChange:()=>{},value:'<script src="//ext.talkn.io/" type="text/javascript" />'})),l.default.createElement("li",null,l.default.createElement("span",null,"talknAPIをサイトに組み込む"),l.default.createElement("input",{onClick:r,onChange:()=>{},value:'<script src="//api.talkn.io/" type="text/javascript" />'}))))};const h=u.default.section`
  display: flex;
  flex-flow: column wrap;
  align-items: center;
  justify-content: center;
  width: 100%;
  padding: ${p.default.doublePadding}px;
  background: rgb(80, 80, 80);
  color: #fff;

  ul {
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    justify-content: center;
    max-width: ${p.default.appWidth/1.5}px;
    padding: 0;
    margin: 0;
    text-align: center;
    list-style: none;

    li {
      display: flex;
      flex-flow: column wrap;
      align-items: flex-start;
      justify-content: flex-start;
      width: 320px;
      margin: ${p.default.baseMargin}px;
    }
    span {
      text-indent: ${2*p.default.baseSize}px;
    }
    input {
      width: 100%;
      min-width: 230px;
      max-width: 320px;
      padding: 10px ${p.default.basePadding}px;
      margin: ${p.default.baseMargin}px;
      border: 0;
      border-radius: ${2*p.default.baseSize}px;
      outline: none;
      cursor: pointer;
      transition: ${p.default.transitionDuration}ms;
      :hover {
        background: ${p.default.themeColor};
        color: #fff;
      }
    }
  }
`,g=u.default.div`
  display: flex;
  align-items: center;
  justify-content: center;
  height: ${p.default.baseHeight}px;
  padding: 0 ${p.default.doublePadding}px;
  border-radius: ${p.default.baseSize}px;
  opacity: ${e=>e.copied?1:0};
  transition: ${p.default.transitionDuration}ms;
`},1693:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(6032));t.default=()=>l.createElement(d,null,l.createElement(c,null,l.createElement(f,null,l.createElement(p,null),l.createElement(h,null)),l.createElement(g,null)));const d=u.default.section`
  display: flex;
  flex-flow: column wrap;
  align-items: center;
  justify-content: flex-start;
  width: 100%;
  height: 1680px;
  margin: 0 auto;
  background: #111;
`,c=u.default.div`
  display: flex;
  flex-flow: column wrap;
  align-items: center;
  justify-content: flex-start;
  width: 100%;
  max-width: ${s.default.appWidth}px;
  height: inherit;
  margin: 0 auto;
  background: url(https://assets.talkn.io/img/walk2.png) 10% 85% / 240px no-repeat;
  @media (max-width: ${s.default.spLayoutWidth}px) {
    background: url(https://assets.talkn.io/img/walk2.png) 50% 100% / 240px no-repeat;
  }
`,f=u.default.div`
  display: flex;
  flex-flow: column wrap;
  align-items: flex-start;
  justify-content: flex-start;
  width: 300px;
  height: calc(80% + 190px);
  margin-left: -45%;
  @media (max-width: ${s.default.spLayoutWidth}px) {
    height: calc(100% + 190px);
    margin-left: 0;
  }
`,p=u.default.div`
  width: 40px;
  height: 80%;
  background: rgb(35, 35, 35);
`,h=u.default.div`
  width: 150px;
  height: 150px;
  padding: 0;
  margin: 0;
  border-color: transparent transparent rgb(35, 35, 35) transparent;
  border-style: solid;
  border-width: 150px 150px 150px 0;
  transform: translate3d(-104px, -203px, 0) rotate(315deg);
`,g=u.default.div`
  position: absolute;
  width: 512px;
  height: 512px;
  background: url(https://assets.talkn.io/img/logo_glay.png) 100% / 512px no-repeat;
  opacity: 0.2;
  transform: translate3d(-100px, 640px, 0);
  @media (max-width: ${s.default.spLayoutWidth}px) {
    transform: translate3d(-100px, 780px, 0);
  }
`},2435:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(6032));t.default=()=>l.createElement(d,null,l.createElement(c,null,"- Update the internet for creators -"),l.createElement(f,null,"Copyright © talkn."));const d=u.default.section`
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: center;
  width: 100%;
  padding: ${s.default.sepMargin}px 0;
  color: #fff;
  background: #111;
  @media (max-width: ${s.default.spLayoutWidth}px) {
    padding: 60px 0 120px;
  }
`,c=u.default.div`
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: center;
  margin: 20px;
`,f=u.default.div`
  display: flex;
  flex-flow: column wrap;
  align-items: center;
  justify-content: center;
  width: 100%;
  margin: 20px;
`},3953:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=n(453),d=o(n(5990)),c=o(n(990)),f=o(n(6032));t.default=()=>(Array.from(Object.keys(s.NetworkList)).map((e=>{const t=e,n=s.NetworkList[t].label,r=t===s.MediaTypeNews;return l.createElement(c.default,{label:n,key:n,active:r,theme:"dark",href:"https://news.talkn.io"})})),l.createElement(l.Fragment,null)),(0,u.default)(d.default)`
  background: rgb(35, 35, 35);
  color: #fff;
  @media (max-width: ${f.default.spLayoutWidth}px) {
    padding: 20px 0;
  }
`},7010:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(819)),d=o(n(6032));t.default=()=>l.createElement(c,null,l.createElement(s.default.Five,{color:d.default.fontLightColor},"- Domain Profile Project -"),l.createElement("br",null),l.createElement("h3",null,"Concept"),l.createElement(f,null,l.createElement("p",null,"ドメインの中でもの作りをする人をピックアップするWEBメディアです。 TOPドメインが保有する「Metaタグ」「Ogpタグ」を編集することで自由に作成・編集が出来ます。")),l.createElement("h3",null,"Mission"),l.createElement(f,null,l.createElement("p",null,"もの作りに関わる人・繋がりたい人をタグ付けで可視化、AIマッチングすることで、インターネット上で不要な「仲介」や「需給ギャップ」を無くします。")),l.createElement("h3",null,"Sponser"),l.createElement(p,null,l.createElement(h,null,l.createElement("span",{className:"icon"}),l.createElement("span",null)),l.createElement(h,null,l.createElement("span",{className:"icon"}),l.createElement("span",null)),l.createElement(h,null,l.createElement("span",{className:"icon"}),l.createElement("span",null))),l.createElement("h3",null,"Member"),l.createElement(p,null,l.createElement(h,{href:"https://twitter.com/mirazle",bgSrc:"https://pbs.twimg.com/profile_images/1725640801/baba_x96.png"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"},"mirazle@talkn")),l.createElement(h,{href:"https://twitter.com/mirazle"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"})),l.createElement(h,{href:"https://twitter.com/mirazle"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"})),l.createElement(h,{href:"https://twitter.com/mirazle"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"})),l.createElement(h,{href:"https://twitter.com/mirazle"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"})),l.createElement(h,{href:"https://twitter.com/mirazle"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"})),l.createElement(h,{href:"https://twitter.com/mirazle"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"})),l.createElement(h,{href:"https://twitter.com/mirazle"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"})),l.createElement(h,{href:"https://twitter.com/mirazle"},l.createElement("span",{className:"icon"}),l.createElement("span",{className:"name"}))));const c=u.default.section`
  display: flex;
  flex-flow: column wrap;
  align-items: center;
  justify-content: flex-start;
  width: 100%;
  padding: ${d.default.doublePadding}px ${d.default.doublePadding}px ${d.default.sepMargin}px ${d.default.doublePadding}px;
  background: rgb(68, 68, 68);
  color: #fff;
  line-height: 30px;
  h3 {
    margin: 45px 0;
  }
`,f=u.default.div`
  width: 100%;
  max-width: 600px;
`,p=u.default.div`
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: center;
  max-width: ${d.default.appWidth}px;
`,h=u.default.a`
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  margin: ${d.default.baseMargin}px;
  font-size: 12px;
  color: #fff;
  opacity: 1;
  transition: ${d.default.transitionDuration}ms;
  :hover {
    opacity: 0.6;
    .icon {
      background-size: 74px;
    }
  }
  .icon {
    width: 64px;
    height: 64px;
    border-radius: 50%;
    cursor: pointer;
    background: url(${e=>e.bgSrc});
    background-position: center;
    background-size: 64px;
    background-color: ${d.default.fontColor};
    transition: ${d.default.transitionDuration}ms;
  }
  .name {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 40px;
  }
`},8530:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(6032));t.default=()=>l.createElement(d,{onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},l.createElement("div",{className:"ToTopArrow"}),l.createElement("div",{className:"ToTopArrowUnderBar"}));const d=u.default.div`
  z-index: ${s.default.zIndex.toTop};
  position: sticky;
  top: calc(100vh - 110px);
  right: 70px;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
  width: ${s.default.quintSize}px;
  height: ${s.default.quintSize}px;
  padding: ${s.default.quintSize}px;
  margin: 0 0 60px auto;
  ${s.default.alphaBgSet};
  border: 1px solid ${s.default.fontColor};
  border-radius: ${s.default.baseSize}px;
  transition: ${s.default.transitionDuration}ms;
  div.ToTopArrow {
    position: relative;
    top: -4px;
    border-right: 15px solid transparent;
    border-bottom: 25px solid ${s.default.fontColor};
    border-left: 15px solid transparent;
  }
  div.ToTopArrowUnderBar {
    width: 30px;
    height: 5px;
    min-height: 5px;
    background: ${s.default.fontColor};
    border-radius: 10px;
  }
  :hover {
    background: ${s.default.fontColor};
    border: 1px solid ${s.default.fontColor};
    div.ToTopArrow {
      border-bottom: 25px solid #fff;
    }
    div.ToTopArrowUnderBar {
      background: #fff;
    }
  }
  @media (max-width: ${s.default.spLayoutStrictWidth}px) {
    right: 15px;
    margin-right: 0;
  }
`},3237:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(456)),d=o(n(1693)),c=o(n(2435)),f=o(n(3953)),p=o(n(7010)),h=o(n(8530));t.default=({ch:e})=>l.createElement(g,null,l.createElement(h.default,null),l.createElement(s.default,{ch:e}),l.createElement(p.default,null),l.createElement(f.default,null),l.createElement(d.default,null),l.createElement(c.default,null));const g=u.default.footer`
  display: flex;
  flex-flow: column;
  justify-content: center;
  width: 100%;
`},3814:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(9163)),s=o(n(8352)),d=o(n(819)),c=o(n(6874)),f=o(n(6032));t.default=({ch:e,favicon:t,openMenu:n,session:r,setSession:a,handleOnClickMenu:i})=>l.createElement(p,null,l.createElement(h,{flow:"column wrap",alignItems:"center",justifyContent:"center",className:n&&"open",sideMargin:!0,onClick:i},l.createElement("div",{className:"HeaderMenuLine"}),l.createElement("div",{className:"HeaderMenuLine"}),l.createElement("div",{className:"HeaderMenuLine"})),l.createElement(g,{href:`https:/${e}`},l.createElement(d.default.One,{id:"AppHeader"},"/"===e?"talkn":e)),l.createElement(m,{flow:"column wrap",alignItems:"center",justifyContent:"center",sideMargin:!0},l.createElement(c.default,{session:r,setSession:a})));const p=u.default.header`
  box-sizing: border-box;
  z-index: ${f.default.zIndex.header};
  position: sticky;
  top: 0;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  height: ${f.default.appHeaderHeight}px;
  ${f.default.alphaBgSet};
  border-bottom: 1px solid ${f.default.borderColor};
  a {
    display: flex;
    flex-flow: row wrap;
    color: ${f.default.fontColor};
  }
`,h=(0,u.default)(s.default)`
  width: 60px;
  height: 60px;
  margin-right: 10px;
  transition: ${f.default.transitionDuration}ms;
  cursor: pointer;
  .HeaderMenuLine {
    width: 70%;
    height: 1px;
    margin: 5px;
    background: #bbb;
    transition: ${f.default.transitionDuration}ms;
  }
  &.open {
    .HeaderMenuLine:nth-child(1) {
      transform: rotate(45deg) translate(8px, 8px);
    }
    .HeaderMenuLine:nth-child(2) {
      transform: rotate(45deg) translate(0px, 0px);
    }
    .HeaderMenuLine:nth-child(3) {
      transform: rotate(-45deg) translate(7px, -8px);
    }
  }
`,g=u.default.a`
  display: flex;
  align-items: center;
  justify-content: center;
`,m=(0,u.default)(s.default)`
  display: flex;
  flex-flow: column wrap;
  align-items: center;
  justify-content: center;
  width: 60px;
  height: 60px;
`},7289:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(9163)),s=i(n(8352)),d=n(9749),c=o(n(6032)),f="ModalContainer";t.default=e=>{const t={...d.layoutPropsInit,...s.flexLayoutPropsInit,width:c.default.spLayoutStrictWidthPx,...e};return l.default.createElement(p,{className:f,show:t.show,onClick:e=>{e.target.className.indexOf(f)>=0&&t.closeModal()},onTransitionEnd:()=>{}},l.default.createElement(h,{className:"ModalContainerBoard",show:t.show,width:t.width},l.default.createElement(s.default,{className:"ModalContainerFlex",flow:t.flow},t.children)))};const p=u.default.div`
  position: fixed;
  top: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100vw;
  height: 100vh;
  background-color: rgb(0, 0, 0, 0.3);
  z-index: ${e=>e.show?1e3:-1};
  opacity: ${e=>e.show?1:0};
  transition: background-color ${c.default.transitionDuration}ms;
`,h=u.default.section`
  width: ${e=>e.width?e.width:"fit-content"};
  height: fit-content;
  padding: ${c.default.basePadding}px;
  ${c.default.alphaBgSet};
  border-radius: ${c.default.borderRadius}px;
  box-shadow: ${c.default.shadowHorizonBase};
  transition: transform ${c.default.transitionDuration}ms;
  transform: translateY(${e=>e.show?0:2*c.default.baseSize+"px"});
  @media (max-width: ${c.default.spLayoutStrictWidth}px) {
    width: 100vw;
    height: 100vh;
    border-radius: 0;
  }
`},960:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=o(n(7294)),u=o(n(9163)),s=i(n(8352)),d=n(7303),c=n(9749),f=o(n(6032)),p=f.default.doubleMargin,h="ModalContainer";t.default=e=>{const t=(0,d.useGlobalContext)(),n={...c.layoutPropsInit,...s.flexLayoutPropsInit,width:f.default.spLayoutStrictWidthPx,...e};let r=0;return Boolean(n.header)&&r++,Boolean(n.footer)&&r++,l.default.createElement(g,{className:h,show:n.show,onClick:e=>{const t=e.target;Boolean(Array.from(t.classList).find((e=>e===h)))&&n.closeModal()}},l.default.createElement(m,{className:"ModalContainerBoard",show:n.show,width:n.width},n.header&&l.default.createElement(b,{className:"ModalContainerHeader",alignItems:"center",justifyContent:"flex-start",border:"underline",sidePadding:!0},n.header),l.default.createElement(y,{className:"ModalContainerContent",flow:n.flow,windowInnerHeight:t.innerHeight,fullHeightContent:n.fullHeightContent,optinalPartCnt:r,upperPadding:!0,sidePadding:!0,bottomPadding:!0},n.content),n.footer&&l.default.createElement(v,{className:"ModalContainerFooter",width:"100%",alignItems:"center",justifyContent:"center",border:"topline",sidePadding:!0},n.footer)))};const g=u.default.div`
  position: fixed;
  top: 0;
  left: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100vw;
  height: 100vh;
  background-color: rgb(0, 0, 0, 0.3);
  z-index: ${e=>e.show?1e3:-1};
  opacity: ${e=>e.show?1:0};
  transition: background-color ${f.default.transitionDuration}ms;
`,m=u.default.section`
  overflow: hidden;
  width: ${e=>e.width?e.width:"fit-content"};
  height: fit-content;
  max-height: calc(100vh - ${2*p}px);
  padding: 0 ${p}px;
  margin: ${p}px;
  ${f.default.alphaBgSet};
  border-radius: ${f.default.borderRadius}px;
  box-shadow: ${f.default.shadowHorizonBase};
  transition: transform ${f.default.transitionDuration}ms;
  transform: translateY(${e=>e.show?0:2*f.default.baseSize+"px"});
  @media (max-width: ${f.default.spLayoutStrictWidth}px) {
    width: 100vw;
    height: 100vh;
    max-height: none;
    padding: 0;
    margin: 0;
    border-radius: 0;
  }
`,b=(0,u.default)(s.default)`
  height: ${80}px;
`,y=(0,u.default)(s.default)`
  overflow: hidden scroll;
  ${e=>e.fullHeightContent?"height: 100vh":""};
  max-height: ${e=>e.windowInnerHeight-(80+p)*e.optinalPartCnt}px;
  @media (max-width: ${f.default.spLayoutStrictWidth}px) {
    max-height: ${e=>e.windowInnerHeight-80*e.optinalPartCnt}px;
  }
`,v=(0,u.default)(s.default)`
  height: ${80}px;
  @media (max-width: ${f.default.spLayoutStrictWidth}px) {
    position: fixed;
    bottom: 0;
  }
`},2068:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7289)),i=r(n(960));t.default={Plain:a.default,Structure:i.default}},4022:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=r(n(7294)),i=r(n(9163)),o=r(n(6032));t.default=({ch:e})=>a.default.createElement(l,null,a.default.createElement(u,{className:"twitter"},a.default.createElement("a",{href:"https://twitter.com/share?ref_src=twsrc%5Etfw&url=https://cover.talkn.io/www.sunbridge.com/",className:"twitter-share-button","data-show-count":"false"},a.default.createElement(s,null),"Tweet"),a.default.createElement("script",{async:!0,src:"https://platform.twitter.com/widgets.js",charSet:"utf-8"})),a.default.createElement("div",{className:"facebook"},a.default.createElement("div",{className:"fb-share-button","data-href":`https://cover.talkn.io${e}`,"data-layout":"button_count","data-size":"large"},a.default.createElement("a",{target:"_blank",href:`https://www.facebook.com/sharer/sharer.php?u=https://cover.talkn.io${e};src=sdkpreparse`,className:"fb-xfbml-parse-ignore",rel:"noreferrer"},"Share"))));const l=i.default.div`
  display: flex;
  flex-flow: row wrap;
  align-items: center;
  justify-content: center;
  margin: ${o.default.doubleMargin}px ${o.default.doubleMargin}px ${o.default.doubleMargin}px;
`,u=i.default.div`
  padding: 5px 10px;
  margin-right: 10px;
  background: #1da1f2;
  border-radius: 5px;
  font-size: 13px;
  color: #fff;
  i {
    margin-top: 2px;
    margin-right: 5px;
  }
  a {
    display: flex;
    color: #fff;
  }
`,s=i.default.i`
  display: inline-flex;
  background: url(data:image/svg+xml,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2072%2072%22%3E%3Cpath%20fill%3D%22none%22%20d%3D%22M0%200h72v72H0z%22%2F%3E%3Cpath%20class%3D%22icon%22%20fill%3D%22%23fff%22%20d%3D%22M68.812%2015.14c-2.348%201.04-4.87%201.744-7.52%202.06%202.704-1.62%204.78-4.186%205.757-7.243-2.53%201.5-5.33%202.592-8.314%203.176C56.35%2010.59%2052.948%209%2049.182%209c-7.23%200-13.092%205.86-13.092%2013.093%200%201.026.118%202.02.338%202.98C25.543%2024.527%2015.9%2019.318%209.44%2011.396c-1.125%201.936-1.77%204.184-1.77%206.58%200%204.543%202.312%208.552%205.824%2010.9-2.146-.07-4.165-.658-5.93-1.64-.002.056-.002.11-.002.163%200%206.345%204.513%2011.638%2010.504%2012.84-1.1.298-2.256.457-3.45.457-.845%200-1.666-.078-2.464-.23%201.667%205.2%206.5%208.985%2012.23%209.09-4.482%203.51-10.13%205.605-16.26%205.605-1.055%200-2.096-.06-3.122-.184%205.794%203.717%2012.676%205.882%2020.067%205.882%2024.083%200%2037.25-19.95%2037.25-37.25%200-.565-.013-1.133-.038-1.693%202.558-1.847%204.778-4.15%206.532-6.774z%22%2F%3E%3C%2Fsvg%3E);
  min-width: 14px;
  min-height: 14px;
  width: 14px;
  height: 14px;
`},575:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const l=i(n(7294)),u=o(n(6562)),s=o(n(8203)),d=o(n(8352)),c=o(n(819)),f=o(n(3193)),p=n(9639),h=i(n(5662)),g=o(n(2068));t.default=({show:e,userModalOptions:t,handleOnClose:n})=>{const[r,a]=(0,l.useState)(!1),[i,o]=(0,l.useState)([]);return(0,l.useEffect)((()=>{a(!0);const e=u.default.deepCopy(t);delete e.isEditable,delete e.index,(async()=>{const t=await s.default.json("search",e);o(t.response),a(!1)})().catch((e=>{a(!1),console.error(e)}))}),[]),console.log(i),l.default.createElement(g.default.Structure,{show:e,closeModal:n,flow:"column nowrap",header:l.default.createElement(c.default.Five,null,"Search Result"),content:l.default.createElement(l.default.Fragment,null,r&&l.default.createElement(d.default,{flow:"column nowrap",width:"100%",height:"100%",alignItems:"center",justifyContent:"center"},l.default.createElement(f.default,null)),l.default.createElement(d.default,{flow:"column nowrap",width:"100%"},i.map((e=>l.default.createElement(l.default.Fragment,null,l.default.createElement(h.default,{key:e.email,user:e,fullWidth:!1,hoverAnimationType:h.hoverAnimationBoxShadow}),l.default.createElement("br",null)))))),footer:l.default.createElement(p.ModalFooter,{userModalOptions:t,handleOnClose:n,showPositive:!1}),fullHeightContent:!0,upperPadding:!0,sidePadding:!0,bottomPadding:!0})}},7303:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.useGlobalContext=void 0;const l=i(n(7294)),u=o(n(9163)),s=n(2865),d=o(n(8117)),c=o(n(3991)),f=o(n(2900)),p=o(n(9154)),h=o(n(9416)),g=n(9416),m=o(n(5987)),b=o(n(9610)),y=o(n(2376)),v=o(n(5367)),w=o(n(3237)),E=o(n(3814)),x=o(n(4022)),_=o(n(575)),S=o(n(6032)),C=n(9293),k=l.default.createContext({innerWidth:0,innerHeight:0});t.useGlobalContext=()=>(0,l.useContext)(k);const P={version:"",createTime:"",css:"",head:"",sections:[]},M={offsetTop:0,offsetBottom:0};let O=[];t.default=e=>{const[t,n]=l.default.useState(!1),[r,a]=(0,l.useState)({}),[i,o]=(0,l.useState)({}),[u,j]=(0,l.useState)({}),[L,N]=(0,l.useState)(P),[R,z]=(0,l.useState)(!1),[D,B]=(0,l.useState)(C.googleSessionInit),[F,H]=(0,l.useState)(),[U,W]=(0,l.useState)(),[V,q]=(0,l.useState)(),[Y,G]=(0,l.useState)({...g.userModalOptionInit}),[Q,K]=(0,l.useState)(!1),[J,X]=(0,l.useState)(!0),[Z,ee]=(0,l.useState)({...g.userModalOptionInit}),[te,ne]=(0,l.useState)([]),[re,ae]=(0,l.useState)(),[ie,oe]=(0,l.useState)(!1),[le,ue]=(0,l.useState)(C.selectContentMenuDefault),[se,de]=(0,l.useState)(),[ce,fe]=(0,l.useState)(),pe=(0,l.useRef)(),he=(0,l.useRef)(),ge=(0,l.useRef)(),me=(0,l.useRef)(),be=(0,l.useRef)(),ye=((0,l.useRef)(),void 0!==Z.index),ve=(()=>{const[e,t]=(0,l.useState)({innerWidth:0,innerHeight:0});return(0,l.useEffect)((()=>{const e=()=>{t({innerWidth:window.innerWidth,innerHeight:window.innerHeight})};return window.addEventListener("resize",e),e(),()=>window.removeEventListener("resize",e)}),[]),e})(),we=e=>{if(he.current){const t=he.current.children[e].offsetTop-2*S.default.appHeaderHeight-S.default.baseSize;window.scrollTo({top:t,behavior:"smooth"})}},Ee=e=>{oe(!1)};(0,l.useEffect)((()=>{pe.current&&(pe.current.scrollTop=-pe.current.clientHeight)}),[pe.current]);const xe=(0,l.useCallback)((()=>{const e=O.findIndex((e=>e.offsetTop<=window.scrollY+S.default.baseHeight&&window.scrollY+S.default.baseHeight<e.offsetBottom));de(e)}),[O]);return(0,l.useEffect)((()=>{he.current&&Array.from(he.current.children).forEach(((e,t)=>{O[t]||(O[t]=M);const n=e.offsetTop-S.default.appHeaderHeight-S.default.baseSize,r=n+e.clientHeight;O[t]={offsetTop:n,offsetBottom:r},t>0&&(O[t-1].offsetBottom=n-1)}))}),[he.current&&he.current.clientHeight]),(0,l.useEffect)((()=>{if(ge.current&&window.talknStories&&window.talknStories.sections.length>0&&S.default.spLayoutWidth<window.innerWidth){const e=ge.current,t=getComputedStyle(e),n=S.default.getTrimUnitNumber(t.width),r=S.default.getTrimUnitNumber(t.marginTop),a=S.default.getTrimUnitNumber(t.marginRight),i=S.default.getTrimUnitNumber(t.marginBottom),o=S.default.getTrimUnitNumber(t.marginLeft),l=S.default.getTrimUnitNumber(t.paddingTop),u=S.default.getTrimUnitNumber(t.paddingRight),s=S.default.getTrimUnitNumber(t.paddingBottom),d=S.default.getTrimUnitNumber(t.paddingLeft);fe({width:n,marginTop:r,marginRight:a,marginBottom:i,marginLeft:o,paddingTop:l,paddingRight:u,paddingBottom:s,paddingLeft:d})}}),[window.innerWidth,L&&L.sections.length]),(0,l.useEffect)((()=>{if(D&&D.email&&""!==D.email){const e=location.pathname.split("/")[1];z(D.email===e)}else z(!1)}),[D]),(0,l.useEffect)((()=>{G({...g.userModalOptionInit,...F})}),[F]),(0,l.useEffect)((()=>{n(!0);const e=window.talknConfig.userCategoryChs.length;window.talknConfig.userCategoryChs=window.talknConfig.userCategoryChs.concat(new Array(s.configUserCategoryChLimit-e).fill("")),a(window.talknConfig),o(window.talknThread),j(window.talknServerMetas),N(window.talknStories),ae(window.talknStoriesPointer),ne(window.talknConfig.userCategoryChs),ue(window.talknSelectContentMenu),H(window.talknUser),q(window.talknUserTags),window.addEventListener("scroll",xe)}),[]),l.default.createElement(k.Provider,{value:{innerWidth:ve.innerWidth,innerHeight:ve.innerHeight}},l.default.createElement(A,{onClick:e=>Ee},l.default.createElement(m.default,{ch:i.ch,openMenu:ie,storiesIndexPointer:re,selectContentMenu:le,menuOrderRef:pe}),l.default.createElement(E.default,{openMenu:ie,ch:i.ch,favicon:i.favicon,session:D,setSession:B,handleOnClickMenu:()=>{oe(!ie)}}),le===C.selectContentMenuProfile&&l.default.createElement(v.default,{isMyPage:R,userModalOptions:Y,user:F,userTags:V,setUser:H,setSelectProfileModalOption:G}),l.default.createElement(T,null,l.default.createElement(p.default,{ch:i.ch,selectContentMenu:le,contentMenuRef:me}),l.default.createElement(c.default.Header,{showAdvert:J,handleOnClickControlAdvert:()=>{J?(X(!1),K(!0)):(K(!1),setTimeout((()=>{X(!0)}),S.default.transitionDuration))}}),l.default.createElement(I,{showAdvert:J},l.default.createElement(c.default.Left,{showAdvert:J}),l.default.createElement($,{maxMain:Q,showAdvert:J},(0,l.useMemo)((()=>{switch(le){case C.selectContentMenuLivePages:return l.default.createElement(f.default,{ch:i.ch,userCategoryChs:te,talknFrameRef:be});case C.selectContentMenuBusiness:return l.default.createElement(d.default,{ch:i.ch});case C.selectContentMenuStory:return window.talknStories&&window.talknStories.sections.length>0?l.default.createElement(b.default,{navigationLayout:ce,storiesRef:he,resumeRef:ge,storiesPointer:se,handleOnClickNav:we}):l.default.createElement(y.default,null);case C.selectContentMenuProfile:return l.default.createElement(h.default,{isMyPage:R,session:D,user:F,userTags:V,userTagsInit:U,selectProfileModalOption:Y,setUser:H,setUserTags:q,setUserTagsInit:W,setShowSearchModalOption:ee})}}),[le,ce,se,te,F,V,R])),l.default.createElement(c.default.Right,{showAdvert:J}))),l.default.createElement(x.default,{ch:i.ch}),l.default.createElement(w.default,{ch:i.ch})),ye&&l.default.createElement(_.default,{show:ye,userModalOptions:Z,handleOnClose:()=>ee({...g.userModalOptionInit})}))};const A=u.default.div`
  display: flex;
  flex-flow: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  max-width: 100%;
  margin: 0 auto;
  font-size: ${S.default.fontBaseSize}px;
  color: ${S.default.fontColor};

  * {
    box-sizing: border-box;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Hiragino Sans', 'Noto Sans CJK JP', 'Original Yu Gothic',
      'Yu Gothic', sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Sans Emoji';
    letter-spacing: 2px;
    ::selection {
      background: ${S.default.themeColor};
      color: #fff;
    }
  }

  a,
  a:visited,
  a:hover,
  a:active {
    text-decoration: none;
    cursor: pointer;
    user-select: none;
  }
`,T=u.default.div`
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  width: 100%;
`,I=u.default.div`
  display: flex;
  flex-flow: row nowrap;
  align-items: flex-start;
  justify-content: center;
  width: 100%;
  @media (max-width: ${S.default.spLayoutWidth}px) {
    flex-flow: column nowrap;
  }
`,$=u.default.main`
  width: 100%;
  max-width: ${e=>e.maxMain?"100%":`${S.default.appWidth}px`};
  transition: max-width ${S.default.transitionDuration}ms ease 0s;
  @media (max-width: ${S.default.doubleAdvertWidth}px) {
    width: ${e=>e.showAdvert?`calc( 100% - ${S.default.advertWidth+2*S.default.baseMargin}px)`:"100%"};
  }
  @media (max-width: ${S.default.spLayoutWidth}px) {
    width: 100%;
  }
`},7344:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.ContentCss=t.contentPropsInit=void 0;const a=n(9163),i=r(n(6032));t.contentPropsInit={color:i.default.fontColor,fontSize:i.default.fontSize,fontWeight:i.default.fontWeight,lineHeight:i.default.lineHeight,useSelect:!1,pointer:!1},t.ContentCss=a.css`
  color: ${e=>e.color};
  font-size: ${e=>e.fontSize};
  font-weight: ${e=>e.fontWeight};
  line-height: ${e=>e.lineHeight};
  use-select: ${e=>e.useSelect?"auto":"none"};
  cursor: ${e=>e.pointer?"pointer":"default"};
`},9749:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getRadius=t.getBorder=t.getMargin=t.getPadding=t.getHeight=t.getWidth=t.getBackground=t.LayoutCss=t.layoutPropsInit=t.sizeDefault=t.sizeLarge=t.sizeMiddle=t.sizeSmall=t.sizeOff=t.radiusInput=t.radiusButton=t.radiusCircle=t.underline=t.topline=void 0;const a=n(9163),i=r(n(6032));t.topline="topline",t.underline="underline",t.radiusCircle="circle",t.radiusButton="button",t.radiusInput="input",t.sizeOff="off",t.sizeSmall="small",t.sizeMiddle="middle",t.sizeLarge="large",t.sizeDefault=!1,t.layoutPropsInit={width:"auto",height:"auto",upperPadding:t.sizeDefault,sidePadding:t.sizeDefault,bottomPadding:t.sizeDefault,upperMargin:t.sizeDefault,sideMargin:t.sizeDefault,bottomMargin:t.sizeDefault,border:!1,borderRadius:!1,hover:!1,resetOrigin:!1,inline:!1},t.LayoutCss=a.css`
  width: ${e=>(0,t.getWidth)(e)};
  height: ${e=>(0,t.getHeight)(e)};
  padding: ${e=>(0,t.getPadding)(e)};
  margin: ${e=>(0,t.getMargin)(e)};
  ${e=>(0,t.getBorder)(e)};
  ${e=>(0,t.getRadius)(e)};
  ${e=>(0,t.getBackground)(e)};
  ${e=>e.resetOrigin?"transform: translate(0px, 0px)":""};
  transition: ${i.default.transitionDuration}ms;
`,t.getBackground=e=>!0===e.hover?`:hover {\n      background: ${i.default.whiteHoverColor};\n    }`:e.hover?`:hover {\n      background: ${e.hover};\n    }`:"",t.getWidth=e=>{let n="auto";return void 0===e.width?e.inline?"auto":e.sideMargin===t.sizeSmall?`calc( 100% - ${2*i.default.baseMargin}px )`:!0===e.sideMargin||e.sideMargin===t.sizeMiddle?`calc( 100% - ${2*i.default.doubleMargin}px )`:e.sideMargin===t.sizeLarge?`calc( 100% - ${2*i.default.tripleMargin}px )`:e.width:(n=e.width,n)},t.getHeight=e=>e.height?e.height:"auto",t.getPadding=e=>{let n=0,r=0,a=0,o=0;return e.upperPadding===t.sizeSmall?n=i.default.basePadding:e.upperPadding===t.sizeMiddle||!0===e.upperPadding?n=i.default.doublePadding:e.upperPadding===t.sizeLarge&&(n=i.default.triplePadding),e.sidePadding===t.sizeSmall?(r=i.default.basePadding,o=i.default.basePadding):e.sidePadding===t.sizeMiddle||!0===e.sidePadding?(r=i.default.doublePadding,o=i.default.doublePadding):e.sidePadding===t.sizeLarge&&(r=i.default.triplePadding,o=i.default.triplePadding),e.bottomPadding===t.sizeSmall?a=i.default.basePadding:e.bottomPadding===t.sizeMiddle||!0===e.bottomPadding?a=i.default.doublePadding:e.bottomPadding===t.sizeLarge&&(a=i.default.triplePadding),`${n}px ${r}px ${a}px ${o}px`},t.getMargin=e=>{let n=0,r=0,a=0,o=0;return e.upperMargin===t.sizeSmall?n=i.default.basePadding:e.upperMargin===t.sizeMiddle||!0===e.upperMargin?n=i.default.doublePadding:e.upperMargin===t.sizeLarge&&(n=i.default.triplePadding),e.sideMargin===t.sizeSmall?(r=i.default.basePadding,o=i.default.basePadding):e.sideMargin===t.sizeMiddle||!0===e.sideMargin?(r=i.default.doublePadding,o=i.default.doublePadding):e.sideMargin===t.sizeLarge&&(r=i.default.triplePadding,o=i.default.triplePadding),e.bottomMargin===t.sizeSmall?a=i.default.basePadding:e.bottomMargin===t.sizeMiddle||!0===e.bottomMargin?a=i.default.doublePadding:e.bottomMargin===t.sizeLarge&&(a=i.default.triplePadding),`${n}px ${r}px ${a}px ${o}px`},t.getBorder=e=>e.border===t.underline?`border-bottom: 1px solid ${i.default.borderColor}`:e.border===t.topline?`border-top: 1px solid ${i.default.borderColor}`:!0===e.border?`border: 1px solid ${i.default.borderColor}`:"",t.getRadius=e=>!0===e.borderRadius?`border-radius: ${i.default.borderRadius}px`:e.borderRadius===t.radiusCircle?"border-radius: 50%":e.borderRadius===t.radiusButton?"border-radius: 6px":e.borderRadius===t.radiusInput?"border-radius: 3px":""},4014:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.borderRadius=t.lineHeight=t.fontWeight=t.fontSize=t.fontBaseSize=t.transitionDuration=t.shadowSize=t.sepPadding=t.sexPadding=t.quintPadding=t.quadPadding=t.triplePadding=t.doublePadding=t.basePadding=t.sepMargin=t.sexMargin=t.quintMargin=t.quadMargin=t.tripleMargin=t.doubleMargin=t.baseMargin=t.sepSize=t.sixSize=t.quintSize=t.quadSize=t.tripleSize=t.doubleSize=t.baseSize=void 0,t.baseSize=8,t.doubleSize=2*t.baseSize,t.tripleSize=3*t.baseSize,t.quadSize=4*t.baseSize,t.quintSize=5*t.baseSize,t.sixSize=6*t.baseSize,t.sepSize=7*t.baseSize,t.baseMargin=t.baseSize,t.doubleMargin=2*t.baseMargin,t.tripleMargin=3*t.baseMargin,t.quadMargin=4*t.baseMargin,t.quintMargin=5*t.baseMargin,t.sexMargin=6*t.baseMargin,t.sepMargin=7*t.baseMargin,t.basePadding=t.baseSize,t.doublePadding=2*t.basePadding,t.triplePadding=3*t.basePadding,t.quadPadding=4*t.basePadding,t.quintPadding=5*t.baseMargin,t.sexPadding=6*t.baseMargin,t.sepPadding=7*t.baseMargin,t.shadowSize=10,t.transitionDuration=300,t.fontBaseSize=18,t.fontSize="100%",t.fontWeight="200",t.lineHeight="30px",t.borderRadius=t.doubleSize,t.default={baseSize:t.baseSize,doubleSize:t.doubleSize,tripleSize:t.tripleSize,quadSize:t.quadSize,quintSize:t.quintSize,sixSize:t.sixSize,sepSize:t.sepSize,baseMargin:t.baseMargin,doubleMargin:t.doubleMargin,tripleMargin:t.tripleMargin,quadMargin:t.quadMargin,quintMargin:t.quintMargin,sexMargin:t.sexMargin,sepMargin:t.sepMargin,basePadding:t.basePadding,doublePadding:t.doublePadding,triplePadding:t.triplePadding,quadPadding:t.quadPadding,quintPadding:t.quintPadding,sexPadding:t.sexPadding,sepPadding:t.sepPadding,shadowSize:t.shadowSize,transitionDuration:t.transitionDuration,fontBaseSize:t.fontBaseSize,fontSize:t.fontSize,fontWeight:t.fontWeight,lineHeight:t.lineHeight,borderRadius:t.borderRadius}},2404:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.alphaBgSet=t.saveCheckColor=t.saveColor=t.articleBgHoverColor=t.articleBgColor=t.advertHoverColor=t.advertColor=t.tagBgColor=t.whiteHoverColor=t.componentBgColor=t.borderColor=t.markupColor=t.fontDarkColor=t.fontColor=t.fontLightColor=t.blackColor=t.darkerColor=t.darkColor=t.baseColor=t.brightColor=t.brighterColor=t.whiteColor=t.coldColor=t.flatColor=t.hotColor=t.themeColor=t.coldRgb=t.flatRgb=t.hotRgb=t.themeRgb=t.darkAlpha=t.baseAlpha=t.brightAlpha=t.blackRgb=t.darkerRgb=t.darkRgb=t.baseRgb=t.brightRgb=t.brighterRgb=t.whiteRgb=t.darkerDepth=t.darkDepth=t.baseTension=t.getRgbaColor=t.getRgbColor=void 0,t.getRgbColor=e=>`rgb(${e})`,t.getRgbaColor=(e,n=t.baseAlpha)=>`rgba(${e}, ${n})`,t.baseTension=100,t.darkDepth=20,t.darkerDepth=2*t.darkDepth,t.whiteRgb="255, 255, 255",t.brighterRgb="240, 240, 240",t.brightRgb=`${2*t.baseTension}, ${2*t.baseTension}, ${2*t.baseTension}`,t.baseRgb=`${t.baseTension}, ${t.baseTension}, ${t.baseTension}`,t.darkRgb=`${t.baseTension-t.darkDepth}, ${t.baseTension-t.darkDepth}, ${t.baseTension-t.darkDepth}`,t.darkerRgb=`${t.baseTension-t.darkerDepth}, ${t.baseTension-t.darkerDepth}, ${t.baseTension-t.darkerDepth}`,t.blackRgb="0, 0, 0",t.brightAlpha="0.96",t.baseAlpha="0.9",t.darkAlpha="0.6",t.themeRgb="79, 174, 159",t.hotRgb=`255, ${t.baseTension}, 0`,t.flatRgb=`${t.baseTension}, ${t.baseTension}, ${t.baseTension}`,t.coldRgb=`0, ${t.baseTension}, 255`,t.themeColor=(0,t.getRgbaColor)(t.themeRgb),t.hotColor=(0,t.getRgbaColor)(t.hotRgb),t.flatColor=(0,t.getRgbaColor)(t.flatRgb),t.coldColor=(0,t.getRgbaColor)(t.coldRgb),t.whiteColor=(0,t.getRgbaColor)(t.whiteRgb),t.brighterColor=(0,t.getRgbaColor)(t.brighterRgb),t.brightColor=(0,t.getRgbaColor)(t.brightRgb),t.baseColor=(0,t.getRgbaColor)(t.baseRgb),t.darkColor=(0,t.getRgbaColor)(t.darkRgb),t.darkerColor=(0,t.getRgbaColor)(t.darkerRgb),t.blackColor=(0,t.getRgbaColor)(t.blackRgb),t.fontLightColor=(0,t.getRgbColor)(t.brighterRgb),t.fontColor=(0,t.getRgbColor)(t.baseRgb),t.fontDarkColor=(0,t.getRgbColor)(t.darkerRgb),t.markupColor=(0,t.getRgbColor)(t.brighterRgb),t.borderColor=(0,t.getRgbColor)(t.brightRgb),t.componentBgColor=(0,t.getRgbaColor)(t.whiteRgb),t.whiteHoverColor=(0,t.getRgbaColor)(t.brightRgb,t.darkAlpha),t.tagBgColor=(0,t.getRgbaColor)(t.darkRgb),t.advertColor=(0,t.getRgbaColor)(t.brightRgb),t.advertHoverColor=(0,t.getRgbaColor)(t.darkRgb),t.articleBgColor=(0,t.getRgbaColor)(t.brightRgb),t.articleBgHoverColor=(0,t.getRgbaColor)(t.darkRgb),t.saveColor=(0,t.getRgbaColor)(t.hotRgb),t.saveCheckColor=(0,t.getRgbaColor)(t.themeRgb),t.alphaBgSet=`\n    background: ${(0,t.getRgbaColor)(t.whiteRgb)};\n    backdrop-filter: blur(5px);\n`,t.default={baseTension:t.baseTension,darkDepth:t.darkDepth,darkerDepth:t.darkerDepth,whiteRgb:t.whiteRgb,brighterRgb:t.brighterRgb,brightRgb:t.brightRgb,baseRgb:t.baseRgb,darkRgb:t.darkRgb,darkerRgb:t.darkerRgb,blackRgb:t.blackRgb,brightAlpha:t.brightAlpha,baseAlpha:t.baseAlpha,darkAlpha:t.darkAlpha,themeRgb:t.themeRgb,hotRgb:t.hotRgb,flatRgb:t.flatRgb,coldRgb:t.coldRgb,themeColor:t.themeColor,hotColor:t.hotColor,flatColor:t.flatColor,coldColor:t.coldColor,whiteColor:t.whiteColor,brighterColor:t.brighterColor,brightColor:t.brightColor,baseColor:t.baseColor,darkColor:t.darkColor,darkerColor:t.darkerColor,blackColor:t.blackColor,fontLightColor:t.fontLightColor,fontColor:t.fontColor,fontDarkColor:t.fontDarkColor,markupColor:t.markupColor,borderColor:t.borderColor,componentBgColor:t.componentBgColor,whiteHoverColor:t.whiteHoverColor,advertColor:t.advertColor,advertHoverColor:t.advertHoverColor,articleBgColor:t.articleBgColor,articleBgHoverColor:t.articleBgHoverColor,tagBgColor:t.tagBgColor,saveColor:t.saveColor,saveCheckColor:t.saveCheckColor,alphaBgSet:t.alphaBgSet,getRgbColor:t.getRgbColor,getRgbaColor:t.getRgbaColor}},6032:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.getTrimUnitNumber=void 0;const a=r(n(4014)),i=r(n(2404)),o=r(n(1932)),l=r(n(2893)),u=r(n(294));t.getTrimUnitNumber=e=>Number(e.replace("px","")),t.default={zIndex:u.default,...o.default,...i.default,...a.default,...l.default,getTrimUnitNumber:t.getTrimUnitNumber}},1932:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.imageWidth=t.articleShadowColor=t.articleOpenScale=t.articleOpenHeight=t.articleCloseHeight=t.articleTotalWidth=t.articleWidth=t.articleOrderHeight=t.eyeCatchMinHeightPxValue=t.eyeCatchVhValue=t.eyeCatchVwValue=t.doubleAdvertWidth=t.spLayoutWidth=t.spLayoutStrictWidthPx=t.spLayoutStrictWidth=t.advertWidth=t.appWidth=t.appHeaderHeight=t.baseHeight=t.menuTabWidth=t.menuPcWidth=t.sectionMarginColumn=t.sectionPadding=void 0;const a=r(n(4014));t.sectionPadding=a.default.doubleSize,t.sectionMarginColumn=a.default.quadMargin,t.menuPcWidth=520,t.menuTabWidth=430,t.baseHeight=60,t.appHeaderHeight=t.baseHeight,t.appWidth=1200,t.advertWidth=200,t.spLayoutStrictWidth=680,t.spLayoutStrictWidthPx=`${t.spLayoutStrictWidth}px`,t.spLayoutWidth=980,t.doubleAdvertWidth=t.appWidth+1.5*t.advertWidth,t.eyeCatchVwValue=100,t.eyeCatchVhValue=20,t.eyeCatchMinHeightPxValue=280,t.articleOrderHeight=290,t.articleWidth=300,t.articleTotalWidth=t.articleWidth+2*a.default.baseSize,t.articleCloseHeight=260,t.articleOpenHeight="auto",t.articleOpenScale=1.05,t.articleShadowColor="#444",t.imageWidth=200,t.default={sectionPadding:t.sectionPadding,sectionMarginColumn:t.sectionMarginColumn,menuPcWidth:t.menuPcWidth,menuTabWidth:t.menuTabWidth,baseHeight:t.baseHeight,appHeaderHeight:t.appHeaderHeight,appWidth:t.appWidth,advertWidth:t.advertWidth,spLayoutStrictWidth:t.spLayoutStrictWidth,spLayoutStrictWidthPx:t.spLayoutStrictWidthPx,spLayoutWidth:t.spLayoutWidth,doubleAdvertWidth:t.doubleAdvertWidth,eyeCatchVwValue:t.eyeCatchVwValue,eyeCatchVhValue:t.eyeCatchVhValue,eyeCatchMinHeightPxValue:t.eyeCatchMinHeightPxValue,articleOrderHeight:t.articleOrderHeight,articleWidth:t.articleWidth,articleTotalWidth:t.articleTotalWidth,articleCloseHeight:t.articleCloseHeight,articleOpenHeight:t.articleOpenHeight,articleOpenScale:t.articleOpenScale,articleShadowColor:t.articleShadowColor,imageWidth:t.imageWidth}},2893:function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),i=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return a(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.shadowHorizonDark=t.shadowHorizonBase=t.shadowHorizonBright=t.shadowHorizonBrighter=t.shadowCircleDark=t.shadowCircleBase=t.shadowCircleBright=t.shadowCircleBrighter=t.baseTextShadow=t.shadowSize=void 0;const o=i(n(2404));t.shadowSize=10;const l=`0 0 ${t.shadowSize}px 0`,u=`0 ${t.shadowSize/2}px ${t.shadowSize}px 0`;t.baseTextShadow=`1px 1px ${(0,o.getRgbColor)(o.default.darkRgb)}`,t.shadowCircleBrighter=`${l} ${(0,o.getRgbColor)(o.default.brighterRgb)}`,t.shadowCircleBright=`${l} ${(0,o.getRgbColor)(o.default.brightRgb)}`,t.shadowCircleBase=`${l} ${(0,o.getRgbColor)(o.default.baseRgb)}`,t.shadowCircleDark=`${l} ${(0,o.getRgbColor)(o.default.darkRgb)}`,t.shadowHorizonBrighter=`${u} ${(0,o.getRgbColor)(o.default.brighterRgb)}`,t.shadowHorizonBright=`${u} ${(0,o.getRgbColor)(o.default.brightRgb)}`,t.shadowHorizonBase=`${u} ${(0,o.getRgbColor)(o.default.baseRgb)}`,t.shadowHorizonDark=`${u} ${(0,o.getRgbColor)(o.default.darkRgb)}`,t.default={shadowSize:t.shadowSize,baseTextShadow:t.baseTextShadow,shadowCircleBrighter:t.shadowCircleBrighter,shadowCircleBright:t.shadowCircleBright,shadowCircleBase:t.shadowCircleBase,shadowCircleDark:t.shadowCircleDark,shadowHorizonBrighter:t.shadowHorizonBrighter,shadowHorizonBright:t.shadowHorizonBright,shadowHorizonBase:t.shadowHorizonBase,shadowHorizonDark:t.shadowHorizonDark}},294:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.zIndex=void 0,t.zIndex={sideMenu:980,header:102,toTop:101,contentsMenu:100,eyeCatch:100},t.default=t.zIndex},9293:function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.userInit=t.userHasSelfTagsInit=t.googleSessionInit=t.selectContentMenuDefault=t.selectContentMenuProfile=t.selectContentMenuStory=t.selectContentMenuBusiness=t.selectContentMenuConfig=t.selectContentMenuCreators=t.selectContentMenuLivePages=void 0,n(9232);const a=r(n(300)),i=r(n(1665)),o=r(n(8957));t.selectContentMenuLivePages="livePages",t.selectContentMenuCreators="stories",t.selectContentMenuConfig="config",t.selectContentMenuBusiness="business",t.selectContentMenuStory="story",t.selectContentMenuProfile="profile",t.selectContentMenuDefault=t.selectContentMenuBusiness,t.googleSessionInit={aud:"",azp:"",email:"",email_verified:!1,exp:0,family_name:"",given_name:"",iat:0,iss:"",jti:"",name:"",nbf:0,picture:"",sub:""},t.userHasSelfTagsInit={investor:!1,founder:!1,member:!1},t.userInit={name:"",email:"",bg:"",icon:"",birthday:a.default.defaultBirthdayUnixtime,languages:[],sexes:[],hasSelfTags:t.userHasSelfTagsInit};const l=String(window.location.href),u=l.split("/"),s=u.length;let d="/";if(window.talknStoriesPointer=window.talknConfig&&window.talknConfig.storiesIndex?window.talknConfig.storiesIndex.length:0,""===u[s-1])d=l;else{const e=l.lastIndexOf("/"),t=Number(l.substr(e+1,e));d=l.substr(0,e+1),t<=0&&(window.talknStoriesPointer=1),window.talknStoriesPointer<window.talknConfig.storiesIndex.length?window.talknStoriesPointer=window.talknConfig.storiesIndex.length:window.talknStoriesPointer=t}d=a.default.domain===i.default.DEVELOPMENT_DOMAIN?d.indexOf(i.default.PORTS.DEVELOPMENT_COVER)>=0?d.replace(`https://${i.default.DEVELOPMENT_DOMAIN}:${i.default.PORTS.DEVELOPMENT_COVER}`,""):d.replace(`https://${i.default.SUB_DOMAINS.COVER}.${i.default.DEVELOPMENT_DOMAIN}`,""):d.replace(`https://${i.default.SUB_DOMAINS.COVER}.${i.default.PRODUCTION_DOMAIN}`,""),(0,o.default)()}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var i=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n(9293)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUU3RE0sT0FBTytDLGVBQWV4SixFQUFTLGFBQWMsQ0FBRW1HLE9BQU8sS0NMdkR3bEYsRUFBb0JTLElBQU9yc0YsSUFDMUJBLEVBQU9zc0YsTUFBUSxHQUNWdHNGLEVBQU9rVCxXQUFVbFQsRUFBT2tULFNBQVcsSUFDakNsVCxHQ0FrQjRyRixFQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL3RhbGtuLWNvdmVyLy4uL2NsaWVudC9ub2RlX21vZHVsZXMvcHJvY2Vzcy9icm93c2VyLmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4uL2NvbW1vbi9ub2RlX21vZHVsZXMvYXRvYi9icm93c2VyLWF0b2IuanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi4vY29tbW9uL25vZGVfbW9kdWxlcy9vcy9pbmRleC5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uLi9jb21tb24vbm9kZV9tb2R1bGVzL3Byb2Nlc3MvYnJvd3Nlci5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuY3NzL25vcm1hbGl6ZS5jc3MiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9ub2RlX21vZHVsZXMvaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3MvZGlzdC9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy5janMuanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9ub2RlX21vZHVsZXMvb2JqZWN0LWFzc2lnbi9pbmRleC5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL3JlYWN0LWlzL2luZGV4LmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9yZWFjdC9pbmRleC5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9zY2hlZHVsZXIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9ub2RlX21vZHVsZXMvc2hhbGxvd2VxdWFsL2luZGV4LmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL25vcm1hbGl6ZS5jc3Mvbm9ybWFsaXplLmNzcz8zNDJmIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vc3R5bGlzL2Rpc3Qvc3R5bGlzLmJyb3dzZXIuZXNtLmpzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vbm9kZV9tb2R1bGVzL0BlbW90aW9uL3VuaXRsZXNzL2Rpc3QvdW5pdGxlc3MuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vaXMtcHJvcC12YWxpZC9kaXN0L2lzLXByb3AtdmFsaWQuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9ub2RlX21vZHVsZXMvQGVtb3Rpb24vbWVtb2l6ZS9kaXN0L21lbW9pemUuYnJvd3Nlci5lc20uanMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9ub2RlX21vZHVsZXMvc3R5bGVkLWNvbXBvbmVudHMvZGlzdC9zdHlsZWQtY29tcG9uZW50cy5icm93c2VyLmVzbS5qcyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uLi9hcGkvc3JjL3N0b3JlL0FwcC50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uLi9hcGkvc3JjL3N0b3JlL1Bvc3QudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi4vYXBpL3NyYy9zdG9yZS9UaHJlYWQudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi4vY2xpZW50L3NyYy9jb25mL2luZGV4LnRzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4uL2NsaWVudC9zcmMvc3RvcmUvVWkudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi4vY29tbW9uL3NyYy9OZXR3b3Jrcy50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uLi9jb21tb24vc3JjL1NjaGVtYS50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uLi9jb21tb24vc3JjL1NlcXVlbmNlLnRzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4uL2NvbW1vbi9zcmMvY29uZi50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uLi9jb21tb24vc3JjL2RlZmluZS50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uLi9jb21tb24vc3JjL21lZGlhVHlwZXMudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi4vY29tbW9uL3NyYy90YWxrbkNvbmZpZy50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uLi9jb21tb24vc3JjL3V0aWwudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvQXBwLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9hcGkudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9hdG9tcy9CdXR0b24udHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvYXRvbXMvQ29tbWluZ1Nvb24udHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvYXRvbXMvRmxleC50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9hdG9tcy9ILnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL0xhYmVsLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL0xpLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL05vZGUudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvYXRvbXMvUC50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9hdG9tcy9TZWN0aW9uLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL1NwaW5uZXIudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvYXRvbXMvaW5wdXQvRGF0ZS50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9hdG9tcy9pbnB1dC9Ecm9wSW1hZ2UudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvYXRvbXMvaW5wdXQvVGV4dC50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9hdG9tcy9pbnB1dC9jb21tb24udHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9hdG9tcy9pbnB1dC9pbmRleC50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL3NlbGVjdC9PcHRpb24udHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvYXRvbXMvc2VsZWN0L1NpbmdsZS50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9hdG9tcy9zZWxlY3QvY29tbW9uLnRzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvYXRvbXMvc2VsZWN0L2luZGV4LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL3N2Zy9DaGVja21hcmsudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvYXRvbXMvc3ZnL0VkaXQudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvYXRvbXMvc3ZnL1Jlc2V0LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL3N2Zy9TdG9yeS50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9hdG9tcy9zdmcvVGFnLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL3N2Zy9Vc2VyLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL2F0b21zL3N2Zy9pbmRleC50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL21vbGVjdWxlcy9BY2NvdW50LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL21vbGVjdWxlcy9Cb3hMaXN0LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL21vbGVjdWxlcy9IZWFkZXJTZWN0aW9uLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL21vbGVjdWxlcy9TdG9yeVNlY3Rpb24udHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0FkdmVydHMvaW5kZXgudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL0xpdmVQYWdlL2luZGV4LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9NZW51LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL1RhZ1NlY3Rpb25zLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL2J1dHRvbi9Db250cm9sQnV0dG9uLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL2J1dHRvbi9SZXNldEJ1dHRvbi50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9jb21tb24udHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvaW5kZXgudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvbW9kYWwvU2VsZWN0Rm91bmRlck1vZGFsLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL21vZGFsL1NlbGVjdEludmVzdG9yTW9kYWwudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvbW9kYWwvU2VsZWN0TWVtYmVyTW9kYWwudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvbW9kYWwvU2VsZWN0U3RvcnlNb2RhbC50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RCaXJ0aGRheS50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RJbmR1c3RvcnkudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvbW9kYWwvY2hpbGRyZW4vU2VsZWN0Sm9iLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL21vZGFsL2NoaWxkcmVuL1NlbGVjdExhbmd1YWdlcy50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RTZXhlcy50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RTdGFydHVwU2VyaWVzLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL21vZGFsL2NoaWxkcmVuL1NlbGVjdFN0b3J5LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL21vZGFsL2NoaWxkcmVuL1NlbGVjdFllYXIudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvdGlwL0FkZC50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS90aXAvQ29tcGxleGl0eS50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS90aXAvU2ltcGx5LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9TaWRlTWVudS50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvU3RvcnkvY29udGVudHMudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1N0b3J5L2luZGV4LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9FeWVDYXRjaC9Db250ZW50LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9FeWVDYXRjaC9NYWluLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9FeWVDYXRjaC9PcmRlci50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvRmxvYXRNZW51LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Gb290ZXIvQWN0aW9uc1NlY3Rpb24udHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0Zvb3Rlci9EZXNpZ25TZWN0aW9uLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Gb290ZXIvTWVzc2FnZVNlY3Rpb24udHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL0Zvb3Rlci9PdGhlckNvbnRlbnRzU2VjdGlvbi50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvRm9vdGVyL1NlcnZpY2VDb25jZXB0U2VjdGlvbi50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvRm9vdGVyL1RvVG9wU2VjdGlvbi50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvRm9vdGVyL2luZGV4LnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9IZWFkZXIvaW5kZXgudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL01vZGFsL01vZGFsUGxhaW4udHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvb3JnYW5pc21zL01vZGFsL01vZGFsU3RydWN0dXJlLnRzeCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9jb21wb25lbnRzL29yZ2FuaXNtcy9Nb2RhbC9pbmRleC50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvY29tcG9uZW50cy9vcmdhbmlzbXMvU25zU2hhcmUvaW5kZXgudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbXBvbmVudHMvcGFnZXMvU2VhcmNoTW9kYWwudHN4Iiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL2NvbnRhaW5lci9pbmRleC50c3giLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvbm9kZXMvQ29udGVudC50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9ub2Rlcy9MYXlvdXQudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvc3R5bGVzL2Jsb2Nrcy50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9zdHlsZXMvY29sb3JzLnRzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL3N0eWxlcy9pbmRleC50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9zdHlsZXMvbGF5b3V0cy50cyIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci8uL3NyYy9zdHlsZXMvc2hhZG93LnRzIiwid2VicGFjazovL3RhbGtuLWNvdmVyLy4vc3JjL3N0eWxlcy96SW5kZXgudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvLi9zcmMvdGFsa24uY292ZXIudHMiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RhbGtuLWNvdmVyL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdGFsa24tY292ZXIvd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly90YWxrbi1jb3Zlci93ZWJwYWNrL3J1bnRpbWUvbm9kZSBtb2R1bGUgZGVjb3JhdG9yIiwid2VicGFjazovL3RhbGtuLWNvdmVyL3dlYnBhY2svc3RhcnR1cCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzaGltIGZvciB1c2luZyBwcm9jZXNzIGluIGJyb3dzZXJcbnZhciBwcm9jZXNzID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcblxuLy8gY2FjaGVkIGZyb20gd2hhdGV2ZXIgZ2xvYmFsIGlzIHByZXNlbnQgc28gdGhhdCB0ZXN0IHJ1bm5lcnMgdGhhdCBzdHViIGl0XG4vLyBkb24ndCBicmVhayB0aGluZ3MuICBCdXQgd2UgbmVlZCB0byB3cmFwIGl0IGluIGEgdHJ5IGNhdGNoIGluIGNhc2UgaXQgaXNcbi8vIHdyYXBwZWQgaW4gc3RyaWN0IG1vZGUgY29kZSB3aGljaCBkb2Vzbid0IGRlZmluZSBhbnkgZ2xvYmFscy4gIEl0J3MgaW5zaWRlIGFcbi8vIGZ1bmN0aW9uIGJlY2F1c2UgdHJ5L2NhdGNoZXMgZGVvcHRpbWl6ZSBpbiBjZXJ0YWluIGVuZ2luZXMuXG5cbnZhciBjYWNoZWRTZXRUaW1lb3V0O1xudmFyIGNhY2hlZENsZWFyVGltZW91dDtcblxuZnVuY3Rpb24gZGVmYXVsdFNldFRpbW91dCgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3NldFRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRDbGVhclRpbWVvdXQgKCkge1xuICAgIHRocm93IG5ldyBFcnJvcignY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkJyk7XG59XG4oZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc2V0VGltZW91dCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IHNldFRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgY2FjaGVkU2V0VGltZW91dCA9IGRlZmF1bHRTZXRUaW1vdXQ7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIGlmICh0eXBlb2YgY2xlYXJUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBjbGVhclRpbWVvdXQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRDbGVhclRpbWVvdXQgPSBkZWZhdWx0Q2xlYXJUaW1lb3V0O1xuICAgIH1cbn0gKCkpXG5mdW5jdGlvbiBydW5UaW1lb3V0KGZ1bikge1xuICAgIGlmIChjYWNoZWRTZXRUaW1lb3V0ID09PSBzZXRUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICAvLyBpZiBzZXRUaW1lb3V0IHdhc24ndCBhdmFpbGFibGUgYnV0IHdhcyBsYXR0ZXIgZGVmaW5lZFxuICAgIGlmICgoY2FjaGVkU2V0VGltZW91dCA9PT0gZGVmYXVsdFNldFRpbW91dCB8fCAhY2FjaGVkU2V0VGltZW91dCkgJiYgc2V0VGltZW91dCkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuLCAwKTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgLy8gd2hlbiB3aGVuIHNvbWVib2R5IGhhcyBzY3Jld2VkIHdpdGggc2V0VGltZW91dCBidXQgbm8gSS5FLiBtYWRkbmVzc1xuICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dChmdW4sIDApO1xuICAgIH0gY2F0Y2goZSl7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBXaGVuIHdlIGFyZSBpbiBJLkUuIGJ1dCB0aGUgc2NyaXB0IGhhcyBiZWVuIGV2YWxlZCBzbyBJLkUuIGRvZXNuJ3QgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwobnVsbCwgZnVuLCAwKTtcbiAgICAgICAgfSBjYXRjaChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yXG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkU2V0VGltZW91dC5jYWxsKHRoaXMsIGZ1biwgMCk7XG4gICAgICAgIH1cbiAgICB9XG5cblxufVxuZnVuY3Rpb24gcnVuQ2xlYXJUaW1lb3V0KG1hcmtlcikge1xuICAgIGlmIChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGNsZWFyVGltZW91dCkge1xuICAgICAgICAvL25vcm1hbCBlbnZpcm9tZW50cyBpbiBzYW5lIHNpdHVhdGlvbnNcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICAvLyBpZiBjbGVhclRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRDbGVhclRpbWVvdXQgPT09IGRlZmF1bHRDbGVhclRpbWVvdXQgfHwgIWNhY2hlZENsZWFyVGltZW91dCkgJiYgY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgcmV0dXJuIGNsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQobWFya2VyKTtcbiAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCAgdHJ1c3QgdGhlIGdsb2JhbCBvYmplY3Qgd2hlbiBjYWxsZWQgbm9ybWFsbHlcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRDbGVhclRpbWVvdXQuY2FsbChudWxsLCBtYXJrZXIpO1xuICAgICAgICB9IGNhdGNoIChlKXtcbiAgICAgICAgICAgIC8vIHNhbWUgYXMgYWJvdmUgYnV0IHdoZW4gaXQncyBhIHZlcnNpb24gb2YgSS5FLiB0aGF0IG11c3QgaGF2ZSB0aGUgZ2xvYmFsIG9iamVjdCBmb3IgJ3RoaXMnLCBob3BmdWxseSBvdXIgY29udGV4dCBjb3JyZWN0IG90aGVyd2lzZSBpdCB3aWxsIHRocm93IGEgZ2xvYmFsIGVycm9yLlxuICAgICAgICAgICAgLy8gU29tZSB2ZXJzaW9ucyBvZiBJLkUuIGhhdmUgZGlmZmVyZW50IHJ1bGVzIGZvciBjbGVhclRpbWVvdXQgdnMgc2V0VGltZW91dFxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKHRoaXMsIG1hcmtlcik7XG4gICAgICAgIH1cbiAgICB9XG5cblxuXG59XG52YXIgcXVldWUgPSBbXTtcbnZhciBkcmFpbmluZyA9IGZhbHNlO1xudmFyIGN1cnJlbnRRdWV1ZTtcbnZhciBxdWV1ZUluZGV4ID0gLTE7XG5cbmZ1bmN0aW9uIGNsZWFuVXBOZXh0VGljaygpIHtcbiAgICBpZiAoIWRyYWluaW5nIHx8ICFjdXJyZW50UXVldWUpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIGlmIChjdXJyZW50UXVldWUubGVuZ3RoKSB7XG4gICAgICAgIHF1ZXVlID0gY3VycmVudFF1ZXVlLmNvbmNhdChxdWV1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgIH1cbiAgICBpZiAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIGRyYWluUXVldWUoKTtcbiAgICB9XG59XG5cbmZ1bmN0aW9uIGRyYWluUXVldWUoKSB7XG4gICAgaWYgKGRyYWluaW5nKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdmFyIHRpbWVvdXQgPSBydW5UaW1lb3V0KGNsZWFuVXBOZXh0VGljayk7XG4gICAgZHJhaW5pbmcgPSB0cnVlO1xuXG4gICAgdmFyIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB3aGlsZShsZW4pIHtcbiAgICAgICAgY3VycmVudFF1ZXVlID0gcXVldWU7XG4gICAgICAgIHF1ZXVlID0gW107XG4gICAgICAgIHdoaWxlICgrK3F1ZXVlSW5kZXggPCBsZW4pIHtcbiAgICAgICAgICAgIGlmIChjdXJyZW50UXVldWUpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50UXVldWVbcXVldWVJbmRleF0ucnVuKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcXVldWVJbmRleCA9IC0xO1xuICAgICAgICBsZW4gPSBxdWV1ZS5sZW5ndGg7XG4gICAgfVxuICAgIGN1cnJlbnRRdWV1ZSA9IG51bGw7XG4gICAgZHJhaW5pbmcgPSBmYWxzZTtcbiAgICBydW5DbGVhclRpbWVvdXQodGltZW91dCk7XG59XG5cbnByb2Nlc3MubmV4dFRpY2sgPSBmdW5jdGlvbiAoZnVuKSB7XG4gICAgdmFyIGFyZ3MgPSBuZXcgQXJyYXkoYXJndW1lbnRzLmxlbmd0aCAtIDEpO1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID4gMSkge1xuICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgYXJnc1tpIC0gMV0gPSBhcmd1bWVudHNbaV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgcXVldWUucHVzaChuZXcgSXRlbShmdW4sIGFyZ3MpKTtcbiAgICBpZiAocXVldWUubGVuZ3RoID09PSAxICYmICFkcmFpbmluZykge1xuICAgICAgICBydW5UaW1lb3V0KGRyYWluUXVldWUpO1xuICAgIH1cbn07XG5cbi8vIHY4IGxpa2VzIHByZWRpY3RpYmxlIG9iamVjdHNcbmZ1bmN0aW9uIEl0ZW0oZnVuLCBhcnJheSkge1xuICAgIHRoaXMuZnVuID0gZnVuO1xuICAgIHRoaXMuYXJyYXkgPSBhcnJheTtcbn1cbkl0ZW0ucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmZ1bi5hcHBseShudWxsLCB0aGlzLmFycmF5KTtcbn07XG5wcm9jZXNzLnRpdGxlID0gJ2Jyb3dzZXInO1xucHJvY2Vzcy5icm93c2VyID0gdHJ1ZTtcbnByb2Nlc3MuZW52ID0ge307XG5wcm9jZXNzLmFyZ3YgPSBbXTtcbnByb2Nlc3MudmVyc2lvbiA9ICcnOyAvLyBlbXB0eSBzdHJpbmcgdG8gYXZvaWQgcmVnZXhwIGlzc3Vlc1xucHJvY2Vzcy52ZXJzaW9ucyA9IHt9O1xuXG5mdW5jdGlvbiBub29wKCkge31cblxucHJvY2Vzcy5vbiA9IG5vb3A7XG5wcm9jZXNzLmFkZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3Mub25jZSA9IG5vb3A7XG5wcm9jZXNzLm9mZiA9IG5vb3A7XG5wcm9jZXNzLnJlbW92ZUxpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlQWxsTGlzdGVuZXJzID0gbm9vcDtcbnByb2Nlc3MuZW1pdCA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRMaXN0ZW5lciA9IG5vb3A7XG5wcm9jZXNzLnByZXBlbmRPbmNlTGlzdGVuZXIgPSBub29wO1xuXG5wcm9jZXNzLmxpc3RlbmVycyA9IGZ1bmN0aW9uIChuYW1lKSB7IHJldHVybiBbXSB9XG5cbnByb2Nlc3MuYmluZGluZyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmJpbmRpbmcgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcblxucHJvY2Vzcy5jd2QgPSBmdW5jdGlvbiAoKSB7IHJldHVybiAnLycgfTtcbnByb2Nlc3MuY2hkaXIgPSBmdW5jdGlvbiAoZGlyKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQnKTtcbn07XG5wcm9jZXNzLnVtYXNrID0gZnVuY3Rpb24oKSB7IHJldHVybiAwOyB9O1xuIiwiKGZ1bmN0aW9uICh3KSB7XG4gIFwidXNlIHN0cmljdFwiO1xuXG4gIGZ1bmN0aW9uIGZpbmRCZXN0KGF0b2JOYXRpdmUpIHtcbiAgICAvLyBub3JtYWwgd2luZG93XG4gICAgaWYgKCdmdW5jdGlvbicgPT09IHR5cGVvZiBhdG9iTmF0aXZlKSB7IHJldHVybiBhdG9iTmF0aXZlOyB9XG5cblxuICAgIC8vIGJyb3dzZXJpZnkgKHdlYiB3b3JrZXIpXG4gICAgaWYgKCdmdW5jdGlvbicgPT09IHR5cGVvZiBCdWZmZXIpIHtcbiAgICAgIHJldHVybiBmdW5jdGlvbiBhdG9iQnJvd3NlcmlmeShhKSB7XG4gICAgICAgIC8vISEgRGVsaWJlcmF0ZWx5IHVzaW5nIGFuIEFQSSB0aGF0J3MgZGVwcmVjYXRlZCBpbiBub2RlLmpzIGJlY2F1c2VcbiAgICAgICAgLy8hISB0aGlzIGZpbGUgaXMgZm9yIGJyb3dzZXJzIGFuZCB3ZSBleHBlY3QgdGhlbSB0byBjb3BlIHdpdGggaXQuXG4gICAgICAgIC8vISEgRGlzY3Vzc2lvbjogZ2l0aHViLmNvbS9ub2RlLWJyb3dzZXItY29tcGF0L2F0b2IvcHVsbC85XG4gICAgICAgIHJldHVybiBuZXcgQnVmZmVyKGEsICdiYXNlNjQnKS50b1N0cmluZygnYmluYXJ5Jyk7XG4gICAgICB9O1xuICAgIH1cblxuICAgIC8vIGlvcyB3ZWIgd29ya2VyIHdpdGggYmFzZTY0anNcbiAgICBpZiAoJ29iamVjdCcgPT09IHR5cGVvZiB3LmJhc2U2NGpzKSB7XG4gICAgICAvLyBidWZmZXJUb0JpbmFyeVN0cmluZ1xuICAgICAgLy8gaHR0cHM6Ly9naXQuY29vbGFqODYuY29tL2Nvb2xhajg2L3VuaWJhYmVsLmpzL2Jsb2IvbWFzdGVyL2luZGV4LmpzI0w1MFxuICAgICAgcmV0dXJuIGZ1bmN0aW9uIGF0b2JXZWJXb3JrZXJfaU9TKGEpIHtcbiAgICAgICAgdmFyIGJ1ZiA9IHcuYmFzZTY0anMuYjY0VG9CeXRlQXJyYXkoYSk7XG4gICAgICAgIHJldHVybiBBcnJheS5wcm90b3R5cGUubWFwLmNhbGwoYnVmLCBmdW5jdGlvbiAoY2gpIHtcbiAgICAgICAgICByZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShjaCk7XG4gICAgICAgIH0pLmpvaW4oJycpO1xuICAgICAgfTtcbiAgICB9XG5cblx0XHRyZXR1cm4gZnVuY3Rpb24gKCkge1xuXHRcdFx0Ly8gaW9zIHdlYiB3b3JrZXIgd2l0aG91dCBiYXNlNjRqc1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKFwiWW91J3JlIHByb2JhYmx5IGluIGFuIG9sZCBicm93c2VyIG9yIGFuIGlPUyB3ZWJ3b3JrZXIuXCIgK1xuXHRcdFx0XHRcIiBJdCBtaWdodCBoZWxwIHRvIGluY2x1ZGUgYmVhdGdhbW1pdCdzIGJhc2U2NC1qcy5cIik7XG4gICAgfTtcbiAgfVxuXG4gIHZhciBhdG9iQmVzdCA9IGZpbmRCZXN0KHcuYXRvYik7XG4gIHcuYXRvYiA9IGF0b2JCZXN0O1xuXG4gIGlmICgodHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpICYmIG1vZHVsZSAmJiBtb2R1bGUuZXhwb3J0cykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gYXRvYkJlc3Q7XG4gIH1cbn0od2luZG93KSk7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJ29zJylcbiIsIi8vIHNoaW0gZm9yIHVzaW5nIHByb2Nlc3MgaW4gYnJvd3NlclxudmFyIHByb2Nlc3MgPSBtb2R1bGUuZXhwb3J0cyA9IHt9O1xuXG4vLyBjYWNoZWQgZnJvbSB3aGF0ZXZlciBnbG9iYWwgaXMgcHJlc2VudCBzbyB0aGF0IHRlc3QgcnVubmVycyB0aGF0IHN0dWIgaXRcbi8vIGRvbid0IGJyZWFrIHRoaW5ncy4gIEJ1dCB3ZSBuZWVkIHRvIHdyYXAgaXQgaW4gYSB0cnkgY2F0Y2ggaW4gY2FzZSBpdCBpc1xuLy8gd3JhcHBlZCBpbiBzdHJpY3QgbW9kZSBjb2RlIHdoaWNoIGRvZXNuJ3QgZGVmaW5lIGFueSBnbG9iYWxzLiAgSXQncyBpbnNpZGUgYVxuLy8gZnVuY3Rpb24gYmVjYXVzZSB0cnkvY2F0Y2hlcyBkZW9wdGltaXplIGluIGNlcnRhaW4gZW5naW5lcy5cblxudmFyIGNhY2hlZFNldFRpbWVvdXQ7XG52YXIgY2FjaGVkQ2xlYXJUaW1lb3V0O1xuXG5mdW5jdGlvbiBkZWZhdWx0U2V0VGltb3V0KCkge1xuICAgIHRocm93IG5ldyBFcnJvcignc2V0VGltZW91dCBoYXMgbm90IGJlZW4gZGVmaW5lZCcpO1xufVxuZnVuY3Rpb24gZGVmYXVsdENsZWFyVGltZW91dCAoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdjbGVhclRpbWVvdXQgaGFzIG5vdCBiZWVuIGRlZmluZWQnKTtcbn1cbihmdW5jdGlvbiAoKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBzZXRUaW1lb3V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gc2V0VGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBkZWZhdWx0U2V0VGltb3V0O1xuICAgICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBjYWNoZWRTZXRUaW1lb3V0ID0gZGVmYXVsdFNldFRpbW91dDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgaWYgKHR5cGVvZiBjbGVhclRpbWVvdXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGNsZWFyVGltZW91dDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIGNhY2hlZENsZWFyVGltZW91dCA9IGRlZmF1bHRDbGVhclRpbWVvdXQ7XG4gICAgfVxufSAoKSlcbmZ1bmN0aW9uIHJ1blRpbWVvdXQoZnVuKSB7XG4gICAgaWYgKGNhY2hlZFNldFRpbWVvdXQgPT09IHNldFRpbWVvdXQpIHtcbiAgICAgICAgLy9ub3JtYWwgZW52aXJvbWVudHMgaW4gc2FuZSBzaXR1YXRpb25zXG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfVxuICAgIC8vIGlmIHNldFRpbWVvdXQgd2Fzbid0IGF2YWlsYWJsZSBidXQgd2FzIGxhdHRlciBkZWZpbmVkXG4gICAgaWYgKChjYWNoZWRTZXRUaW1lb3V0ID09PSBkZWZhdWx0U2V0VGltb3V0IHx8ICFjYWNoZWRTZXRUaW1lb3V0KSAmJiBzZXRUaW1lb3V0KSB7XG4gICAgICAgIGNhY2hlZFNldFRpbWVvdXQgPSBzZXRUaW1lb3V0O1xuICAgICAgICByZXR1cm4gc2V0VGltZW91dChmdW4sIDApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyB3aGVuIHdoZW4gc29tZWJvZHkgaGFzIHNjcmV3ZWQgd2l0aCBzZXRUaW1lb3V0IGJ1dCBubyBJLkUuIG1hZGRuZXNzXG4gICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0KGZ1biwgMCk7XG4gICAgfSBjYXRjaChlKXtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIC8vIFdoZW4gd2UgYXJlIGluIEkuRS4gYnV0IHRoZSBzY3JpcHQgaGFzIGJlZW4gZXZhbGVkIHNvIEkuRS4gZG9lc24ndCB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZFNldFRpbWVvdXQuY2FsbChudWxsLCBmdW4sIDApO1xuICAgICAgICB9IGNhdGNoKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3JcbiAgICAgICAgICAgIHJldHVybiBjYWNoZWRTZXRUaW1lb3V0LmNhbGwodGhpcywgZnVuLCAwKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG59XG5mdW5jdGlvbiBydW5DbGVhclRpbWVvdXQobWFya2VyKSB7XG4gICAgaWYgKGNhY2hlZENsZWFyVGltZW91dCA9PT0gY2xlYXJUaW1lb3V0KSB7XG4gICAgICAgIC8vbm9ybWFsIGVudmlyb21lbnRzIGluIHNhbmUgc2l0dWF0aW9uc1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIC8vIGlmIGNsZWFyVGltZW91dCB3YXNuJ3QgYXZhaWxhYmxlIGJ1dCB3YXMgbGF0dGVyIGRlZmluZWRcbiAgICBpZiAoKGNhY2hlZENsZWFyVGltZW91dCA9PT0gZGVmYXVsdENsZWFyVGltZW91dCB8fCAhY2FjaGVkQ2xlYXJUaW1lb3V0KSAmJiBjbGVhclRpbWVvdXQpIHtcbiAgICAgICAgY2FjaGVkQ2xlYXJUaW1lb3V0ID0gY2xlYXJUaW1lb3V0O1xuICAgICAgICByZXR1cm4gY2xlYXJUaW1lb3V0KG1hcmtlcik7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIC8vIHdoZW4gd2hlbiBzb21lYm9keSBoYXMgc2NyZXdlZCB3aXRoIHNldFRpbWVvdXQgYnV0IG5vIEkuRS4gbWFkZG5lc3NcbiAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dChtYXJrZXIpO1xuICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gV2hlbiB3ZSBhcmUgaW4gSS5FLiBidXQgdGhlIHNjcmlwdCBoYXMgYmVlbiBldmFsZWQgc28gSS5FLiBkb2Vzbid0ICB0cnVzdCB0aGUgZ2xvYmFsIG9iamVjdCB3aGVuIGNhbGxlZCBub3JtYWxseVxuICAgICAgICAgICAgcmV0dXJuIGNhY2hlZENsZWFyVGltZW91dC5jYWxsKG51bGwsIG1hcmtlcik7XG4gICAgICAgIH0gY2F0Y2ggKGUpe1xuICAgICAgICAgICAgLy8gc2FtZSBhcyBhYm92ZSBidXQgd2hlbiBpdCdzIGEgdmVyc2lvbiBvZiBJLkUuIHRoYXQgbXVzdCBoYXZlIHRoZSBnbG9iYWwgb2JqZWN0IGZvciAndGhpcycsIGhvcGZ1bGx5IG91ciBjb250ZXh0IGNvcnJlY3Qgb3RoZXJ3aXNlIGl0IHdpbGwgdGhyb3cgYSBnbG9iYWwgZXJyb3IuXG4gICAgICAgICAgICAvLyBTb21lIHZlcnNpb25zIG9mIEkuRS4gaGF2ZSBkaWZmZXJlbnQgcnVsZXMgZm9yIGNsZWFyVGltZW91dCB2cyBzZXRUaW1lb3V0XG4gICAgICAgICAgICByZXR1cm4gY2FjaGVkQ2xlYXJUaW1lb3V0LmNhbGwodGhpcywgbWFya2VyKTtcbiAgICAgICAgfVxuICAgIH1cblxuXG5cbn1cbnZhciBxdWV1ZSA9IFtdO1xudmFyIGRyYWluaW5nID0gZmFsc2U7XG52YXIgY3VycmVudFF1ZXVlO1xudmFyIHF1ZXVlSW5kZXggPSAtMTtcblxuZnVuY3Rpb24gY2xlYW5VcE5leHRUaWNrKCkge1xuICAgIGlmICghZHJhaW5pbmcgfHwgIWN1cnJlbnRRdWV1ZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGRyYWluaW5nID0gZmFsc2U7XG4gICAgaWYgKGN1cnJlbnRRdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgcXVldWUgPSBjdXJyZW50UXVldWUuY29uY2F0KHF1ZXVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgfVxuICAgIGlmIChxdWV1ZS5sZW5ndGgpIHtcbiAgICAgICAgZHJhaW5RdWV1ZSgpO1xuICAgIH1cbn1cblxuZnVuY3Rpb24gZHJhaW5RdWV1ZSgpIHtcbiAgICBpZiAoZHJhaW5pbmcpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB2YXIgdGltZW91dCA9IHJ1blRpbWVvdXQoY2xlYW5VcE5leHRUaWNrKTtcbiAgICBkcmFpbmluZyA9IHRydWU7XG5cbiAgICB2YXIgbGVuID0gcXVldWUubGVuZ3RoO1xuICAgIHdoaWxlKGxlbikge1xuICAgICAgICBjdXJyZW50UXVldWUgPSBxdWV1ZTtcbiAgICAgICAgcXVldWUgPSBbXTtcbiAgICAgICAgd2hpbGUgKCsrcXVldWVJbmRleCA8IGxlbikge1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRRdWV1ZSkge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRRdWV1ZVtxdWV1ZUluZGV4XS5ydW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBxdWV1ZUluZGV4ID0gLTE7XG4gICAgICAgIGxlbiA9IHF1ZXVlLmxlbmd0aDtcbiAgICB9XG4gICAgY3VycmVudFF1ZXVlID0gbnVsbDtcbiAgICBkcmFpbmluZyA9IGZhbHNlO1xuICAgIHJ1bkNsZWFyVGltZW91dCh0aW1lb3V0KTtcbn1cblxucHJvY2Vzcy5uZXh0VGljayA9IGZ1bmN0aW9uIChmdW4pIHtcbiAgICB2YXIgYXJncyA9IG5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoIC0gMSk7XG4gICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPiAxKSB7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBhcmdzW2kgLSAxXSA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBxdWV1ZS5wdXNoKG5ldyBJdGVtKGZ1biwgYXJncykpO1xuICAgIGlmIChxdWV1ZS5sZW5ndGggPT09IDEgJiYgIWRyYWluaW5nKSB7XG4gICAgICAgIHJ1blRpbWVvdXQoZHJhaW5RdWV1ZSk7XG4gICAgfVxufTtcblxuLy8gdjggbGlrZXMgcHJlZGljdGlibGUgb2JqZWN0c1xuZnVuY3Rpb24gSXRlbShmdW4sIGFycmF5KSB7XG4gICAgdGhpcy5mdW4gPSBmdW47XG4gICAgdGhpcy5hcnJheSA9IGFycmF5O1xufVxuSXRlbS5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZnVuLmFwcGx5KG51bGwsIHRoaXMuYXJyYXkpO1xufTtcbnByb2Nlc3MudGl0bGUgPSAnYnJvd3Nlcic7XG5wcm9jZXNzLmJyb3dzZXIgPSB0cnVlO1xucHJvY2Vzcy5lbnYgPSB7fTtcbnByb2Nlc3MuYXJndiA9IFtdO1xucHJvY2Vzcy52ZXJzaW9uID0gJyc7IC8vIGVtcHR5IHN0cmluZyB0byBhdm9pZCByZWdleHAgaXNzdWVzXG5wcm9jZXNzLnZlcnNpb25zID0ge307XG5cbmZ1bmN0aW9uIG5vb3AoKSB7fVxuXG5wcm9jZXNzLm9uID0gbm9vcDtcbnByb2Nlc3MuYWRkTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5vbmNlID0gbm9vcDtcbnByb2Nlc3Mub2ZmID0gbm9vcDtcbnByb2Nlc3MucmVtb3ZlTGlzdGVuZXIgPSBub29wO1xucHJvY2Vzcy5yZW1vdmVBbGxMaXN0ZW5lcnMgPSBub29wO1xucHJvY2Vzcy5lbWl0ID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZExpc3RlbmVyID0gbm9vcDtcbnByb2Nlc3MucHJlcGVuZE9uY2VMaXN0ZW5lciA9IG5vb3A7XG5cbnByb2Nlc3MubGlzdGVuZXJzID0gZnVuY3Rpb24gKG5hbWUpIHsgcmV0dXJuIFtdIH1cblxucHJvY2Vzcy5iaW5kaW5nID0gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkJyk7XG59O1xuXG5wcm9jZXNzLmN3ZCA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuICcvJyB9O1xucHJvY2Vzcy5jaGRpciA9IGZ1bmN0aW9uIChkaXIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ3Byb2Nlc3MuY2hkaXIgaXMgbm90IHN1cHBvcnRlZCcpO1xufTtcbnByb2Nlc3MudW1hc2sgPSBmdW5jdGlvbigpIHsgcmV0dXJuIDA7IH07XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvY3NzV2l0aE1hcHBpbmdUb1N0cmluZy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXFxuXFxuLyogRG9jdW1lbnRcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cXG4gKi9cXG5cXG5odG1sIHtcXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXFxuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cXG59XFxuXFxuLyogU2VjdGlvbnNcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5ib2R5IHtcXG4gIG1hcmdpbjogMDtcXG59XFxuXFxuLyoqXFxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXFxuICovXFxuXFxubWFpbiB7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLyoqXFxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXFxuICovXFxuXFxuaDEge1xcbiAgZm9udC1zaXplOiAyZW07XFxuICBtYXJnaW46IDAuNjdlbSAwO1xcbn1cXG5cXG4vKiBHcm91cGluZyBjb250ZW50XFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxcbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxcbiAqL1xcblxcbmhyIHtcXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXFxuICBoZWlnaHQ6IDA7IC8qIDEgKi9cXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXFxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbnByZSB7XFxuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXFxufVxcblxcbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXFxuICovXFxuXFxuYSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG59XFxuXFxuLyoqXFxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxcbiAqL1xcblxcbmFiYnJbdGl0bGVdIHtcXG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXFxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cXG4gKi9cXG5cXG5iLFxcbnN0cm9uZyB7XFxuICBmb250LXdlaWdodDogYm9sZGVyO1xcbn1cXG5cXG4vKipcXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5jb2RlLFxcbmtiZCxcXG5zYW1wIHtcXG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xcbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXFxuICovXFxuXFxuc21hbGwge1xcbiAgZm9udC1zaXplOiA4MCU7XFxufVxcblxcbi8qKlxcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxcbiAqIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5zdWIsXFxuc3VwIHtcXG4gIGZvbnQtc2l6ZTogNzUlO1xcbiAgbGluZS1oZWlnaHQ6IDA7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XFxufVxcblxcbnN1YiB7XFxuICBib3R0b206IC0wLjI1ZW07XFxufVxcblxcbnN1cCB7XFxuICB0b3A6IC0wLjVlbTtcXG59XFxuXFxuLyogRW1iZWRkZWQgY29udGVudFxcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cXG4gKi9cXG5cXG5pbWcge1xcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xcbn1cXG5cXG4vKiBGb3Jtc1xcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXFxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxcbiAqL1xcblxcbmJ1dHRvbixcXG5pbnB1dCxcXG5vcHRncm91cCxcXG5zZWxlY3QsXFxudGV4dGFyZWEge1xcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IC8qIDEgKi9cXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cXG4gIG1hcmdpbjogMDsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxcbiAqL1xcblxcbmJ1dHRvbixcXG5pbnB1dCB7IC8qIDEgKi9cXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xcbn1cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXFxuICovXFxuXFxuYnV0dG9uLFxcbnNlbGVjdCB7IC8qIDEgKi9cXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xcbn1cXG5cXG4vKipcXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxcbiAqL1xcblxcbmJ1dHRvbixcXG5bdHlwZT1cXFwiYnV0dG9uXFxcIl0sXFxuW3R5cGU9XFxcInJlc2V0XFxcIl0sXFxuW3R5cGU9XFxcInN1Ym1pdFxcXCJdIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xcbn1cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxcbiAqL1xcblxcbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcXG5bdHlwZT1cXFwiYnV0dG9uXFxcIl06Oi1tb3otZm9jdXMtaW5uZXIsXFxuW3R5cGU9XFxcInJlc2V0XFxcIl06Oi1tb3otZm9jdXMtaW5uZXIsXFxuW3R5cGU9XFxcInN1Ym1pdFxcXCJdOjotbW96LWZvY3VzLWlubmVyIHtcXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcXG4gIHBhZGRpbmc6IDA7XFxufVxcblxcbi8qKlxcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cXG4gKi9cXG5cXG5idXR0b246LW1vei1mb2N1c3JpbmcsXFxuW3R5cGU9XFxcImJ1dHRvblxcXCJdOi1tb3otZm9jdXNyaW5nLFxcblt0eXBlPVxcXCJyZXNldFxcXCJdOi1tb3otZm9jdXNyaW5nLFxcblt0eXBlPVxcXCJzdWJtaXRcXFwiXTotbW96LWZvY3VzcmluZyB7XFxuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XFxufVxcblxcbi8qKlxcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cXG4gKi9cXG5cXG5maWVsZHNldCB7XFxuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXFxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxcbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcXG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5sZWdlbmQge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xcbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXFxuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cXG59XFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cXG4gKi9cXG5cXG5wcm9ncmVzcyB7XFxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XFxufVxcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxcbiAqL1xcblxcbnRleHRhcmVhIHtcXG4gIG92ZXJmbG93OiBhdXRvO1xcbn1cXG5cXG4vKipcXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXFxuICovXFxuXFxuW3R5cGU9XFxcImNoZWNrYm94XFxcIl0sXFxuW3R5cGU9XFxcInJhZGlvXFxcIl0ge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xcbiAgcGFkZGluZzogMDsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXFxuICovXFxuXFxuW3R5cGU9XFxcIm51bWJlclxcXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxcblt0eXBlPVxcXCJudW1iZXJcXFwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XFxuICBoZWlnaHQ6IGF1dG87XFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxcbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxcbiAqL1xcblxcblt0eXBlPVxcXCJzZWFyY2hcXFwiXSB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxcbiAqL1xcblxcblt0eXBlPVxcXCJzZWFyY2hcXFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXFxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxcbiAqL1xcblxcbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cXG59XFxuXFxuLyogSW50ZXJhY3RpdmVcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cXG4gKi9cXG5cXG5kZXRhaWxzIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG4vKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5zdW1tYXJ5IHtcXG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcXG59XFxuXFxuLyogTWlzY1xcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxcbiAqL1xcblxcbnRlbXBsYXRlIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi8qKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxcbiAqL1xcblxcbltoaWRkZW5dIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuY3NzL25vcm1hbGl6ZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUEsMkVBQTJFOztBQUUzRTsrRUFDK0U7O0FBRS9FOzs7RUFHRTs7QUFFRjtFQUNFLGlCQUFpQixFQUFFLE1BQU07RUFDekIsOEJBQThCLEVBQUUsTUFBTTtBQUN4Qzs7QUFFQTsrRUFDK0U7O0FBRS9FOztFQUVFOztBQUVGO0VBQ0UsU0FBUztBQUNYOztBQUVBOztFQUVFOztBQUVGO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTs7O0VBR0U7O0FBRUY7RUFDRSxjQUFjO0VBQ2QsZ0JBQWdCO0FBQ2xCOztBQUVBOytFQUMrRTs7QUFFL0U7OztFQUdFOztBQUVGO0VBQ0UsdUJBQXVCLEVBQUUsTUFBTTtFQUMvQixTQUFTLEVBQUUsTUFBTTtFQUNqQixpQkFBaUIsRUFBRSxNQUFNO0FBQzNCOztBQUVBOzs7RUFHRTs7QUFFRjtFQUNFLGlDQUFpQyxFQUFFLE1BQU07RUFDekMsY0FBYyxFQUFFLE1BQU07QUFDeEI7O0FBRUE7K0VBQytFOztBQUUvRTs7RUFFRTs7QUFFRjtFQUNFLDZCQUE2QjtBQUMvQjs7QUFFQTs7O0VBR0U7O0FBRUY7RUFDRSxtQkFBbUIsRUFBRSxNQUFNO0VBQzNCLDBCQUEwQixFQUFFLE1BQU07RUFDbEMsaUNBQWlDLEVBQUUsTUFBTTtBQUMzQzs7QUFFQTs7RUFFRTs7QUFFRjs7RUFFRSxtQkFBbUI7QUFDckI7O0FBRUE7OztFQUdFOztBQUVGOzs7RUFHRSxpQ0FBaUMsRUFBRSxNQUFNO0VBQ3pDLGNBQWMsRUFBRSxNQUFNO0FBQ3hCOztBQUVBOztFQUVFOztBQUVGO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTs7O0VBR0U7O0FBRUY7O0VBRUUsY0FBYztFQUNkLGNBQWM7RUFDZCxrQkFBa0I7RUFDbEIsd0JBQXdCO0FBQzFCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTsrRUFDK0U7O0FBRS9FOztFQUVFOztBQUVGO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBOytFQUMrRTs7QUFFL0U7OztFQUdFOztBQUVGOzs7OztFQUtFLG9CQUFvQixFQUFFLE1BQU07RUFDNUIsZUFBZSxFQUFFLE1BQU07RUFDdkIsaUJBQWlCLEVBQUUsTUFBTTtFQUN6QixTQUFTLEVBQUUsTUFBTTtBQUNuQjs7QUFFQTs7O0VBR0U7O0FBRUY7UUFDUSxNQUFNO0VBQ1osaUJBQWlCO0FBQ25COztBQUVBOzs7RUFHRTs7QUFFRjtTQUNTLE1BQU07RUFDYixvQkFBb0I7QUFDdEI7O0FBRUE7O0VBRUU7O0FBRUY7Ozs7RUFJRSwwQkFBMEI7QUFDNUI7O0FBRUE7O0VBRUU7O0FBRUY7Ozs7RUFJRSxrQkFBa0I7RUFDbEIsVUFBVTtBQUNaOztBQUVBOztFQUVFOztBQUVGOzs7O0VBSUUsOEJBQThCO0FBQ2hDOztBQUVBOztFQUVFOztBQUVGO0VBQ0UsOEJBQThCO0FBQ2hDOztBQUVBOzs7OztFQUtFOztBQUVGO0VBQ0Usc0JBQXNCLEVBQUUsTUFBTTtFQUM5QixjQUFjLEVBQUUsTUFBTTtFQUN0QixjQUFjLEVBQUUsTUFBTTtFQUN0QixlQUFlLEVBQUUsTUFBTTtFQUN2QixVQUFVLEVBQUUsTUFBTTtFQUNsQixtQkFBbUIsRUFBRSxNQUFNO0FBQzdCOztBQUVBOztFQUVFOztBQUVGO0VBQ0Usd0JBQXdCO0FBQzFCOztBQUVBOztFQUVFOztBQUVGO0VBQ0UsY0FBYztBQUNoQjs7QUFFQTs7O0VBR0U7O0FBRUY7O0VBRUUsc0JBQXNCLEVBQUUsTUFBTTtFQUM5QixVQUFVLEVBQUUsTUFBTTtBQUNwQjs7QUFFQTs7RUFFRTs7QUFFRjs7RUFFRSxZQUFZO0FBQ2Q7O0FBRUE7OztFQUdFOztBQUVGO0VBQ0UsNkJBQTZCLEVBQUUsTUFBTTtFQUNyQyxvQkFBb0IsRUFBRSxNQUFNO0FBQzlCOztBQUVBOztFQUVFOztBQUVGO0VBQ0Usd0JBQXdCO0FBQzFCOztBQUVBOzs7RUFHRTs7QUFFRjtFQUNFLDBCQUEwQixFQUFFLE1BQU07RUFDbEMsYUFBYSxFQUFFLE1BQU07QUFDdkI7O0FBRUE7K0VBQytFOztBQUUvRTs7RUFFRTs7QUFFRjtFQUNFLGNBQWM7QUFDaEI7O0FBRUE7O0VBRUU7O0FBRUY7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7K0VBQytFOztBQUUvRTs7RUFFRTs7QUFFRjtFQUNFLGFBQWE7QUFDZjs7QUFFQTs7RUFFRTs7QUFFRjtFQUNFLGFBQWE7QUFDZlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXFxuXFxuLyogRG9jdW1lbnRcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cXG4gKi9cXG5cXG5odG1sIHtcXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXFxuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cXG59XFxuXFxuLyogU2VjdGlvbnNcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5ib2R5IHtcXG4gIG1hcmdpbjogMDtcXG59XFxuXFxuLyoqXFxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXFxuICovXFxuXFxubWFpbiB7XFxuICBkaXNwbGF5OiBibG9jaztcXG59XFxuXFxuLyoqXFxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXFxuICovXFxuXFxuaDEge1xcbiAgZm9udC1zaXplOiAyZW07XFxuICBtYXJnaW46IDAuNjdlbSAwO1xcbn1cXG5cXG4vKiBHcm91cGluZyBjb250ZW50XFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxcbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxcbiAqL1xcblxcbmhyIHtcXG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXFxuICBoZWlnaHQ6IDA7IC8qIDEgKi9cXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXFxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbnByZSB7XFxuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXFxufVxcblxcbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXFxuICovXFxuXFxuYSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcXG59XFxuXFxuLyoqXFxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxcbiAqL1xcblxcbmFiYnJbdGl0bGVdIHtcXG4gIGJvcmRlci1ib3R0b206IG5vbmU7IC8qIDEgKi9cXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyAvKiAyICovXFxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cXG4gKi9cXG5cXG5iLFxcbnN0cm9uZyB7XFxuICBmb250LXdlaWdodDogYm9sZGVyO1xcbn1cXG5cXG4vKipcXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5jb2RlLFxcbmtiZCxcXG5zYW1wIHtcXG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xcbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXFxuICovXFxuXFxuc21hbGwge1xcbiAgZm9udC1zaXplOiA4MCU7XFxufVxcblxcbi8qKlxcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxcbiAqIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5zdWIsXFxuc3VwIHtcXG4gIGZvbnQtc2l6ZTogNzUlO1xcbiAgbGluZS1oZWlnaHQ6IDA7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XFxufVxcblxcbnN1YiB7XFxuICBib3R0b206IC0wLjI1ZW07XFxufVxcblxcbnN1cCB7XFxuICB0b3A6IC0wLjVlbTtcXG59XFxuXFxuLyogRW1iZWRkZWQgY29udGVudFxcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cXG4gKi9cXG5cXG5pbWcge1xcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xcbn1cXG5cXG4vKiBGb3Jtc1xcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXFxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxcbiAqL1xcblxcbmJ1dHRvbixcXG5pbnB1dCxcXG5vcHRncm91cCxcXG5zZWxlY3QsXFxudGV4dGFyZWEge1xcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7IC8qIDEgKi9cXG4gIGZvbnQtc2l6ZTogMTAwJTsgLyogMSAqL1xcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cXG4gIG1hcmdpbjogMDsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxcbiAqL1xcblxcbmJ1dHRvbixcXG5pbnB1dCB7IC8qIDEgKi9cXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xcbn1cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXFxuICovXFxuXFxuYnV0dG9uLFxcbnNlbGVjdCB7IC8qIDEgKi9cXG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xcbn1cXG5cXG4vKipcXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxcbiAqL1xcblxcbmJ1dHRvbixcXG5bdHlwZT1cXFwiYnV0dG9uXFxcIl0sXFxuW3R5cGU9XFxcInJlc2V0XFxcIl0sXFxuW3R5cGU9XFxcInN1Ym1pdFxcXCJdIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xcbn1cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxcbiAqL1xcblxcbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcXG5bdHlwZT1cXFwiYnV0dG9uXFxcIl06Oi1tb3otZm9jdXMtaW5uZXIsXFxuW3R5cGU9XFxcInJlc2V0XFxcIl06Oi1tb3otZm9jdXMtaW5uZXIsXFxuW3R5cGU9XFxcInN1Ym1pdFxcXCJdOjotbW96LWZvY3VzLWlubmVyIHtcXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcXG4gIHBhZGRpbmc6IDA7XFxufVxcblxcbi8qKlxcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cXG4gKi9cXG5cXG5idXR0b246LW1vei1mb2N1c3JpbmcsXFxuW3R5cGU9XFxcImJ1dHRvblxcXCJdOi1tb3otZm9jdXNyaW5nLFxcblt0eXBlPVxcXCJyZXNldFxcXCJdOi1tb3otZm9jdXNyaW5nLFxcblt0eXBlPVxcXCJzdWJtaXRcXFwiXTotbW96LWZvY3VzcmluZyB7XFxuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XFxufVxcblxcbi8qKlxcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cXG4gKi9cXG5cXG5maWVsZHNldCB7XFxuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07XFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXFxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxcbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcXG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5sZWdlbmQge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xcbiAgY29sb3I6IGluaGVyaXQ7IC8qIDIgKi9cXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXFxuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cXG59XFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cXG4gKi9cXG5cXG5wcm9ncmVzcyB7XFxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XFxufVxcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxcbiAqL1xcblxcbnRleHRhcmVhIHtcXG4gIG92ZXJmbG93OiBhdXRvO1xcbn1cXG5cXG4vKipcXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXFxuICovXFxuXFxuW3R5cGU9XFxcImNoZWNrYm94XFxcIl0sXFxuW3R5cGU9XFxcInJhZGlvXFxcIl0ge1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xcbiAgcGFkZGluZzogMDsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXFxuICovXFxuXFxuW3R5cGU9XFxcIm51bWJlclxcXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxcblt0eXBlPVxcXCJudW1iZXJcXFwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XFxuICBoZWlnaHQ6IGF1dG87XFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxcbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxcbiAqL1xcblxcblt0eXBlPVxcXCJzZWFyY2hcXFwiXSB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLyogMSAqL1xcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxcbiAqL1xcblxcblt0eXBlPVxcXCJzZWFyY2hcXFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXFxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxcbiAqL1xcblxcbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cXG59XFxuXFxuLyogSW50ZXJhY3RpdmVcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cXG4gKi9cXG5cXG5kZXRhaWxzIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbn1cXG5cXG4vKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5zdW1tYXJ5IHtcXG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcXG59XFxuXFxuLyogTWlzY1xcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxcbiAqL1xcblxcbnRlbXBsYXRlIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblxcbi8qKlxcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxcbiAqL1xcblxcbltoaWRkZW5dIHtcXG4gIGRpc3BsYXk6IG5vbmU7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICByZXR1cm4gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGNvbnRlbnQsIFwifVwiKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTsgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcblxuXG4gIGxpc3QuaSA9IGZ1bmN0aW9uIChtb2R1bGVzLCBtZWRpYVF1ZXJ5LCBkZWR1cGUpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbW9kdWxlcy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcblxuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb250aW51ZVxuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhUXVlcnkpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsyXSA9IFwiXCIuY29uY2F0KG1lZGlhUXVlcnksIFwiIGFuZCBcIikuY29uY2F0KGl0ZW1bMl0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5mdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHsgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTsgfVxuXG5mdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpOyB9XG5cbmZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHsgaWYgKCFvKSByZXR1cm47IGlmICh0eXBlb2YgbyA9PT0gXCJzdHJpbmdcIikgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTsgaWYgKG4gPT09IFwiT2JqZWN0XCIgJiYgby5jb25zdHJ1Y3RvcikgbiA9IG8uY29uc3RydWN0b3IubmFtZTsgaWYgKG4gPT09IFwiTWFwXCIgfHwgbiA9PT0gXCJTZXRcIikgcmV0dXJuIEFycmF5LmZyb20obyk7IGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkobywgbWluTGVuKTsgfVxuXG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikgeyBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDsgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSB7IGFycjJbaV0gPSBhcnJbaV07IH0gcmV0dXJuIGFycjI7IH1cblxuZnVuY3Rpb24gX2l0ZXJhYmxlVG9BcnJheUxpbWl0KGFyciwgaSkgeyB2YXIgX2kgPSBhcnIgPT0gbnVsbCA/IG51bGwgOiB0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIGFycltTeW1ib2wuaXRlcmF0b3JdIHx8IGFycltcIkBAaXRlcmF0b3JcIl07IGlmIChfaSA9PSBudWxsKSByZXR1cm47IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX3MsIF9lOyB0cnkgeyBmb3IgKF9pID0gX2kuY2FsbChhcnIpOyAhKF9uID0gKF9zID0gX2kubmV4dCgpKS5kb25lKTsgX24gPSB0cnVlKSB7IF9hcnIucHVzaChfcy52YWx1ZSk7IGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhazsgfSB9IGNhdGNoIChlcnIpIHsgX2QgPSB0cnVlOyBfZSA9IGVycjsgfSBmaW5hbGx5IHsgdHJ5IHsgaWYgKCFfbiAmJiBfaVtcInJldHVyblwiXSAhPSBudWxsKSBfaVtcInJldHVyblwiXSgpOyB9IGZpbmFsbHkgeyBpZiAoX2QpIHRocm93IF9lOyB9IH0gcmV0dXJuIF9hcnI7IH1cblxuZnVuY3Rpb24gX2FycmF5V2l0aEhvbGVzKGFycikgeyBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gYXJyOyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKSB7XG4gIHZhciBfaXRlbSA9IF9zbGljZWRUb0FycmF5KGl0ZW0sIDQpLFxuICAgICAgY29udGVudCA9IF9pdGVtWzFdLFxuICAgICAgY3NzTWFwcGluZyA9IF9pdGVtWzNdO1xuXG4gIGlmICghY3NzTWFwcGluZykge1xuICAgIHJldHVybiBjb250ZW50O1xuICB9XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbiAoc291cmNlKSB7XG4gICAgICByZXR1cm4gXCIvKiMgc291cmNlVVJMPVwiLmNvbmNhdChjc3NNYXBwaW5nLnNvdXJjZVJvb3QgfHwgXCJcIikuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVhY3RJcyA9IHJlcXVpcmUoJ3JlYWN0LWlzJyk7XG5cbi8qKlxuICogQ29weXJpZ2h0IDIwMTUsIFlhaG9vISBJbmMuXG4gKiBDb3B5cmlnaHRzIGxpY2Vuc2VkIHVuZGVyIHRoZSBOZXcgQlNEIExpY2Vuc2UuIFNlZSB0aGUgYWNjb21wYW55aW5nIExJQ0VOU0UgZmlsZSBmb3IgdGVybXMuXG4gKi9cbnZhciBSRUFDVF9TVEFUSUNTID0ge1xuICBjaGlsZENvbnRleHRUeXBlczogdHJ1ZSxcbiAgY29udGV4dFR5cGU6IHRydWUsXG4gIGNvbnRleHRUeXBlczogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgZ2V0RGVmYXVsdFByb3BzOiB0cnVlLFxuICBnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I6IHRydWUsXG4gIGdldERlcml2ZWRTdGF0ZUZyb21Qcm9wczogdHJ1ZSxcbiAgbWl4aW5zOiB0cnVlLFxuICBwcm9wVHlwZXM6IHRydWUsXG4gIHR5cGU6IHRydWVcbn07XG52YXIgS05PV05fU1RBVElDUyA9IHtcbiAgbmFtZTogdHJ1ZSxcbiAgbGVuZ3RoOiB0cnVlLFxuICBwcm90b3R5cGU6IHRydWUsXG4gIGNhbGxlcjogdHJ1ZSxcbiAgY2FsbGVlOiB0cnVlLFxuICBhcmd1bWVudHM6IHRydWUsXG4gIGFyaXR5OiB0cnVlXG59O1xudmFyIEZPUldBUkRfUkVGX1NUQVRJQ1MgPSB7XG4gICckJHR5cGVvZic6IHRydWUsXG4gIHJlbmRlcjogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlXG59O1xudmFyIE1FTU9fU1RBVElDUyA9IHtcbiAgJyQkdHlwZW9mJzogdHJ1ZSxcbiAgY29tcGFyZTogdHJ1ZSxcbiAgZGVmYXVsdFByb3BzOiB0cnVlLFxuICBkaXNwbGF5TmFtZTogdHJ1ZSxcbiAgcHJvcFR5cGVzOiB0cnVlLFxuICB0eXBlOiB0cnVlXG59O1xudmFyIFRZUEVfU1RBVElDUyA9IHt9O1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuRm9yd2FyZFJlZl0gPSBGT1JXQVJEX1JFRl9TVEFUSUNTO1xuVFlQRV9TVEFUSUNTW3JlYWN0SXMuTWVtb10gPSBNRU1PX1NUQVRJQ1M7XG5cbmZ1bmN0aW9uIGdldFN0YXRpY3MoY29tcG9uZW50KSB7XG4gIC8vIFJlYWN0IHYxNi4xMSBhbmQgYmVsb3dcbiAgaWYgKHJlYWN0SXMuaXNNZW1vKGNvbXBvbmVudCkpIHtcbiAgICByZXR1cm4gTUVNT19TVEFUSUNTO1xuICB9IC8vIFJlYWN0IHYxNi4xMiBhbmQgYWJvdmVcblxuXG4gIHJldHVybiBUWVBFX1NUQVRJQ1NbY29tcG9uZW50WyckJHR5cGVvZiddXSB8fCBSRUFDVF9TVEFUSUNTO1xufVxuXG52YXIgZGVmaW5lUHJvcGVydHkgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG52YXIgZ2V0T3duUHJvcGVydHlOYW1lcyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzO1xudmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG52YXIgZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjtcbnZhciBnZXRQcm90b3R5cGVPZiA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbnZhciBvYmplY3RQcm90b3R5cGUgPSBPYmplY3QucHJvdG90eXBlO1xuZnVuY3Rpb24gaG9pc3ROb25SZWFjdFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50LCBzb3VyY2VDb21wb25lbnQsIGJsYWNrbGlzdCkge1xuICBpZiAodHlwZW9mIHNvdXJjZUNvbXBvbmVudCAhPT0gJ3N0cmluZycpIHtcbiAgICAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgIGlmIChvYmplY3RQcm90b3R5cGUpIHtcbiAgICAgIHZhciBpbmhlcml0ZWRDb21wb25lbnQgPSBnZXRQcm90b3R5cGVPZihzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgICBpZiAoaW5oZXJpdGVkQ29tcG9uZW50ICYmIGluaGVyaXRlZENvbXBvbmVudCAhPT0gb2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIGhvaXN0Tm9uUmVhY3RTdGF0aWNzKHRhcmdldENvbXBvbmVudCwgaW5oZXJpdGVkQ29tcG9uZW50LCBibGFja2xpc3QpO1xuICAgICAgfVxuICAgIH1cblxuICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuXG4gICAgaWYgKGdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICB9XG5cbiAgICB2YXIgdGFyZ2V0U3RhdGljcyA9IGdldFN0YXRpY3ModGFyZ2V0Q29tcG9uZW50KTtcbiAgICB2YXIgc291cmNlU3RhdGljcyA9IGdldFN0YXRpY3Moc291cmNlQ29tcG9uZW50KTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7ICsraSkge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG5cbiAgICAgIGlmICghS05PV05fU1RBVElDU1trZXldICYmICEoYmxhY2tsaXN0ICYmIGJsYWNrbGlzdFtrZXldKSAmJiAhKHNvdXJjZVN0YXRpY3MgJiYgc291cmNlU3RhdGljc1trZXldKSAmJiAhKHRhcmdldFN0YXRpY3MgJiYgdGFyZ2V0U3RhdGljc1trZXldKSkge1xuICAgICAgICB2YXIgZGVzY3JpcHRvciA9IGdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VDb21wb25lbnQsIGtleSk7XG5cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBBdm9pZCBmYWlsdXJlcyBmcm9tIHJlYWQtb25seSBwcm9wZXJ0aWVzXG4gICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXRDb21wb25lbnQ7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaG9pc3ROb25SZWFjdFN0YXRpY3M7XG4iLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNy4wLjJcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4vKlxuIE1vZGVybml6ciAzLjAuMHByZSAoQ3VzdG9tIEJ1aWxkKSB8IE1JVFxuKi9cbid1c2Ugc3RyaWN0Jzt2YXIgYWE9cmVxdWlyZShcInJlYWN0XCIpLG09cmVxdWlyZShcIm9iamVjdC1hc3NpZ25cIikscj1yZXF1aXJlKFwic2NoZWR1bGVyXCIpO2Z1bmN0aW9uIHkoYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9aWYoIWFhKXRocm93IEVycm9yKHkoMjI3KSk7dmFyIGJhPW5ldyBTZXQsY2E9e307ZnVuY3Rpb24gZGEoYSxiKXtlYShhLGIpO2VhKGErXCJDYXB0dXJlXCIsYil9XG5mdW5jdGlvbiBlYShhLGIpe2NhW2FdPWI7Zm9yKGE9MDthPGIubGVuZ3RoO2ErKyliYS5hZGQoYlthXSl9XG52YXIgZmE9IShcInVuZGVmaW5lZFwiPT09dHlwZW9mIHdpbmRvd3x8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3cuZG9jdW1lbnR8fFwidW5kZWZpbmVkXCI9PT10eXBlb2Ygd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpLGhhPS9eWzpBLVpfYS16XFx1MDBDMC1cXHUwMEQ2XFx1MDBEOC1cXHUwMEY2XFx1MDBGOC1cXHUwMkZGXFx1MDM3MC1cXHUwMzdEXFx1MDM3Ri1cXHUxRkZGXFx1MjAwQy1cXHUyMDBEXFx1MjA3MC1cXHUyMThGXFx1MkMwMC1cXHUyRkVGXFx1MzAwMS1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRkZEXVs6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRFxcLS4wLTlcXHUwMEI3XFx1MDMwMC1cXHUwMzZGXFx1MjAzRi1cXHUyMDQwXSokLyxpYT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LFxuamE9e30sa2E9e307ZnVuY3Rpb24gbGEoYSl7aWYoaWEuY2FsbChrYSxhKSlyZXR1cm4hMDtpZihpYS5jYWxsKGphLGEpKXJldHVybiExO2lmKGhhLnRlc3QoYSkpcmV0dXJuIGthW2FdPSEwO2phW2FdPSEwO3JldHVybiExfWZ1bmN0aW9uIG1hKGEsYixjLGQpe2lmKG51bGwhPT1jJiYwPT09Yy50eXBlKXJldHVybiExO3N3aXRjaCh0eXBlb2YgYil7Y2FzZSBcImZ1bmN0aW9uXCI6Y2FzZSBcInN5bWJvbFwiOnJldHVybiEwO2Nhc2UgXCJib29sZWFuXCI6aWYoZClyZXR1cm4hMTtpZihudWxsIT09YylyZXR1cm4hYy5hY2NlcHRzQm9vbGVhbnM7YT1hLnRvTG93ZXJDYXNlKCkuc2xpY2UoMCw1KTtyZXR1cm5cImRhdGEtXCIhPT1hJiZcImFyaWEtXCIhPT1hO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gbmEoYSxiLGMsZCl7aWYobnVsbD09PWJ8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYnx8bWEoYSxiLGMsZCkpcmV0dXJuITA7aWYoZClyZXR1cm4hMTtpZihudWxsIT09Yylzd2l0Y2goYy50eXBlKXtjYXNlIDM6cmV0dXJuIWI7Y2FzZSA0OnJldHVybiExPT09YjtjYXNlIDU6cmV0dXJuIGlzTmFOKGIpO2Nhc2UgNjpyZXR1cm4gaXNOYU4oYil8fDE+Yn1yZXR1cm4hMX1mdW5jdGlvbiBCKGEsYixjLGQsZSxmLGcpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWI7dGhpcy5zYW5pdGl6ZVVSTD1mO3RoaXMucmVtb3ZlRW1wdHlTdHJpbmc9Z312YXIgRD17fTtcblwiY2hpbGRyZW4gZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwgZGVmYXVsdFZhbHVlIGRlZmF1bHRDaGVja2VkIGlubmVySFRNTCBzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmcgc3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nIHN0eWxlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDAsITEsYSxudWxsLCExLCExKX0pO1tbXCJhY2NlcHRDaGFyc2V0XCIsXCJhY2NlcHQtY2hhcnNldFwiXSxbXCJjbGFzc05hbWVcIixcImNsYXNzXCJdLFtcImh0bWxGb3JcIixcImZvclwiXSxbXCJodHRwRXF1aXZcIixcImh0dHAtZXF1aXZcIl1dLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YVswXTtEW2JdPW5ldyBCKGIsMSwhMSxhWzFdLG51bGwsITEsITEpfSk7W1wiY29udGVudEVkaXRhYmxlXCIsXCJkcmFnZ2FibGVcIixcInNwZWxsQ2hlY2tcIixcInZhbHVlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDIsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5bXCJhdXRvUmV2ZXJzZVwiLFwiZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZFwiLFwiZm9jdXNhYmxlXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDIsITEsYSxudWxsLCExLCExKX0pO1wiYWxsb3dGdWxsU2NyZWVuIGFzeW5jIGF1dG9Gb2N1cyBhdXRvUGxheSBjb250cm9scyBkZWZhdWx0IGRlZmVyIGRpc2FibGVkIGRpc2FibGVQaWN0dXJlSW5QaWN0dXJlIGRpc2FibGVSZW1vdGVQbGF5YmFjayBmb3JtTm9WYWxpZGF0ZSBoaWRkZW4gbG9vcCBub01vZHVsZSBub1ZhbGlkYXRlIG9wZW4gcGxheXNJbmxpbmUgcmVhZE9ubHkgcmVxdWlyZWQgcmV2ZXJzZWQgc2NvcGVkIHNlYW1sZXNzIGl0ZW1TY29wZVwiLnNwbGl0KFwiIFwiKS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwzLCExLGEudG9Mb3dlckNhc2UoKSxudWxsLCExLCExKX0pO1xuW1wiY2hlY2tlZFwiLFwibXVsdGlwbGVcIixcIm11dGVkXCIsXCJzZWxlY3RlZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSwzLCEwLGEsbnVsbCwhMSwhMSl9KTtbXCJjYXB0dXJlXCIsXCJkb3dubG9hZFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0RbYV09bmV3IEIoYSw0LCExLGEsbnVsbCwhMSwhMSl9KTtbXCJjb2xzXCIsXCJyb3dzXCIsXCJzaXplXCIsXCJzcGFuXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDYsITEsYSxudWxsLCExLCExKX0pO1tcInJvd1NwYW5cIixcInN0YXJ0XCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDUsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7dmFyIG9hPS9bXFwtOl0oW2Etel0pL2c7ZnVuY3Rpb24gcGEoYSl7cmV0dXJuIGFbMV0udG9VcHBlckNhc2UoKX1cblwiYWNjZW50LWhlaWdodCBhbGlnbm1lbnQtYmFzZWxpbmUgYXJhYmljLWZvcm0gYmFzZWxpbmUtc2hpZnQgY2FwLWhlaWdodCBjbGlwLXBhdGggY2xpcC1ydWxlIGNvbG9yLWludGVycG9sYXRpb24gY29sb3ItaW50ZXJwb2xhdGlvbi1maWx0ZXJzIGNvbG9yLXByb2ZpbGUgY29sb3ItcmVuZGVyaW5nIGRvbWluYW50LWJhc2VsaW5lIGVuYWJsZS1iYWNrZ3JvdW5kIGZpbGwtb3BhY2l0eSBmaWxsLXJ1bGUgZmxvb2QtY29sb3IgZmxvb2Qtb3BhY2l0eSBmb250LWZhbWlseSBmb250LXNpemUgZm9udC1zaXplLWFkanVzdCBmb250LXN0cmV0Y2ggZm9udC1zdHlsZSBmb250LXZhcmlhbnQgZm9udC13ZWlnaHQgZ2x5cGgtbmFtZSBnbHlwaC1vcmllbnRhdGlvbi1ob3Jpem9udGFsIGdseXBoLW9yaWVudGF0aW9uLXZlcnRpY2FsIGhvcml6LWFkdi14IGhvcml6LW9yaWdpbi14IGltYWdlLXJlbmRlcmluZyBsZXR0ZXItc3BhY2luZyBsaWdodGluZy1jb2xvciBtYXJrZXItZW5kIG1hcmtlci1taWQgbWFya2VyLXN0YXJ0IG92ZXJsaW5lLXBvc2l0aW9uIG92ZXJsaW5lLXRoaWNrbmVzcyBwYWludC1vcmRlciBwYW5vc2UtMSBwb2ludGVyLWV2ZW50cyByZW5kZXJpbmctaW50ZW50IHNoYXBlLXJlbmRlcmluZyBzdG9wLWNvbG9yIHN0b3Atb3BhY2l0eSBzdHJpa2V0aHJvdWdoLXBvc2l0aW9uIHN0cmlrZXRocm91Z2gtdGhpY2tuZXNzIHN0cm9rZS1kYXNoYXJyYXkgc3Ryb2tlLWRhc2hvZmZzZXQgc3Ryb2tlLWxpbmVjYXAgc3Ryb2tlLWxpbmVqb2luIHN0cm9rZS1taXRlcmxpbWl0IHN0cm9rZS1vcGFjaXR5IHN0cm9rZS13aWR0aCB0ZXh0LWFuY2hvciB0ZXh0LWRlY29yYXRpb24gdGV4dC1yZW5kZXJpbmcgdW5kZXJsaW5lLXBvc2l0aW9uIHVuZGVybGluZS10aGlja25lc3MgdW5pY29kZS1iaWRpIHVuaWNvZGUtcmFuZ2UgdW5pdHMtcGVyLWVtIHYtYWxwaGFiZXRpYyB2LWhhbmdpbmcgdi1pZGVvZ3JhcGhpYyB2LW1hdGhlbWF0aWNhbCB2ZWN0b3ItZWZmZWN0IHZlcnQtYWR2LXkgdmVydC1vcmlnaW4teCB2ZXJ0LW9yaWdpbi15IHdvcmQtc3BhY2luZyB3cml0aW5nLW1vZGUgeG1sbnM6eGxpbmsgeC1oZWlnaHRcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXt2YXIgYj1hLnJlcGxhY2Uob2EsXG5wYSk7RFtiXT1uZXcgQihiLDEsITEsYSxudWxsLCExLCExKX0pO1wieGxpbms6YWN0dWF0ZSB4bGluazphcmNyb2xlIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLHBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiLCExLCExKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKG9hLHBhKTtEW2JdPW5ldyBCKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIsITEsITEpfSk7W1widGFiSW5kZXhcIixcImNyb3NzT3JpZ2luXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITEsITEpfSk7XG5ELnhsaW5rSHJlZj1uZXcgQihcInhsaW5rSHJlZlwiLDEsITEsXCJ4bGluazpocmVmXCIsXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rXCIsITAsITEpO1tcInNyY1wiLFwiaHJlZlwiLFwiYWN0aW9uXCIsXCJmb3JtQWN0aW9uXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7RFthXT1uZXcgQihhLDEsITEsYS50b0xvd2VyQ2FzZSgpLG51bGwsITAsITApfSk7XG5mdW5jdGlvbiBxYShhLGIsYyxkKXt2YXIgZT1ELmhhc093blByb3BlcnR5KGIpP0RbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChuYShiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/bGEoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbnZhciByYT1hYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCxzYT02MDEwMyx0YT02MDEwNix1YT02MDEwNyx3YT02MDEwOCx4YT02MDExNCx5YT02MDEwOSx6YT02MDExMCxBYT02MDExMixCYT02MDExMyxDYT02MDEyMCxEYT02MDExNSxFYT02MDExNixGYT02MDEyMSxHYT02MDEyOCxIYT02MDEyOSxJYT02MDEzMCxKYT02MDEzMTtcbmlmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3Ipe3ZhciBFPVN5bWJvbC5mb3I7c2E9RShcInJlYWN0LmVsZW1lbnRcIik7dGE9RShcInJlYWN0LnBvcnRhbFwiKTt1YT1FKFwicmVhY3QuZnJhZ21lbnRcIik7d2E9RShcInJlYWN0LnN0cmljdF9tb2RlXCIpO3hhPUUoXCJyZWFjdC5wcm9maWxlclwiKTt5YT1FKFwicmVhY3QucHJvdmlkZXJcIik7emE9RShcInJlYWN0LmNvbnRleHRcIik7QWE9RShcInJlYWN0LmZvcndhcmRfcmVmXCIpO0JhPUUoXCJyZWFjdC5zdXNwZW5zZVwiKTtDYT1FKFwicmVhY3Quc3VzcGVuc2VfbGlzdFwiKTtEYT1FKFwicmVhY3QubWVtb1wiKTtFYT1FKFwicmVhY3QubGF6eVwiKTtGYT1FKFwicmVhY3QuYmxvY2tcIik7RShcInJlYWN0LnNjb3BlXCIpO0dhPUUoXCJyZWFjdC5vcGFxdWUuaWRcIik7SGE9RShcInJlYWN0LmRlYnVnX3RyYWNlX21vZGVcIik7SWE9RShcInJlYWN0Lm9mZnNjcmVlblwiKTtKYT1FKFwicmVhY3QubGVnYWN5X2hpZGRlblwiKX1cbnZhciBLYT1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gTGEoYSl7aWYobnVsbD09PWF8fFwib2JqZWN0XCIhPT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPUthJiZhW0thXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfXZhciBNYTtmdW5jdGlvbiBOYShhKXtpZih2b2lkIDA9PT1NYSl0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2goYyl7dmFyIGI9Yy5zdGFjay50cmltKCkubWF0Y2goL1xcbiggKihhdCApPykvKTtNYT1iJiZiWzFdfHxcIlwifXJldHVyblwiXFxuXCIrTWErYX12YXIgT2E9ITE7XG5mdW5jdGlvbiBQYShhLGIpe2lmKCFhfHxPYSlyZXR1cm5cIlwiO09hPSEwO3ZhciBjPUVycm9yLnByZXBhcmVTdGFja1RyYWNlO0Vycm9yLnByZXBhcmVTdGFja1RyYWNlPXZvaWQgMDt0cnl7aWYoYilpZihiPWZ1bmN0aW9uKCl7dGhyb3cgRXJyb3IoKTt9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShiLnByb3RvdHlwZSxcInByb3BzXCIse3NldDpmdW5jdGlvbigpe3Rocm93IEVycm9yKCk7fX0pLFwib2JqZWN0XCI9PT10eXBlb2YgUmVmbGVjdCYmUmVmbGVjdC5jb25zdHJ1Y3Qpe3RyeXtSZWZsZWN0LmNvbnN0cnVjdChiLFtdKX1jYXRjaChrKXt2YXIgZD1rfVJlZmxlY3QuY29uc3RydWN0KGEsW10sYil9ZWxzZXt0cnl7Yi5jYWxsKCl9Y2F0Y2goayl7ZD1rfWEuY2FsbChiLnByb3RvdHlwZSl9ZWxzZXt0cnl7dGhyb3cgRXJyb3IoKTt9Y2F0Y2goayl7ZD1rfWEoKX19Y2F0Y2goayl7aWYoayYmZCYmXCJzdHJpbmdcIj09PXR5cGVvZiBrLnN0YWNrKXtmb3IodmFyIGU9ay5zdGFjay5zcGxpdChcIlxcblwiKSxcbmY9ZC5zdGFjay5zcGxpdChcIlxcblwiKSxnPWUubGVuZ3RoLTEsaD1mLmxlbmd0aC0xOzE8PWcmJjA8PWgmJmVbZ10hPT1mW2hdOyloLS07Zm9yKDsxPD1nJiYwPD1oO2ctLSxoLS0paWYoZVtnXSE9PWZbaF0pe2lmKDEhPT1nfHwxIT09aCl7ZG8gaWYoZy0tLGgtLSwwPmh8fGVbZ10hPT1mW2hdKXJldHVyblwiXFxuXCIrZVtnXS5yZXBsYWNlKFwiIGF0IG5ldyBcIixcIiBhdCBcIik7d2hpbGUoMTw9ZyYmMDw9aCl9YnJlYWt9fX1maW5hbGx5e09hPSExLEVycm9yLnByZXBhcmVTdGFja1RyYWNlPWN9cmV0dXJuKGE9YT9hLmRpc3BsYXlOYW1lfHxhLm5hbWU6XCJcIik/TmEoYSk6XCJcIn1cbmZ1bmN0aW9uIFFhKGEpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnJldHVybiBOYShhLnR5cGUpO2Nhc2UgMTY6cmV0dXJuIE5hKFwiTGF6eVwiKTtjYXNlIDEzOnJldHVybiBOYShcIlN1c3BlbnNlXCIpO2Nhc2UgMTk6cmV0dXJuIE5hKFwiU3VzcGVuc2VMaXN0XCIpO2Nhc2UgMDpjYXNlIDI6Y2FzZSAxNTpyZXR1cm4gYT1QYShhLnR5cGUsITEpLGE7Y2FzZSAxMTpyZXR1cm4gYT1QYShhLnR5cGUucmVuZGVyLCExKSxhO2Nhc2UgMjI6cmV0dXJuIGE9UGEoYS50eXBlLl9yZW5kZXIsITEpLGE7Y2FzZSAxOnJldHVybiBhPVBhKGEudHlwZSwhMCksYTtkZWZhdWx0OnJldHVyblwiXCJ9fVxuZnVuY3Rpb24gUmEoYSl7aWYobnVsbD09YSlyZXR1cm4gbnVsbDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYSlyZXR1cm4gYS5kaXNwbGF5TmFtZXx8YS5uYW1lfHxudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlyZXR1cm4gYTtzd2l0Y2goYSl7Y2FzZSB1YTpyZXR1cm5cIkZyYWdtZW50XCI7Y2FzZSB0YTpyZXR1cm5cIlBvcnRhbFwiO2Nhc2UgeGE6cmV0dXJuXCJQcm9maWxlclwiO2Nhc2Ugd2E6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBCYTpyZXR1cm5cIlN1c3BlbnNlXCI7Y2FzZSBDYTpyZXR1cm5cIlN1c3BlbnNlTGlzdFwifWlmKFwib2JqZWN0XCI9PT10eXBlb2YgYSlzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSB6YTpyZXR1cm4oYS5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLkNvbnN1bWVyXCI7Y2FzZSB5YTpyZXR1cm4oYS5fY29udGV4dC5kaXNwbGF5TmFtZXx8XCJDb250ZXh0XCIpK1wiLlByb3ZpZGVyXCI7Y2FzZSBBYTp2YXIgYj1hLnJlbmRlcjtiPWIuZGlzcGxheU5hbWV8fGIubmFtZXx8XCJcIjtcbnJldHVybiBhLmRpc3BsYXlOYW1lfHwoXCJcIiE9PWI/XCJGb3J3YXJkUmVmKFwiK2IrXCIpXCI6XCJGb3J3YXJkUmVmXCIpO2Nhc2UgRGE6cmV0dXJuIFJhKGEudHlwZSk7Y2FzZSBGYTpyZXR1cm4gUmEoYS5fcmVuZGVyKTtjYXNlIEVhOmI9YS5fcGF5bG9hZDthPWEuX2luaXQ7dHJ5e3JldHVybiBSYShhKGIpKX1jYXRjaChjKXt9fXJldHVybiBudWxsfWZ1bmN0aW9uIFNhKGEpe3N3aXRjaCh0eXBlb2YgYSl7Y2FzZSBcImJvb2xlYW5cIjpjYXNlIFwibnVtYmVyXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJzdHJpbmdcIjpjYXNlIFwidW5kZWZpbmVkXCI6cmV0dXJuIGE7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiBUYShhKXt2YXIgYj1hLnR5cGU7cmV0dXJuKGE9YS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWEudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWJ8fFwicmFkaW9cIj09PWIpfVxuZnVuY3Rpb24gVWEoYSl7dmFyIGI9VGEoYSk/XCJjaGVja2VkXCI6XCJ2YWx1ZVwiLGM9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihhLmNvbnN0cnVjdG9yLnByb3RvdHlwZSxiKSxkPVwiXCIrYVtiXTtpZighYS5oYXNPd25Qcm9wZXJ0eShiKSYmXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBjJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5nZXQmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnNldCl7dmFyIGU9Yy5nZXQsZj1jLnNldDtPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxiLHtjb25maWd1cmFibGU6ITAsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGUuY2FsbCh0aGlzKX0sc2V0OmZ1bmN0aW9uKGEpe2Q9XCJcIithO2YuY2FsbCh0aGlzLGEpfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2VudW1lcmFibGU6Yy5lbnVtZXJhYmxlfSk7cmV0dXJue2dldFZhbHVlOmZ1bmN0aW9uKCl7cmV0dXJuIGR9LHNldFZhbHVlOmZ1bmN0aW9uKGEpe2Q9XCJcIithfSxzdG9wVHJhY2tpbmc6ZnVuY3Rpb24oKXthLl92YWx1ZVRyYWNrZXI9XG5udWxsO2RlbGV0ZSBhW2JdfX19fWZ1bmN0aW9uIFZhKGEpe2EuX3ZhbHVlVHJhY2tlcnx8KGEuX3ZhbHVlVHJhY2tlcj1VYShhKSl9ZnVuY3Rpb24gV2EoYSl7aWYoIWEpcmV0dXJuITE7dmFyIGI9YS5fdmFsdWVUcmFja2VyO2lmKCFiKXJldHVybiEwO3ZhciBjPWIuZ2V0VmFsdWUoKTt2YXIgZD1cIlwiO2EmJihkPVRhKGEpP2EuY2hlY2tlZD9cInRydWVcIjpcImZhbHNlXCI6YS52YWx1ZSk7YT1kO3JldHVybiBhIT09Yz8oYi5zZXRWYWx1ZShhKSwhMCk6ITF9ZnVuY3Rpb24gWGEoYSl7YT1hfHwoXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBkb2N1bWVudD9kb2N1bWVudDp2b2lkIDApO2lmKFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDt0cnl7cmV0dXJuIGEuYWN0aXZlRWxlbWVudHx8YS5ib2R5fWNhdGNoKGIpe3JldHVybiBhLmJvZHl9fVxuZnVuY3Rpb24gWWEoYSxiKXt2YXIgYz1iLmNoZWNrZWQ7cmV0dXJuIG0oe30sYix7ZGVmYXVsdENoZWNrZWQ6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsdmFsdWU6dm9pZCAwLGNoZWNrZWQ6bnVsbCE9Yz9jOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZH0pfWZ1bmN0aW9uIFphKGEsYil7dmFyIGM9bnVsbD09Yi5kZWZhdWx0VmFsdWU/XCJcIjpiLmRlZmF1bHRWYWx1ZSxkPW51bGwhPWIuY2hlY2tlZD9iLmNoZWNrZWQ6Yi5kZWZhdWx0Q2hlY2tlZDtjPVNhKG51bGwhPWIudmFsdWU/Yi52YWx1ZTpjKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxDaGVja2VkOmQsaW5pdGlhbFZhbHVlOmMsY29udHJvbGxlZDpcImNoZWNrYm94XCI9PT1iLnR5cGV8fFwicmFkaW9cIj09PWIudHlwZT9udWxsIT1iLmNoZWNrZWQ6bnVsbCE9Yi52YWx1ZX19ZnVuY3Rpb24gJGEoYSxiKXtiPWIuY2hlY2tlZDtudWxsIT1iJiZxYShhLFwiY2hlY2tlZFwiLGIsITEpfVxuZnVuY3Rpb24gYWIoYSxiKXskYShhLGIpO3ZhciBjPVNhKGIudmFsdWUpLGQ9Yi50eXBlO2lmKG51bGwhPWMpaWYoXCJudW1iZXJcIj09PWQpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7ZWxzZSBpZihcInN1Ym1pdFwiPT09ZHx8XCJyZXNldFwiPT09ZCl7YS5yZW1vdmVBdHRyaWJ1dGUoXCJ2YWx1ZVwiKTtyZXR1cm59Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP2JiKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJmJiKGEsYi50eXBlLFNhKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gY2IoYSxiLGMpe2lmKGIuaGFzT3duUHJvcGVydHkoXCJ2YWx1ZVwiKXx8Yi5oYXNPd25Qcm9wZXJ0eShcImRlZmF1bHRWYWx1ZVwiKSl7dmFyIGQ9Yi50eXBlO2lmKCEoXCJzdWJtaXRcIiE9PWQmJlwicmVzZXRcIiE9PWR8fHZvaWQgMCE9PWIudmFsdWUmJm51bGwhPT1iLnZhbHVlKSlyZXR1cm47Yj1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU7Y3x8Yj09PWEudmFsdWV8fChhLnZhbHVlPWIpO2EuZGVmYXVsdFZhbHVlPWJ9Yz1hLm5hbWU7XCJcIiE9PWMmJihhLm5hbWU9XCJcIik7YS5kZWZhdWx0Q2hlY2tlZD0hIWEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsQ2hlY2tlZDtcIlwiIT09YyYmKGEubmFtZT1jKX1cbmZ1bmN0aW9uIGJiKGEsYixjKXtpZihcIm51bWJlclwiIT09Ynx8WGEoYS5vd25lckRvY3VtZW50KSE9PWEpbnVsbD09Yz9hLmRlZmF1bHRWYWx1ZT1cIlwiK2EuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU6YS5kZWZhdWx0VmFsdWUhPT1cIlwiK2MmJihhLmRlZmF1bHRWYWx1ZT1cIlwiK2MpfWZ1bmN0aW9uIGRiKGEpe3ZhciBiPVwiXCI7YWEuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGwhPWEmJihiKz1hKX0pO3JldHVybiBifWZ1bmN0aW9uIGViKGEsYil7YT1tKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9ZGIoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfVxuZnVuY3Rpb24gZmIoYSxiLGMsZCl7YT1hLm9wdGlvbnM7aWYoYil7Yj17fTtmb3IodmFyIGU9MDtlPGMubGVuZ3RoO2UrKyliW1wiJFwiK2NbZV1dPSEwO2ZvcihjPTA7YzxhLmxlbmd0aDtjKyspZT1iLmhhc093blByb3BlcnR5KFwiJFwiK2FbY10udmFsdWUpLGFbY10uc2VsZWN0ZWQhPT1lJiYoYVtjXS5zZWxlY3RlZD1lKSxlJiZkJiYoYVtjXS5kZWZhdWx0U2VsZWN0ZWQ9ITApfWVsc2V7Yz1cIlwiK1NhKGMpO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiBnYihhLGIpe2lmKG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpdGhyb3cgRXJyb3IoeSg5MSkpO3JldHVybiBtKHt9LGIse3ZhbHVlOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLGNoaWxkcmVuOlwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZX0pfWZ1bmN0aW9uIGhiKGEsYil7dmFyIGM9Yi52YWx1ZTtpZihudWxsPT1jKXtjPWIuY2hpbGRyZW47Yj1iLmRlZmF1bHRWYWx1ZTtpZihudWxsIT1jKXtpZihudWxsIT1iKXRocm93IEVycm9yKHkoOTIpKTtpZihBcnJheS5pc0FycmF5KGMpKXtpZighKDE+PWMubGVuZ3RoKSl0aHJvdyBFcnJvcih5KDkzKSk7Yz1jWzBdfWI9Y31udWxsPT1iJiYoYj1cIlwiKTtjPWJ9YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6U2EoYyl9fVxuZnVuY3Rpb24gaWIoYSxiKXt2YXIgYz1TYShiLnZhbHVlKSxkPVNhKGIuZGVmYXVsdFZhbHVlKTtudWxsIT1jJiYoYz1cIlwiK2MsYyE9PWEudmFsdWUmJihhLnZhbHVlPWMpLG51bGw9PWIuZGVmYXVsdFZhbHVlJiZhLmRlZmF1bHRWYWx1ZSE9PWMmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9ZCYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrZCl9ZnVuY3Rpb24gamIoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmXCJcIiE9PWImJm51bGwhPT1iJiYoYS52YWx1ZT1iKX12YXIga2I9e2h0bWw6XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCIsbWF0aG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OC9NYXRoL01hdGhNTFwiLHN2ZzpcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJ9O1xuZnVuY3Rpb24gbGIoYSl7c3dpdGNoKGEpe2Nhc2UgXCJzdmdcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI7Y2FzZSBcIm1hdGhcIjpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIjtkZWZhdWx0OnJldHVyblwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwifX1mdW5jdGlvbiBtYihhLGIpe3JldHVybiBudWxsPT1hfHxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIj09PWE/bGIoYik6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiPT09YSYmXCJmb3JlaWduT2JqZWN0XCI9PT1iP1wiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiOmF9XG52YXIgbmIsb2I9ZnVuY3Rpb24oYSl7cmV0dXJuXCJ1bmRlZmluZWRcIiE9PXR5cGVvZiBNU0FwcCYmTVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24/ZnVuY3Rpb24oYixjLGQsZSl7TVNBcHAuZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24oZnVuY3Rpb24oKXtyZXR1cm4gYShiLGMsZCxlKX0pfTphfShmdW5jdGlvbihhLGIpe2lmKGEubmFtZXNwYWNlVVJJIT09a2Iuc3ZnfHxcImlubmVySFRNTFwiaW4gYSlhLmlubmVySFRNTD1iO2Vsc2V7bmI9bmJ8fGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7bmIuaW5uZXJIVE1MPVwiPHN2Zz5cIitiLnZhbHVlT2YoKS50b1N0cmluZygpK1wiPC9zdmc+XCI7Zm9yKGI9bmIuZmlyc3RDaGlsZDthLmZpcnN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYS5maXJzdENoaWxkKTtmb3IoO2IuZmlyc3RDaGlsZDspYS5hcHBlbmRDaGlsZChiLmZpcnN0Q2hpbGQpfX0pO1xuZnVuY3Rpb24gcGIoYSxiKXtpZihiKXt2YXIgYz1hLmZpcnN0Q2hpbGQ7aWYoYyYmYz09PWEubGFzdENoaWxkJiYzPT09Yy5ub2RlVHlwZSl7Yy5ub2RlVmFsdWU9YjtyZXR1cm59fWEudGV4dENvbnRlbnQ9Yn1cbnZhciBxYj17YW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6ITAsYm9yZGVySW1hZ2VPdXRzZXQ6ITAsYm9yZGVySW1hZ2VTbGljZTohMCxib3JkZXJJbWFnZVdpZHRoOiEwLGJveEZsZXg6ITAsYm94RmxleEdyb3VwOiEwLGJveE9yZGluYWxHcm91cDohMCxjb2x1bW5Db3VudDohMCxjb2x1bW5zOiEwLGZsZXg6ITAsZmxleEdyb3c6ITAsZmxleFBvc2l0aXZlOiEwLGZsZXhTaHJpbms6ITAsZmxleE5lZ2F0aXZlOiEwLGZsZXhPcmRlcjohMCxncmlkQXJlYTohMCxncmlkUm93OiEwLGdyaWRSb3dFbmQ6ITAsZ3JpZFJvd1NwYW46ITAsZ3JpZFJvd1N0YXJ0OiEwLGdyaWRDb2x1bW46ITAsZ3JpZENvbHVtbkVuZDohMCxncmlkQ29sdW1uU3BhbjohMCxncmlkQ29sdW1uU3RhcnQ6ITAsZm9udFdlaWdodDohMCxsaW5lQ2xhbXA6ITAsbGluZUhlaWdodDohMCxvcGFjaXR5OiEwLG9yZGVyOiEwLG9ycGhhbnM6ITAsdGFiU2l6ZTohMCx3aWRvd3M6ITAsekluZGV4OiEwLHpvb206ITAsZmlsbE9wYWNpdHk6ITAsXG5mbG9vZE9wYWNpdHk6ITAsc3RvcE9wYWNpdHk6ITAsc3Ryb2tlRGFzaGFycmF5OiEwLHN0cm9rZURhc2hvZmZzZXQ6ITAsc3Ryb2tlTWl0ZXJsaW1pdDohMCxzdHJva2VPcGFjaXR5OiEwLHN0cm9rZVdpZHRoOiEwfSxyYj1bXCJXZWJraXRcIixcIm1zXCIsXCJNb3pcIixcIk9cIl07T2JqZWN0LmtleXMocWIpLmZvckVhY2goZnVuY3Rpb24oYSl7cmIuZm9yRWFjaChmdW5jdGlvbihiKXtiPWIrYS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSthLnN1YnN0cmluZygxKTtxYltiXT1xYlthXX0pfSk7ZnVuY3Rpb24gc2IoYSxiLGMpe3JldHVybiBudWxsPT1ifHxcImJvb2xlYW5cIj09PXR5cGVvZiBifHxcIlwiPT09Yj9cIlwiOmN8fFwibnVtYmVyXCIhPT10eXBlb2YgYnx8MD09PWJ8fHFiLmhhc093blByb3BlcnR5KGEpJiZxYlthXT8oXCJcIitiKS50cmltKCk6YitcInB4XCJ9XG5mdW5jdGlvbiB0YihhLGIpe2E9YS5zdHlsZTtmb3IodmFyIGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpKXt2YXIgZD0wPT09Yy5pbmRleE9mKFwiLS1cIiksZT1zYihjLGJbY10sZCk7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciB1Yj1tKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gdmIoYSxiKXtpZihiKXtpZih1YlthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHkoMTM3LGEpKTtpZihudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MKXtpZihudWxsIT1iLmNoaWxkcmVuKXRocm93IEVycm9yKHkoNjApKTtpZighKFwib2JqZWN0XCI9PT10eXBlb2YgYi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJfX2h0bWxcImluIGIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwpKXRocm93IEVycm9yKHkoNjEpKTt9aWYobnVsbCE9Yi5zdHlsZSYmXCJvYmplY3RcIiE9PXR5cGVvZiBiLnN0eWxlKXRocm93IEVycm9yKHkoNjIpKTt9fVxuZnVuY3Rpb24gd2IoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fWZ1bmN0aW9uIHhiKGEpe2E9YS50YXJnZXR8fGEuc3JjRWxlbWVudHx8d2luZG93O2EuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQmJihhPWEuY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQpO3JldHVybiAzPT09YS5ub2RlVHlwZT9hLnBhcmVudE5vZGU6YX12YXIgeWI9bnVsbCx6Yj1udWxsLEFiPW51bGw7XG5mdW5jdGlvbiBCYihhKXtpZihhPUNiKGEpKXtpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgeWIpdGhyb3cgRXJyb3IoeSgyODApKTt2YXIgYj1hLnN0YXRlTm9kZTtiJiYoYj1EYihiKSx5YihhLnN0YXRlTm9kZSxhLnR5cGUsYikpfX1mdW5jdGlvbiBFYihhKXt6Yj9BYj9BYi5wdXNoKGEpOkFiPVthXTp6Yj1hfWZ1bmN0aW9uIEZiKCl7aWYoemIpe3ZhciBhPXpiLGI9QWI7QWI9emI9bnVsbDtCYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspQmIoYlthXSl9fWZ1bmN0aW9uIEdiKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gSGIoYSxiLGMsZCxlKXtyZXR1cm4gYShiLGMsZCxlKX1mdW5jdGlvbiBJYigpe312YXIgSmI9R2IsS2I9ITEsTGI9ITE7ZnVuY3Rpb24gTWIoKXtpZihudWxsIT09emJ8fG51bGwhPT1BYilJYigpLEZiKCl9XG5mdW5jdGlvbiBOYihhLGIsYyl7aWYoTGIpcmV0dXJuIGEoYixjKTtMYj0hMDt0cnl7cmV0dXJuIEpiKGEsYixjKX1maW5hbGx5e0xiPSExLE1iKCl9fVxuZnVuY3Rpb24gT2IoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZihudWxsPT09YylyZXR1cm4gbnVsbDt2YXIgZD1EYihjKTtpZihudWxsPT09ZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VFbnRlclwiOihkPSFkLmRpc2FibGVkKXx8KGE9YS50eXBlLGQ9IShcImJ1dHRvblwiPT09YXx8XCJpbnB1dFwiPT09YXx8XCJzZWxlY3RcIj09PWF8fFwidGV4dGFyZWFcIj09PWEpKTthPSFkO2JyZWFrIGE7ZGVmYXVsdDphPSExfWlmKGEpcmV0dXJuIG51bGw7aWYoYyYmXCJmdW5jdGlvblwiIT09XG50eXBlb2YgYyl0aHJvdyBFcnJvcih5KDIzMSxiLHR5cGVvZiBjKSk7cmV0dXJuIGN9dmFyIFBiPSExO2lmKGZhKXRyeXt2YXIgUWI9e307T2JqZWN0LmRlZmluZVByb3BlcnR5KFFiLFwicGFzc2l2ZVwiLHtnZXQ6ZnVuY3Rpb24oKXtQYj0hMH19KTt3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInRlc3RcIixRYixRYik7d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJ0ZXN0XCIsUWIsUWIpfWNhdGNoKGEpe1BiPSExfWZ1bmN0aW9uIFJiKGEsYixjLGQsZSxmLGcsaCxrKXt2YXIgbD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsMyk7dHJ5e2IuYXBwbHkoYyxsKX1jYXRjaChuKXt0aGlzLm9uRXJyb3Iobil9fXZhciBTYj0hMSxUYj1udWxsLFViPSExLFZiPW51bGwsV2I9e29uRXJyb3I6ZnVuY3Rpb24oYSl7U2I9ITA7VGI9YX19O2Z1bmN0aW9uIFhiKGEsYixjLGQsZSxmLGcsaCxrKXtTYj0hMTtUYj1udWxsO1JiLmFwcGx5KFdiLGFyZ3VtZW50cyl9XG5mdW5jdGlvbiBZYihhLGIsYyxkLGUsZixnLGgsayl7WGIuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKFNiKXtpZihTYil7dmFyIGw9VGI7U2I9ITE7VGI9bnVsbH1lbHNlIHRocm93IEVycm9yKHkoMTk4KSk7VWJ8fChVYj0hMCxWYj1sKX19ZnVuY3Rpb24gWmIoYSl7dmFyIGI9YSxjPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2E9YjtkbyBiPWEsMCE9PShiLmZsYWdzJjEwMjYpJiYoYz1iLnJldHVybiksYT1iLnJldHVybjt3aGlsZShhKX1yZXR1cm4gMz09PWIudGFnP2M6bnVsbH1mdW5jdGlvbiAkYihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1hLm1lbW9pemVkU3RhdGU7bnVsbD09PWImJihhPWEuYWx0ZXJuYXRlLG51bGwhPT1hJiYoYj1hLm1lbW9pemVkU3RhdGUpKTtpZihudWxsIT09YilyZXR1cm4gYi5kZWh5ZHJhdGVkfXJldHVybiBudWxsfWZ1bmN0aW9uIGFjKGEpe2lmKFpiKGEpIT09YSl0aHJvdyBFcnJvcih5KDE4OCkpO31cbmZ1bmN0aW9uIGJjKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXtiPVpiKGEpO2lmKG51bGw9PT1iKXRocm93IEVycm9yKHkoMTg4KSk7cmV0dXJuIGIhPT1hP251bGw6YX1mb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm47aWYobnVsbD09PWUpYnJlYWs7dmFyIGY9ZS5hbHRlcm5hdGU7aWYobnVsbD09PWYpe2Q9ZS5yZXR1cm47aWYobnVsbCE9PWQpe2M9ZDtjb250aW51ZX1icmVha31pZihlLmNoaWxkPT09Zi5jaGlsZCl7Zm9yKGY9ZS5jaGlsZDtmOyl7aWYoZj09PWMpcmV0dXJuIGFjKGUpLGE7aWYoZj09PWQpcmV0dXJuIGFjKGUpLGI7Zj1mLnNpYmxpbmd9dGhyb3cgRXJyb3IoeSgxODgpKTt9aWYoYy5yZXR1cm4hPT1kLnJldHVybiljPWUsZD1mO2Vsc2V7Zm9yKHZhciBnPSExLGg9ZS5jaGlsZDtoOyl7aWYoaD09PWMpe2c9ITA7Yz1lO2Q9ZjticmVha31pZihoPT09ZCl7Zz0hMDtkPWU7Yz1mO2JyZWFrfWg9aC5zaWJsaW5nfWlmKCFnKXtmb3IoaD1mLmNoaWxkO2g7KXtpZihoPT09XG5jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31pZighZyl0aHJvdyBFcnJvcih5KDE4OSkpO319aWYoYy5hbHRlcm5hdGUhPT1kKXRocm93IEVycm9yKHkoMTkwKSk7fWlmKDMhPT1jLnRhZyl0aHJvdyBFcnJvcih5KDE4OCkpO3JldHVybiBjLnN0YXRlTm9kZS5jdXJyZW50PT09Yz9hOmJ9ZnVuY3Rpb24gY2MoYSl7YT1iYyhhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkKWIuY2hpbGQucmV0dXJuPWIsYj1iLmNoaWxkO2Vsc2V7aWYoYj09PWEpYnJlYWs7Zm9yKDshYi5zaWJsaW5nOyl7aWYoIWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1yZXR1cm4gbnVsbH1cbmZ1bmN0aW9uIGRjKGEsYil7Zm9yKHZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1iOyl7aWYoYj09PWF8fGI9PT1jKXJldHVybiEwO2I9Yi5yZXR1cm59cmV0dXJuITF9dmFyIGVjLGZjLGdjLGhjLGljPSExLGpjPVtdLGtjPW51bGwsbGM9bnVsbCxtYz1udWxsLG5jPW5ldyBNYXAsb2M9bmV3IE1hcCxwYz1bXSxxYz1cIm1vdXNlZG93biBtb3VzZXVwIHRvdWNoY2FuY2VsIHRvdWNoZW5kIHRvdWNoc3RhcnQgYXV4Y2xpY2sgZGJsY2xpY2sgcG9pbnRlcmNhbmNlbCBwb2ludGVyZG93biBwb2ludGVydXAgZHJhZ2VuZCBkcmFnc3RhcnQgZHJvcCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnN0YXJ0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgaW5wdXQgdGV4dElucHV0IGNvcHkgY3V0IHBhc3RlIGNsaWNrIGNoYW5nZSBjb250ZXh0bWVudSByZXNldCBzdWJtaXRcIi5zcGxpdChcIiBcIik7XG5mdW5jdGlvbiByYyhhLGIsYyxkLGUpe3JldHVybntibG9ja2VkT246YSxkb21FdmVudE5hbWU6YixldmVudFN5c3RlbUZsYWdzOmN8MTYsbmF0aXZlRXZlbnQ6ZSx0YXJnZXRDb250YWluZXJzOltkXX19ZnVuY3Rpb24gc2MoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjpjYXNlIFwiZm9jdXNvdXRcIjprYz1udWxsO2JyZWFrO2Nhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6bGM9bnVsbDticmVhaztjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcIm1vdXNlb3V0XCI6bWM9bnVsbDticmVhaztjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcm91dFwiOm5jLmRlbGV0ZShiLnBvaW50ZXJJZCk7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOm9jLmRlbGV0ZShiLnBvaW50ZXJJZCl9fVxuZnVuY3Rpb24gdGMoYSxiLGMsZCxlLGYpe2lmKG51bGw9PT1hfHxhLm5hdGl2ZUV2ZW50IT09ZilyZXR1cm4gYT1yYyhiLGMsZCxlLGYpLG51bGwhPT1iJiYoYj1DYihiKSxudWxsIT09YiYmZmMoYikpLGE7YS5ldmVudFN5c3RlbUZsYWdzfD1kO2I9YS50YXJnZXRDb250YWluZXJzO251bGwhPT1lJiYtMT09PWIuaW5kZXhPZihlKSYmYi5wdXNoKGUpO3JldHVybiBhfVxuZnVuY3Rpb24gdWMoYSxiLGMsZCxlKXtzd2l0Y2goYil7Y2FzZSBcImZvY3VzaW5cIjpyZXR1cm4ga2M9dGMoa2MsYSxiLGMsZCxlKSwhMDtjYXNlIFwiZHJhZ2VudGVyXCI6cmV0dXJuIGxjPXRjKGxjLGEsYixjLGQsZSksITA7Y2FzZSBcIm1vdXNlb3ZlclwiOnJldHVybiBtYz10YyhtYyxhLGIsYyxkLGUpLCEwO2Nhc2UgXCJwb2ludGVyb3ZlclwiOnZhciBmPWUucG9pbnRlcklkO25jLnNldChmLHRjKG5jLmdldChmKXx8bnVsbCxhLGIsYyxkLGUpKTtyZXR1cm4hMDtjYXNlIFwiZ290cG9pbnRlcmNhcHR1cmVcIjpyZXR1cm4gZj1lLnBvaW50ZXJJZCxvYy5zZXQoZix0YyhvYy5nZXQoZil8fG51bGwsYSxiLGMsZCxlKSksITB9cmV0dXJuITF9XG5mdW5jdGlvbiB2YyhhKXt2YXIgYj13YyhhLnRhcmdldCk7aWYobnVsbCE9PWIpe3ZhciBjPVpiKGIpO2lmKG51bGwhPT1jKWlmKGI9Yy50YWcsMTM9PT1iKXtpZihiPSRiKGMpLG51bGwhPT1iKXthLmJsb2NrZWRPbj1iO2hjKGEubGFuZVByaW9yaXR5LGZ1bmN0aW9uKCl7ci51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkoYS5wcmlvcml0eSxmdW5jdGlvbigpe2djKGMpfSl9KTtyZXR1cm59fWVsc2UgaWYoMz09PWImJmMuc3RhdGVOb2RlLmh5ZHJhdGUpe2EuYmxvY2tlZE9uPTM9PT1jLnRhZz9jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOm51bGw7cmV0dXJufX1hLmJsb2NrZWRPbj1udWxsfVxuZnVuY3Rpb24geGMoYSl7aWYobnVsbCE9PWEuYmxvY2tlZE9uKXJldHVybiExO2Zvcih2YXIgYj1hLnRhcmdldENvbnRhaW5lcnM7MDxiLmxlbmd0aDspe3ZhciBjPXljKGEuZG9tRXZlbnROYW1lLGEuZXZlbnRTeXN0ZW1GbGFncyxiWzBdLGEubmF0aXZlRXZlbnQpO2lmKG51bGwhPT1jKXJldHVybiBiPUNiKGMpLG51bGwhPT1iJiZmYyhiKSxhLmJsb2NrZWRPbj1jLCExO2Iuc2hpZnQoKX1yZXR1cm4hMH1mdW5jdGlvbiB6YyhhLGIsYyl7eGMoYSkmJmMuZGVsZXRlKGIpfVxuZnVuY3Rpb24gQWMoKXtmb3IoaWM9ITE7MDxqYy5sZW5ndGg7KXt2YXIgYT1qY1swXTtpZihudWxsIT09YS5ibG9ja2VkT24pe2E9Q2IoYS5ibG9ja2VkT24pO251bGwhPT1hJiZlYyhhKTticmVha31mb3IodmFyIGI9YS50YXJnZXRDb250YWluZXJzOzA8Yi5sZW5ndGg7KXt2YXIgYz15YyhhLmRvbUV2ZW50TmFtZSxhLmV2ZW50U3lzdGVtRmxhZ3MsYlswXSxhLm5hdGl2ZUV2ZW50KTtpZihudWxsIT09Yyl7YS5ibG9ja2VkT249YzticmVha31iLnNoaWZ0KCl9bnVsbD09PWEuYmxvY2tlZE9uJiZqYy5zaGlmdCgpfW51bGwhPT1rYyYmeGMoa2MpJiYoa2M9bnVsbCk7bnVsbCE9PWxjJiZ4YyhsYykmJihsYz1udWxsKTtudWxsIT09bWMmJnhjKG1jKSYmKG1jPW51bGwpO25jLmZvckVhY2goemMpO29jLmZvckVhY2goemMpfVxuZnVuY3Rpb24gQmMoYSxiKXthLmJsb2NrZWRPbj09PWImJihhLmJsb2NrZWRPbj1udWxsLGljfHwoaWM9ITAsci51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrKHIudW5zdGFibGVfTm9ybWFsUHJpb3JpdHksQWMpKSl9XG5mdW5jdGlvbiBDYyhhKXtmdW5jdGlvbiBiKGIpe3JldHVybiBCYyhiLGEpfWlmKDA8amMubGVuZ3RoKXtCYyhqY1swXSxhKTtmb3IodmFyIGM9MTtjPGpjLmxlbmd0aDtjKyspe3ZhciBkPWpjW2NdO2QuYmxvY2tlZE9uPT09YSYmKGQuYmxvY2tlZE9uPW51bGwpfX1udWxsIT09a2MmJkJjKGtjLGEpO251bGwhPT1sYyYmQmMobGMsYSk7bnVsbCE9PW1jJiZCYyhtYyxhKTtuYy5mb3JFYWNoKGIpO29jLmZvckVhY2goYik7Zm9yKGM9MDtjPHBjLmxlbmd0aDtjKyspZD1wY1tjXSxkLmJsb2NrZWRPbj09PWEmJihkLmJsb2NrZWRPbj1udWxsKTtmb3IoOzA8cGMubGVuZ3RoJiYoYz1wY1swXSxudWxsPT09Yy5ibG9ja2VkT24pOyl2YyhjKSxudWxsPT09Yy5ibG9ja2VkT24mJnBjLnNoaWZ0KCl9XG5mdW5jdGlvbiBEYyhhLGIpe3ZhciBjPXt9O2NbYS50b0xvd2VyQ2FzZSgpXT1iLnRvTG93ZXJDYXNlKCk7Y1tcIldlYmtpdFwiK2FdPVwid2Via2l0XCIrYjtjW1wiTW96XCIrYV09XCJtb3pcIitiO3JldHVybiBjfXZhciBFYz17YW5pbWF0aW9uZW5kOkRjKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOkRjKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6RGMoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6RGMoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxGYz17fSxHYz17fTtcbmZhJiYoR2M9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKS5zdHlsZSxcIkFuaW1hdGlvbkV2ZW50XCJpbiB3aW5kb3d8fChkZWxldGUgRWMuYW5pbWF0aW9uZW5kLmFuaW1hdGlvbixkZWxldGUgRWMuYW5pbWF0aW9uaXRlcmF0aW9uLmFuaW1hdGlvbixkZWxldGUgRWMuYW5pbWF0aW9uc3RhcnQuYW5pbWF0aW9uKSxcIlRyYW5zaXRpb25FdmVudFwiaW4gd2luZG93fHxkZWxldGUgRWMudHJhbnNpdGlvbmVuZC50cmFuc2l0aW9uKTtmdW5jdGlvbiBIYyhhKXtpZihGY1thXSlyZXR1cm4gRmNbYV07aWYoIUVjW2FdKXJldHVybiBhO3ZhciBiPUVjW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIEdjKXJldHVybiBGY1thXT1iW2NdO3JldHVybiBhfVxudmFyIEljPUhjKFwiYW5pbWF0aW9uZW5kXCIpLEpjPUhjKFwiYW5pbWF0aW9uaXRlcmF0aW9uXCIpLEtjPUhjKFwiYW5pbWF0aW9uc3RhcnRcIiksTGM9SGMoXCJ0cmFuc2l0aW9uZW5kXCIpLE1jPW5ldyBNYXAsTmM9bmV3IE1hcCxPYz1bXCJhYm9ydFwiLFwiYWJvcnRcIixJYyxcImFuaW1hdGlvbkVuZFwiLEpjLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCIsS2MsXCJhbmltYXRpb25TdGFydFwiLFwiY2FucGxheVwiLFwiY2FuUGxheVwiLFwiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCIsXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIixcImVtcHRpZWRcIixcImVtcHRpZWRcIixcImVuY3J5cHRlZFwiLFwiZW5jcnlwdGVkXCIsXCJlbmRlZFwiLFwiZW5kZWRcIixcImVycm9yXCIsXCJlcnJvclwiLFwiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCIsXCJsb2FkXCIsXCJsb2FkXCIsXCJsb2FkZWRkYXRhXCIsXCJsb2FkZWREYXRhXCIsXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIixcImxvYWRzdGFydFwiLFwibG9hZFN0YXJ0XCIsXG5cImxvc3Rwb2ludGVyY2FwdHVyZVwiLFwibG9zdFBvaW50ZXJDYXB0dXJlXCIsXCJwbGF5aW5nXCIsXCJwbGF5aW5nXCIsXCJwcm9ncmVzc1wiLFwicHJvZ3Jlc3NcIixcInNlZWtpbmdcIixcInNlZWtpbmdcIixcInN0YWxsZWRcIixcInN0YWxsZWRcIixcInN1c3BlbmRcIixcInN1c3BlbmRcIixcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIixMYyxcInRyYW5zaXRpb25FbmRcIixcIndhaXRpbmdcIixcIndhaXRpbmdcIl07ZnVuY3Rpb24gUGMoYSxiKXtmb3IodmFyIGM9MDtjPGEubGVuZ3RoO2MrPTIpe3ZhciBkPWFbY10sZT1hW2MrMV07ZT1cIm9uXCIrKGVbMF0udG9VcHBlckNhc2UoKStlLnNsaWNlKDEpKTtOYy5zZXQoZCxiKTtNYy5zZXQoZCxlKTtkYShlLFtkXSl9fXZhciBRYz1yLnVuc3RhYmxlX25vdztRYygpO3ZhciBGPTg7XG5mdW5jdGlvbiBSYyhhKXtpZigwIT09KDEmYSkpcmV0dXJuIEY9MTUsMTtpZigwIT09KDImYSkpcmV0dXJuIEY9MTQsMjtpZigwIT09KDQmYSkpcmV0dXJuIEY9MTMsNDt2YXIgYj0yNCZhO2lmKDAhPT1iKXJldHVybiBGPTEyLGI7aWYoMCE9PShhJjMyKSlyZXR1cm4gRj0xMSwzMjtiPTE5MiZhO2lmKDAhPT1iKXJldHVybiBGPTEwLGI7aWYoMCE9PShhJjI1NikpcmV0dXJuIEY9OSwyNTY7Yj0zNTg0JmE7aWYoMCE9PWIpcmV0dXJuIEY9OCxiO2lmKDAhPT0oYSY0MDk2KSlyZXR1cm4gRj03LDQwOTY7Yj00MTg2MTEyJmE7aWYoMCE9PWIpcmV0dXJuIEY9NixiO2I9NjI5MTQ1NjAmYTtpZigwIT09YilyZXR1cm4gRj01LGI7aWYoYSY2NzEwODg2NClyZXR1cm4gRj00LDY3MTA4ODY0O2lmKDAhPT0oYSYxMzQyMTc3MjgpKXJldHVybiBGPTMsMTM0MjE3NzI4O2I9ODA1MzA2MzY4JmE7aWYoMCE9PWIpcmV0dXJuIEY9MixiO2lmKDAhPT0oMTA3Mzc0MTgyNCZhKSlyZXR1cm4gRj0xLDEwNzM3NDE4MjQ7XG5GPTg7cmV0dXJuIGF9ZnVuY3Rpb24gU2MoYSl7c3dpdGNoKGEpe2Nhc2UgOTk6cmV0dXJuIDE1O2Nhc2UgOTg6cmV0dXJuIDEwO2Nhc2UgOTc6Y2FzZSA5NjpyZXR1cm4gODtjYXNlIDk1OnJldHVybiAyO2RlZmF1bHQ6cmV0dXJuIDB9fWZ1bmN0aW9uIFRjKGEpe3N3aXRjaChhKXtjYXNlIDE1OmNhc2UgMTQ6cmV0dXJuIDk5O2Nhc2UgMTM6Y2FzZSAxMjpjYXNlIDExOmNhc2UgMTA6cmV0dXJuIDk4O2Nhc2UgOTpjYXNlIDg6Y2FzZSA3OmNhc2UgNjpjYXNlIDQ6Y2FzZSA1OnJldHVybiA5NztjYXNlIDM6Y2FzZSAyOmNhc2UgMTpyZXR1cm4gOTU7Y2FzZSAwOnJldHVybiA5MDtkZWZhdWx0OnRocm93IEVycm9yKHkoMzU4LGEpKTt9fVxuZnVuY3Rpb24gVWMoYSxiKXt2YXIgYz1hLnBlbmRpbmdMYW5lcztpZigwPT09YylyZXR1cm4gRj0wO3ZhciBkPTAsZT0wLGY9YS5leHBpcmVkTGFuZXMsZz1hLnN1c3BlbmRlZExhbmVzLGg9YS5waW5nZWRMYW5lcztpZigwIT09ZilkPWYsZT1GPTE1O2Vsc2UgaWYoZj1jJjEzNDIxNzcyNywwIT09Zil7dmFyIGs9ZiZ+ZzswIT09az8oZD1SYyhrKSxlPUYpOihoJj1mLDAhPT1oJiYoZD1SYyhoKSxlPUYpKX1lbHNlIGY9YyZ+ZywwIT09Zj8oZD1SYyhmKSxlPUYpOjAhPT1oJiYoZD1SYyhoKSxlPUYpO2lmKDA9PT1kKXJldHVybiAwO2Q9MzEtVmMoZCk7ZD1jJigoMD5kPzA6MTw8ZCk8PDEpLTE7aWYoMCE9PWImJmIhPT1kJiYwPT09KGImZykpe1JjKGIpO2lmKGU8PUYpcmV0dXJuIGI7Rj1lfWI9YS5lbnRhbmdsZWRMYW5lcztpZigwIT09Yilmb3IoYT1hLmVudGFuZ2xlbWVudHMsYiY9ZDswPGI7KWM9MzEtVmMoYiksZT0xPDxjLGR8PWFbY10sYiY9fmU7cmV0dXJuIGR9XG5mdW5jdGlvbiBXYyhhKXthPWEucGVuZGluZ0xhbmVzJi0xMDczNzQxODI1O3JldHVybiAwIT09YT9hOmEmMTA3Mzc0MTgyND8xMDczNzQxODI0OjB9ZnVuY3Rpb24gWGMoYSxiKXtzd2l0Y2goYSl7Y2FzZSAxNTpyZXR1cm4gMTtjYXNlIDE0OnJldHVybiAyO2Nhc2UgMTI6cmV0dXJuIGE9WWMoMjQmfmIpLDA9PT1hP1hjKDEwLGIpOmE7Y2FzZSAxMDpyZXR1cm4gYT1ZYygxOTImfmIpLDA9PT1hP1hjKDgsYik6YTtjYXNlIDg6cmV0dXJuIGE9WWMoMzU4NCZ+YiksMD09PWEmJihhPVljKDQxODYxMTImfmIpLDA9PT1hJiYoYT01MTIpKSxhO2Nhc2UgMjpyZXR1cm4gYj1ZYyg4MDUzMDYzNjgmfmIpLDA9PT1iJiYoYj0yNjg0MzU0NTYpLGJ9dGhyb3cgRXJyb3IoeSgzNTgsYSkpO31mdW5jdGlvbiBZYyhhKXtyZXR1cm4gYSYtYX1mdW5jdGlvbiBaYyhhKXtmb3IodmFyIGI9W10sYz0wOzMxPmM7YysrKWIucHVzaChhKTtyZXR1cm4gYn1cbmZ1bmN0aW9uICRjKGEsYixjKXthLnBlbmRpbmdMYW5lc3w9Yjt2YXIgZD1iLTE7YS5zdXNwZW5kZWRMYW5lcyY9ZDthLnBpbmdlZExhbmVzJj1kO2E9YS5ldmVudFRpbWVzO2I9MzEtVmMoYik7YVtiXT1jfXZhciBWYz1NYXRoLmNsejMyP01hdGguY2x6MzI6YWQsYmQ9TWF0aC5sb2csY2Q9TWF0aC5MTjI7ZnVuY3Rpb24gYWQoYSl7cmV0dXJuIDA9PT1hPzMyOjMxLShiZChhKS9jZHwwKXwwfXZhciBkZD1yLnVuc3RhYmxlX1VzZXJCbG9ja2luZ1ByaW9yaXR5LGVkPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LGZkPSEwO2Z1bmN0aW9uIGdkKGEsYixjLGQpe0tifHxJYigpO3ZhciBlPWhkLGY9S2I7S2I9ITA7dHJ5e0hiKGUsYSxiLGMsZCl9ZmluYWxseXsoS2I9Zil8fE1iKCl9fWZ1bmN0aW9uIGlkKGEsYixjLGQpe2VkKGRkLGhkLmJpbmQobnVsbCxhLGIsYyxkKSl9XG5mdW5jdGlvbiBoZChhLGIsYyxkKXtpZihmZCl7dmFyIGU7aWYoKGU9MD09PShiJjQpKSYmMDxqYy5sZW5ndGgmJi0xPHFjLmluZGV4T2YoYSkpYT1yYyhudWxsLGEsYixjLGQpLGpjLnB1c2goYSk7ZWxzZXt2YXIgZj15YyhhLGIsYyxkKTtpZihudWxsPT09ZillJiZzYyhhLGQpO2Vsc2V7aWYoZSl7aWYoLTE8cWMuaW5kZXhPZihhKSl7YT1yYyhmLGEsYixjLGQpO2pjLnB1c2goYSk7cmV0dXJufWlmKHVjKGYsYSxiLGMsZCkpcmV0dXJuO3NjKGEsZCl9amQoYSxiLGQsbnVsbCxjKX19fX1cbmZ1bmN0aW9uIHljKGEsYixjLGQpe3ZhciBlPXhiKGQpO2U9d2MoZSk7aWYobnVsbCE9PWUpe3ZhciBmPVpiKGUpO2lmKG51bGw9PT1mKWU9bnVsbDtlbHNle3ZhciBnPWYudGFnO2lmKDEzPT09Zyl7ZT0kYihmKTtpZihudWxsIT09ZSlyZXR1cm4gZTtlPW51bGx9ZWxzZSBpZigzPT09Zyl7aWYoZi5zdGF0ZU5vZGUuaHlkcmF0ZSlyZXR1cm4gMz09PWYudGFnP2Yuc3RhdGVOb2RlLmNvbnRhaW5lckluZm86bnVsbDtlPW51bGx9ZWxzZSBmIT09ZSYmKGU9bnVsbCl9fWpkKGEsYixkLGUsYyk7cmV0dXJuIG51bGx9dmFyIGtkPW51bGwsbGQ9bnVsbCxtZD1udWxsO1xuZnVuY3Rpb24gbmQoKXtpZihtZClyZXR1cm4gbWQ7dmFyIGEsYj1sZCxjPWIubGVuZ3RoLGQsZT1cInZhbHVlXCJpbiBrZD9rZC52YWx1ZTprZC50ZXh0Q29udGVudCxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO3JldHVybiBtZD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApfWZ1bmN0aW9uIG9kKGEpe3ZhciBiPWEua2V5Q29kZTtcImNoYXJDb2RlXCJpbiBhPyhhPWEuY2hhckNvZGUsMD09PWEmJjEzPT09YiYmKGE9MTMpKTphPWI7MTA9PT1hJiYoYT0xMyk7cmV0dXJuIDMyPD1hfHwxMz09PWE/YTowfWZ1bmN0aW9uIHBkKCl7cmV0dXJuITB9ZnVuY3Rpb24gcWQoKXtyZXR1cm4hMX1cbmZ1bmN0aW9uIHJkKGEpe2Z1bmN0aW9uIGIoYixkLGUsZixnKXt0aGlzLl9yZWFjdE5hbWU9Yjt0aGlzLl90YXJnZXRJbnN0PWU7dGhpcy50eXBlPWQ7dGhpcy5uYXRpdmVFdmVudD1mO3RoaXMudGFyZ2V0PWc7dGhpcy5jdXJyZW50VGFyZ2V0PW51bGw7Zm9yKHZhciBjIGluIGEpYS5oYXNPd25Qcm9wZXJ0eShjKSYmKGI9YVtjXSx0aGlzW2NdPWI/YihmKTpmW2NdKTt0aGlzLmlzRGVmYXVsdFByZXZlbnRlZD0obnVsbCE9Zi5kZWZhdWx0UHJldmVudGVkP2YuZGVmYXVsdFByZXZlbnRlZDohMT09PWYucmV0dXJuVmFsdWUpP3BkOnFkO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cWQ7cmV0dXJuIHRoaXN9bShiLnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmXG4oYS5yZXR1cm5WYWx1ZT0hMSksdGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQ9cGQpfSxzdG9wUHJvcGFnYXRpb246ZnVuY3Rpb24oKXt2YXIgYT10aGlzLm5hdGl2ZUV2ZW50O2EmJihhLnN0b3BQcm9wYWdhdGlvbj9hLnN0b3BQcm9wYWdhdGlvbigpOlwidW5rbm93blwiIT09dHlwZW9mIGEuY2FuY2VsQnViYmxlJiYoYS5jYW5jZWxCdWJibGU9ITApLHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9cGQpfSxwZXJzaXN0OmZ1bmN0aW9uKCl7fSxpc1BlcnNpc3RlbnQ6cGR9KTtyZXR1cm4gYn1cbnZhciBzZD17ZXZlbnRQaGFzZTowLGJ1YmJsZXM6MCxjYW5jZWxhYmxlOjAsdGltZVN0YW1wOmZ1bmN0aW9uKGEpe3JldHVybiBhLnRpbWVTdGFtcHx8RGF0ZS5ub3coKX0sZGVmYXVsdFByZXZlbnRlZDowLGlzVHJ1c3RlZDowfSx0ZD1yZChzZCksdWQ9bSh7fSxzZCx7dmlldzowLGRldGFpbDowfSksdmQ9cmQodWQpLHdkLHhkLHlkLEFkPW0oe30sdWQse3NjcmVlblg6MCxzY3JlZW5ZOjAsY2xpZW50WDowLGNsaWVudFk6MCxwYWdlWDowLHBhZ2VZOjAsY3RybEtleTowLHNoaWZ0S2V5OjAsYWx0S2V5OjAsbWV0YUtleTowLGdldE1vZGlmaWVyU3RhdGU6emQsYnV0dG9uOjAsYnV0dG9uczowLHJlbGF0ZWRUYXJnZXQ6ZnVuY3Rpb24oYSl7cmV0dXJuIHZvaWQgMD09PWEucmVsYXRlZFRhcmdldD9hLmZyb21FbGVtZW50PT09YS5zcmNFbGVtZW50P2EudG9FbGVtZW50OmEuZnJvbUVsZW1lbnQ6YS5yZWxhdGVkVGFyZ2V0fSxtb3ZlbWVudFg6ZnVuY3Rpb24oYSl7aWYoXCJtb3ZlbWVudFhcImluXG5hKXJldHVybiBhLm1vdmVtZW50WDthIT09eWQmJih5ZCYmXCJtb3VzZW1vdmVcIj09PWEudHlwZT8od2Q9YS5zY3JlZW5YLXlkLnNjcmVlblgseGQ9YS5zY3JlZW5ZLXlkLnNjcmVlblkpOnhkPXdkPTAseWQ9YSk7cmV0dXJuIHdkfSxtb3ZlbWVudFk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJtb3ZlbWVudFlcImluIGE/YS5tb3ZlbWVudFk6eGR9fSksQmQ9cmQoQWQpLENkPW0oe30sQWQse2RhdGFUcmFuc2ZlcjowfSksRGQ9cmQoQ2QpLEVkPW0oe30sdWQse3JlbGF0ZWRUYXJnZXQ6MH0pLEZkPXJkKEVkKSxHZD1tKHt9LHNkLHthbmltYXRpb25OYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxIZD1yZChHZCksSWQ9bSh7fSxzZCx7Y2xpcGJvYXJkRGF0YTpmdW5jdGlvbihhKXtyZXR1cm5cImNsaXBib2FyZERhdGFcImluIGE/YS5jbGlwYm9hcmREYXRhOndpbmRvdy5jbGlwYm9hcmREYXRhfX0pLEpkPXJkKElkKSxLZD1tKHt9LHNkLHtkYXRhOjB9KSxMZD1yZChLZCksTWQ9e0VzYzpcIkVzY2FwZVwiLFxuU3BhY2ViYXI6XCIgXCIsTGVmdDpcIkFycm93TGVmdFwiLFVwOlwiQXJyb3dVcFwiLFJpZ2h0OlwiQXJyb3dSaWdodFwiLERvd246XCJBcnJvd0Rvd25cIixEZWw6XCJEZWxldGVcIixXaW46XCJPU1wiLE1lbnU6XCJDb250ZXh0TWVudVwiLEFwcHM6XCJDb250ZXh0TWVudVwiLFNjcm9sbDpcIlNjcm9sbExvY2tcIixNb3pQcmludGFibGVLZXk6XCJVbmlkZW50aWZpZWRcIn0sTmQ9ezg6XCJCYWNrc3BhY2VcIiw5OlwiVGFiXCIsMTI6XCJDbGVhclwiLDEzOlwiRW50ZXJcIiwxNjpcIlNoaWZ0XCIsMTc6XCJDb250cm9sXCIsMTg6XCJBbHRcIiwxOTpcIlBhdXNlXCIsMjA6XCJDYXBzTG9ja1wiLDI3OlwiRXNjYXBlXCIsMzI6XCIgXCIsMzM6XCJQYWdlVXBcIiwzNDpcIlBhZ2VEb3duXCIsMzU6XCJFbmRcIiwzNjpcIkhvbWVcIiwzNzpcIkFycm93TGVmdFwiLDM4OlwiQXJyb3dVcFwiLDM5OlwiQXJyb3dSaWdodFwiLDQwOlwiQXJyb3dEb3duXCIsNDU6XCJJbnNlcnRcIiw0NjpcIkRlbGV0ZVwiLDExMjpcIkYxXCIsMTEzOlwiRjJcIiwxMTQ6XCJGM1wiLDExNTpcIkY0XCIsMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsXG4xMTk6XCJGOFwiLDEyMDpcIkY5XCIsMTIxOlwiRjEwXCIsMTIyOlwiRjExXCIsMTIzOlwiRjEyXCIsMTQ0OlwiTnVtTG9ja1wiLDE0NTpcIlNjcm9sbExvY2tcIiwyMjQ6XCJNZXRhXCJ9LE9kPXtBbHQ6XCJhbHRLZXlcIixDb250cm9sOlwiY3RybEtleVwiLE1ldGE6XCJtZXRhS2V5XCIsU2hpZnQ6XCJzaGlmdEtleVwifTtmdW5jdGlvbiBQZChhKXt2YXIgYj10aGlzLm5hdGl2ZUV2ZW50O3JldHVybiBiLmdldE1vZGlmaWVyU3RhdGU/Yi5nZXRNb2RpZmllclN0YXRlKGEpOihhPU9kW2FdKT8hIWJbYV06ITF9ZnVuY3Rpb24gemQoKXtyZXR1cm4gUGR9XG52YXIgUWQ9bSh7fSx1ZCx7a2V5OmZ1bmN0aW9uKGEpe2lmKGEua2V5KXt2YXIgYj1NZFthLmtleV18fGEua2V5O2lmKFwiVW5pZGVudGlmaWVkXCIhPT1iKXJldHVybiBifXJldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT8oYT1vZChhKSwxMz09PWE/XCJFbnRlclwiOlN0cmluZy5mcm9tQ2hhckNvZGUoYSkpOlwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/TmRbYS5rZXlDb2RlXXx8XCJVbmlkZW50aWZpZWRcIjpcIlwifSxjb2RlOjAsbG9jYXRpb246MCxjdHJsS2V5OjAsc2hpZnRLZXk6MCxhbHRLZXk6MCxtZXRhS2V5OjAscmVwZWF0OjAsbG9jYWxlOjAsZ2V0TW9kaWZpZXJTdGF0ZTp6ZCxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/b2QoYSk6MH0sa2V5Q29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfSx3aGljaDpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9vZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLFJkPXJkKFFkKSxTZD1tKHt9LEFkLHtwb2ludGVySWQ6MCx3aWR0aDowLGhlaWdodDowLHByZXNzdXJlOjAsdGFuZ2VudGlhbFByZXNzdXJlOjAsdGlsdFg6MCx0aWx0WTowLHR3aXN0OjAscG9pbnRlclR5cGU6MCxpc1ByaW1hcnk6MH0pLFRkPXJkKFNkKSxVZD1tKHt9LHVkLHt0b3VjaGVzOjAsdGFyZ2V0VG91Y2hlczowLGNoYW5nZWRUb3VjaGVzOjAsYWx0S2V5OjAsbWV0YUtleTowLGN0cmxLZXk6MCxzaGlmdEtleTowLGdldE1vZGlmaWVyU3RhdGU6emR9KSxWZD1yZChVZCksV2Q9bSh7fSxzZCx7cHJvcGVydHlOYW1lOjAsZWxhcHNlZFRpbWU6MCxwc2V1ZG9FbGVtZW50OjB9KSxYZD1yZChXZCksWWQ9bSh7fSxBZCx7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluIGE/LWEud2hlZWxEZWx0YVg6MH0sXG5kZWx0YVk6ZnVuY3Rpb24oYSl7cmV0dXJuXCJkZWx0YVlcImluIGE/YS5kZWx0YVk6XCJ3aGVlbERlbHRhWVwiaW4gYT8tYS53aGVlbERlbHRhWTpcIndoZWVsRGVsdGFcImluIGE/LWEud2hlZWxEZWx0YTowfSxkZWx0YVo6MCxkZWx0YU1vZGU6MH0pLFpkPXJkKFlkKSwkZD1bOSwxMywyNywzMl0sYWU9ZmEmJlwiQ29tcG9zaXRpb25FdmVudFwiaW4gd2luZG93LGJlPW51bGw7ZmEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmKGJlPWRvY3VtZW50LmRvY3VtZW50TW9kZSk7dmFyIGNlPWZhJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYhYmUsZGU9ZmEmJighYWV8fGJlJiY4PGJlJiYxMT49YmUpLGVlPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLGZlPSExO1xuZnVuY3Rpb24gZ2UoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT0kZC5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiZm9jdXNvdXRcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBoZShhKXthPWEuZGV0YWlsO3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmXCJkYXRhXCJpbiBhP2EuZGF0YTpudWxsfXZhciBpZT0hMTtmdW5jdGlvbiBqZShhLGIpe3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gaGUoYik7Y2FzZSBcImtleXByZXNzXCI6aWYoMzIhPT1iLndoaWNoKXJldHVybiBudWxsO2ZlPSEwO3JldHVybiBlZTtjYXNlIFwidGV4dElucHV0XCI6cmV0dXJuIGE9Yi5kYXRhLGE9PT1lZSYmZmU/bnVsbDphO2RlZmF1bHQ6cmV0dXJuIG51bGx9fVxuZnVuY3Rpb24ga2UoYSxiKXtpZihpZSlyZXR1cm5cImNvbXBvc2l0aW9uZW5kXCI9PT1hfHwhYWUmJmdlKGEsYik/KGE9bmQoKSxtZD1sZD1rZD1udWxsLGllPSExLGEpOm51bGw7c3dpdGNoKGEpe2Nhc2UgXCJwYXN0ZVwiOnJldHVybiBudWxsO2Nhc2UgXCJrZXlwcmVzc1wiOmlmKCEoYi5jdHJsS2V5fHxiLmFsdEtleXx8Yi5tZXRhS2V5KXx8Yi5jdHJsS2V5JiZiLmFsdEtleSl7aWYoYi5jaGFyJiYxPGIuY2hhci5sZW5ndGgpcmV0dXJuIGIuY2hhcjtpZihiLndoaWNoKXJldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGIud2hpY2gpfXJldHVybiBudWxsO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBkZSYmXCJrb1wiIT09Yi5sb2NhbGU/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgbGU9e2NvbG9yOiEwLGRhdGU6ITAsZGF0ZXRpbWU6ITAsXCJkYXRldGltZS1sb2NhbFwiOiEwLGVtYWlsOiEwLG1vbnRoOiEwLG51bWJlcjohMCxwYXNzd29yZDohMCxyYW5nZTohMCxzZWFyY2g6ITAsdGVsOiEwLHRleHQ6ITAsdGltZTohMCx1cmw6ITAsd2VlazohMH07ZnVuY3Rpb24gbWUoYSl7dmFyIGI9YSYmYS5ub2RlTmFtZSYmYS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO3JldHVyblwiaW5wdXRcIj09PWI/ISFsZVthLnR5cGVdOlwidGV4dGFyZWFcIj09PWI/ITA6ITF9ZnVuY3Rpb24gbmUoYSxiLGMsZCl7RWIoZCk7Yj1vZShiLFwib25DaGFuZ2VcIik7MDxiLmxlbmd0aCYmKGM9bmV3IHRkKFwib25DaGFuZ2VcIixcImNoYW5nZVwiLG51bGwsYyxkKSxhLnB1c2goe2V2ZW50OmMsbGlzdGVuZXJzOmJ9KSl9dmFyIHBlPW51bGwscWU9bnVsbDtmdW5jdGlvbiByZShhKXtzZShhLDApfWZ1bmN0aW9uIHRlKGEpe3ZhciBiPXVlKGEpO2lmKFdhKGIpKXJldHVybiBhfVxuZnVuY3Rpb24gdmUoYSxiKXtpZihcImNoYW5nZVwiPT09YSlyZXR1cm4gYn12YXIgd2U9ITE7aWYoZmEpe3ZhciB4ZTtpZihmYSl7dmFyIHllPVwib25pbnB1dFwiaW4gZG9jdW1lbnQ7aWYoIXllKXt2YXIgemU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTt6ZS5zZXRBdHRyaWJ1dGUoXCJvbmlucHV0XCIsXCJyZXR1cm47XCIpO3llPVwiZnVuY3Rpb25cIj09PXR5cGVvZiB6ZS5vbmlucHV0fXhlPXllfWVsc2UgeGU9ITE7d2U9eGUmJighZG9jdW1lbnQuZG9jdW1lbnRNb2RlfHw5PGRvY3VtZW50LmRvY3VtZW50TW9kZSl9ZnVuY3Rpb24gQWUoKXtwZSYmKHBlLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSxxZT1wZT1udWxsKX1mdW5jdGlvbiBCZShhKXtpZihcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmdGUocWUpKXt2YXIgYj1bXTtuZShiLHFlLGEseGIoYSkpO2E9cmU7aWYoS2IpYShiKTtlbHNle0tiPSEwO3RyeXtHYihhLGIpfWZpbmFsbHl7S2I9ITEsTWIoKX19fX1cbmZ1bmN0aW9uIENlKGEsYixjKXtcImZvY3VzaW5cIj09PWE/KEFlKCkscGU9YixxZT1jLHBlLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLEJlKSk6XCJmb2N1c291dFwiPT09YSYmQWUoKX1mdW5jdGlvbiBEZShhKXtpZihcInNlbGVjdGlvbmNoYW5nZVwiPT09YXx8XCJrZXl1cFwiPT09YXx8XCJrZXlkb3duXCI9PT1hKXJldHVybiB0ZShxZSl9ZnVuY3Rpb24gRWUoYSxiKXtpZihcImNsaWNrXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBGZShhLGIpe2lmKFwiaW5wdXRcIj09PWF8fFwiY2hhbmdlXCI9PT1hKXJldHVybiB0ZShiKX1mdW5jdGlvbiBHZShhLGIpe3JldHVybiBhPT09YiYmKDAhPT1hfHwxL2E9PT0xL2IpfHxhIT09YSYmYiE9PWJ9dmFyIEhlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBPYmplY3QuaXM/T2JqZWN0LmlzOkdlLEllPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5mdW5jdGlvbiBKZShhLGIpe2lmKEhlKGEsYikpcmV0dXJuITA7aWYoXCJvYmplY3RcIiE9PXR5cGVvZiBhfHxudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBifHxudWxsPT09YilyZXR1cm4hMTt2YXIgYz1PYmplY3Qua2V5cyhhKSxkPU9iamVjdC5rZXlzKGIpO2lmKGMubGVuZ3RoIT09ZC5sZW5ndGgpcmV0dXJuITE7Zm9yKGQ9MDtkPGMubGVuZ3RoO2QrKylpZighSWUuY2FsbChiLGNbZF0pfHwhSGUoYVtjW2RdXSxiW2NbZF1dKSlyZXR1cm4hMTtyZXR1cm4hMH1mdW5jdGlvbiBLZShhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBMZShhLGIpe3ZhciBjPUtlKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPUtlKGMpfX1mdW5jdGlvbiBNZShhLGIpe3JldHVybiBhJiZiP2E9PT1iPyEwOmEmJjM9PT1hLm5vZGVUeXBlPyExOmImJjM9PT1iLm5vZGVUeXBlP01lKGEsYi5wYXJlbnROb2RlKTpcImNvbnRhaW5zXCJpbiBhP2EuY29udGFpbnMoYik6YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbj8hIShhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKGIpJjE2KTohMTohMX1cbmZ1bmN0aW9uIE5lKCl7Zm9yKHZhciBhPXdpbmRvdyxiPVhhKCk7YiBpbnN0YW5jZW9mIGEuSFRNTElGcmFtZUVsZW1lbnQ7KXt0cnl7dmFyIGM9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmNvbnRlbnRXaW5kb3cubG9jYXRpb24uaHJlZn1jYXRjaChkKXtjPSExfWlmKGMpYT1iLmNvbnRlbnRXaW5kb3c7ZWxzZSBicmVhaztiPVhhKGEuZG9jdW1lbnQpfXJldHVybiBifWZ1bmN0aW9uIE9lKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm4gYiYmKFwiaW5wdXRcIj09PWImJihcInRleHRcIj09PWEudHlwZXx8XCJzZWFyY2hcIj09PWEudHlwZXx8XCJ0ZWxcIj09PWEudHlwZXx8XCJ1cmxcIj09PWEudHlwZXx8XCJwYXNzd29yZFwiPT09YS50eXBlKXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG52YXIgUGU9ZmEmJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxRZT1udWxsLFJlPW51bGwsU2U9bnVsbCxUZT0hMTtcbmZ1bmN0aW9uIFVlKGEsYixjKXt2YXIgZD1jLndpbmRvdz09PWM/Yy5kb2N1bWVudDo5PT09Yy5ub2RlVHlwZT9jOmMub3duZXJEb2N1bWVudDtUZXx8bnVsbD09UWV8fFFlIT09WGEoZCl8fChkPVFlLFwic2VsZWN0aW9uU3RhcnRcImluIGQmJk9lKGQpP2Q9e3N0YXJ0OmQuc2VsZWN0aW9uU3RhcnQsZW5kOmQuc2VsZWN0aW9uRW5kfTooZD0oZC5vd25lckRvY3VtZW50JiZkLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXd8fHdpbmRvdykuZ2V0U2VsZWN0aW9uKCksZD17YW5jaG9yTm9kZTpkLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmQuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpkLmZvY3VzTm9kZSxmb2N1c09mZnNldDpkLmZvY3VzT2Zmc2V0fSksU2UmJkplKFNlLGQpfHwoU2U9ZCxkPW9lKFJlLFwib25TZWxlY3RcIiksMDxkLmxlbmd0aCYmKGI9bmV3IHRkKFwib25TZWxlY3RcIixcInNlbGVjdFwiLG51bGwsYixjKSxhLnB1c2goe2V2ZW50OmIsbGlzdGVuZXJzOmR9KSxiLnRhcmdldD1RZSkpKX1cblBjKFwiY2FuY2VsIGNhbmNlbCBjbGljayBjbGljayBjbG9zZSBjbG9zZSBjb250ZXh0bWVudSBjb250ZXh0TWVudSBjb3B5IGNvcHkgY3V0IGN1dCBhdXhjbGljayBhdXhDbGljayBkYmxjbGljayBkb3VibGVDbGljayBkcmFnZW5kIGRyYWdFbmQgZHJhZ3N0YXJ0IGRyYWdTdGFydCBkcm9wIGRyb3AgZm9jdXNpbiBmb2N1cyBmb2N1c291dCBibHVyIGlucHV0IGlucHV0IGludmFsaWQgaW52YWxpZCBrZXlkb3duIGtleURvd24ga2V5cHJlc3Mga2V5UHJlc3Mga2V5dXAga2V5VXAgbW91c2Vkb3duIG1vdXNlRG93biBtb3VzZXVwIG1vdXNlVXAgcGFzdGUgcGFzdGUgcGF1c2UgcGF1c2UgcGxheSBwbGF5IHBvaW50ZXJjYW5jZWwgcG9pbnRlckNhbmNlbCBwb2ludGVyZG93biBwb2ludGVyRG93biBwb2ludGVydXAgcG9pbnRlclVwIHJhdGVjaGFuZ2UgcmF0ZUNoYW5nZSByZXNldCByZXNldCBzZWVrZWQgc2Vla2VkIHN1Ym1pdCBzdWJtaXQgdG91Y2hjYW5jZWwgdG91Y2hDYW5jZWwgdG91Y2hlbmQgdG91Y2hFbmQgdG91Y2hzdGFydCB0b3VjaFN0YXJ0IHZvbHVtZWNoYW5nZSB2b2x1bWVDaGFuZ2VcIi5zcGxpdChcIiBcIiksXG4wKTtQYyhcImRyYWcgZHJhZyBkcmFnZW50ZXIgZHJhZ0VudGVyIGRyYWdleGl0IGRyYWdFeGl0IGRyYWdsZWF2ZSBkcmFnTGVhdmUgZHJhZ292ZXIgZHJhZ092ZXIgbW91c2Vtb3ZlIG1vdXNlTW92ZSBtb3VzZW91dCBtb3VzZU91dCBtb3VzZW92ZXIgbW91c2VPdmVyIHBvaW50ZXJtb3ZlIHBvaW50ZXJNb3ZlIHBvaW50ZXJvdXQgcG9pbnRlck91dCBwb2ludGVyb3ZlciBwb2ludGVyT3ZlciBzY3JvbGwgc2Nyb2xsIHRvZ2dsZSB0b2dnbGUgdG91Y2htb3ZlIHRvdWNoTW92ZSB3aGVlbCB3aGVlbFwiLnNwbGl0KFwiIFwiKSwxKTtQYyhPYywyKTtmb3IodmFyIFZlPVwiY2hhbmdlIHNlbGVjdGlvbmNoYW5nZSB0ZXh0SW5wdXQgY29tcG9zaXRpb25zdGFydCBjb21wb3NpdGlvbmVuZCBjb21wb3NpdGlvbnVwZGF0ZVwiLnNwbGl0KFwiIFwiKSxXZT0wO1dlPFZlLmxlbmd0aDtXZSsrKU5jLnNldChWZVtXZV0sMCk7ZWEoXCJvbk1vdXNlRW50ZXJcIixbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdKTtcbmVhKFwib25Nb3VzZUxlYXZlXCIsW1wibW91c2VvdXRcIixcIm1vdXNlb3ZlclwiXSk7ZWEoXCJvblBvaW50ZXJFbnRlclwiLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJvdmVyXCJdKTtlYShcIm9uUG9pbnRlckxlYXZlXCIsW1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl0pO2RhKFwib25DaGFuZ2VcIixcImNoYW5nZSBjbGljayBmb2N1c2luIGZvY3Vzb3V0IGlucHV0IGtleWRvd24ga2V5dXAgc2VsZWN0aW9uY2hhbmdlXCIuc3BsaXQoXCIgXCIpKTtkYShcIm9uU2VsZWN0XCIsXCJmb2N1c291dCBjb250ZXh0bWVudSBkcmFnZW5kIGZvY3VzaW4ga2V5ZG93biBrZXl1cCBtb3VzZWRvd24gbW91c2V1cCBzZWxlY3Rpb25jaGFuZ2VcIi5zcGxpdChcIiBcIikpO2RhKFwib25CZWZvcmVJbnB1dFwiLFtcImNvbXBvc2l0aW9uZW5kXCIsXCJrZXlwcmVzc1wiLFwidGV4dElucHV0XCIsXCJwYXN0ZVwiXSk7ZGEoXCJvbkNvbXBvc2l0aW9uRW5kXCIsXCJjb21wb3NpdGlvbmVuZCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7XG5kYShcIm9uQ29tcG9zaXRpb25TdGFydFwiLFwiY29tcG9zaXRpb25zdGFydCBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7ZGEoXCJvbkNvbXBvc2l0aW9uVXBkYXRlXCIsXCJjb21wb3NpdGlvbnVwZGF0ZSBmb2N1c291dCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKSk7dmFyIFhlPVwiYWJvcnQgY2FucGxheSBjYW5wbGF5dGhyb3VnaCBkdXJhdGlvbmNoYW5nZSBlbXB0aWVkIGVuY3J5cHRlZCBlbmRlZCBlcnJvciBsb2FkZWRkYXRhIGxvYWRlZG1ldGFkYXRhIGxvYWRzdGFydCBwYXVzZSBwbGF5IHBsYXlpbmcgcHJvZ3Jlc3MgcmF0ZWNoYW5nZSBzZWVrZWQgc2Vla2luZyBzdGFsbGVkIHN1c3BlbmQgdGltZXVwZGF0ZSB2b2x1bWVjaGFuZ2Ugd2FpdGluZ1wiLnNwbGl0KFwiIFwiKSxZZT1uZXcgU2V0KFwiY2FuY2VsIGNsb3NlIGludmFsaWQgbG9hZCBzY3JvbGwgdG9nZ2xlXCIuc3BsaXQoXCIgXCIpLmNvbmNhdChYZSkpO1xuZnVuY3Rpb24gWmUoYSxiLGMpe3ZhciBkPWEudHlwZXx8XCJ1bmtub3duLWV2ZW50XCI7YS5jdXJyZW50VGFyZ2V0PWM7WWIoZCxiLHZvaWQgMCxhKTthLmN1cnJlbnRUYXJnZXQ9bnVsbH1cbmZ1bmN0aW9uIHNlKGEsYil7Yj0wIT09KGImNCk7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspe3ZhciBkPWFbY10sZT1kLmV2ZW50O2Q9ZC5saXN0ZW5lcnM7YTp7dmFyIGY9dm9pZCAwO2lmKGIpZm9yKHZhciBnPWQubGVuZ3RoLTE7MDw9ZztnLS0pe3ZhciBoPWRbZ10saz1oLmluc3RhbmNlLGw9aC5jdXJyZW50VGFyZ2V0O2g9aC5saXN0ZW5lcjtpZihrIT09ZiYmZS5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpKWJyZWFrIGE7WmUoZSxoLGwpO2Y9a31lbHNlIGZvcihnPTA7ZzxkLmxlbmd0aDtnKyspe2g9ZFtnXTtrPWguaW5zdGFuY2U7bD1oLmN1cnJlbnRUYXJnZXQ7aD1oLmxpc3RlbmVyO2lmKGshPT1mJiZlLmlzUHJvcGFnYXRpb25TdG9wcGVkKCkpYnJlYWsgYTtaZShlLGgsbCk7Zj1rfX19aWYoVWIpdGhyb3cgYT1WYixVYj0hMSxWYj1udWxsLGE7fVxuZnVuY3Rpb24gRyhhLGIpe3ZhciBjPSRlKGIpLGQ9YStcIl9fYnViYmxlXCI7Yy5oYXMoZCl8fChhZihiLGEsMiwhMSksYy5hZGQoZCkpfXZhciBiZj1cIl9yZWFjdExpc3RlbmluZ1wiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO2Z1bmN0aW9uIGNmKGEpe2FbYmZdfHwoYVtiZl09ITAsYmEuZm9yRWFjaChmdW5jdGlvbihiKXtZZS5oYXMoYil8fGRmKGIsITEsYSxudWxsKTtkZihiLCEwLGEsbnVsbCl9KSl9XG5mdW5jdGlvbiBkZihhLGIsYyxkKXt2YXIgZT00PGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1s0XT9hcmd1bWVudHNbNF06MCxmPWM7XCJzZWxlY3Rpb25jaGFuZ2VcIj09PWEmJjkhPT1jLm5vZGVUeXBlJiYoZj1jLm93bmVyRG9jdW1lbnQpO2lmKG51bGwhPT1kJiYhYiYmWWUuaGFzKGEpKXtpZihcInNjcm9sbFwiIT09YSlyZXR1cm47ZXw9MjtmPWR9dmFyIGc9JGUoZiksaD1hK1wiX19cIisoYj9cImNhcHR1cmVcIjpcImJ1YmJsZVwiKTtnLmhhcyhoKXx8KGImJihlfD00KSxhZihmLGEsZSxiKSxnLmFkZChoKSl9XG5mdW5jdGlvbiBhZihhLGIsYyxkKXt2YXIgZT1OYy5nZXQoYik7c3dpdGNoKHZvaWQgMD09PWU/MjplKXtjYXNlIDA6ZT1nZDticmVhaztjYXNlIDE6ZT1pZDticmVhaztkZWZhdWx0OmU9aGR9Yz1lLmJpbmQobnVsbCxiLGMsYSk7ZT12b2lkIDA7IVBifHxcInRvdWNoc3RhcnRcIiE9PWImJlwidG91Y2htb3ZlXCIhPT1iJiZcIndoZWVsXCIhPT1ifHwoZT0hMCk7ZD92b2lkIDAhPT1lP2EuYWRkRXZlbnRMaXN0ZW5lcihiLGMse2NhcHR1cmU6ITAscGFzc2l2ZTplfSk6YS5hZGRFdmVudExpc3RlbmVyKGIsYywhMCk6dm9pZCAwIT09ZT9hLmFkZEV2ZW50TGlzdGVuZXIoYixjLHtwYXNzaXZlOmV9KTphLmFkZEV2ZW50TGlzdGVuZXIoYixjLCExKX1cbmZ1bmN0aW9uIGpkKGEsYixjLGQsZSl7dmFyIGY9ZDtpZigwPT09KGImMSkmJjA9PT0oYiYyKSYmbnVsbCE9PWQpYTpmb3IoOzspe2lmKG51bGw9PT1kKXJldHVybjt2YXIgZz1kLnRhZztpZigzPT09Z3x8ND09PWcpe3ZhciBoPWQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87aWYoaD09PWV8fDg9PT1oLm5vZGVUeXBlJiZoLnBhcmVudE5vZGU9PT1lKWJyZWFrO2lmKDQ9PT1nKWZvcihnPWQucmV0dXJuO251bGwhPT1nOyl7dmFyIGs9Zy50YWc7aWYoMz09PWt8fDQ9PT1rKWlmKGs9Zy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyxrPT09ZXx8OD09PWsubm9kZVR5cGUmJmsucGFyZW50Tm9kZT09PWUpcmV0dXJuO2c9Zy5yZXR1cm59Zm9yKDtudWxsIT09aDspe2c9d2MoaCk7aWYobnVsbD09PWcpcmV0dXJuO2s9Zy50YWc7aWYoNT09PWt8fDY9PT1rKXtkPWY9Zztjb250aW51ZSBhfWg9aC5wYXJlbnROb2RlfX1kPWQucmV0dXJufU5iKGZ1bmN0aW9uKCl7dmFyIGQ9ZixlPXhiKGMpLGc9W107XG5hOnt2YXIgaD1NYy5nZXQoYSk7aWYodm9pZCAwIT09aCl7dmFyIGs9dGQseD1hO3N3aXRjaChhKXtjYXNlIFwia2V5cHJlc3NcIjppZigwPT09b2QoYykpYnJlYWsgYTtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOms9UmQ7YnJlYWs7Y2FzZSBcImZvY3VzaW5cIjp4PVwiZm9jdXNcIjtrPUZkO2JyZWFrO2Nhc2UgXCJmb2N1c291dFwiOng9XCJibHVyXCI7az1GZDticmVhaztjYXNlIFwiYmVmb3JlYmx1clwiOmNhc2UgXCJhZnRlcmJsdXJcIjprPUZkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilicmVhayBhO2Nhc2UgXCJhdXhjbGlja1wiOmNhc2UgXCJkYmxjbGlja1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwibW91c2Vtb3ZlXCI6Y2FzZSBcIm1vdXNldXBcIjpjYXNlIFwibW91c2VvdXRcIjpjYXNlIFwibW91c2VvdmVyXCI6Y2FzZSBcImNvbnRleHRtZW51XCI6az1CZDticmVhaztjYXNlIFwiZHJhZ1wiOmNhc2UgXCJkcmFnZW5kXCI6Y2FzZSBcImRyYWdlbnRlclwiOmNhc2UgXCJkcmFnZXhpdFwiOmNhc2UgXCJkcmFnbGVhdmVcIjpjYXNlIFwiZHJhZ292ZXJcIjpjYXNlIFwiZHJhZ3N0YXJ0XCI6Y2FzZSBcImRyb3BcIjprPVxuRGQ7YnJlYWs7Y2FzZSBcInRvdWNoY2FuY2VsXCI6Y2FzZSBcInRvdWNoZW5kXCI6Y2FzZSBcInRvdWNobW92ZVwiOmNhc2UgXCJ0b3VjaHN0YXJ0XCI6az1WZDticmVhaztjYXNlIEljOmNhc2UgSmM6Y2FzZSBLYzprPUhkO2JyZWFrO2Nhc2UgTGM6az1YZDticmVhaztjYXNlIFwic2Nyb2xsXCI6az12ZDticmVhaztjYXNlIFwid2hlZWxcIjprPVpkO2JyZWFrO2Nhc2UgXCJjb3B5XCI6Y2FzZSBcImN1dFwiOmNhc2UgXCJwYXN0ZVwiOms9SmQ7YnJlYWs7Y2FzZSBcImdvdHBvaW50ZXJjYXB0dXJlXCI6Y2FzZSBcImxvc3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJwb2ludGVyY2FuY2VsXCI6Y2FzZSBcInBvaW50ZXJkb3duXCI6Y2FzZSBcInBvaW50ZXJtb3ZlXCI6Y2FzZSBcInBvaW50ZXJvdXRcIjpjYXNlIFwicG9pbnRlcm92ZXJcIjpjYXNlIFwicG9pbnRlcnVwXCI6az1UZH12YXIgdz0wIT09KGImNCksej0hdyYmXCJzY3JvbGxcIj09PWEsdT13P251bGwhPT1oP2grXCJDYXB0dXJlXCI6bnVsbDpoO3c9W107Zm9yKHZhciB0PWQscTtudWxsIT09XG50Oyl7cT10O3ZhciB2PXEuc3RhdGVOb2RlOzU9PT1xLnRhZyYmbnVsbCE9PXYmJihxPXYsbnVsbCE9PXUmJih2PU9iKHQsdSksbnVsbCE9diYmdy5wdXNoKGVmKHQsdixxKSkpKTtpZih6KWJyZWFrO3Q9dC5yZXR1cm59MDx3Lmxlbmd0aCYmKGg9bmV3IGsoaCx4LG51bGwsYyxlKSxnLnB1c2goe2V2ZW50OmgsbGlzdGVuZXJzOnd9KSl9fWlmKDA9PT0oYiY3KSl7YTp7aD1cIm1vdXNlb3ZlclwiPT09YXx8XCJwb2ludGVyb3ZlclwiPT09YTtrPVwibW91c2VvdXRcIj09PWF8fFwicG9pbnRlcm91dFwiPT09YTtpZihoJiYwPT09KGImMTYpJiYoeD1jLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpJiYod2MoeCl8fHhbZmZdKSlicmVhayBhO2lmKGt8fGgpe2g9ZS53aW5kb3c9PT1lP2U6KGg9ZS5vd25lckRvY3VtZW50KT9oLmRlZmF1bHRWaWV3fHxoLnBhcmVudFdpbmRvdzp3aW5kb3c7aWYoayl7aWYoeD1jLnJlbGF0ZWRUYXJnZXR8fGMudG9FbGVtZW50LGs9ZCx4PXg/d2MoeCk6bnVsbCxudWxsIT09XG54JiYoej1aYih4KSx4IT09enx8NSE9PXgudGFnJiY2IT09eC50YWcpKXg9bnVsbH1lbHNlIGs9bnVsbCx4PWQ7aWYoayE9PXgpe3c9QmQ7dj1cIm9uTW91c2VMZWF2ZVwiO3U9XCJvbk1vdXNlRW50ZXJcIjt0PVwibW91c2VcIjtpZihcInBvaW50ZXJvdXRcIj09PWF8fFwicG9pbnRlcm92ZXJcIj09PWEpdz1UZCx2PVwib25Qb2ludGVyTGVhdmVcIix1PVwib25Qb2ludGVyRW50ZXJcIix0PVwicG9pbnRlclwiO3o9bnVsbD09az9oOnVlKGspO3E9bnVsbD09eD9oOnVlKHgpO2g9bmV3IHcodix0K1wibGVhdmVcIixrLGMsZSk7aC50YXJnZXQ9ejtoLnJlbGF0ZWRUYXJnZXQ9cTt2PW51bGw7d2MoZSk9PT1kJiYodz1uZXcgdyh1LHQrXCJlbnRlclwiLHgsYyxlKSx3LnRhcmdldD1xLHcucmVsYXRlZFRhcmdldD16LHY9dyk7ej12O2lmKGsmJngpYjp7dz1rO3U9eDt0PTA7Zm9yKHE9dztxO3E9Z2YocSkpdCsrO3E9MDtmb3Iodj11O3Y7dj1nZih2KSlxKys7Zm9yKDswPHQtcTspdz1nZih3KSx0LS07Zm9yKDswPHEtdDspdT1cbmdmKHUpLHEtLTtmb3IoO3QtLTspe2lmKHc9PT11fHxudWxsIT09dSYmdz09PXUuYWx0ZXJuYXRlKWJyZWFrIGI7dz1nZih3KTt1PWdmKHUpfXc9bnVsbH1lbHNlIHc9bnVsbDtudWxsIT09ayYmaGYoZyxoLGssdywhMSk7bnVsbCE9PXgmJm51bGwhPT16JiZoZihnLHoseCx3LCEwKX19fWE6e2g9ZD91ZShkKTp3aW5kb3c7az1oLm5vZGVOYW1lJiZoLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7aWYoXCJzZWxlY3RcIj09PWt8fFwiaW5wdXRcIj09PWsmJlwiZmlsZVwiPT09aC50eXBlKXZhciBKPXZlO2Vsc2UgaWYobWUoaCkpaWYod2UpSj1GZTtlbHNle0o9RGU7dmFyIEs9Q2V9ZWxzZShrPWgubm9kZU5hbWUpJiZcImlucHV0XCI9PT1rLnRvTG93ZXJDYXNlKCkmJihcImNoZWNrYm94XCI9PT1oLnR5cGV8fFwicmFkaW9cIj09PWgudHlwZSkmJihKPUVlKTtpZihKJiYoSj1KKGEsZCkpKXtuZShnLEosYyxlKTticmVhayBhfUsmJksoYSxoLGQpO1wiZm9jdXNvdXRcIj09PWEmJihLPWguX3dyYXBwZXJTdGF0ZSkmJlxuSy5jb250cm9sbGVkJiZcIm51bWJlclwiPT09aC50eXBlJiZiYihoLFwibnVtYmVyXCIsaC52YWx1ZSl9Sz1kP3VlKGQpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzaW5cIjppZihtZShLKXx8XCJ0cnVlXCI9PT1LLmNvbnRlbnRFZGl0YWJsZSlRZT1LLFJlPWQsU2U9bnVsbDticmVhaztjYXNlIFwiZm9jdXNvdXRcIjpTZT1SZT1RZT1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpUZT0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOmNhc2UgXCJkcmFnZW5kXCI6VGU9ITE7VWUoZyxjLGUpO2JyZWFrO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihQZSlicmVhaztjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOlVlKGcsYyxlKX12YXIgUTtpZihhZSliOntzd2l0Y2goYSl7Y2FzZSBcImNvbXBvc2l0aW9uc3RhcnRcIjp2YXIgTD1cIm9uQ29tcG9zaXRpb25TdGFydFwiO2JyZWFrIGI7Y2FzZSBcImNvbXBvc2l0aW9uZW5kXCI6TD1cIm9uQ29tcG9zaXRpb25FbmRcIjticmVhayBiO1xuY2FzZSBcImNvbXBvc2l0aW9udXBkYXRlXCI6TD1cIm9uQ29tcG9zaXRpb25VcGRhdGVcIjticmVhayBifUw9dm9pZCAwfWVsc2UgaWU/Z2UoYSxjKSYmKEw9XCJvbkNvbXBvc2l0aW9uRW5kXCIpOlwia2V5ZG93blwiPT09YSYmMjI5PT09Yy5rZXlDb2RlJiYoTD1cIm9uQ29tcG9zaXRpb25TdGFydFwiKTtMJiYoZGUmJlwia29cIiE9PWMubG9jYWxlJiYoaWV8fFwib25Db21wb3NpdGlvblN0YXJ0XCIhPT1MP1wib25Db21wb3NpdGlvbkVuZFwiPT09TCYmaWUmJihRPW5kKCkpOihrZD1lLGxkPVwidmFsdWVcImluIGtkP2tkLnZhbHVlOmtkLnRleHRDb250ZW50LGllPSEwKSksSz1vZShkLEwpLDA8Sy5sZW5ndGgmJihMPW5ldyBMZChMLGEsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6TCxsaXN0ZW5lcnM6S30pLFE/TC5kYXRhPVE6KFE9aGUoYyksbnVsbCE9PVEmJihMLmRhdGE9USkpKSk7aWYoUT1jZT9qZShhLGMpOmtlKGEsYykpZD1vZShkLFwib25CZWZvcmVJbnB1dFwiKSwwPGQubGVuZ3RoJiYoZT1uZXcgTGQoXCJvbkJlZm9yZUlucHV0XCIsXG5cImJlZm9yZWlucHV0XCIsbnVsbCxjLGUpLGcucHVzaCh7ZXZlbnQ6ZSxsaXN0ZW5lcnM6ZH0pLGUuZGF0YT1RKX1zZShnLGIpfSl9ZnVuY3Rpb24gZWYoYSxiLGMpe3JldHVybntpbnN0YW5jZTphLGxpc3RlbmVyOmIsY3VycmVudFRhcmdldDpjfX1mdW5jdGlvbiBvZShhLGIpe2Zvcih2YXIgYz1iK1wiQ2FwdHVyZVwiLGQ9W107bnVsbCE9PWE7KXt2YXIgZT1hLGY9ZS5zdGF0ZU5vZGU7NT09PWUudGFnJiZudWxsIT09ZiYmKGU9ZixmPU9iKGEsYyksbnVsbCE9ZiYmZC51bnNoaWZ0KGVmKGEsZixlKSksZj1PYihhLGIpLG51bGwhPWYmJmQucHVzaChlZihhLGYsZSkpKTthPWEucmV0dXJufXJldHVybiBkfWZ1bmN0aW9uIGdmKGEpe2lmKG51bGw9PT1hKXJldHVybiBudWxsO2RvIGE9YS5yZXR1cm47d2hpbGUoYSYmNSE9PWEudGFnKTtyZXR1cm4gYT9hOm51bGx9XG5mdW5jdGlvbiBoZihhLGIsYyxkLGUpe2Zvcih2YXIgZj1iLl9yZWFjdE5hbWUsZz1bXTtudWxsIT09YyYmYyE9PWQ7KXt2YXIgaD1jLGs9aC5hbHRlcm5hdGUsbD1oLnN0YXRlTm9kZTtpZihudWxsIT09ayYmaz09PWQpYnJlYWs7NT09PWgudGFnJiZudWxsIT09bCYmKGg9bCxlPyhrPU9iKGMsZiksbnVsbCE9ayYmZy51bnNoaWZ0KGVmKGMsayxoKSkpOmV8fChrPU9iKGMsZiksbnVsbCE9ayYmZy5wdXNoKGVmKGMsayxoKSkpKTtjPWMucmV0dXJufTAhPT1nLmxlbmd0aCYmYS5wdXNoKHtldmVudDpiLGxpc3RlbmVyczpnfSl9ZnVuY3Rpb24gamYoKXt9dmFyIGtmPW51bGwsbGY9bnVsbDtmdW5jdGlvbiBtZihhLGIpe3N3aXRjaChhKXtjYXNlIFwiYnV0dG9uXCI6Y2FzZSBcImlucHV0XCI6Y2FzZSBcInNlbGVjdFwiOmNhc2UgXCJ0ZXh0YXJlYVwiOnJldHVybiEhYi5hdXRvRm9jdXN9cmV0dXJuITF9XG5mdW5jdGlvbiBuZihhLGIpe3JldHVyblwidGV4dGFyZWFcIj09PWF8fFwib3B0aW9uXCI9PT1hfHxcIm5vc2NyaXB0XCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmbnVsbCE9Yi5kYW5nZXJvdXNseVNldElubmVySFRNTC5fX2h0bWx9dmFyIG9mPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBzZXRUaW1lb3V0P3NldFRpbWVvdXQ6dm9pZCAwLHBmPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBjbGVhclRpbWVvdXQ/Y2xlYXJUaW1lb3V0OnZvaWQgMDtmdW5jdGlvbiBxZihhKXsxPT09YS5ub2RlVHlwZT9hLnRleHRDb250ZW50PVwiXCI6OT09PWEubm9kZVR5cGUmJihhPWEuYm9keSxudWxsIT1hJiYoYS50ZXh0Q29udGVudD1cIlwiKSl9XG5mdW5jdGlvbiByZihhKXtmb3IoO251bGwhPWE7YT1hLm5leHRTaWJsaW5nKXt2YXIgYj1hLm5vZGVUeXBlO2lmKDE9PT1ifHwzPT09YilicmVha31yZXR1cm4gYX1mdW5jdGlvbiBzZihhKXthPWEucHJldmlvdXNTaWJsaW5nO2Zvcih2YXIgYj0wO2E7KXtpZig4PT09YS5ub2RlVHlwZSl7dmFyIGM9YS5kYXRhO2lmKFwiJFwiPT09Y3x8XCIkIVwiPT09Y3x8XCIkP1wiPT09Yyl7aWYoMD09PWIpcmV0dXJuIGE7Yi0tfWVsc2VcIi8kXCI9PT1jJiZiKyt9YT1hLnByZXZpb3VzU2libGluZ31yZXR1cm4gbnVsbH12YXIgdGY9MDtmdW5jdGlvbiB1ZihhKXtyZXR1cm57JCR0eXBlb2Y6R2EsdG9TdHJpbmc6YSx2YWx1ZU9mOmF9fXZhciB2Zj1NYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zbGljZSgyKSx3Zj1cIl9fcmVhY3RGaWJlciRcIit2Zix4Zj1cIl9fcmVhY3RQcm9wcyRcIit2ZixmZj1cIl9fcmVhY3RDb250YWluZXIkXCIrdmYseWY9XCJfX3JlYWN0RXZlbnRzJFwiK3ZmO1xuZnVuY3Rpb24gd2MoYSl7dmFyIGI9YVt3Zl07aWYoYilyZXR1cm4gYjtmb3IodmFyIGM9YS5wYXJlbnROb2RlO2M7KXtpZihiPWNbZmZdfHxjW3dmXSl7Yz1iLmFsdGVybmF0ZTtpZihudWxsIT09Yi5jaGlsZHx8bnVsbCE9PWMmJm51bGwhPT1jLmNoaWxkKWZvcihhPXNmKGEpO251bGwhPT1hOyl7aWYoYz1hW3dmXSlyZXR1cm4gYzthPXNmKGEpfXJldHVybiBifWE9YztjPWEucGFyZW50Tm9kZX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBDYihhKXthPWFbd2ZdfHxhW2ZmXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWcmJjEzIT09YS50YWcmJjMhPT1hLnRhZz9udWxsOmF9ZnVuY3Rpb24gdWUoYSl7aWYoNT09PWEudGFnfHw2PT09YS50YWcpcmV0dXJuIGEuc3RhdGVOb2RlO3Rocm93IEVycm9yKHkoMzMpKTt9ZnVuY3Rpb24gRGIoYSl7cmV0dXJuIGFbeGZdfHxudWxsfVxuZnVuY3Rpb24gJGUoYSl7dmFyIGI9YVt5Zl07dm9pZCAwPT09YiYmKGI9YVt5Zl09bmV3IFNldCk7cmV0dXJuIGJ9dmFyIHpmPVtdLEFmPS0xO2Z1bmN0aW9uIEJmKGEpe3JldHVybntjdXJyZW50OmF9fWZ1bmN0aW9uIEgoYSl7MD5BZnx8KGEuY3VycmVudD16ZltBZl0semZbQWZdPW51bGwsQWYtLSl9ZnVuY3Rpb24gSShhLGIpe0FmKys7emZbQWZdPWEuY3VycmVudDthLmN1cnJlbnQ9Yn12YXIgQ2Y9e30sTT1CZihDZiksTj1CZighMSksRGY9Q2Y7XG5mdW5jdGlvbiBFZihhLGIpe3ZhciBjPWEudHlwZS5jb250ZXh0VHlwZXM7aWYoIWMpcmV0dXJuIENmO3ZhciBkPWEuc3RhdGVOb2RlO2lmKGQmJmQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD09PWIpcmV0dXJuIGQuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ7dmFyIGU9e30sZjtmb3IoZiBpbiBjKWVbZl09YltmXTtkJiYoYT1hLnN0YXRlTm9kZSxhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9YixhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWUpO3JldHVybiBlfWZ1bmN0aW9uIEZmKGEpe2E9YS5jaGlsZENvbnRleHRUeXBlcztyZXR1cm4gbnVsbCE9PWEmJnZvaWQgMCE9PWF9ZnVuY3Rpb24gR2YoKXtIKE4pO0goTSl9ZnVuY3Rpb24gSGYoYSxiLGMpe2lmKE0uY3VycmVudCE9PUNmKXRocm93IEVycm9yKHkoMTY4KSk7SShNLGIpO0koTixjKX1cbmZ1bmN0aW9uIElmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTthPWIuY2hpbGRDb250ZXh0VHlwZXM7aWYoXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0Q2hpbGRDb250ZXh0KXJldHVybiBjO2Q9ZC5nZXRDaGlsZENvbnRleHQoKTtmb3IodmFyIGUgaW4gZClpZighKGUgaW4gYSkpdGhyb3cgRXJyb3IoeSgxMDgsUmEoYil8fFwiVW5rbm93blwiLGUpKTtyZXR1cm4gbSh7fSxjLGQpfWZ1bmN0aW9uIEpmKGEpe2E9KGE9YS5zdGF0ZU5vZGUpJiZhLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0fHxDZjtEZj1NLmN1cnJlbnQ7SShNLGEpO0koTixOLmN1cnJlbnQpO3JldHVybiEwfWZ1bmN0aW9uIEtmKGEsYixjKXt2YXIgZD1hLnN0YXRlTm9kZTtpZighZCl0aHJvdyBFcnJvcih5KDE2OSkpO2M/KGE9SWYoYSxiLERmKSxkLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWVyZ2VkQ2hpbGRDb250ZXh0PWEsSChOKSxIKE0pLEkoTSxhKSk6SChOKTtJKE4sYyl9XG52YXIgTGY9bnVsbCxNZj1udWxsLE5mPXIudW5zdGFibGVfcnVuV2l0aFByaW9yaXR5LE9mPXIudW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayxQZj1yLnVuc3RhYmxlX2NhbmNlbENhbGxiYWNrLFFmPXIudW5zdGFibGVfc2hvdWxkWWllbGQsUmY9ci51bnN0YWJsZV9yZXF1ZXN0UGFpbnQsU2Y9ci51bnN0YWJsZV9ub3csVGY9ci51bnN0YWJsZV9nZXRDdXJyZW50UHJpb3JpdHlMZXZlbCxVZj1yLnVuc3RhYmxlX0ltbWVkaWF0ZVByaW9yaXR5LFZmPXIudW5zdGFibGVfVXNlckJsb2NraW5nUHJpb3JpdHksV2Y9ci51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eSxYZj1yLnVuc3RhYmxlX0xvd1ByaW9yaXR5LFlmPXIudW5zdGFibGVfSWRsZVByaW9yaXR5LFpmPXt9LCRmPXZvaWQgMCE9PVJmP1JmOmZ1bmN0aW9uKCl7fSxhZz1udWxsLGJnPW51bGwsY2c9ITEsZGc9U2YoKSxPPTFFND5kZz9TZjpmdW5jdGlvbigpe3JldHVybiBTZigpLWRnfTtcbmZ1bmN0aW9uIGVnKCl7c3dpdGNoKFRmKCkpe2Nhc2UgVWY6cmV0dXJuIDk5O2Nhc2UgVmY6cmV0dXJuIDk4O2Nhc2UgV2Y6cmV0dXJuIDk3O2Nhc2UgWGY6cmV0dXJuIDk2O2Nhc2UgWWY6cmV0dXJuIDk1O2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMzIpKTt9fWZ1bmN0aW9uIGZnKGEpe3N3aXRjaChhKXtjYXNlIDk5OnJldHVybiBVZjtjYXNlIDk4OnJldHVybiBWZjtjYXNlIDk3OnJldHVybiBXZjtjYXNlIDk2OnJldHVybiBYZjtjYXNlIDk1OnJldHVybiBZZjtkZWZhdWx0OnRocm93IEVycm9yKHkoMzMyKSk7fX1mdW5jdGlvbiBnZyhhLGIpe2E9ZmcoYSk7cmV0dXJuIE5mKGEsYil9ZnVuY3Rpb24gaGcoYSxiLGMpe2E9ZmcoYSk7cmV0dXJuIE9mKGEsYixjKX1mdW5jdGlvbiBpZygpe2lmKG51bGwhPT1iZyl7dmFyIGE9Ymc7Ymc9bnVsbDtQZihhKX1qZygpfVxuZnVuY3Rpb24gamcoKXtpZighY2cmJm51bGwhPT1hZyl7Y2c9ITA7dmFyIGE9MDt0cnl7dmFyIGI9YWc7Z2coOTksZnVuY3Rpb24oKXtmb3IoO2E8Yi5sZW5ndGg7YSsrKXt2YXIgYz1iW2FdO2RvIGM9YyghMCk7d2hpbGUobnVsbCE9PWMpfX0pO2FnPW51bGx9Y2F0Y2goYyl7dGhyb3cgbnVsbCE9PWFnJiYoYWc9YWcuc2xpY2UoYSsxKSksT2YoVWYsaWcpLGM7fWZpbmFsbHl7Y2c9ITF9fX12YXIga2c9cmEuUmVhY3RDdXJyZW50QmF0Y2hDb25maWc7ZnVuY3Rpb24gbGcoYSxiKXtpZihhJiZhLmRlZmF1bHRQcm9wcyl7Yj1tKHt9LGIpO2E9YS5kZWZhdWx0UHJvcHM7Zm9yKHZhciBjIGluIGEpdm9pZCAwPT09YltjXSYmKGJbY109YVtjXSk7cmV0dXJuIGJ9cmV0dXJuIGJ9dmFyIG1nPUJmKG51bGwpLG5nPW51bGwsb2c9bnVsbCxwZz1udWxsO2Z1bmN0aW9uIHFnKCl7cGc9b2c9bmc9bnVsbH1cbmZ1bmN0aW9uIHJnKGEpe3ZhciBiPW1nLmN1cnJlbnQ7SChtZyk7YS50eXBlLl9jb250ZXh0Ll9jdXJyZW50VmFsdWU9Yn1mdW5jdGlvbiBzZyhhLGIpe2Zvcig7bnVsbCE9PWE7KXt2YXIgYz1hLmFsdGVybmF0ZTtpZigoYS5jaGlsZExhbmVzJmIpPT09YilpZihudWxsPT09Y3x8KGMuY2hpbGRMYW5lcyZiKT09PWIpYnJlYWs7ZWxzZSBjLmNoaWxkTGFuZXN8PWI7ZWxzZSBhLmNoaWxkTGFuZXN8PWIsbnVsbCE9PWMmJihjLmNoaWxkTGFuZXN8PWIpO2E9YS5yZXR1cm59fWZ1bmN0aW9uIHRnKGEsYil7bmc9YTtwZz1vZz1udWxsO2E9YS5kZXBlbmRlbmNpZXM7bnVsbCE9PWEmJm51bGwhPT1hLmZpcnN0Q29udGV4dCYmKDAhPT0oYS5sYW5lcyZiKSYmKHVnPSEwKSxhLmZpcnN0Q29udGV4dD1udWxsKX1cbmZ1bmN0aW9uIHZnKGEsYil7aWYocGchPT1hJiYhMSE9PWImJjAhPT1iKXtpZihcIm51bWJlclwiIT09dHlwZW9mIGJ8fDEwNzM3NDE4MjM9PT1iKXBnPWEsYj0xMDczNzQxODIzO2I9e2NvbnRleHQ6YSxvYnNlcnZlZEJpdHM6YixuZXh0Om51bGx9O2lmKG51bGw9PT1vZyl7aWYobnVsbD09PW5nKXRocm93IEVycm9yKHkoMzA4KSk7b2c9YjtuZy5kZXBlbmRlbmNpZXM9e2xhbmVzOjAsZmlyc3RDb250ZXh0OmIscmVzcG9uZGVyczpudWxsfX1lbHNlIG9nPW9nLm5leHQ9Yn1yZXR1cm4gYS5fY3VycmVudFZhbHVlfXZhciB3Zz0hMTtmdW5jdGlvbiB4ZyhhKXthLnVwZGF0ZVF1ZXVlPXtiYXNlU3RhdGU6YS5tZW1vaXplZFN0YXRlLGZpcnN0QmFzZVVwZGF0ZTpudWxsLGxhc3RCYXNlVXBkYXRlOm51bGwsc2hhcmVkOntwZW5kaW5nOm51bGx9LGVmZmVjdHM6bnVsbH19XG5mdW5jdGlvbiB5ZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPT09YSYmKGIudXBkYXRlUXVldWU9e2Jhc2VTdGF0ZTphLmJhc2VTdGF0ZSxmaXJzdEJhc2VVcGRhdGU6YS5maXJzdEJhc2VVcGRhdGUsbGFzdEJhc2VVcGRhdGU6YS5sYXN0QmFzZVVwZGF0ZSxzaGFyZWQ6YS5zaGFyZWQsZWZmZWN0czphLmVmZmVjdHN9KX1mdW5jdGlvbiB6ZyhhLGIpe3JldHVybntldmVudFRpbWU6YSxsYW5lOmIsdGFnOjAscGF5bG9hZDpudWxsLGNhbGxiYWNrOm51bGwsbmV4dDpudWxsfX1mdW5jdGlvbiBBZyhhLGIpe2E9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09YSl7YT1hLnNoYXJlZDt2YXIgYz1hLnBlbmRpbmc7bnVsbD09PWM/Yi5uZXh0PWI6KGIubmV4dD1jLm5leHQsYy5uZXh0PWIpO2EucGVuZGluZz1ifX1cbmZ1bmN0aW9uIEJnKGEsYil7dmFyIGM9YS51cGRhdGVRdWV1ZSxkPWEuYWx0ZXJuYXRlO2lmKG51bGwhPT1kJiYoZD1kLnVwZGF0ZVF1ZXVlLGM9PT1kKSl7dmFyIGU9bnVsbCxmPW51bGw7Yz1jLmZpcnN0QmFzZVVwZGF0ZTtpZihudWxsIT09Yyl7ZG97dmFyIGc9e2V2ZW50VGltZTpjLmV2ZW50VGltZSxsYW5lOmMubGFuZSx0YWc6Yy50YWcscGF5bG9hZDpjLnBheWxvYWQsY2FsbGJhY2s6Yy5jYWxsYmFjayxuZXh0Om51bGx9O251bGw9PT1mP2U9Zj1nOmY9Zi5uZXh0PWc7Yz1jLm5leHR9d2hpbGUobnVsbCE9PWMpO251bGw9PT1mP2U9Zj1iOmY9Zi5uZXh0PWJ9ZWxzZSBlPWY9YjtjPXtiYXNlU3RhdGU6ZC5iYXNlU3RhdGUsZmlyc3RCYXNlVXBkYXRlOmUsbGFzdEJhc2VVcGRhdGU6ZixzaGFyZWQ6ZC5zaGFyZWQsZWZmZWN0czpkLmVmZmVjdHN9O2EudXBkYXRlUXVldWU9YztyZXR1cm59YT1jLmxhc3RCYXNlVXBkYXRlO251bGw9PT1hP2MuZmlyc3RCYXNlVXBkYXRlPWI6YS5uZXh0PVxuYjtjLmxhc3RCYXNlVXBkYXRlPWJ9XG5mdW5jdGlvbiBDZyhhLGIsYyxkKXt2YXIgZT1hLnVwZGF0ZVF1ZXVlO3dnPSExO3ZhciBmPWUuZmlyc3RCYXNlVXBkYXRlLGc9ZS5sYXN0QmFzZVVwZGF0ZSxoPWUuc2hhcmVkLnBlbmRpbmc7aWYobnVsbCE9PWgpe2Uuc2hhcmVkLnBlbmRpbmc9bnVsbDt2YXIgaz1oLGw9ay5uZXh0O2submV4dD1udWxsO251bGw9PT1nP2Y9bDpnLm5leHQ9bDtnPWs7dmFyIG49YS5hbHRlcm5hdGU7aWYobnVsbCE9PW4pe249bi51cGRhdGVRdWV1ZTt2YXIgQT1uLmxhc3RCYXNlVXBkYXRlO0EhPT1nJiYobnVsbD09PUE/bi5maXJzdEJhc2VVcGRhdGU9bDpBLm5leHQ9bCxuLmxhc3RCYXNlVXBkYXRlPWspfX1pZihudWxsIT09Zil7QT1lLmJhc2VTdGF0ZTtnPTA7bj1sPWs9bnVsbDtkb3toPWYubGFuZTt2YXIgcD1mLmV2ZW50VGltZTtpZigoZCZoKT09PWgpe251bGwhPT1uJiYobj1uLm5leHQ9e2V2ZW50VGltZTpwLGxhbmU6MCx0YWc6Zi50YWcscGF5bG9hZDpmLnBheWxvYWQsY2FsbGJhY2s6Zi5jYWxsYmFjayxcbm5leHQ6bnVsbH0pO2E6e3ZhciBDPWEseD1mO2g9YjtwPWM7c3dpdGNoKHgudGFnKXtjYXNlIDE6Qz14LnBheWxvYWQ7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIEMpe0E9Qy5jYWxsKHAsQSxoKTticmVhayBhfUE9QzticmVhayBhO2Nhc2UgMzpDLmZsYWdzPUMuZmxhZ3MmLTQwOTd8NjQ7Y2FzZSAwOkM9eC5wYXlsb2FkO2g9XCJmdW5jdGlvblwiPT09dHlwZW9mIEM/Qy5jYWxsKHAsQSxoKTpDO2lmKG51bGw9PT1ofHx2b2lkIDA9PT1oKWJyZWFrIGE7QT1tKHt9LEEsaCk7YnJlYWsgYTtjYXNlIDI6d2c9ITB9fW51bGwhPT1mLmNhbGxiYWNrJiYoYS5mbGFnc3w9MzIsaD1lLmVmZmVjdHMsbnVsbD09PWg/ZS5lZmZlY3RzPVtmXTpoLnB1c2goZikpfWVsc2UgcD17ZXZlbnRUaW1lOnAsbGFuZTpoLHRhZzpmLnRhZyxwYXlsb2FkOmYucGF5bG9hZCxjYWxsYmFjazpmLmNhbGxiYWNrLG5leHQ6bnVsbH0sbnVsbD09PW4/KGw9bj1wLGs9QSk6bj1uLm5leHQ9cCxnfD1oO2Y9Zi5uZXh0O2lmKG51bGw9PT1cbmYpaWYoaD1lLnNoYXJlZC5wZW5kaW5nLG51bGw9PT1oKWJyZWFrO2Vsc2UgZj1oLm5leHQsaC5uZXh0PW51bGwsZS5sYXN0QmFzZVVwZGF0ZT1oLGUuc2hhcmVkLnBlbmRpbmc9bnVsbH13aGlsZSgxKTtudWxsPT09biYmKGs9QSk7ZS5iYXNlU3RhdGU9aztlLmZpcnN0QmFzZVVwZGF0ZT1sO2UubGFzdEJhc2VVcGRhdGU9bjtEZ3w9ZzthLmxhbmVzPWc7YS5tZW1vaXplZFN0YXRlPUF9fWZ1bmN0aW9uIEVnKGEsYixjKXthPWIuZWZmZWN0cztiLmVmZmVjdHM9bnVsbDtpZihudWxsIT09YSlmb3IoYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgZD1hW2JdLGU9ZC5jYWxsYmFjaztpZihudWxsIT09ZSl7ZC5jYWxsYmFjaz1udWxsO2Q9YztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZSl0aHJvdyBFcnJvcih5KDE5MSxlKSk7ZS5jYWxsKGQpfX19dmFyIEZnPShuZXcgYWEuQ29tcG9uZW50KS5yZWZzO1xuZnVuY3Rpb24gR2coYSxiLGMsZCl7Yj1hLm1lbW9pemVkU3RhdGU7Yz1jKGQsYik7Yz1udWxsPT09Y3x8dm9pZCAwPT09Yz9iOm0oe30sYixjKTthLm1lbW9pemVkU3RhdGU9YzswPT09YS5sYW5lcyYmKGEudXBkYXRlUXVldWUuYmFzZVN0YXRlPWMpfVxudmFyIEtnPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbHMpP1piKGEpPT09YTohMX0sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUhnKCksZT1JZyhhKSxmPXpnKGQsZSk7Zi5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihmLmNhbGxiYWNrPWMpO0FnKGEsZik7SmcoYSxlLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxzO3ZhciBkPUhnKCksZT1JZyhhKSxmPXpnKGQsZSk7Zi50YWc9MTtmLnBheWxvYWQ9Yjt2b2lkIDAhPT1jJiZudWxsIT09YyYmKGYuY2FsbGJhY2s9Yyk7QWcoYSxmKTtKZyhhLGUsZCl9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbihhLGIpe2E9YS5fcmVhY3RJbnRlcm5hbHM7dmFyIGM9SGcoKSxkPUlnKGEpLGU9emcoYyxkKTtlLnRhZz0yO3ZvaWQgMCE9PWImJm51bGwhPT1iJiYoZS5jYWxsYmFjaz1cbmIpO0FnKGEsZSk7SmcoYSxkLGMpfX07ZnVuY3Rpb24gTGcoYSxiLGMsZCxlLGYsZyl7YT1hLnN0YXRlTm9kZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgYS5zaG91bGRDb21wb25lbnRVcGRhdGU/YS5zaG91bGRDb21wb25lbnRVcGRhdGUoZCxmLGcpOmIucHJvdG90eXBlJiZiLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hSmUoYyxkKXx8IUplKGUsZik6ITB9XG5mdW5jdGlvbiBNZyhhLGIsYyl7dmFyIGQ9ITEsZT1DZjt2YXIgZj1iLmNvbnRleHRUeXBlO1wib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWY/Zj12ZyhmKTooZT1GZihiKT9EZjpNLmN1cnJlbnQsZD1iLmNvbnRleHRUeXBlcyxmPShkPW51bGwhPT1kJiZ2b2lkIDAhPT1kKT9FZihhLGUpOkNmKTtiPW5ldyBiKGMsZik7YS5tZW1vaXplZFN0YXRlPW51bGwhPT1iLnN0YXRlJiZ2b2lkIDAhPT1iLnN0YXRlP2Iuc3RhdGU6bnVsbDtiLnVwZGF0ZXI9S2c7YS5zdGF0ZU5vZGU9YjtiLl9yZWFjdEludGVybmFscz1hO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1lLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9Zik7cmV0dXJuIGJ9XG5mdW5jdGlvbiBOZyhhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmS2cuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiBPZyhhLGIsYyxkKXt2YXIgZT1hLnN0YXRlTm9kZTtlLnByb3BzPWM7ZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZS5yZWZzPUZnO3hnKGEpO3ZhciBmPWIuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09Zj9lLmNvbnRleHQ9dmcoZik6KGY9RmYoYik/RGY6TS5jdXJyZW50LGUuY29udGV4dD1FZihhLGYpKTtDZyhhLGMsZSxkKTtlLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZTtmPWIuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBmJiYoR2coYSxiLGYsYyksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wc3x8XCJmdW5jdGlvblwiPT09dHlwZW9mIGUuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudHx8XG4oYj1lLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudFdpbGxNb3VudCYmZS5jb21wb25lbnRXaWxsTW91bnQoKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZlLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQoKSxiIT09ZS5zdGF0ZSYmS2cuZW5xdWV1ZVJlcGxhY2VTdGF0ZShlLGUuc3RhdGUsbnVsbCksQ2coYSxjLGUsZCksZS5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO1wiZnVuY3Rpb25cIj09PXR5cGVvZiBlLmNvbXBvbmVudERpZE1vdW50JiYoYS5mbGFnc3w9NCl9dmFyIFBnPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBRZyhhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7aWYoYyl7aWYoMSE9PWMudGFnKXRocm93IEVycm9yKHkoMzA5KSk7dmFyIGQ9Yy5zdGF0ZU5vZGV9aWYoIWQpdGhyb3cgRXJyb3IoeSgxNDcsYSkpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcztiPT09RmcmJihiPWQucmVmcz17fSk7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1pZihcInN0cmluZ1wiIT09dHlwZW9mIGEpdGhyb3cgRXJyb3IoeSgyODQpKTtpZighYy5fb3duZXIpdGhyb3cgRXJyb3IoeSgyOTAsYSkpO31yZXR1cm4gYX1cbmZ1bmN0aW9uIFJnKGEsYil7aWYoXCJ0ZXh0YXJlYVwiIT09YS50eXBlKXRocm93IEVycm9yKHkoMzEsXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChiKT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGIpLmpvaW4oXCIsIFwiKStcIn1cIjpiKSk7fVxuZnVuY3Rpb24gU2coYSl7ZnVuY3Rpb24gYihiLGMpe2lmKGEpe3ZhciBkPWIubGFzdEVmZmVjdDtudWxsIT09ZD8oZC5uZXh0RWZmZWN0PWMsYi5sYXN0RWZmZWN0PWMpOmIuZmlyc3RFZmZlY3Q9Yi5sYXN0RWZmZWN0PWM7Yy5uZXh0RWZmZWN0PW51bGw7Yy5mbGFncz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYil7YT1UZyhhLGIpO2EuaW5kZXg9MDthLnNpYmxpbmc9bnVsbDtyZXR1cm4gYX1mdW5jdGlvbiBmKGIsYyxkKXtiLmluZGV4PWQ7aWYoIWEpcmV0dXJuIGM7ZD1iLmFsdGVybmF0ZTtpZihudWxsIT09ZClyZXR1cm4gZD1kLmluZGV4LGQ8Yz8oYi5mbGFncz0yLFxuYyk6ZDtiLmZsYWdzPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmZsYWdzPTIpO3JldHVybiBifWZ1bmN0aW9uIGgoYSxiLGMsZCl7aWYobnVsbD09PWJ8fDYhPT1iLnRhZylyZXR1cm4gYj1VZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLmVsZW1lbnRUeXBlPT09Yy50eXBlKXJldHVybiBkPWUoYixjLnByb3BzKSxkLnJlZj1RZyhhLGIsYyksZC5yZXR1cm49YSxkO2Q9VmcoYy50eXBlLGMua2V5LGMucHJvcHMsbnVsbCxhLm1vZGUsZCk7ZC5yZWY9UWcoYSxiLGMpO2QucmV0dXJuPWE7cmV0dXJuIGR9ZnVuY3Rpb24gbChhLGIsYyxkKXtpZihudWxsPT09Ynx8NCE9PWIudGFnfHxiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvIT09Yy5jb250YWluZXJJbmZvfHxiLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbiE9PWMuaW1wbGVtZW50YXRpb24pcmV0dXJuIGI9XG5XZyhjLGEubW9kZSxkKSxiLnJldHVybj1hLGI7Yj1lKGIsYy5jaGlsZHJlbnx8W10pO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gbihhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHw3IT09Yi50YWcpcmV0dXJuIGI9WGcoYyxhLm1vZGUsZCxmKSxiLnJldHVybj1hLGI7Yj1lKGIsYyk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBBKGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj1VZyhcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBzYTpyZXR1cm4gYz1WZyhiLnR5cGUsYi5rZXksYi5wcm9wcyxudWxsLGEubW9kZSxjKSxjLnJlZj1RZyhhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgdGE6cmV0dXJuIGI9V2coYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKFBnKGIpfHxMYShiKSlyZXR1cm4gYj1YZyhiLFxuYS5tb2RlLGMsbnVsbCksYi5yZXR1cm49YSxiO1JnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gcChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBzYTpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PXVhP24oYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSB0YTpyZXR1cm4gYy5rZXk9PT1lP2woYSxiLGMsZCk6bnVsbH1pZihQZyhjKXx8TGEoYykpcmV0dXJuIG51bGwhPT1lP251bGw6bihhLGIsYyxkLG51bGwpO1JnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24gQyhhLGIsYyxkLGUpe2lmKFwic3RyaW5nXCI9PT10eXBlb2YgZHx8XCJudW1iZXJcIj09PXR5cGVvZiBkKXJldHVybiBhPWEuZ2V0KGMpfHxcbm51bGwsaChiLGEsXCJcIitkLGUpO2lmKFwib2JqZWN0XCI9PT10eXBlb2YgZCYmbnVsbCE9PWQpe3N3aXRjaChkLiQkdHlwZW9mKXtjYXNlIHNhOnJldHVybiBhPWEuZ2V0KG51bGw9PT1kLmtleT9jOmQua2V5KXx8bnVsbCxkLnR5cGU9PT11YT9uKGIsYSxkLnByb3BzLmNoaWxkcmVuLGUsZC5rZXkpOmsoYixhLGQsZSk7Y2FzZSB0YTpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsbChiLGEsZCxlKX1pZihQZyhkKXx8TGEoZCkpcmV0dXJuIGE9YS5nZXQoYyl8fG51bGwsbihiLGEsZCxlLG51bGwpO1JnKGIsZCl9cmV0dXJuIG51bGx9ZnVuY3Rpb24geChlLGcsaCxrKXtmb3IodmFyIGw9bnVsbCx0PW51bGwsdT1nLHo9Zz0wLHE9bnVsbDtudWxsIT09dSYmejxoLmxlbmd0aDt6Kyspe3UuaW5kZXg+ej8ocT11LHU9bnVsbCk6cT11LnNpYmxpbmc7dmFyIG49cChlLHUsaFt6XSxrKTtpZihudWxsPT09bil7bnVsbD09PXUmJih1PXEpO2JyZWFrfWEmJnUmJm51bGw9PT1cbm4uYWx0ZXJuYXRlJiZiKGUsdSk7Zz1mKG4sZyx6KTtudWxsPT09dD9sPW46dC5zaWJsaW5nPW47dD1uO3U9cX1pZih6PT09aC5sZW5ndGgpcmV0dXJuIGMoZSx1KSxsO2lmKG51bGw9PT11KXtmb3IoO3o8aC5sZW5ndGg7eisrKXU9QShlLGhbel0sayksbnVsbCE9PXUmJihnPWYodSxnLHopLG51bGw9PT10P2w9dTp0LnNpYmxpbmc9dSx0PXUpO3JldHVybiBsfWZvcih1PWQoZSx1KTt6PGgubGVuZ3RoO3orKylxPUModSxlLHosaFt6XSxrKSxudWxsIT09cSYmKGEmJm51bGwhPT1xLmFsdGVybmF0ZSYmdS5kZWxldGUobnVsbD09PXEua2V5P3o6cS5rZXkpLGc9ZihxLGcseiksbnVsbD09PXQ/bD1xOnQuc2libGluZz1xLHQ9cSk7YSYmdS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gbH1mdW5jdGlvbiB3KGUsZyxoLGspe3ZhciBsPUxhKGgpO2lmKFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBsKXRocm93IEVycm9yKHkoMTUwKSk7aD1sLmNhbGwoaCk7aWYobnVsbD09XG5oKXRocm93IEVycm9yKHkoMTUxKSk7Zm9yKHZhciB0PWw9bnVsbCx1PWcsej1nPTAscT1udWxsLG49aC5uZXh0KCk7bnVsbCE9PXUmJiFuLmRvbmU7eisrLG49aC5uZXh0KCkpe3UuaW5kZXg+ej8ocT11LHU9bnVsbCk6cT11LnNpYmxpbmc7dmFyIHc9cChlLHUsbi52YWx1ZSxrKTtpZihudWxsPT09dyl7bnVsbD09PXUmJih1PXEpO2JyZWFrfWEmJnUmJm51bGw9PT13LmFsdGVybmF0ZSYmYihlLHUpO2c9Zih3LGcseik7bnVsbD09PXQ/bD13OnQuc2libGluZz13O3Q9dzt1PXF9aWYobi5kb25lKXJldHVybiBjKGUsdSksbDtpZihudWxsPT09dSl7Zm9yKDshbi5kb25lO3orKyxuPWgubmV4dCgpKW49QShlLG4udmFsdWUsayksbnVsbCE9PW4mJihnPWYobixnLHopLG51bGw9PT10P2w9bjp0LnNpYmxpbmc9bix0PW4pO3JldHVybiBsfWZvcih1PWQoZSx1KTshbi5kb25lO3orKyxuPWgubmV4dCgpKW49Qyh1LGUseixuLnZhbHVlLGspLG51bGwhPT1uJiYoYSYmbnVsbCE9PW4uYWx0ZXJuYXRlJiZcbnUuZGVsZXRlKG51bGw9PT1uLmtleT96Om4ua2V5KSxnPWYobixnLHopLG51bGw9PT10P2w9bjp0LnNpYmxpbmc9bix0PW4pO2EmJnUuZm9yRWFjaChmdW5jdGlvbihhKXtyZXR1cm4gYihlLGEpfSk7cmV0dXJuIGx9cmV0dXJuIGZ1bmN0aW9uKGEsZCxmLGgpe3ZhciBrPVwib2JqZWN0XCI9PT10eXBlb2YgZiYmbnVsbCE9PWYmJmYudHlwZT09PXVhJiZudWxsPT09Zi5rZXk7ayYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGw9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihsKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIHNhOmE6e2w9Zi5rZXk7Zm9yKGs9ZDtudWxsIT09azspe2lmKGsua2V5PT09bCl7c3dpdGNoKGsudGFnKXtjYXNlIDc6aWYoZi50eXBlPT09dWEpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYucHJvcHMuY2hpbGRyZW4pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9YnJlYWs7ZGVmYXVsdDppZihrLmVsZW1lbnRUeXBlPT09Zi50eXBlKXtjKGEsay5zaWJsaW5nKTtcbmQ9ZShrLGYucHJvcHMpO2QucmVmPVFnKGEsayxmKTtkLnJldHVybj1hO2E9ZDticmVhayBhfX1jKGEsayk7YnJlYWt9ZWxzZSBiKGEsayk7az1rLnNpYmxpbmd9Zi50eXBlPT09dWE/KGQ9WGcoZi5wcm9wcy5jaGlsZHJlbixhLm1vZGUsaCxmLmtleSksZC5yZXR1cm49YSxhPWQpOihoPVZnKGYudHlwZSxmLmtleSxmLnByb3BzLG51bGwsYS5tb2RlLGgpLGgucmVmPVFnKGEsZCxmKSxoLnJldHVybj1hLGE9aCl9cmV0dXJuIGcoYSk7Y2FzZSB0YTphOntmb3Ioaz1mLmtleTtudWxsIT09ZDspe2lmKGQua2V5PT09aylpZig0PT09ZC50YWcmJmQuc3RhdGVOb2RlLmNvbnRhaW5lckluZm89PT1mLmNvbnRhaW5lckluZm8mJmQuc3RhdGVOb2RlLmltcGxlbWVudGF0aW9uPT09Zi5pbXBsZW1lbnRhdGlvbil7YyhhLGQuc2libGluZyk7ZD1lKGQsZi5jaGlsZHJlbnx8W10pO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD1cbldnKGYsYS5tb2RlLGgpO2QucmV0dXJuPWE7YT1kfXJldHVybiBnKGEpfWlmKFwic3RyaW5nXCI9PT10eXBlb2YgZnx8XCJudW1iZXJcIj09PXR5cGVvZiBmKXJldHVybiBmPVwiXCIrZixudWxsIT09ZCYmNj09PWQudGFnPyhjKGEsZC5zaWJsaW5nKSxkPWUoZCxmKSxkLnJldHVybj1hLGE9ZCk6KGMoYSxkKSxkPVVnKGYsYS5tb2RlLGgpLGQucmV0dXJuPWEsYT1kKSxnKGEpO2lmKFBnKGYpKXJldHVybiB4KGEsZCxmLGgpO2lmKExhKGYpKXJldHVybiB3KGEsZCxmLGgpO2wmJlJnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmJiYhaylzd2l0Y2goYS50YWcpe2Nhc2UgMTpjYXNlIDIyOmNhc2UgMDpjYXNlIDExOmNhc2UgMTU6dGhyb3cgRXJyb3IoeSgxNTIsUmEoYS50eXBlKXx8XCJDb21wb25lbnRcIikpO31yZXR1cm4gYyhhLGQpfX12YXIgWWc9U2coITApLFpnPVNnKCExKSwkZz17fSxhaD1CZigkZyksYmg9QmYoJGcpLGNoPUJmKCRnKTtcbmZ1bmN0aW9uIGRoKGEpe2lmKGE9PT0kZyl0aHJvdyBFcnJvcih5KDE3NCkpO3JldHVybiBhfWZ1bmN0aW9uIGVoKGEsYil7SShjaCxiKTtJKGJoLGEpO0koYWgsJGcpO2E9Yi5ub2RlVHlwZTtzd2l0Y2goYSl7Y2FzZSA5OmNhc2UgMTE6Yj0oYj1iLmRvY3VtZW50RWxlbWVudCk/Yi5uYW1lc3BhY2VVUkk6bWIobnVsbCxcIlwiKTticmVhaztkZWZhdWx0OmE9OD09PWE/Yi5wYXJlbnROb2RlOmIsYj1hLm5hbWVzcGFjZVVSSXx8bnVsbCxhPWEudGFnTmFtZSxiPW1iKGIsYSl9SChhaCk7SShhaCxiKX1mdW5jdGlvbiBmaCgpe0goYWgpO0goYmgpO0goY2gpfWZ1bmN0aW9uIGdoKGEpe2RoKGNoLmN1cnJlbnQpO3ZhciBiPWRoKGFoLmN1cnJlbnQpO3ZhciBjPW1iKGIsYS50eXBlKTtiIT09YyYmKEkoYmgsYSksSShhaCxjKSl9ZnVuY3Rpb24gaGgoYSl7YmguY3VycmVudD09PWEmJihIKGFoKSxIKGJoKSl9dmFyIFA9QmYoMCk7XG5mdW5jdGlvbiBpaChhKXtmb3IodmFyIGI9YTtudWxsIT09Yjspe2lmKDEzPT09Yi50YWcpe3ZhciBjPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09YyYmKGM9Yy5kZWh5ZHJhdGVkLG51bGw9PT1jfHxcIiQ/XCI9PT1jLmRhdGF8fFwiJCFcIj09PWMuZGF0YSkpcmV0dXJuIGJ9ZWxzZSBpZigxOT09PWIudGFnJiZ2b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMucmV2ZWFsT3JkZXIpe2lmKDAhPT0oYi5mbGFncyY2NCkpcmV0dXJuIGJ9ZWxzZSBpZihudWxsIT09Yi5jaGlsZCl7Yi5jaGlsZC5yZXR1cm49YjtiPWIuY2hpbGQ7Y29udGludWV9aWYoYj09PWEpYnJlYWs7Zm9yKDtudWxsPT09Yi5zaWJsaW5nOyl7aWYobnVsbD09PWIucmV0dXJufHxiLnJldHVybj09PWEpcmV0dXJuIG51bGw7Yj1iLnJldHVybn1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfXJldHVybiBudWxsfXZhciBqaD1udWxsLGtoPW51bGwsbGg9ITE7XG5mdW5jdGlvbiBtaChhLGIpe3ZhciBjPW5oKDUsbnVsbCxudWxsLDApO2MuZWxlbWVudFR5cGU9XCJERUxFVEVEXCI7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmZsYWdzPTg7bnVsbCE9PWEubGFzdEVmZmVjdD8oYS5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YyxhLmxhc3RFZmZlY3Q9Yyk6YS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9Y31mdW5jdGlvbiBvaChhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtjYXNlIDEzOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITF9fVxuZnVuY3Rpb24gcGgoYSl7aWYobGgpe3ZhciBiPWtoO2lmKGIpe3ZhciBjPWI7aWYoIW9oKGEsYikpe2I9cmYoYy5uZXh0U2libGluZyk7aWYoIWJ8fCFvaChhLGIpKXthLmZsYWdzPWEuZmxhZ3MmLTEwMjV8MjtsaD0hMTtqaD1hO3JldHVybn1taChqaCxjKX1qaD1hO2toPXJmKGIuZmlyc3RDaGlsZCl9ZWxzZSBhLmZsYWdzPWEuZmxhZ3MmLTEwMjV8MixsaD0hMSxqaD1hfX1mdW5jdGlvbiBxaChhKXtmb3IoYT1hLnJldHVybjtudWxsIT09YSYmNSE9PWEudGFnJiYzIT09YS50YWcmJjEzIT09YS50YWc7KWE9YS5yZXR1cm47amg9YX1cbmZ1bmN0aW9uIHJoKGEpe2lmKGEhPT1qaClyZXR1cm4hMTtpZighbGgpcmV0dXJuIHFoKGEpLGxoPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhbmYoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPWtoO2I7KW1oKGEsYiksYj1yZihiLm5leHRTaWJsaW5nKTtxaChhKTtpZigxMz09PWEudGFnKXthPWEubWVtb2l6ZWRTdGF0ZTthPW51bGwhPT1hP2EuZGVoeWRyYXRlZDpudWxsO2lmKCFhKXRocm93IEVycm9yKHkoMzE3KSk7YTp7YT1hLm5leHRTaWJsaW5nO2ZvcihiPTA7YTspe2lmKDg9PT1hLm5vZGVUeXBlKXt2YXIgYz1hLmRhdGE7aWYoXCIvJFwiPT09Yyl7aWYoMD09PWIpe2toPXJmKGEubmV4dFNpYmxpbmcpO2JyZWFrIGF9Yi0tfWVsc2VcIiRcIiE9PWMmJlwiJCFcIiE9PWMmJlwiJD9cIiE9PWN8fGIrK31hPWEubmV4dFNpYmxpbmd9a2g9bnVsbH19ZWxzZSBraD1qaD9yZihhLnN0YXRlTm9kZS5uZXh0U2libGluZyk6bnVsbDtyZXR1cm4hMH1cbmZ1bmN0aW9uIHNoKCl7a2g9amg9bnVsbDtsaD0hMX12YXIgdGg9W107ZnVuY3Rpb24gdWgoKXtmb3IodmFyIGE9MDthPHRoLmxlbmd0aDthKyspdGhbYV0uX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9bnVsbDt0aC5sZW5ndGg9MH12YXIgdmg9cmEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcix3aD1yYS5SZWFjdEN1cnJlbnRCYXRjaENvbmZpZyx4aD0wLFI9bnVsbCxTPW51bGwsVD1udWxsLHloPSExLHpoPSExO2Z1bmN0aW9uIEFoKCl7dGhyb3cgRXJyb3IoeSgzMjEpKTt9ZnVuY3Rpb24gQmgoYSxiKXtpZihudWxsPT09YilyZXR1cm4hMTtmb3IodmFyIGM9MDtjPGIubGVuZ3RoJiZjPGEubGVuZ3RoO2MrKylpZighSGUoYVtjXSxiW2NdKSlyZXR1cm4hMTtyZXR1cm4hMH1cbmZ1bmN0aW9uIENoKGEsYixjLGQsZSxmKXt4aD1mO1I9YjtiLm1lbW9pemVkU3RhdGU9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7Yi5sYW5lcz0wO3ZoLmN1cnJlbnQ9bnVsbD09PWF8fG51bGw9PT1hLm1lbW9pemVkU3RhdGU/RGg6RWg7YT1jKGQsZSk7aWYoemgpe2Y9MDtkb3t6aD0hMTtpZighKDI1PmYpKXRocm93IEVycm9yKHkoMzAxKSk7Zis9MTtUPVM9bnVsbDtiLnVwZGF0ZVF1ZXVlPW51bGw7dmguY3VycmVudD1GaDthPWMoZCxlKX13aGlsZSh6aCl9dmguY3VycmVudD1HaDtiPW51bGwhPT1TJiZudWxsIT09Uy5uZXh0O3hoPTA7VD1TPVI9bnVsbDt5aD0hMTtpZihiKXRocm93IEVycm9yKHkoMzAwKSk7cmV0dXJuIGF9ZnVuY3Rpb24gSGgoKXt2YXIgYT17bWVtb2l6ZWRTdGF0ZTpudWxsLGJhc2VTdGF0ZTpudWxsLGJhc2VRdWV1ZTpudWxsLHF1ZXVlOm51bGwsbmV4dDpudWxsfTtudWxsPT09VD9SLm1lbW9pemVkU3RhdGU9VD1hOlQ9VC5uZXh0PWE7cmV0dXJuIFR9XG5mdW5jdGlvbiBJaCgpe2lmKG51bGw9PT1TKXt2YXIgYT1SLmFsdGVybmF0ZTthPW51bGwhPT1hP2EubWVtb2l6ZWRTdGF0ZTpudWxsfWVsc2UgYT1TLm5leHQ7dmFyIGI9bnVsbD09PVQ/Ui5tZW1vaXplZFN0YXRlOlQubmV4dDtpZihudWxsIT09YilUPWIsUz1hO2Vsc2V7aWYobnVsbD09PWEpdGhyb3cgRXJyb3IoeSgzMTApKTtTPWE7YT17bWVtb2l6ZWRTdGF0ZTpTLm1lbW9pemVkU3RhdGUsYmFzZVN0YXRlOlMuYmFzZVN0YXRlLGJhc2VRdWV1ZTpTLmJhc2VRdWV1ZSxxdWV1ZTpTLnF1ZXVlLG5leHQ6bnVsbH07bnVsbD09PVQ/Ui5tZW1vaXplZFN0YXRlPVQ9YTpUPVQubmV4dD1hfXJldHVybiBUfWZ1bmN0aW9uIEpoKGEsYil7cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGI/YihhKTpifVxuZnVuY3Rpb24gS2goYSl7dmFyIGI9SWgoKSxjPWIucXVldWU7aWYobnVsbD09PWMpdGhyb3cgRXJyb3IoeSgzMTEpKTtjLmxhc3RSZW5kZXJlZFJlZHVjZXI9YTt2YXIgZD1TLGU9ZC5iYXNlUXVldWUsZj1jLnBlbmRpbmc7aWYobnVsbCE9PWYpe2lmKG51bGwhPT1lKXt2YXIgZz1lLm5leHQ7ZS5uZXh0PWYubmV4dDtmLm5leHQ9Z31kLmJhc2VRdWV1ZT1lPWY7Yy5wZW5kaW5nPW51bGx9aWYobnVsbCE9PWUpe2U9ZS5uZXh0O2Q9ZC5iYXNlU3RhdGU7dmFyIGg9Zz1mPW51bGwsaz1lO2Rve3ZhciBsPWsubGFuZTtpZigoeGgmbCk9PT1sKW51bGwhPT1oJiYoaD1oLm5leHQ9e2xhbmU6MCxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLGVhZ2VyU3RhdGU6ay5lYWdlclN0YXRlLG5leHQ6bnVsbH0pLGQ9ay5lYWdlclJlZHVjZXI9PT1hP2suZWFnZXJTdGF0ZTphKGQsay5hY3Rpb24pO2Vsc2V7dmFyIG49e2xhbmU6bCxhY3Rpb246ay5hY3Rpb24sZWFnZXJSZWR1Y2VyOmsuZWFnZXJSZWR1Y2VyLFxuZWFnZXJTdGF0ZTprLmVhZ2VyU3RhdGUsbmV4dDpudWxsfTtudWxsPT09aD8oZz1oPW4sZj1kKTpoPWgubmV4dD1uO1IubGFuZXN8PWw7RGd8PWx9az1rLm5leHR9d2hpbGUobnVsbCE9PWsmJmshPT1lKTtudWxsPT09aD9mPWQ6aC5uZXh0PWc7SGUoZCxiLm1lbW9pemVkU3RhdGUpfHwodWc9ITApO2IubWVtb2l6ZWRTdGF0ZT1kO2IuYmFzZVN0YXRlPWY7Yi5iYXNlUXVldWU9aDtjLmxhc3RSZW5kZXJlZFN0YXRlPWR9cmV0dXJuW2IubWVtb2l6ZWRTdGF0ZSxjLmRpc3BhdGNoXX1cbmZ1bmN0aW9uIExoKGEpe3ZhciBiPUloKCksYz1iLnF1ZXVlO2lmKG51bGw9PT1jKXRocm93IEVycm9yKHkoMzExKSk7Yy5sYXN0UmVuZGVyZWRSZWR1Y2VyPWE7dmFyIGQ9Yy5kaXNwYXRjaCxlPWMucGVuZGluZyxmPWIubWVtb2l6ZWRTdGF0ZTtpZihudWxsIT09ZSl7Yy5wZW5kaW5nPW51bGw7dmFyIGc9ZT1lLm5leHQ7ZG8gZj1hKGYsZy5hY3Rpb24pLGc9Zy5uZXh0O3doaWxlKGchPT1lKTtIZShmLGIubWVtb2l6ZWRTdGF0ZSl8fCh1Zz0hMCk7Yi5tZW1vaXplZFN0YXRlPWY7bnVsbD09PWIuYmFzZVF1ZXVlJiYoYi5iYXNlU3RhdGU9Zik7Yy5sYXN0UmVuZGVyZWRTdGF0ZT1mfXJldHVybltmLGRdfVxuZnVuY3Rpb24gTWgoYSxiLGMpe3ZhciBkPWIuX2dldFZlcnNpb247ZD1kKGIuX3NvdXJjZSk7dmFyIGU9Yi5fd29ya0luUHJvZ3Jlc3NWZXJzaW9uUHJpbWFyeTtpZihudWxsIT09ZSlhPWU9PT1kO2Vsc2UgaWYoYT1hLm11dGFibGVSZWFkTGFuZXMsYT0oeGgmYSk9PT1hKWIuX3dvcmtJblByb2dyZXNzVmVyc2lvblByaW1hcnk9ZCx0aC5wdXNoKGIpO2lmKGEpcmV0dXJuIGMoYi5fc291cmNlKTt0aC5wdXNoKGIpO3Rocm93IEVycm9yKHkoMzUwKSk7fVxuZnVuY3Rpb24gTmgoYSxiLGMsZCl7dmFyIGU9VTtpZihudWxsPT09ZSl0aHJvdyBFcnJvcih5KDM0OSkpO3ZhciBmPWIuX2dldFZlcnNpb24sZz1mKGIuX3NvdXJjZSksaD12aC5jdXJyZW50LGs9aC51c2VTdGF0ZShmdW5jdGlvbigpe3JldHVybiBNaChlLGIsYyl9KSxsPWtbMV0sbj1rWzBdO2s9VDt2YXIgQT1hLm1lbW9pemVkU3RhdGUscD1BLnJlZnMsQz1wLmdldFNuYXBzaG90LHg9QS5zb3VyY2U7QT1BLnN1YnNjcmliZTt2YXIgdz1SO2EubWVtb2l6ZWRTdGF0ZT17cmVmczpwLHNvdXJjZTpiLHN1YnNjcmliZTpkfTtoLnVzZUVmZmVjdChmdW5jdGlvbigpe3AuZ2V0U25hcHNob3Q9YztwLnNldFNuYXBzaG90PWw7dmFyIGE9ZihiLl9zb3VyY2UpO2lmKCFIZShnLGEpKXthPWMoYi5fc291cmNlKTtIZShuLGEpfHwobChhKSxhPUlnKHcpLGUubXV0YWJsZVJlYWRMYW5lc3w9YSZlLnBlbmRpbmdMYW5lcyk7YT1lLm11dGFibGVSZWFkTGFuZXM7ZS5lbnRhbmdsZWRMYW5lc3w9YTtmb3IodmFyIGQ9XG5lLmVudGFuZ2xlbWVudHMsaD1hOzA8aDspe3ZhciBrPTMxLVZjKGgpLHY9MTw8aztkW2tdfD1hO2gmPX52fX19LFtjLGIsZF0pO2gudXNlRWZmZWN0KGZ1bmN0aW9uKCl7cmV0dXJuIGQoYi5fc291cmNlLGZ1bmN0aW9uKCl7dmFyIGE9cC5nZXRTbmFwc2hvdCxjPXAuc2V0U25hcHNob3Q7dHJ5e2MoYShiLl9zb3VyY2UpKTt2YXIgZD1JZyh3KTtlLm11dGFibGVSZWFkTGFuZXN8PWQmZS5wZW5kaW5nTGFuZXN9Y2F0Y2gocSl7YyhmdW5jdGlvbigpe3Rocm93IHE7fSl9fSl9LFtiLGRdKTtIZShDLGMpJiZIZSh4LGIpJiZIZShBLGQpfHwoYT17cGVuZGluZzpudWxsLGRpc3BhdGNoOm51bGwsbGFzdFJlbmRlcmVkUmVkdWNlcjpKaCxsYXN0UmVuZGVyZWRTdGF0ZTpufSxhLmRpc3BhdGNoPWw9T2guYmluZChudWxsLFIsYSksay5xdWV1ZT1hLGsuYmFzZVF1ZXVlPW51bGwsbj1NaChlLGIsYyksay5tZW1vaXplZFN0YXRlPWsuYmFzZVN0YXRlPW4pO3JldHVybiBufVxuZnVuY3Rpb24gUGgoYSxiLGMpe3ZhciBkPUloKCk7cmV0dXJuIE5oKGQsYSxiLGMpfWZ1bmN0aW9uIFFoKGEpe3ZhciBiPUhoKCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGEmJihhPWEoKSk7Yi5tZW1vaXplZFN0YXRlPWIuYmFzZVN0YXRlPWE7YT1iLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOkpoLGxhc3RSZW5kZXJlZFN0YXRlOmF9O2E9YS5kaXNwYXRjaD1PaC5iaW5kKG51bGwsUixhKTtyZXR1cm5bYi5tZW1vaXplZFN0YXRlLGFdfVxuZnVuY3Rpb24gUmgoYSxiLGMsZCl7YT17dGFnOmEsY3JlYXRlOmIsZGVzdHJveTpjLGRlcHM6ZCxuZXh0Om51bGx9O2I9Ui51cGRhdGVRdWV1ZTtudWxsPT09Yj8oYj17bGFzdEVmZmVjdDpudWxsfSxSLnVwZGF0ZVF1ZXVlPWIsYi5sYXN0RWZmZWN0PWEubmV4dD1hKTooYz1iLmxhc3RFZmZlY3QsbnVsbD09PWM/Yi5sYXN0RWZmZWN0PWEubmV4dD1hOihkPWMubmV4dCxjLm5leHQ9YSxhLm5leHQ9ZCxiLmxhc3RFZmZlY3Q9YSkpO3JldHVybiBhfWZ1bmN0aW9uIFNoKGEpe3ZhciBiPUhoKCk7YT17Y3VycmVudDphfTtyZXR1cm4gYi5tZW1vaXplZFN0YXRlPWF9ZnVuY3Rpb24gVGgoKXtyZXR1cm4gSWgoKS5tZW1vaXplZFN0YXRlfWZ1bmN0aW9uIFVoKGEsYixjLGQpe3ZhciBlPUhoKCk7Ui5mbGFnc3w9YTtlLm1lbW9pemVkU3RhdGU9UmgoMXxiLGMsdm9pZCAwLHZvaWQgMD09PWQ/bnVsbDpkKX1cbmZ1bmN0aW9uIFZoKGEsYixjLGQpe3ZhciBlPUloKCk7ZD12b2lkIDA9PT1kP251bGw6ZDt2YXIgZj12b2lkIDA7aWYobnVsbCE9PVMpe3ZhciBnPVMubWVtb2l6ZWRTdGF0ZTtmPWcuZGVzdHJveTtpZihudWxsIT09ZCYmQmgoZCxnLmRlcHMpKXtSaChiLGMsZixkKTtyZXR1cm59fVIuZmxhZ3N8PWE7ZS5tZW1vaXplZFN0YXRlPVJoKDF8YixjLGYsZCl9ZnVuY3Rpb24gV2goYSxiKXtyZXR1cm4gVWgoNTE2LDQsYSxiKX1mdW5jdGlvbiBYaChhLGIpe3JldHVybiBWaCg1MTYsNCxhLGIpfWZ1bmN0aW9uIFloKGEsYil7cmV0dXJuIFZoKDQsMixhLGIpfWZ1bmN0aW9uIFpoKGEsYil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpcmV0dXJuIGE9YSgpLGIoYSksZnVuY3Rpb24oKXtiKG51bGwpfTtpZihudWxsIT09YiYmdm9pZCAwIT09YilyZXR1cm4gYT1hKCksYi5jdXJyZW50PWEsZnVuY3Rpb24oKXtiLmN1cnJlbnQ9bnVsbH19XG5mdW5jdGlvbiAkaChhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIFZoKDQsMixaaC5iaW5kKG51bGwsYixhKSxjKX1mdW5jdGlvbiBhaSgpe31mdW5jdGlvbiBiaShhLGIpe3ZhciBjPUloKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZCaChiLGRbMV0pKXJldHVybiBkWzBdO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1mdW5jdGlvbiBjaShhLGIpe3ZhciBjPUloKCk7Yj12b2lkIDA9PT1iP251bGw6Yjt2YXIgZD1jLm1lbW9pemVkU3RhdGU7aWYobnVsbCE9PWQmJm51bGwhPT1iJiZCaChiLGRbMV0pKXJldHVybiBkWzBdO2E9YSgpO2MubWVtb2l6ZWRTdGF0ZT1bYSxiXTtyZXR1cm4gYX1cbmZ1bmN0aW9uIGRpKGEsYil7dmFyIGM9ZWcoKTtnZyg5OD5jPzk4OmMsZnVuY3Rpb24oKXthKCEwKX0pO2dnKDk3PGM/OTc6YyxmdW5jdGlvbigpe3ZhciBjPXdoLnRyYW5zaXRpb247d2gudHJhbnNpdGlvbj0xO3RyeXthKCExKSxiKCl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWN9fSl9XG5mdW5jdGlvbiBPaChhLGIsYyl7dmFyIGQ9SGcoKSxlPUlnKGEpLGY9e2xhbmU6ZSxhY3Rpb246YyxlYWdlclJlZHVjZXI6bnVsbCxlYWdlclN0YXRlOm51bGwsbmV4dDpudWxsfSxnPWIucGVuZGluZztudWxsPT09Zz9mLm5leHQ9ZjooZi5uZXh0PWcubmV4dCxnLm5leHQ9Zik7Yi5wZW5kaW5nPWY7Zz1hLmFsdGVybmF0ZTtpZihhPT09Unx8bnVsbCE9PWcmJmc9PT1SKXpoPXloPSEwO2Vsc2V7aWYoMD09PWEubGFuZXMmJihudWxsPT09Z3x8MD09PWcubGFuZXMpJiYoZz1iLmxhc3RSZW5kZXJlZFJlZHVjZXIsbnVsbCE9PWcpKXRyeXt2YXIgaD1iLmxhc3RSZW5kZXJlZFN0YXRlLGs9ZyhoLGMpO2YuZWFnZXJSZWR1Y2VyPWc7Zi5lYWdlclN0YXRlPWs7aWYoSGUoayxoKSlyZXR1cm59Y2F0Y2gobCl7fWZpbmFsbHl7fUpnKGEsZSxkKX19XG52YXIgR2g9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOkFoLHVzZUNvbnRleHQ6QWgsdXNlRWZmZWN0OkFoLHVzZUltcGVyYXRpdmVIYW5kbGU6QWgsdXNlTGF5b3V0RWZmZWN0OkFoLHVzZU1lbW86QWgsdXNlUmVkdWNlcjpBaCx1c2VSZWY6QWgsdXNlU3RhdGU6QWgsdXNlRGVidWdWYWx1ZTpBaCx1c2VEZWZlcnJlZFZhbHVlOkFoLHVzZVRyYW5zaXRpb246QWgsdXNlTXV0YWJsZVNvdXJjZTpBaCx1c2VPcGFxdWVJZGVudGlmaWVyOkFoLHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sRGg9e3JlYWRDb250ZXh0OnZnLHVzZUNhbGxiYWNrOmZ1bmN0aW9uKGEsYil7SGgoKS5tZW1vaXplZFN0YXRlPVthLHZvaWQgMD09PWI/bnVsbDpiXTtyZXR1cm4gYX0sdXNlQ29udGV4dDp2Zyx1c2VFZmZlY3Q6V2gsdXNlSW1wZXJhdGl2ZUhhbmRsZTpmdW5jdGlvbihhLGIsYyl7Yz1udWxsIT09YyYmdm9pZCAwIT09Yz9jLmNvbmNhdChbYV0pOm51bGw7cmV0dXJuIFVoKDQsMixaaC5iaW5kKG51bGwsXG5iLGEpLGMpfSx1c2VMYXlvdXRFZmZlY3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gVWgoNCwyLGEsYil9LHVzZU1lbW86ZnVuY3Rpb24oYSxiKXt2YXIgYz1IaCgpO2I9dm9pZCAwPT09Yj9udWxsOmI7YT1hKCk7Yy5tZW1vaXplZFN0YXRlPVthLGJdO3JldHVybiBhfSx1c2VSZWR1Y2VyOmZ1bmN0aW9uKGEsYixjKXt2YXIgZD1IaCgpO2I9dm9pZCAwIT09Yz9jKGIpOmI7ZC5tZW1vaXplZFN0YXRlPWQuYmFzZVN0YXRlPWI7YT1kLnF1ZXVlPXtwZW5kaW5nOm51bGwsZGlzcGF0Y2g6bnVsbCxsYXN0UmVuZGVyZWRSZWR1Y2VyOmEsbGFzdFJlbmRlcmVkU3RhdGU6Yn07YT1hLmRpc3BhdGNoPU9oLmJpbmQobnVsbCxSLGEpO3JldHVybltkLm1lbW9pemVkU3RhdGUsYV19LHVzZVJlZjpTaCx1c2VTdGF0ZTpRaCx1c2VEZWJ1Z1ZhbHVlOmFpLHVzZURlZmVycmVkVmFsdWU6ZnVuY3Rpb24oYSl7dmFyIGI9UWgoYSksYz1iWzBdLGQ9YlsxXTtXaChmdW5jdGlvbigpe3ZhciBiPXdoLnRyYW5zaXRpb247XG53aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9UWgoITEpLGI9YVswXTthPWRpLmJpbmQobnVsbCxhWzFdKTtTaChhKTtyZXR1cm5bYSxiXX0sdXNlTXV0YWJsZVNvdXJjZTpmdW5jdGlvbihhLGIsYyl7dmFyIGQ9SGgoKTtkLm1lbW9pemVkU3RhdGU9e3JlZnM6e2dldFNuYXBzaG90OmIsc2V0U25hcHNob3Q6bnVsbH0sc291cmNlOmEsc3Vic2NyaWJlOmN9O3JldHVybiBOaChkLGEsYixjKX0sdXNlT3BhcXVlSWRlbnRpZmllcjpmdW5jdGlvbigpe2lmKGxoKXt2YXIgYT0hMSxiPXVmKGZ1bmN0aW9uKCl7YXx8KGE9ITAsYyhcInI6XCIrKHRmKyspLnRvU3RyaW5nKDM2KSkpO3Rocm93IEVycm9yKHkoMzU1KSk7fSksYz1RaChiKVsxXTswPT09KFIubW9kZSYyKSYmKFIuZmxhZ3N8PTUxNixSaCg1LGZ1bmN0aW9uKCl7YyhcInI6XCIrKHRmKyspLnRvU3RyaW5nKDM2KSl9LFxudm9pZCAwLG51bGwpKTtyZXR1cm4gYn1iPVwicjpcIisodGYrKykudG9TdHJpbmcoMzYpO1FoKGIpO3JldHVybiBifSx1bnN0YWJsZV9pc05ld1JlY29uY2lsZXI6ITF9LEVoPXtyZWFkQ29udGV4dDp2Zyx1c2VDYWxsYmFjazpiaSx1c2VDb250ZXh0OnZnLHVzZUVmZmVjdDpYaCx1c2VJbXBlcmF0aXZlSGFuZGxlOiRoLHVzZUxheW91dEVmZmVjdDpZaCx1c2VNZW1vOmNpLHVzZVJlZHVjZXI6S2gsdXNlUmVmOlRoLHVzZVN0YXRlOmZ1bmN0aW9uKCl7cmV0dXJuIEtoKEpoKX0sdXNlRGVidWdWYWx1ZTphaSx1c2VEZWZlcnJlZFZhbHVlOmZ1bmN0aW9uKGEpe3ZhciBiPUtoKEpoKSxjPWJbMF0sZD1iWzFdO1hoKGZ1bmN0aW9uKCl7dmFyIGI9d2gudHJhbnNpdGlvbjt3aC50cmFuc2l0aW9uPTE7dHJ5e2QoYSl9ZmluYWxseXt3aC50cmFuc2l0aW9uPWJ9fSxbYV0pO3JldHVybiBjfSx1c2VUcmFuc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9S2goSmgpWzBdO3JldHVybltUaCgpLmN1cnJlbnQsXG5hXX0sdXNlTXV0YWJsZVNvdXJjZTpQaCx1c2VPcGFxdWVJZGVudGlmaWVyOmZ1bmN0aW9uKCl7cmV0dXJuIEtoKEpoKVswXX0sdW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyOiExfSxGaD17cmVhZENvbnRleHQ6dmcsdXNlQ2FsbGJhY2s6YmksdXNlQ29udGV4dDp2Zyx1c2VFZmZlY3Q6WGgsdXNlSW1wZXJhdGl2ZUhhbmRsZTokaCx1c2VMYXlvdXRFZmZlY3Q6WWgsdXNlTWVtbzpjaSx1c2VSZWR1Y2VyOkxoLHVzZVJlZjpUaCx1c2VTdGF0ZTpmdW5jdGlvbigpe3JldHVybiBMaChKaCl9LHVzZURlYnVnVmFsdWU6YWksdXNlRGVmZXJyZWRWYWx1ZTpmdW5jdGlvbihhKXt2YXIgYj1MaChKaCksYz1iWzBdLGQ9YlsxXTtYaChmdW5jdGlvbigpe3ZhciBiPXdoLnRyYW5zaXRpb247d2gudHJhbnNpdGlvbj0xO3RyeXtkKGEpfWZpbmFsbHl7d2gudHJhbnNpdGlvbj1ifX0sW2FdKTtyZXR1cm4gY30sdXNlVHJhbnNpdGlvbjpmdW5jdGlvbigpe3ZhciBhPUxoKEpoKVswXTtyZXR1cm5bVGgoKS5jdXJyZW50LFxuYV19LHVzZU11dGFibGVTb3VyY2U6UGgsdXNlT3BhcXVlSWRlbnRpZmllcjpmdW5jdGlvbigpe3JldHVybiBMaChKaClbMF19LHVuc3RhYmxlX2lzTmV3UmVjb25jaWxlcjohMX0sZWk9cmEuUmVhY3RDdXJyZW50T3duZXIsdWc9ITE7ZnVuY3Rpb24gZmkoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT9aZyhiLG51bGwsYyxkKTpZZyhiLGEuY2hpbGQsYyxkKX1mdW5jdGlvbiBnaShhLGIsYyxkLGUpe2M9Yy5yZW5kZXI7dmFyIGY9Yi5yZWY7dGcoYixlKTtkPUNoKGEsYixjLGQsZixlKTtpZihudWxsIT09YSYmIXVnKXJldHVybiBiLnVwZGF0ZVF1ZXVlPWEudXBkYXRlUXVldWUsYi5mbGFncyY9LTUxNyxhLmxhbmVzJj1+ZSxoaShhLGIsZSk7Yi5mbGFnc3w9MTtmaShhLGIsZCxlKTtyZXR1cm4gYi5jaGlsZH1cbmZ1bmN0aW9uIGlpKGEsYixjLGQsZSxmKXtpZihudWxsPT09YSl7dmFyIGc9Yy50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnJiYhamkoZykmJnZvaWQgMD09PWcuZGVmYXVsdFByb3BzJiZudWxsPT09Yy5jb21wYXJlJiZ2b2lkIDA9PT1jLmRlZmF1bHRQcm9wcylyZXR1cm4gYi50YWc9MTUsYi50eXBlPWcsa2koYSxiLGcsZCxlLGYpO2E9VmcoYy50eXBlLG51bGwsZCxiLGIubW9kZSxmKTthLnJlZj1iLnJlZjthLnJldHVybj1iO3JldHVybiBiLmNoaWxkPWF9Zz1hLmNoaWxkO2lmKDA9PT0oZSZmKSYmKGU9Zy5tZW1vaXplZFByb3BzLGM9Yy5jb21wYXJlLGM9bnVsbCE9PWM/YzpKZSxjKGUsZCkmJmEucmVmPT09Yi5yZWYpKXJldHVybiBoaShhLGIsZik7Yi5mbGFnc3w9MTthPVRnKGcsZCk7YS5yZWY9Yi5yZWY7YS5yZXR1cm49YjtyZXR1cm4gYi5jaGlsZD1hfVxuZnVuY3Rpb24ga2koYSxiLGMsZCxlLGYpe2lmKG51bGwhPT1hJiZKZShhLm1lbW9pemVkUHJvcHMsZCkmJmEucmVmPT09Yi5yZWYpaWYodWc9ITEsMCE9PShmJmUpKTAhPT0oYS5mbGFncyYxNjM4NCkmJih1Zz0hMCk7ZWxzZSByZXR1cm4gYi5sYW5lcz1hLmxhbmVzLGhpKGEsYixmKTtyZXR1cm4gbGkoYSxiLGMsZCxmKX1cbmZ1bmN0aW9uIG1pKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQuY2hpbGRyZW4sZj1udWxsIT09YT9hLm1lbW9pemVkU3RhdGU6bnVsbDtpZihcImhpZGRlblwiPT09ZC5tb2RlfHxcInVuc3RhYmxlLWRlZmVyLXdpdGhvdXQtaGlkaW5nXCI9PT1kLm1vZGUpaWYoMD09PShiLm1vZGUmNCkpYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6MH0sbmkoYixjKTtlbHNlIGlmKDAhPT0oYyYxMDczNzQxODI0KSliLm1lbW9pemVkU3RhdGU9e2Jhc2VMYW5lczowfSxuaShiLG51bGwhPT1mP2YuYmFzZUxhbmVzOmMpO2Vsc2UgcmV0dXJuIGE9bnVsbCE9PWY/Zi5iYXNlTGFuZXN8YzpjLGIubGFuZXM9Yi5jaGlsZExhbmVzPTEwNzM3NDE4MjQsYi5tZW1vaXplZFN0YXRlPXtiYXNlTGFuZXM6YX0sbmkoYixhKSxudWxsO2Vsc2UgbnVsbCE9PWY/KGQ9Zi5iYXNlTGFuZXN8YyxiLm1lbW9pemVkU3RhdGU9bnVsbCk6ZD1jLG5pKGIsZCk7ZmkoYSxiLGUsYyk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBvaShhLGIpe3ZhciBjPWIucmVmO2lmKG51bGw9PT1hJiZudWxsIT09Y3x8bnVsbCE9PWEmJmEucmVmIT09YyliLmZsYWdzfD0xMjh9ZnVuY3Rpb24gbGkoYSxiLGMsZCxlKXt2YXIgZj1GZihjKT9EZjpNLmN1cnJlbnQ7Zj1FZihiLGYpO3RnKGIsZSk7Yz1DaChhLGIsYyxkLGYsZSk7aWYobnVsbCE9PWEmJiF1ZylyZXR1cm4gYi51cGRhdGVRdWV1ZT1hLnVwZGF0ZVF1ZXVlLGIuZmxhZ3MmPS01MTcsYS5sYW5lcyY9fmUsaGkoYSxiLGUpO2IuZmxhZ3N8PTE7ZmkoYSxiLGMsZSk7cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBwaShhLGIsYyxkLGUpe2lmKEZmKGMpKXt2YXIgZj0hMDtKZihiKX1lbHNlIGY9ITE7dGcoYixlKTtpZihudWxsPT09Yi5zdGF0ZU5vZGUpbnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9MiksTWcoYixjLGQpLE9nKGIsYyxkLGUpLGQ9ITA7ZWxzZSBpZihudWxsPT09YSl7dmFyIGc9Yi5zdGF0ZU5vZGUsaD1iLm1lbW9pemVkUHJvcHM7Zy5wcm9wcz1oO3ZhciBrPWcuY29udGV4dCxsPWMuY29udGV4dFR5cGU7XCJvYmplY3RcIj09PXR5cGVvZiBsJiZudWxsIT09bD9sPXZnKGwpOihsPUZmKGMpP0RmOk0uY3VycmVudCxsPUVmKGIsbCkpO3ZhciBuPWMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzLEE9XCJmdW5jdGlvblwiPT09dHlwZW9mIG58fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlO0F8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcblwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHN8fChoIT09ZHx8ayE9PWwpJiZOZyhiLGcsZCxsKTt3Zz0hMTt2YXIgcD1iLm1lbW9pemVkU3RhdGU7Zy5zdGF0ZT1wO0NnKGIsZCxnLGUpO2s9Yi5tZW1vaXplZFN0YXRlO2ghPT1kfHxwIT09a3x8Ti5jdXJyZW50fHx3Zz8oXCJmdW5jdGlvblwiPT09dHlwZW9mIG4mJihHZyhiLGMsbixkKSxrPWIubWVtb2l6ZWRTdGF0ZSksKGg9d2d8fExnKGIsYyxoLGQscCxrLGwpKT8oQXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50fHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuY29tcG9uZW50V2lsbE1vdW50JiZnLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmcuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpKSxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5jb21wb25lbnREaWRNb3VudCYmKGIuZmxhZ3N8PTQpLGIubWVtb2l6ZWRQcm9wcz1kLGIubWVtb2l6ZWRTdGF0ZT1rKSxnLnByb3BzPWQsZy5zdGF0ZT1rLGcuY29udGV4dD1sLGQ9aCk6KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZE1vdW50JiYoYi5mbGFnc3w9NCksZD0hMSl9ZWxzZXtnPWIuc3RhdGVOb2RlO3lnKGEsYik7aD1iLm1lbW9pemVkUHJvcHM7bD1iLnR5cGU9PT1iLmVsZW1lbnRUeXBlP2g6bGcoYi50eXBlLGgpO2cucHJvcHM9bDtBPWIucGVuZGluZ1Byb3BzO3A9Zy5jb250ZXh0O2s9Yy5jb250ZXh0VHlwZTtcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rP2s9dmcoayk6KGs9RmYoYyk/RGY6TS5jdXJyZW50LGs9RWYoYixrKSk7dmFyIEM9Yy5nZXREZXJpdmVkU3RhdGVGcm9tUHJvcHM7KG49XCJmdW5jdGlvblwiPT09dHlwZW9mIEN8fFxuXCJmdW5jdGlvblwiPT09dHlwZW9mIGcuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8KGghPT1BfHxwIT09aykmJk5nKGIsZyxkLGspO3dnPSExO3A9Yi5tZW1vaXplZFN0YXRlO2cuc3RhdGU9cDtDZyhiLGQsZyxlKTt2YXIgeD1iLm1lbW9pemVkU3RhdGU7aCE9PUF8fHAhPT14fHxOLmN1cnJlbnR8fHdnPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgQyYmKEdnKGIsYyxDLGQpLHg9Yi5tZW1vaXplZFN0YXRlKSwobD13Z3x8TGcoYixjLGwsZCxwLHgsaykpPyhufHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGcuY29tcG9uZW50V2lsbFVwZGF0ZXx8KFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudFdpbGxVcGRhdGUmJmcuY29tcG9uZW50V2lsbFVwZGF0ZShkLFxueCxrKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZy5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShkLHgsaykpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZSYmKGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5mbGFnc3w9MjU2KSk6KFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmNvbXBvbmVudERpZFVwZGF0ZXx8aD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9ZCxiLm1lbW9pemVkU3RhdGU9eCksZy5wcm9wcz1kLGcuc3RhdGU9eCxnLmNvbnRleHQ9ayxkPWwpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZy5jb21wb25lbnREaWRVcGRhdGV8fFxuaD09PWEubWVtb2l6ZWRQcm9wcyYmcD09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZmxhZ3N8PTQpLFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBnLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlfHxoPT09YS5tZW1vaXplZFByb3BzJiZwPT09YS5tZW1vaXplZFN0YXRlfHwoYi5mbGFnc3w9MjU2KSxkPSExKX1yZXR1cm4gcWkoYSxiLGMsZCxmLGUpfVxuZnVuY3Rpb24gcWkoYSxiLGMsZCxlLGYpe29pKGEsYik7dmFyIGc9MCE9PShiLmZsYWdzJjY0KTtpZighZCYmIWcpcmV0dXJuIGUmJktmKGIsYywhMSksaGkoYSxiLGYpO2Q9Yi5zdGF0ZU5vZGU7ZWkuY3VycmVudD1iO3ZhciBoPWcmJlwiZnVuY3Rpb25cIiE9PXR5cGVvZiBjLmdldERlcml2ZWRTdGF0ZUZyb21FcnJvcj9udWxsOmQucmVuZGVyKCk7Yi5mbGFnc3w9MTtudWxsIT09YSYmZz8oYi5jaGlsZD1ZZyhiLGEuY2hpbGQsbnVsbCxmKSxiLmNoaWxkPVlnKGIsbnVsbCxoLGYpKTpmaShhLGIsaCxmKTtiLm1lbW9pemVkU3RhdGU9ZC5zdGF0ZTtlJiZLZihiLGMsITApO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIHJpKGEpe3ZhciBiPWEuc3RhdGVOb2RlO2IucGVuZGluZ0NvbnRleHQ/SGYoYSxiLnBlbmRpbmdDb250ZXh0LGIucGVuZGluZ0NvbnRleHQhPT1iLmNvbnRleHQpOmIuY29udGV4dCYmSGYoYSxiLmNvbnRleHQsITEpO2VoKGEsYi5jb250YWluZXJJbmZvKX1cbnZhciBzaT17ZGVoeWRyYXRlZDpudWxsLHJldHJ5TGFuZTowfTtcbmZ1bmN0aW9uIHRpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPVAuY3VycmVudCxmPSExLGc7KGc9MCE9PShiLmZsYWdzJjY0KSl8fChnPW51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlPyExOjAhPT0oZSYyKSk7Zz8oZj0hMCxiLmZsYWdzJj0tNjUpOm51bGwhPT1hJiZudWxsPT09YS5tZW1vaXplZFN0YXRlfHx2b2lkIDA9PT1kLmZhbGxiYWNrfHwhMD09PWQudW5zdGFibGVfYXZvaWRUaGlzRmFsbGJhY2t8fChlfD0xKTtJKFAsZSYxKTtpZihudWxsPT09YSl7dm9pZCAwIT09ZC5mYWxsYmFjayYmcGgoYik7YT1kLmNoaWxkcmVuO2U9ZC5mYWxsYmFjaztpZihmKXJldHVybiBhPXVpKGIsYSxlLGMpLGIuY2hpbGQubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmN9LGIubWVtb2l6ZWRTdGF0ZT1zaSxhO2lmKFwibnVtYmVyXCI9PT10eXBlb2YgZC51bnN0YWJsZV9leHBlY3RlZExvYWRUaW1lKXJldHVybiBhPXVpKGIsYSxlLGMpLGIuY2hpbGQubWVtb2l6ZWRTdGF0ZT17YmFzZUxhbmVzOmN9LFxuYi5tZW1vaXplZFN0YXRlPXNpLGIubGFuZXM9MzM1NTQ0MzIsYTtjPXZpKHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmF9LGIubW9kZSxjLG51bGwpO2MucmV0dXJuPWI7cmV0dXJuIGIuY2hpbGQ9Y31pZihudWxsIT09YS5tZW1vaXplZFN0YXRlKXtpZihmKXJldHVybiBkPXdpKGEsYixkLmNoaWxkcmVuLGQuZmFsbGJhY2ssYyksZj1iLmNoaWxkLGU9YS5jaGlsZC5tZW1vaXplZFN0YXRlLGYubWVtb2l6ZWRTdGF0ZT1udWxsPT09ZT97YmFzZUxhbmVzOmN9OntiYXNlTGFuZXM6ZS5iYXNlTGFuZXN8Y30sZi5jaGlsZExhbmVzPWEuY2hpbGRMYW5lcyZ+YyxiLm1lbW9pemVkU3RhdGU9c2ksZDtjPXhpKGEsYixkLmNoaWxkcmVuLGMpO2IubWVtb2l6ZWRTdGF0ZT1udWxsO3JldHVybiBjfWlmKGYpcmV0dXJuIGQ9d2koYSxiLGQuY2hpbGRyZW4sZC5mYWxsYmFjayxjKSxmPWIuY2hpbGQsZT1hLmNoaWxkLm1lbW9pemVkU3RhdGUsZi5tZW1vaXplZFN0YXRlPW51bGw9PT1lP3tiYXNlTGFuZXM6Y306XG57YmFzZUxhbmVzOmUuYmFzZUxhbmVzfGN9LGYuY2hpbGRMYW5lcz1hLmNoaWxkTGFuZXMmfmMsYi5tZW1vaXplZFN0YXRlPXNpLGQ7Yz14aShhLGIsZC5jaGlsZHJlbixjKTtiLm1lbW9pemVkU3RhdGU9bnVsbDtyZXR1cm4gY31mdW5jdGlvbiB1aShhLGIsYyxkKXt2YXIgZT1hLm1vZGUsZj1hLmNoaWxkO2I9e21vZGU6XCJoaWRkZW5cIixjaGlsZHJlbjpifTswPT09KGUmMikmJm51bGwhPT1mPyhmLmNoaWxkTGFuZXM9MCxmLnBlbmRpbmdQcm9wcz1iKTpmPXZpKGIsZSwwLG51bGwpO2M9WGcoYyxlLGQsbnVsbCk7Zi5yZXR1cm49YTtjLnJldHVybj1hO2Yuc2libGluZz1jO2EuY2hpbGQ9ZjtyZXR1cm4gY31cbmZ1bmN0aW9uIHhpKGEsYixjLGQpe3ZhciBlPWEuY2hpbGQ7YT1lLnNpYmxpbmc7Yz1UZyhlLHttb2RlOlwidmlzaWJsZVwiLGNoaWxkcmVuOmN9KTswPT09KGIubW9kZSYyKSYmKGMubGFuZXM9ZCk7Yy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbDtudWxsIT09YSYmKGEubmV4dEVmZmVjdD1udWxsLGEuZmxhZ3M9OCxiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1hKTtyZXR1cm4gYi5jaGlsZD1jfVxuZnVuY3Rpb24gd2koYSxiLGMsZCxlKXt2YXIgZj1iLm1vZGUsZz1hLmNoaWxkO2E9Zy5zaWJsaW5nO3ZhciBoPXttb2RlOlwiaGlkZGVuXCIsY2hpbGRyZW46Y307MD09PShmJjIpJiZiLmNoaWxkIT09Zz8oYz1iLmNoaWxkLGMuY2hpbGRMYW5lcz0wLGMucGVuZGluZ1Byb3BzPWgsZz1jLmxhc3RFZmZlY3QsbnVsbCE9PWc/KGIuZmlyc3RFZmZlY3Q9Yy5maXJzdEVmZmVjdCxiLmxhc3RFZmZlY3Q9ZyxnLm5leHRFZmZlY3Q9bnVsbCk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9bnVsbCk6Yz1UZyhnLGgpO251bGwhPT1hP2Q9VGcoYSxkKTooZD1YZyhkLGYsZSxudWxsKSxkLmZsYWdzfD0yKTtkLnJldHVybj1iO2MucmV0dXJuPWI7Yy5zaWJsaW5nPWQ7Yi5jaGlsZD1jO3JldHVybiBkfWZ1bmN0aW9uIHlpKGEsYil7YS5sYW5lc3w9Yjt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmKGMubGFuZXN8PWIpO3NnKGEucmV0dXJuLGIpfVxuZnVuY3Rpb24gemkoYSxiLGMsZCxlLGYpe3ZhciBnPWEubWVtb2l6ZWRTdGF0ZTtudWxsPT09Zz9hLm1lbW9pemVkU3RhdGU9e2lzQmFja3dhcmRzOmIscmVuZGVyaW5nOm51bGwscmVuZGVyaW5nU3RhcnRUaW1lOjAsbGFzdDpkLHRhaWw6Yyx0YWlsTW9kZTplLGxhc3RFZmZlY3Q6Zn06KGcuaXNCYWNrd2FyZHM9YixnLnJlbmRlcmluZz1udWxsLGcucmVuZGVyaW5nU3RhcnRUaW1lPTAsZy5sYXN0PWQsZy50YWlsPWMsZy50YWlsTW9kZT1lLGcubGFzdEVmZmVjdD1mKX1cbmZ1bmN0aW9uIEFpKGEsYixjKXt2YXIgZD1iLnBlbmRpbmdQcm9wcyxlPWQucmV2ZWFsT3JkZXIsZj1kLnRhaWw7ZmkoYSxiLGQuY2hpbGRyZW4sYyk7ZD1QLmN1cnJlbnQ7aWYoMCE9PShkJjIpKWQ9ZCYxfDIsYi5mbGFnc3w9NjQ7ZWxzZXtpZihudWxsIT09YSYmMCE9PShhLmZsYWdzJjY0KSlhOmZvcihhPWIuY2hpbGQ7bnVsbCE9PWE7KXtpZigxMz09PWEudGFnKW51bGwhPT1hLm1lbW9pemVkU3RhdGUmJnlpKGEsYyk7ZWxzZSBpZigxOT09PWEudGFnKXlpKGEsYyk7ZWxzZSBpZihudWxsIT09YS5jaGlsZCl7YS5jaGlsZC5yZXR1cm49YTthPWEuY2hpbGQ7Y29udGludWV9aWYoYT09PWIpYnJlYWsgYTtmb3IoO251bGw9PT1hLnNpYmxpbmc7KXtpZihudWxsPT09YS5yZXR1cm58fGEucmV0dXJuPT09YilicmVhayBhO2E9YS5yZXR1cm59YS5zaWJsaW5nLnJldHVybj1hLnJldHVybjthPWEuc2libGluZ31kJj0xfUkoUCxkKTtpZigwPT09KGIubW9kZSYyKSliLm1lbW9pemVkU3RhdGU9XG5udWxsO2Vsc2Ugc3dpdGNoKGUpe2Nhc2UgXCJmb3J3YXJkc1wiOmM9Yi5jaGlsZDtmb3IoZT1udWxsO251bGwhPT1jOylhPWMuYWx0ZXJuYXRlLG51bGwhPT1hJiZudWxsPT09aWgoYSkmJihlPWMpLGM9Yy5zaWJsaW5nO2M9ZTtudWxsPT09Yz8oZT1iLmNoaWxkLGIuY2hpbGQ9bnVsbCk6KGU9Yy5zaWJsaW5nLGMuc2libGluZz1udWxsKTt6aShiLCExLGUsYyxmLGIubGFzdEVmZmVjdCk7YnJlYWs7Y2FzZSBcImJhY2t3YXJkc1wiOmM9bnVsbDtlPWIuY2hpbGQ7Zm9yKGIuY2hpbGQ9bnVsbDtudWxsIT09ZTspe2E9ZS5hbHRlcm5hdGU7aWYobnVsbCE9PWEmJm51bGw9PT1paChhKSl7Yi5jaGlsZD1lO2JyZWFrfWE9ZS5zaWJsaW5nO2Uuc2libGluZz1jO2M9ZTtlPWF9emkoYiwhMCxjLG51bGwsZixiLmxhc3RFZmZlY3QpO2JyZWFrO2Nhc2UgXCJ0b2dldGhlclwiOnppKGIsITEsbnVsbCxudWxsLHZvaWQgMCxiLmxhc3RFZmZlY3QpO2JyZWFrO2RlZmF1bHQ6Yi5tZW1vaXplZFN0YXRlPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBoaShhLGIsYyl7bnVsbCE9PWEmJihiLmRlcGVuZGVuY2llcz1hLmRlcGVuZGVuY2llcyk7RGd8PWIubGFuZXM7aWYoMCE9PShjJmIuY2hpbGRMYW5lcykpe2lmKG51bGwhPT1hJiZiLmNoaWxkIT09YS5jaGlsZCl0aHJvdyBFcnJvcih5KDE1MykpO2lmKG51bGwhPT1iLmNoaWxkKXthPWIuY2hpbGQ7Yz1UZyhhLGEucGVuZGluZ1Byb3BzKTtiLmNoaWxkPWM7Zm9yKGMucmV0dXJuPWI7bnVsbCE9PWEuc2libGluZzspYT1hLnNpYmxpbmcsYz1jLnNpYmxpbmc9VGcoYSxhLnBlbmRpbmdQcm9wcyksYy5yZXR1cm49YjtjLnNpYmxpbmc9bnVsbH1yZXR1cm4gYi5jaGlsZH1yZXR1cm4gbnVsbH12YXIgQmksQ2ksRGksRWk7XG5CaT1mdW5jdGlvbihhLGIpe2Zvcih2YXIgYz1iLmNoaWxkO251bGwhPT1jOyl7aWYoNT09PWMudGFnfHw2PT09Yy50YWcpYS5hcHBlbmRDaGlsZChjLnN0YXRlTm9kZSk7ZWxzZSBpZig0IT09Yy50YWcmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09YilicmVhaztmb3IoO251bGw9PT1jLnNpYmxpbmc7KXtpZihudWxsPT09Yy5yZXR1cm58fGMucmV0dXJuPT09YilyZXR1cm47Yz1jLnJldHVybn1jLnNpYmxpbmcucmV0dXJuPWMucmV0dXJuO2M9Yy5zaWJsaW5nfX07Q2k9ZnVuY3Rpb24oKXt9O1xuRGk9ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9YS5tZW1vaXplZFByb3BzO2lmKGUhPT1kKXthPWIuc3RhdGVOb2RlO2RoKGFoLmN1cnJlbnQpO3ZhciBmPW51bGw7c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOmU9WWEoYSxlKTtkPVlhKGEsZCk7Zj1bXTticmVhaztjYXNlIFwib3B0aW9uXCI6ZT1lYihhLGUpO2Q9ZWIoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjplPW0oe30sZSx7dmFsdWU6dm9pZCAwfSk7ZD1tKHt9LGQse3ZhbHVlOnZvaWQgMH0pO2Y9W107YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6ZT1nYihhLGUpO2Q9Z2IoYSxkKTtmPVtdO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiIT09dHlwZW9mIGUub25DbGljayYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQub25DbGljayYmKGEub25jbGljaz1qZil9dmIoYyxkKTt2YXIgZztjPW51bGw7Zm9yKGwgaW4gZSlpZighZC5oYXNPd25Qcm9wZXJ0eShsKSYmZS5oYXNPd25Qcm9wZXJ0eShsKSYmbnVsbCE9ZVtsXSlpZihcInN0eWxlXCI9PT1cbmwpe3ZhciBoPWVbbF07Zm9yKGcgaW4gaCloLmhhc093blByb3BlcnR5KGcpJiYoY3x8KGM9e30pLGNbZ109XCJcIil9ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIiE9PWwmJlwiY2hpbGRyZW5cIiE9PWwmJlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1sJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09bCYmXCJhdXRvRm9jdXNcIiE9PWwmJihjYS5oYXNPd25Qcm9wZXJ0eShsKT9mfHwoZj1bXSk6KGY9Znx8W10pLnB1c2gobCxudWxsKSk7Zm9yKGwgaW4gZCl7dmFyIGs9ZFtsXTtoPW51bGwhPWU/ZVtsXTp2b2lkIDA7aWYoZC5oYXNPd25Qcm9wZXJ0eShsKSYmayE9PWgmJihudWxsIT1rfHxudWxsIT1oKSlpZihcInN0eWxlXCI9PT1sKWlmKGgpe2ZvcihnIGluIGgpIWguaGFzT3duUHJvcGVydHkoZyl8fGsmJmsuaGFzT3duUHJvcGVydHkoZyl8fChjfHwoYz17fSksY1tnXT1cIlwiKTtmb3IoZyBpbiBrKWsuaGFzT3duUHJvcGVydHkoZykmJmhbZ10hPT1rW2ddJiYoY3x8XG4oYz17fSksY1tnXT1rW2ddKX1lbHNlIGN8fChmfHwoZj1bXSksZi5wdXNoKGwsYykpLGM9aztlbHNlXCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09bD8oaz1rP2suX19odG1sOnZvaWQgMCxoPWg/aC5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJmghPT1rJiYoZj1mfHxbXSkucHVzaChsLGspKTpcImNoaWxkcmVuXCI9PT1sP1wic3RyaW5nXCIhPT10eXBlb2YgayYmXCJudW1iZXJcIiE9PXR5cGVvZiBrfHwoZj1mfHxbXSkucHVzaChsLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWwmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1sJiYoY2EuaGFzT3duUHJvcGVydHkobCk/KG51bGwhPWsmJlwib25TY3JvbGxcIj09PWwmJkcoXCJzY3JvbGxcIixhKSxmfHxoPT09a3x8KGY9W10pKTpcIm9iamVjdFwiPT09dHlwZW9mIGsmJm51bGwhPT1rJiZrLiQkdHlwZW9mPT09R2E/ay50b1N0cmluZygpOihmPWZ8fFtdKS5wdXNoKGwsaykpfWMmJihmPWZ8fFtdKS5wdXNoKFwic3R5bGVcIixcbmMpO3ZhciBsPWY7aWYoYi51cGRhdGVRdWV1ZT1sKWIuZmxhZ3N8PTR9fTtFaT1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmKGIuZmxhZ3N8PTQpfTtmdW5jdGlvbiBGaShhLGIpe2lmKCFsaClzd2l0Y2goYS50YWlsTW9kZSl7Y2FzZSBcImhpZGRlblwiOmI9YS50YWlsO2Zvcih2YXIgYz1udWxsO251bGwhPT1iOyludWxsIT09Yi5hbHRlcm5hdGUmJihjPWIpLGI9Yi5zaWJsaW5nO251bGw9PT1jP2EudGFpbD1udWxsOmMuc2libGluZz1udWxsO2JyZWFrO2Nhc2UgXCJjb2xsYXBzZWRcIjpjPWEudGFpbDtmb3IodmFyIGQ9bnVsbDtudWxsIT09YzspbnVsbCE9PWMuYWx0ZXJuYXRlJiYoZD1jKSxjPWMuc2libGluZztudWxsPT09ZD9ifHxudWxsPT09YS50YWlsP2EudGFpbD1udWxsOmEudGFpbC5zaWJsaW5nPW51bGw6ZC5zaWJsaW5nPW51bGx9fVxuZnVuY3Rpb24gR2koYSxiLGMpe3ZhciBkPWIucGVuZGluZ1Byb3BzO3N3aXRjaChiLnRhZyl7Y2FzZSAyOmNhc2UgMTY6Y2FzZSAxNTpjYXNlIDA6Y2FzZSAxMTpjYXNlIDc6Y2FzZSA4OmNhc2UgMTI6Y2FzZSA5OmNhc2UgMTQ6cmV0dXJuIG51bGw7Y2FzZSAxOnJldHVybiBGZihiLnR5cGUpJiZHZigpLG51bGw7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7ZD1iLnN0YXRlTm9kZTtkLnBlbmRpbmdDb250ZXh0JiYoZC5jb250ZXh0PWQucGVuZGluZ0NvbnRleHQsZC5wZW5kaW5nQ29udGV4dD1udWxsKTtpZihudWxsPT09YXx8bnVsbD09PWEuY2hpbGQpcmgoYik/Yi5mbGFnc3w9NDpkLmh5ZHJhdGV8fChiLmZsYWdzfD0yNTYpO0NpKGIpO3JldHVybiBudWxsO2Nhc2UgNTpoaChiKTt2YXIgZT1kaChjaC5jdXJyZW50KTtjPWIudHlwZTtpZihudWxsIT09YSYmbnVsbCE9Yi5zdGF0ZU5vZGUpRGkoYSxiLGMsZCxlKSxhLnJlZiE9PWIucmVmJiYoYi5mbGFnc3w9MTI4KTtlbHNle2lmKCFkKXtpZihudWxsPT09XG5iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih5KDE2NikpO3JldHVybiBudWxsfWE9ZGgoYWguY3VycmVudCk7aWYocmgoYikpe2Q9Yi5zdGF0ZU5vZGU7Yz1iLnR5cGU7dmFyIGY9Yi5tZW1vaXplZFByb3BzO2Rbd2ZdPWI7ZFt4Zl09Zjtzd2l0Y2goYyl7Y2FzZSBcImRpYWxvZ1wiOkcoXCJjYW5jZWxcIixkKTtHKFwiY2xvc2VcIixkKTticmVhaztjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkcoXCJsb2FkXCIsZCk7YnJlYWs7Y2FzZSBcInZpZGVvXCI6Y2FzZSBcImF1ZGlvXCI6Zm9yKGE9MDthPFhlLmxlbmd0aDthKyspRyhYZVthXSxkKTticmVhaztjYXNlIFwic291cmNlXCI6RyhcImVycm9yXCIsZCk7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RyhcImVycm9yXCIsZCk7RyhcImxvYWRcIixkKTticmVhaztjYXNlIFwiZGV0YWlsc1wiOkcoXCJ0b2dnbGVcIixkKTticmVhaztjYXNlIFwiaW5wdXRcIjpaYShkLGYpO0coXCJpbnZhbGlkXCIsZCk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmQuX3dyYXBwZXJTdGF0ZT1cbnt3YXNNdWx0aXBsZTohIWYubXVsdGlwbGV9O0coXCJpbnZhbGlkXCIsZCk7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6aGIoZCxmKSxHKFwiaW52YWxpZFwiLGQpfXZiKGMsZik7YT1udWxsO2Zvcih2YXIgZyBpbiBmKWYuaGFzT3duUHJvcGVydHkoZykmJihlPWZbZ10sXCJjaGlsZHJlblwiPT09Zz9cInN0cmluZ1wiPT09dHlwZW9mIGU/ZC50ZXh0Q29udGVudCE9PWUmJihhPVtcImNoaWxkcmVuXCIsZV0pOlwibnVtYmVyXCI9PT10eXBlb2YgZSYmZC50ZXh0Q29udGVudCE9PVwiXCIrZSYmKGE9W1wiY2hpbGRyZW5cIixcIlwiK2VdKTpjYS5oYXNPd25Qcm9wZXJ0eShnKSYmbnVsbCE9ZSYmXCJvblNjcm9sbFwiPT09ZyYmRyhcInNjcm9sbFwiLGQpKTtzd2l0Y2goYyl7Y2FzZSBcImlucHV0XCI6VmEoZCk7Y2IoZCxmLCEwKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYShkKTtqYihkKTticmVhaztjYXNlIFwic2VsZWN0XCI6Y2FzZSBcIm9wdGlvblwiOmJyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGYub25DbGljayYmKGQub25jbGljaz1cbmpmKX1kPWE7Yi51cGRhdGVRdWV1ZT1kO251bGwhPT1kJiYoYi5mbGFnc3w9NCl9ZWxzZXtnPTk9PT1lLm5vZGVUeXBlP2U6ZS5vd25lckRvY3VtZW50O2E9PT1rYi5odG1sJiYoYT1sYihjKSk7YT09PWtiLmh0bWw/XCJzY3JpcHRcIj09PWM/KGE9Zy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOlwic3RyaW5nXCI9PT10eXBlb2YgZC5pcz9hPWcuY3JlYXRlRWxlbWVudChjLHtpczpkLmlzfSk6KGE9Zy5jcmVhdGVFbGVtZW50KGMpLFwic2VsZWN0XCI9PT1jJiYoZz1hLGQubXVsdGlwbGU/Zy5tdWx0aXBsZT0hMDpkLnNpemUmJihnLnNpemU9ZC5zaXplKSkpOmE9Zy5jcmVhdGVFbGVtZW50TlMoYSxjKTthW3dmXT1iO2FbeGZdPWQ7QmkoYSxiLCExLCExKTtiLnN0YXRlTm9kZT1hO2c9d2IoYyxkKTtzd2l0Y2goYyl7Y2FzZSBcImRpYWxvZ1wiOkcoXCJjYW5jZWxcIixhKTtHKFwiY2xvc2VcIixhKTtcbmU9ZDticmVhaztjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOmNhc2UgXCJlbWJlZFwiOkcoXCJsb2FkXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJ2aWRlb1wiOmNhc2UgXCJhdWRpb1wiOmZvcihlPTA7ZTxYZS5sZW5ndGg7ZSsrKUcoWGVbZV0sYSk7ZT1kO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpHKFwiZXJyb3JcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImltZ1wiOmNhc2UgXCJpbWFnZVwiOmNhc2UgXCJsaW5rXCI6RyhcImVycm9yXCIsYSk7RyhcImxvYWRcIixhKTtlPWQ7YnJlYWs7Y2FzZSBcImRldGFpbHNcIjpHKFwidG9nZ2xlXCIsYSk7ZT1kO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOlphKGEsZCk7ZT1ZYShhLGQpO0coXCJpbnZhbGlkXCIsYSk7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmU9ZWIoYSxkKTticmVhaztjYXNlIFwic2VsZWN0XCI6YS5fd3JhcHBlclN0YXRlPXt3YXNNdWx0aXBsZTohIWQubXVsdGlwbGV9O2U9bSh7fSxkLHt2YWx1ZTp2b2lkIDB9KTtHKFwiaW52YWxpZFwiLGEpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOmhiKGEsZCk7ZT1cbmdiKGEsZCk7RyhcImludmFsaWRcIixhKTticmVhaztkZWZhdWx0OmU9ZH12YihjLGUpO3ZhciBoPWU7Zm9yKGYgaW4gaClpZihoLmhhc093blByb3BlcnR5KGYpKXt2YXIgaz1oW2ZdO1wic3R5bGVcIj09PWY/dGIoYSxrKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1mPyhrPWs/ay5fX2h0bWw6dm9pZCAwLG51bGwhPWsmJm9iKGEsaykpOlwiY2hpbGRyZW5cIj09PWY/XCJzdHJpbmdcIj09PXR5cGVvZiBrPyhcInRleHRhcmVhXCIhPT1jfHxcIlwiIT09aykmJnBiKGEsayk6XCJudW1iZXJcIj09PXR5cGVvZiBrJiZwYihhLFwiXCIrayk6XCJzdXBwcmVzc0NvbnRlbnRFZGl0YWJsZVdhcm5pbmdcIiE9PWYmJlwic3VwcHJlc3NIeWRyYXRpb25XYXJuaW5nXCIhPT1mJiZcImF1dG9Gb2N1c1wiIT09ZiYmKGNhLmhhc093blByb3BlcnR5KGYpP251bGwhPWsmJlwib25TY3JvbGxcIj09PWYmJkcoXCJzY3JvbGxcIixhKTpudWxsIT1rJiZxYShhLGYsayxnKSl9c3dpdGNoKGMpe2Nhc2UgXCJpbnB1dFwiOlZhKGEpO2NiKGEsZCwhMSk7XG5icmVhaztjYXNlIFwidGV4dGFyZWFcIjpWYShhKTtqYihhKTticmVhaztjYXNlIFwib3B0aW9uXCI6bnVsbCE9ZC52YWx1ZSYmYS5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLFwiXCIrU2EoZC52YWx1ZSkpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphLm11bHRpcGxlPSEhZC5tdWx0aXBsZTtmPWQudmFsdWU7bnVsbCE9Zj9mYihhLCEhZC5tdWx0aXBsZSxmLCExKTpudWxsIT1kLmRlZmF1bHRWYWx1ZSYmZmIoYSwhIWQubXVsdGlwbGUsZC5kZWZhdWx0VmFsdWUsITApO2JyZWFrO2RlZmF1bHQ6XCJmdW5jdGlvblwiPT09dHlwZW9mIGUub25DbGljayYmKGEub25jbGljaz1qZil9bWYoYyxkKSYmKGIuZmxhZ3N8PTQpfW51bGwhPT1iLnJlZiYmKGIuZmxhZ3N8PTEyOCl9cmV0dXJuIG51bGw7Y2FzZSA2OmlmKGEmJm51bGwhPWIuc3RhdGVOb2RlKUVpKGEsYixhLm1lbW9pemVkUHJvcHMsZCk7ZWxzZXtpZihcInN0cmluZ1wiIT09dHlwZW9mIGQmJm51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih5KDE2NikpO1xuYz1kaChjaC5jdXJyZW50KTtkaChhaC5jdXJyZW50KTtyaChiKT8oZD1iLnN0YXRlTm9kZSxjPWIubWVtb2l6ZWRQcm9wcyxkW3dmXT1iLGQubm9kZVZhbHVlIT09YyYmKGIuZmxhZ3N8PTQpKTooZD0oOT09PWMubm9kZVR5cGU/YzpjLm93bmVyRG9jdW1lbnQpLmNyZWF0ZVRleHROb2RlKGQpLGRbd2ZdPWIsYi5zdGF0ZU5vZGU9ZCl9cmV0dXJuIG51bGw7Y2FzZSAxMzpIKFApO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKDAhPT0oYi5mbGFncyY2NCkpcmV0dXJuIGIubGFuZXM9YyxiO2Q9bnVsbCE9PWQ7Yz0hMTtudWxsPT09YT92b2lkIDAhPT1iLm1lbW9pemVkUHJvcHMuZmFsbGJhY2smJnJoKGIpOmM9bnVsbCE9PWEubWVtb2l6ZWRTdGF0ZTtpZihkJiYhYyYmMCE9PShiLm1vZGUmMikpaWYobnVsbD09PWEmJiEwIT09Yi5tZW1vaXplZFByb3BzLnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrfHwwIT09KFAuY3VycmVudCYxKSkwPT09ViYmKFY9Myk7ZWxzZXtpZigwPT09Vnx8Mz09PVYpVj1cbjQ7bnVsbD09PVV8fDA9PT0oRGcmMTM0MjE3NzI3KSYmMD09PShIaSYxMzQyMTc3MjcpfHxJaShVLFcpfWlmKGR8fGMpYi5mbGFnc3w9NDtyZXR1cm4gbnVsbDtjYXNlIDQ6cmV0dXJuIGZoKCksQ2koYiksbnVsbD09PWEmJmNmKGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLG51bGw7Y2FzZSAxMDpyZXR1cm4gcmcoYiksbnVsbDtjYXNlIDE3OnJldHVybiBGZihiLnR5cGUpJiZHZigpLG51bGw7Y2FzZSAxOTpIKFApO2Q9Yi5tZW1vaXplZFN0YXRlO2lmKG51bGw9PT1kKXJldHVybiBudWxsO2Y9MCE9PShiLmZsYWdzJjY0KTtnPWQucmVuZGVyaW5nO2lmKG51bGw9PT1nKWlmKGYpRmkoZCwhMSk7ZWxzZXtpZigwIT09Vnx8bnVsbCE9PWEmJjAhPT0oYS5mbGFncyY2NCkpZm9yKGE9Yi5jaGlsZDtudWxsIT09YTspe2c9aWgoYSk7aWYobnVsbCE9PWcpe2IuZmxhZ3N8PTY0O0ZpKGQsITEpO2Y9Zy51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKGIudXBkYXRlUXVldWU9ZixiLmZsYWdzfD00KTtcbm51bGw9PT1kLmxhc3RFZmZlY3QmJihiLmZpcnN0RWZmZWN0PW51bGwpO2IubGFzdEVmZmVjdD1kLmxhc3RFZmZlY3Q7ZD1jO2ZvcihjPWIuY2hpbGQ7bnVsbCE9PWM7KWY9YyxhPWQsZi5mbGFncyY9MixmLm5leHRFZmZlY3Q9bnVsbCxmLmZpcnN0RWZmZWN0PW51bGwsZi5sYXN0RWZmZWN0PW51bGwsZz1mLmFsdGVybmF0ZSxudWxsPT09Zz8oZi5jaGlsZExhbmVzPTAsZi5sYW5lcz1hLGYuY2hpbGQ9bnVsbCxmLm1lbW9pemVkUHJvcHM9bnVsbCxmLm1lbW9pemVkU3RhdGU9bnVsbCxmLnVwZGF0ZVF1ZXVlPW51bGwsZi5kZXBlbmRlbmNpZXM9bnVsbCxmLnN0YXRlTm9kZT1udWxsKTooZi5jaGlsZExhbmVzPWcuY2hpbGRMYW5lcyxmLmxhbmVzPWcubGFuZXMsZi5jaGlsZD1nLmNoaWxkLGYubWVtb2l6ZWRQcm9wcz1nLm1lbW9pemVkUHJvcHMsZi5tZW1vaXplZFN0YXRlPWcubWVtb2l6ZWRTdGF0ZSxmLnVwZGF0ZVF1ZXVlPWcudXBkYXRlUXVldWUsZi50eXBlPWcudHlwZSxhPWcuZGVwZW5kZW5jaWVzLFxuZi5kZXBlbmRlbmNpZXM9bnVsbD09PWE/bnVsbDp7bGFuZXM6YS5sYW5lcyxmaXJzdENvbnRleHQ6YS5maXJzdENvbnRleHR9KSxjPWMuc2libGluZztJKFAsUC5jdXJyZW50JjF8Mik7cmV0dXJuIGIuY2hpbGR9YT1hLnNpYmxpbmd9bnVsbCE9PWQudGFpbCYmTygpPkppJiYoYi5mbGFnc3w9NjQsZj0hMCxGaShkLCExKSxiLmxhbmVzPTMzNTU0NDMyKX1lbHNle2lmKCFmKWlmKGE9aWgoZyksbnVsbCE9PWEpe2lmKGIuZmxhZ3N8PTY0LGY9ITAsYz1hLnVwZGF0ZVF1ZXVlLG51bGwhPT1jJiYoYi51cGRhdGVRdWV1ZT1jLGIuZmxhZ3N8PTQpLEZpKGQsITApLG51bGw9PT1kLnRhaWwmJlwiaGlkZGVuXCI9PT1kLnRhaWxNb2RlJiYhZy5hbHRlcm5hdGUmJiFsaClyZXR1cm4gYj1iLmxhc3RFZmZlY3Q9ZC5sYXN0RWZmZWN0LG51bGwhPT1iJiYoYi5uZXh0RWZmZWN0PW51bGwpLG51bGx9ZWxzZSAyKk8oKS1kLnJlbmRlcmluZ1N0YXJ0VGltZT5KaSYmMTA3Mzc0MTgyNCE9PWMmJihiLmZsYWdzfD1cbjY0LGY9ITAsRmkoZCwhMSksYi5sYW5lcz0zMzU1NDQzMik7ZC5pc0JhY2t3YXJkcz8oZy5zaWJsaW5nPWIuY2hpbGQsYi5jaGlsZD1nKTooYz1kLmxhc3QsbnVsbCE9PWM/Yy5zaWJsaW5nPWc6Yi5jaGlsZD1nLGQubGFzdD1nKX1yZXR1cm4gbnVsbCE9PWQudGFpbD8oYz1kLnRhaWwsZC5yZW5kZXJpbmc9YyxkLnRhaWw9Yy5zaWJsaW5nLGQubGFzdEVmZmVjdD1iLmxhc3RFZmZlY3QsZC5yZW5kZXJpbmdTdGFydFRpbWU9TygpLGMuc2libGluZz1udWxsLGI9UC5jdXJyZW50LEkoUCxmP2ImMXwyOmImMSksYyk6bnVsbDtjYXNlIDIzOmNhc2UgMjQ6cmV0dXJuIEtpKCksbnVsbCE9PWEmJm51bGwhPT1hLm1lbW9pemVkU3RhdGUhPT0obnVsbCE9PWIubWVtb2l6ZWRTdGF0ZSkmJlwidW5zdGFibGUtZGVmZXItd2l0aG91dC1oaWRpbmdcIiE9PWQubW9kZSYmKGIuZmxhZ3N8PTQpLG51bGx9dGhyb3cgRXJyb3IoeSgxNTYsYi50YWcpKTt9XG5mdW5jdGlvbiBMaShhKXtzd2l0Y2goYS50YWcpe2Nhc2UgMTpGZihhLnR5cGUpJiZHZigpO3ZhciBiPWEuZmxhZ3M7cmV0dXJuIGImNDA5Nj8oYS5mbGFncz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAzOmZoKCk7SChOKTtIKE0pO3VoKCk7Yj1hLmZsYWdzO2lmKDAhPT0oYiY2NCkpdGhyb3cgRXJyb3IoeSgyODUpKTthLmZsYWdzPWImLTQwOTd8NjQ7cmV0dXJuIGE7Y2FzZSA1OnJldHVybiBoaChhKSxudWxsO2Nhc2UgMTM6cmV0dXJuIEgoUCksYj1hLmZsYWdzLGImNDA5Nj8oYS5mbGFncz1iJi00MDk3fDY0LGEpOm51bGw7Y2FzZSAxOTpyZXR1cm4gSChQKSxudWxsO2Nhc2UgNDpyZXR1cm4gZmgoKSxudWxsO2Nhc2UgMTA6cmV0dXJuIHJnKGEpLG51bGw7Y2FzZSAyMzpjYXNlIDI0OnJldHVybiBLaSgpLG51bGw7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBNaShhLGIpe3RyeXt2YXIgYz1cIlwiLGQ9YjtkbyBjKz1RYShkKSxkPWQucmV0dXJuO3doaWxlKGQpO3ZhciBlPWN9Y2F0Y2goZil7ZT1cIlxcbkVycm9yIGdlbmVyYXRpbmcgc3RhY2s6IFwiK2YubWVzc2FnZStcIlxcblwiK2Yuc3RhY2t9cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6ZX19ZnVuY3Rpb24gTmkoYSxiKXt0cnl7Y29uc29sZS5lcnJvcihiLnZhbHVlKX1jYXRjaChjKXtzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dGhyb3cgYzt9KX19dmFyIE9pPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrTWFwP1dlYWtNYXA6TWFwO2Z1bmN0aW9uIFBpKGEsYixjKXtjPXpnKC0xLGMpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe1FpfHwoUWk9ITAsUmk9ZCk7TmkoYSxiKX07cmV0dXJuIGN9XG5mdW5jdGlvbiBTaShhLGIsYyl7Yz16ZygtMSxjKTtjLnRhZz0zO3ZhciBkPWEudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3I7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe3ZhciBlPWIudmFsdWU7Yy5wYXlsb2FkPWZ1bmN0aW9uKCl7TmkoYSxiKTtyZXR1cm4gZChlKX19dmFyIGY9YS5zdGF0ZU5vZGU7bnVsbCE9PWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBmLmNvbXBvbmVudERpZENhdGNoJiYoYy5jYWxsYmFjaz1mdW5jdGlvbigpe1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBkJiYobnVsbD09PVRpP1RpPW5ldyBTZXQoW3RoaXNdKTpUaS5hZGQodGhpcyksTmkoYSxiKSk7dmFyIGM9Yi5zdGFjazt0aGlzLmNvbXBvbmVudERpZENhdGNoKGIudmFsdWUse2NvbXBvbmVudFN0YWNrOm51bGwhPT1jP2M6XCJcIn0pfSk7cmV0dXJuIGN9dmFyIFVpPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBXZWFrU2V0P1dlYWtTZXQ6U2V0O1xuZnVuY3Rpb24gVmkoYSl7dmFyIGI9YS5yZWY7aWYobnVsbCE9PWIpaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGIpdHJ5e2IobnVsbCl9Y2F0Y2goYyl7V2koYSxjKX1lbHNlIGIuY3VycmVudD1udWxsfWZ1bmN0aW9uIFhpKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6cmV0dXJuO2Nhc2UgMTppZihiLmZsYWdzJjI1NiYmbnVsbCE9PWEpe3ZhciBjPWEubWVtb2l6ZWRQcm9wcyxkPWEubWVtb2l6ZWRTdGF0ZTthPWIuc3RhdGVOb2RlO2I9YS5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZShiLmVsZW1lbnRUeXBlPT09Yi50eXBlP2M6bGcoYi50eXBlLGMpLGQpO2EuX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGU9Yn1yZXR1cm47Y2FzZSAzOmIuZmxhZ3MmMjU2JiZxZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKTtyZXR1cm47Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6Y2FzZSAxNzpyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9XG5mdW5jdGlvbiBZaShhLGIsYyl7c3dpdGNoKGMudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE1OmNhc2UgMjI6Yj1jLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe2E9Yj1iLm5leHQ7ZG97aWYoMz09PShhLnRhZyYzKSl7dmFyIGQ9YS5jcmVhdGU7YS5kZXN0cm95PWQoKX1hPWEubmV4dH13aGlsZShhIT09Yil9Yj1jLnVwZGF0ZVF1ZXVlO2I9bnVsbCE9PWI/Yi5sYXN0RWZmZWN0Om51bGw7aWYobnVsbCE9PWIpe2E9Yj1iLm5leHQ7ZG97dmFyIGU9YTtkPWUubmV4dDtlPWUudGFnOzAhPT0oZSY0KSYmMCE9PShlJjEpJiYoWmkoYyxhKSwkaShjLGEpKTthPWR9d2hpbGUoYSE9PWIpfXJldHVybjtjYXNlIDE6YT1jLnN0YXRlTm9kZTtjLmZsYWdzJjQmJihudWxsPT09Yj9hLmNvbXBvbmVudERpZE1vdW50KCk6KGQ9Yy5lbGVtZW50VHlwZT09PWMudHlwZT9iLm1lbW9pemVkUHJvcHM6bGcoYy50eXBlLGIubWVtb2l6ZWRQcm9wcyksYS5jb21wb25lbnREaWRVcGRhdGUoZCxcbmIubWVtb2l6ZWRTdGF0ZSxhLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKSkpO2I9Yy51cGRhdGVRdWV1ZTtudWxsIT09YiYmRWcoYyxiLGEpO3JldHVybjtjYXNlIDM6Yj1jLnVwZGF0ZVF1ZXVlO2lmKG51bGwhPT1iKXthPW51bGw7aWYobnVsbCE9PWMuY2hpbGQpc3dpdGNoKGMuY2hpbGQudGFnKXtjYXNlIDU6YT1jLmNoaWxkLnN0YXRlTm9kZTticmVhaztjYXNlIDE6YT1jLmNoaWxkLnN0YXRlTm9kZX1FZyhjLGIsYSl9cmV0dXJuO2Nhc2UgNTphPWMuc3RhdGVOb2RlO251bGw9PT1iJiZjLmZsYWdzJjQmJm1mKGMudHlwZSxjLm1lbW9pemVkUHJvcHMpJiZhLmZvY3VzKCk7cmV0dXJuO2Nhc2UgNjpyZXR1cm47Y2FzZSA0OnJldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOm51bGw9PT1jLm1lbW9pemVkU3RhdGUmJihjPWMuYWx0ZXJuYXRlLG51bGwhPT1jJiYoYz1jLm1lbW9pemVkU3RhdGUsbnVsbCE9PWMmJihjPWMuZGVoeWRyYXRlZCxudWxsIT09YyYmQ2MoYykpKSk7XG5yZXR1cm47Y2FzZSAxOTpjYXNlIDE3OmNhc2UgMjA6Y2FzZSAyMTpjYXNlIDIzOmNhc2UgMjQ6cmV0dXJufXRocm93IEVycm9yKHkoMTYzKSk7fVxuZnVuY3Rpb24gYWooYSxiKXtmb3IodmFyIGM9YTs7KXtpZig1PT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKGIpZD1kLnN0eWxlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLnNldFByb3BlcnR5P2Quc2V0UHJvcGVydHkoXCJkaXNwbGF5XCIsXCJub25lXCIsXCJpbXBvcnRhbnRcIik6ZC5kaXNwbGF5PVwibm9uZVwiO2Vsc2V7ZD1jLnN0YXRlTm9kZTt2YXIgZT1jLm1lbW9pemVkUHJvcHMuc3R5bGU7ZT12b2lkIDAhPT1lJiZudWxsIT09ZSYmZS5oYXNPd25Qcm9wZXJ0eShcImRpc3BsYXlcIik/ZS5kaXNwbGF5Om51bGw7ZC5zdHlsZS5kaXNwbGF5PXNiKFwiZGlzcGxheVwiLGUpfX1lbHNlIGlmKDY9PT1jLnRhZyljLnN0YXRlTm9kZS5ub2RlVmFsdWU9Yj9cIlwiOmMubWVtb2l6ZWRQcm9wcztlbHNlIGlmKCgyMyE9PWMudGFnJiYyNCE9PWMudGFnfHxudWxsPT09Yy5tZW1vaXplZFN0YXRlfHxjPT09YSkmJm51bGwhPT1jLmNoaWxkKXtjLmNoaWxkLnJldHVybj1jO2M9Yy5jaGlsZDtjb250aW51ZX1pZihjPT09XG5hKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1hKXJldHVybjtjPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gYmooYSxiKXtpZihNZiYmXCJmdW5jdGlvblwiPT09dHlwZW9mIE1mLm9uQ29tbWl0RmliZXJVbm1vdW50KXRyeXtNZi5vbkNvbW1pdEZpYmVyVW5tb3VudChMZixiKX1jYXRjaChmKXt9c3dpdGNoKGIudGFnKXtjYXNlIDA6Y2FzZSAxMTpjYXNlIDE0OmNhc2UgMTU6Y2FzZSAyMjphPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWEmJihhPWEubGFzdEVmZmVjdCxudWxsIT09YSkpe3ZhciBjPWE9YS5uZXh0O2Rve3ZhciBkPWMsZT1kLmRlc3Ryb3k7ZD1kLnRhZztpZih2b2lkIDAhPT1lKWlmKDAhPT0oZCY0KSlaaShiLGMpO2Vsc2V7ZD1iO3RyeXtlKCl9Y2F0Y2goZil7V2koZCxmKX19Yz1jLm5leHR9d2hpbGUoYyE9PWEpfWJyZWFrO2Nhc2UgMTpWaShiKTthPWIuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXthLnByb3BzPWIubWVtb2l6ZWRQcm9wcyxhLnN0YXRlPWIubWVtb2l6ZWRTdGF0ZSxhLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goZil7V2koYixcbmYpfWJyZWFrO2Nhc2UgNTpWaShiKTticmVhaztjYXNlIDQ6Y2ooYSxiKX19ZnVuY3Rpb24gZGooYSl7YS5hbHRlcm5hdGU9bnVsbDthLmNoaWxkPW51bGw7YS5kZXBlbmRlbmNpZXM9bnVsbDthLmZpcnN0RWZmZWN0PW51bGw7YS5sYXN0RWZmZWN0PW51bGw7YS5tZW1vaXplZFByb3BzPW51bGw7YS5tZW1vaXplZFN0YXRlPW51bGw7YS5wZW5kaW5nUHJvcHM9bnVsbDthLnJldHVybj1udWxsO2EudXBkYXRlUXVldWU9bnVsbH1mdW5jdGlvbiBlaihhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIGZqKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKGVqKGIpKWJyZWFrIGE7Yj1iLnJldHVybn10aHJvdyBFcnJvcih5KDE2MCkpO312YXIgYz1iO2I9Yy5zdGF0ZU5vZGU7c3dpdGNoKGMudGFnKXtjYXNlIDU6dmFyIGQ9ITE7YnJlYWs7Y2FzZSAzOmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yi5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7ZGVmYXVsdDp0aHJvdyBFcnJvcih5KDE2MSkpO31jLmZsYWdzJjE2JiYocGIoYixcIlwiKSxjLmZsYWdzJj0tMTcpO2E6Yjpmb3IoYz1hOzspe2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8ZWooYy5yZXR1cm4pKXtjPW51bGw7YnJlYWsgYX1jPWMucmV0dXJufWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Zm9yKGM9Yy5zaWJsaW5nOzUhPT1jLnRhZyYmNiE9PWMudGFnJiYxOCE9PWMudGFnOyl7aWYoYy5mbGFncyYyKWNvbnRpbnVlIGI7aWYobnVsbD09PVxuYy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZmxhZ3MmMikpe2M9Yy5zdGF0ZU5vZGU7YnJlYWsgYX19ZD9naihhLGMsYik6aGooYSxjLGIpfVxuZnVuY3Rpb24gZ2ooYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/OD09PWMubm9kZVR5cGU/Yy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShhLGIpOmMuaW5zZXJ0QmVmb3JlKGEsYik6KDg9PT1jLm5vZGVUeXBlPyhiPWMucGFyZW50Tm9kZSxiLmluc2VydEJlZm9yZShhLGMpKTooYj1jLGIuYXBwZW5kQ2hpbGQoYSkpLGM9Yy5fcmVhY3RSb290Q29udGFpbmVyLG51bGwhPT1jJiZ2b2lkIDAhPT1jfHxudWxsIT09Yi5vbmNsaWNrfHwoYi5vbmNsaWNrPWpmKSk7ZWxzZSBpZig0IT09ZCYmKGE9YS5jaGlsZCxudWxsIT09YSkpZm9yKGdqKGEsYixjKSxhPWEuc2libGluZztudWxsIT09YTspZ2ooYSxiLGMpLGE9YS5zaWJsaW5nfVxuZnVuY3Rpb24gaGooYSxiLGMpe3ZhciBkPWEudGFnLGU9NT09PWR8fDY9PT1kO2lmKGUpYT1lP2Euc3RhdGVOb2RlOmEuc3RhdGVOb2RlLmluc3RhbmNlLGI/Yy5pbnNlcnRCZWZvcmUoYSxiKTpjLmFwcGVuZENoaWxkKGEpO2Vsc2UgaWYoNCE9PWQmJihhPWEuY2hpbGQsbnVsbCE9PWEpKWZvcihoaihhLGIsYyksYT1hLnNpYmxpbmc7bnVsbCE9PWE7KWhqKGEsYixjKSxhPWEuc2libGluZ31cbmZ1bmN0aW9uIGNqKGEsYil7Zm9yKHZhciBjPWIsZD0hMSxlLGY7Oyl7aWYoIWQpe2Q9Yy5yZXR1cm47YTpmb3IoOzspe2lmKG51bGw9PT1kKXRocm93IEVycm9yKHkoMTYwKSk7ZT1kLnN0YXRlTm9kZTtzd2l0Y2goZC50YWcpe2Nhc2UgNTpmPSExO2JyZWFrIGE7Y2FzZSAzOmU9ZS5jb250YWluZXJJbmZvO2Y9ITA7YnJlYWsgYTtjYXNlIDQ6ZT1lLmNvbnRhaW5lckluZm87Zj0hMDticmVhayBhfWQ9ZC5yZXR1cm59ZD0hMH1pZig1PT09Yy50YWd8fDY9PT1jLnRhZyl7YTpmb3IodmFyIGc9YSxoPWMsaz1oOzspaWYoYmooZyxrKSxudWxsIT09ay5jaGlsZCYmNCE9PWsudGFnKWsuY2hpbGQucmV0dXJuPWssaz1rLmNoaWxkO2Vsc2V7aWYoaz09PWgpYnJlYWsgYTtmb3IoO251bGw9PT1rLnNpYmxpbmc7KXtpZihudWxsPT09ay5yZXR1cm58fGsucmV0dXJuPT09aClicmVhayBhO2s9ay5yZXR1cm59ay5zaWJsaW5nLnJldHVybj1rLnJldHVybjtrPWsuc2libGluZ31mPyhnPWUsaD1jLnN0YXRlTm9kZSxcbjg9PT1nLm5vZGVUeXBlP2cucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChoKTpnLnJlbW92ZUNoaWxkKGgpKTplLnJlbW92ZUNoaWxkKGMuc3RhdGVOb2RlKX1lbHNlIGlmKDQ9PT1jLnRhZyl7aWYobnVsbCE9PWMuY2hpbGQpe2U9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztmPSEwO2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfX1lbHNlIGlmKGJqKGEsYyksbnVsbCE9PWMuY2hpbGQpe2MuY2hpbGQucmV0dXJuPWM7Yz1jLmNoaWxkO2NvbnRpbnVlfWlmKGM9PT1iKWJyZWFrO2Zvcig7bnVsbD09PWMuc2libGluZzspe2lmKG51bGw9PT1jLnJldHVybnx8Yy5yZXR1cm49PT1iKXJldHVybjtjPWMucmV0dXJuOzQ9PT1jLnRhZyYmKGQ9ITEpfWMuc2libGluZy5yZXR1cm49Yy5yZXR1cm47Yz1jLnNpYmxpbmd9fVxuZnVuY3Rpb24gaWooYSxiKXtzd2l0Y2goYi50YWcpe2Nhc2UgMDpjYXNlIDExOmNhc2UgMTQ6Y2FzZSAxNTpjYXNlIDIyOnZhciBjPWIudXBkYXRlUXVldWU7Yz1udWxsIT09Yz9jLmxhc3RFZmZlY3Q6bnVsbDtpZihudWxsIT09Yyl7dmFyIGQ9Yz1jLm5leHQ7ZG8gMz09PShkLnRhZyYzKSYmKGE9ZC5kZXN0cm95LGQuZGVzdHJveT12b2lkIDAsdm9pZCAwIT09YSYmYSgpKSxkPWQubmV4dDt3aGlsZShkIT09Yyl9cmV0dXJuO2Nhc2UgMTpyZXR1cm47Y2FzZSA1OmM9Yi5zdGF0ZU5vZGU7aWYobnVsbCE9Yyl7ZD1iLm1lbW9pemVkUHJvcHM7dmFyIGU9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOmQ7YT1iLnR5cGU7dmFyIGY9Yi51cGRhdGVRdWV1ZTtiLnVwZGF0ZVF1ZXVlPW51bGw7aWYobnVsbCE9PWYpe2NbeGZdPWQ7XCJpbnB1dFwiPT09YSYmXCJyYWRpb1wiPT09ZC50eXBlJiZudWxsIT1kLm5hbWUmJiRhKGMsZCk7d2IoYSxlKTtiPXdiKGEsZCk7Zm9yKGU9MDtlPGYubGVuZ3RoO2UrPVxuMil7dmFyIGc9ZltlXSxoPWZbZSsxXTtcInN0eWxlXCI9PT1nP3RiKGMsaCk6XCJkYW5nZXJvdXNseVNldElubmVySFRNTFwiPT09Zz9vYihjLGgpOlwiY2hpbGRyZW5cIj09PWc/cGIoYyxoKTpxYShjLGcsaCxiKX1zd2l0Y2goYSl7Y2FzZSBcImlucHV0XCI6YWIoYyxkKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjppYihjLGQpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjphPWMuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZSxjLl93cmFwcGVyU3RhdGUud2FzTXVsdGlwbGU9ISFkLm11bHRpcGxlLGY9ZC52YWx1ZSxudWxsIT1mP2ZiKGMsISFkLm11bHRpcGxlLGYsITEpOmEhPT0hIWQubXVsdGlwbGUmJihudWxsIT1kLmRlZmF1bHRWYWx1ZT9mYihjLCEhZC5tdWx0aXBsZSxkLmRlZmF1bHRWYWx1ZSwhMCk6ZmIoYywhIWQubXVsdGlwbGUsZC5tdWx0aXBsZT9bXTpcIlwiLCExKSl9fX1yZXR1cm47Y2FzZSA2OmlmKG51bGw9PT1iLnN0YXRlTm9kZSl0aHJvdyBFcnJvcih5KDE2MikpO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1cbmIubWVtb2l6ZWRQcm9wcztyZXR1cm47Y2FzZSAzOmM9Yi5zdGF0ZU5vZGU7Yy5oeWRyYXRlJiYoYy5oeWRyYXRlPSExLENjKGMuY29udGFpbmVySW5mbykpO3JldHVybjtjYXNlIDEyOnJldHVybjtjYXNlIDEzOm51bGwhPT1iLm1lbW9pemVkU3RhdGUmJihqaj1PKCksYWooYi5jaGlsZCwhMCkpO2tqKGIpO3JldHVybjtjYXNlIDE5OmtqKGIpO3JldHVybjtjYXNlIDE3OnJldHVybjtjYXNlIDIzOmNhc2UgMjQ6YWooYixudWxsIT09Yi5tZW1vaXplZFN0YXRlKTtyZXR1cm59dGhyb3cgRXJyb3IoeSgxNjMpKTt9ZnVuY3Rpb24ga2ooYSl7dmFyIGI9YS51cGRhdGVRdWV1ZTtpZihudWxsIT09Yil7YS51cGRhdGVRdWV1ZT1udWxsO3ZhciBjPWEuc3RhdGVOb2RlO251bGw9PT1jJiYoYz1hLnN0YXRlTm9kZT1uZXcgVWkpO2IuZm9yRWFjaChmdW5jdGlvbihiKXt2YXIgZD1sai5iaW5kKG51bGwsYSxiKTtjLmhhcyhiKXx8KGMuYWRkKGIpLGIudGhlbihkLGQpKX0pfX1cbmZ1bmN0aW9uIG1qKGEsYil7cmV0dXJuIG51bGwhPT1hJiYoYT1hLm1lbW9pemVkU3RhdGUsbnVsbD09PWF8fG51bGwhPT1hLmRlaHlkcmF0ZWQpPyhiPWIubWVtb2l6ZWRTdGF0ZSxudWxsIT09YiYmbnVsbD09PWIuZGVoeWRyYXRlZCk6ITF9dmFyIG5qPU1hdGguY2VpbCxvaj1yYS5SZWFjdEN1cnJlbnREaXNwYXRjaGVyLHBqPXJhLlJlYWN0Q3VycmVudE93bmVyLFg9MCxVPW51bGwsWT1udWxsLFc9MCxxaj0wLHJqPUJmKDApLFY9MCxzaj1udWxsLHRqPTAsRGc9MCxIaT0wLHVqPTAsdmo9bnVsbCxqaj0wLEppPUluZmluaXR5O2Z1bmN0aW9uIHdqKCl7Smk9TygpKzUwMH12YXIgWj1udWxsLFFpPSExLFJpPW51bGwsVGk9bnVsbCx4aj0hMSx5aj1udWxsLHpqPTkwLEFqPVtdLEJqPVtdLENqPW51bGwsRGo9MCxFaj1udWxsLEZqPS0xLEdqPTAsSGo9MCxJaj1udWxsLEpqPSExO2Z1bmN0aW9uIEhnKCl7cmV0dXJuIDAhPT0oWCY0OCk/TygpOi0xIT09Rmo/Rmo6Rmo9TygpfVxuZnVuY3Rpb24gSWcoYSl7YT1hLm1vZGU7aWYoMD09PShhJjIpKXJldHVybiAxO2lmKDA9PT0oYSY0KSlyZXR1cm4gOTk9PT1lZygpPzE6MjswPT09R2omJihHaj10aik7aWYoMCE9PWtnLnRyYW5zaXRpb24pezAhPT1IaiYmKEhqPW51bGwhPT12aj92ai5wZW5kaW5nTGFuZXM6MCk7YT1Hajt2YXIgYj00MTg2MTEyJn5IajtiJj0tYjswPT09YiYmKGE9NDE4NjExMiZ+YSxiPWEmLWEsMD09PWImJihiPTgxOTIpKTtyZXR1cm4gYn1hPWVnKCk7MCE9PShYJjQpJiY5OD09PWE/YT1YYygxMixHaik6KGE9U2MoYSksYT1YYyhhLEdqKSk7cmV0dXJuIGF9XG5mdW5jdGlvbiBKZyhhLGIsYyl7aWYoNTA8RGopdGhyb3cgRGo9MCxFaj1udWxsLEVycm9yKHkoMTg1KSk7YT1LaihhLGIpO2lmKG51bGw9PT1hKXJldHVybiBudWxsOyRjKGEsYixjKTthPT09VSYmKEhpfD1iLDQ9PT1WJiZJaShhLFcpKTt2YXIgZD1lZygpOzE9PT1iPzAhPT0oWCY4KSYmMD09PShYJjQ4KT9MaihhKTooTWooYSxjKSwwPT09WCYmKHdqKCksaWcoKSkpOigwPT09KFgmNCl8fDk4IT09ZCYmOTkhPT1kfHwobnVsbD09PUNqP0NqPW5ldyBTZXQoW2FdKTpDai5hZGQoYSkpLE1qKGEsYykpO3ZqPWF9ZnVuY3Rpb24gS2ooYSxiKXthLmxhbmVzfD1iO3ZhciBjPWEuYWx0ZXJuYXRlO251bGwhPT1jJiYoYy5sYW5lc3w9Yik7Yz1hO2ZvcihhPWEucmV0dXJuO251bGwhPT1hOylhLmNoaWxkTGFuZXN8PWIsYz1hLmFsdGVybmF0ZSxudWxsIT09YyYmKGMuY2hpbGRMYW5lc3w9YiksYz1hLGE9YS5yZXR1cm47cmV0dXJuIDM9PT1jLnRhZz9jLnN0YXRlTm9kZTpudWxsfVxuZnVuY3Rpb24gTWooYSxiKXtmb3IodmFyIGM9YS5jYWxsYmFja05vZGUsZD1hLnN1c3BlbmRlZExhbmVzLGU9YS5waW5nZWRMYW5lcyxmPWEuZXhwaXJhdGlvblRpbWVzLGc9YS5wZW5kaW5nTGFuZXM7MDxnOyl7dmFyIGg9MzEtVmMoZyksaz0xPDxoLGw9ZltoXTtpZigtMT09PWwpe2lmKDA9PT0oayZkKXx8MCE9PShrJmUpKXtsPWI7UmMoayk7dmFyIG49RjtmW2hdPTEwPD1uP2wrMjUwOjY8PW4/bCs1RTM6LTF9fWVsc2UgbDw9YiYmKGEuZXhwaXJlZExhbmVzfD1rKTtnJj1+a31kPVVjKGEsYT09PVU/VzowKTtiPUY7aWYoMD09PWQpbnVsbCE9PWMmJihjIT09WmYmJlBmKGMpLGEuY2FsbGJhY2tOb2RlPW51bGwsYS5jYWxsYmFja1ByaW9yaXR5PTApO2Vsc2V7aWYobnVsbCE9PWMpe2lmKGEuY2FsbGJhY2tQcmlvcml0eT09PWIpcmV0dXJuO2MhPT1aZiYmUGYoYyl9MTU9PT1iPyhjPUxqLmJpbmQobnVsbCxhKSxudWxsPT09YWc/KGFnPVtjXSxiZz1PZihVZixqZykpOmFnLnB1c2goYyksXG5jPVpmKToxND09PWI/Yz1oZyg5OSxMai5iaW5kKG51bGwsYSkpOihjPVRjKGIpLGM9aGcoYyxOai5iaW5kKG51bGwsYSkpKTthLmNhbGxiYWNrUHJpb3JpdHk9YjthLmNhbGxiYWNrTm9kZT1jfX1cbmZ1bmN0aW9uIE5qKGEpe0ZqPS0xO0hqPUdqPTA7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO3ZhciBiPWEuY2FsbGJhY2tOb2RlO2lmKE9qKCkmJmEuY2FsbGJhY2tOb2RlIT09YilyZXR1cm4gbnVsbDt2YXIgYz1VYyhhLGE9PT1VP1c6MCk7aWYoMD09PWMpcmV0dXJuIG51bGw7dmFyIGQ9Yzt2YXIgZT1YO1h8PTE2O3ZhciBmPVBqKCk7aWYoVSE9PWF8fFchPT1kKXdqKCksUWooYSxkKTtkbyB0cnl7UmooKTticmVha31jYXRjaChoKXtTaihhLGgpfXdoaWxlKDEpO3FnKCk7b2ouY3VycmVudD1mO1g9ZTtudWxsIT09WT9kPTA6KFU9bnVsbCxXPTAsZD1WKTtpZigwIT09KHRqJkhpKSlRaihhLDApO2Vsc2UgaWYoMCE9PWQpezI9PT1kJiYoWHw9NjQsYS5oeWRyYXRlJiYoYS5oeWRyYXRlPSExLHFmKGEuY29udGFpbmVySW5mbykpLGM9V2MoYSksMCE9PWMmJihkPVRqKGEsYykpKTtpZigxPT09ZCl0aHJvdyBiPXNqLFFqKGEsMCksSWkoYSxjKSxNaihhLE8oKSksYjthLmZpbmlzaGVkV29yaz1cbmEuY3VycmVudC5hbHRlcm5hdGU7YS5maW5pc2hlZExhbmVzPWM7c3dpdGNoKGQpe2Nhc2UgMDpjYXNlIDE6dGhyb3cgRXJyb3IoeSgzNDUpKTtjYXNlIDI6VWooYSk7YnJlYWs7Y2FzZSAzOklpKGEsYyk7aWYoKGMmNjI5MTQ1NjApPT09YyYmKGQ9amorNTAwLU8oKSwxMDxkKSl7aWYoMCE9PVVjKGEsMCkpYnJlYWs7ZT1hLnN1c3BlbmRlZExhbmVzO2lmKChlJmMpIT09Yyl7SGcoKTthLnBpbmdlZExhbmVzfD1hLnN1c3BlbmRlZExhbmVzJmU7YnJlYWt9YS50aW1lb3V0SGFuZGxlPW9mKFVqLmJpbmQobnVsbCxhKSxkKTticmVha31VaihhKTticmVhaztjYXNlIDQ6SWkoYSxjKTtpZigoYyY0MTg2MTEyKT09PWMpYnJlYWs7ZD1hLmV2ZW50VGltZXM7Zm9yKGU9LTE7MDxjOyl7dmFyIGc9MzEtVmMoYyk7Zj0xPDxnO2c9ZFtnXTtnPmUmJihlPWcpO2MmPX5mfWM9ZTtjPU8oKS1jO2M9KDEyMD5jPzEyMDo0ODA+Yz80ODA6MTA4MD5jPzEwODA6MTkyMD5jPzE5MjA6M0UzPmM/M0UzOjQzMjA+XG5jPzQzMjA6MTk2MCpuaihjLzE5NjApKS1jO2lmKDEwPGMpe2EudGltZW91dEhhbmRsZT1vZihVai5iaW5kKG51bGwsYSksYyk7YnJlYWt9VWooYSk7YnJlYWs7Y2FzZSA1OlVqKGEpO2JyZWFrO2RlZmF1bHQ6dGhyb3cgRXJyb3IoeSgzMjkpKTt9fU1qKGEsTygpKTtyZXR1cm4gYS5jYWxsYmFja05vZGU9PT1iP05qLmJpbmQobnVsbCxhKTpudWxsfWZ1bmN0aW9uIElpKGEsYil7YiY9fnVqO2ImPX5IaTthLnN1c3BlbmRlZExhbmVzfD1iO2EucGluZ2VkTGFuZXMmPX5iO2ZvcihhPWEuZXhwaXJhdGlvblRpbWVzOzA8Yjspe3ZhciBjPTMxLVZjKGIpLGQ9MTw8YzthW2NdPS0xO2ImPX5kfX1cbmZ1bmN0aW9uIExqKGEpe2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMjcpKTtPaigpO2lmKGE9PT1VJiYwIT09KGEuZXhwaXJlZExhbmVzJlcpKXt2YXIgYj1XO3ZhciBjPVRqKGEsYik7MCE9PSh0aiZIaSkmJihiPVVjKGEsYiksYz1UaihhLGIpKX1lbHNlIGI9VWMoYSwwKSxjPVRqKGEsYik7MCE9PWEudGFnJiYyPT09YyYmKFh8PTY0LGEuaHlkcmF0ZSYmKGEuaHlkcmF0ZT0hMSxxZihhLmNvbnRhaW5lckluZm8pKSxiPVdjKGEpLDAhPT1iJiYoYz1UaihhLGIpKSk7aWYoMT09PWMpdGhyb3cgYz1zaixRaihhLDApLElpKGEsYiksTWooYSxPKCkpLGM7YS5maW5pc2hlZFdvcms9YS5jdXJyZW50LmFsdGVybmF0ZTthLmZpbmlzaGVkTGFuZXM9YjtVaihhKTtNaihhLE8oKSk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBWaigpe2lmKG51bGwhPT1Dail7dmFyIGE9Q2o7Q2o9bnVsbDthLmZvckVhY2goZnVuY3Rpb24oYSl7YS5leHBpcmVkTGFuZXN8PTI0JmEucGVuZGluZ0xhbmVzO01qKGEsTygpKX0pfWlnKCl9ZnVuY3Rpb24gV2ooYSxiKXt2YXIgYz1YO1h8PTE7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19ZnVuY3Rpb24gWGooYSxiKXt2YXIgYz1YO1gmPS0yO1h8PTg7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7WD1jLDA9PT1YJiYod2ooKSxpZygpKX19ZnVuY3Rpb24gbmkoYSxiKXtJKHJqLHFqKTtxanw9Yjt0anw9Yn1mdW5jdGlvbiBLaSgpe3FqPXJqLmN1cnJlbnQ7SChyail9XG5mdW5jdGlvbiBRaihhLGIpe2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZExhbmVzPTA7dmFyIGM9YS50aW1lb3V0SGFuZGxlOy0xIT09YyYmKGEudGltZW91dEhhbmRsZT0tMSxwZihjKSk7aWYobnVsbCE9PVkpZm9yKGM9WS5yZXR1cm47bnVsbCE9PWM7KXt2YXIgZD1jO3N3aXRjaChkLnRhZyl7Y2FzZSAxOmQ9ZC50eXBlLmNoaWxkQ29udGV4dFR5cGVzO251bGwhPT1kJiZ2b2lkIDAhPT1kJiZHZigpO2JyZWFrO2Nhc2UgMzpmaCgpO0goTik7SChNKTt1aCgpO2JyZWFrO2Nhc2UgNTpoaChkKTticmVhaztjYXNlIDQ6ZmgoKTticmVhaztjYXNlIDEzOkgoUCk7YnJlYWs7Y2FzZSAxOTpIKFApO2JyZWFrO2Nhc2UgMTA6cmcoZCk7YnJlYWs7Y2FzZSAyMzpjYXNlIDI0OktpKCl9Yz1jLnJldHVybn1VPWE7WT1UZyhhLmN1cnJlbnQsbnVsbCk7Vz1xaj10aj1iO1Y9MDtzaj1udWxsO3VqPUhpPURnPTB9XG5mdW5jdGlvbiBTaihhLGIpe2Rve3ZhciBjPVk7dHJ5e3FnKCk7dmguY3VycmVudD1HaDtpZih5aCl7Zm9yKHZhciBkPVIubWVtb2l6ZWRTdGF0ZTtudWxsIT09ZDspe3ZhciBlPWQucXVldWU7bnVsbCE9PWUmJihlLnBlbmRpbmc9bnVsbCk7ZD1kLm5leHR9eWg9ITF9eGg9MDtUPVM9Uj1udWxsO3poPSExO3BqLmN1cnJlbnQ9bnVsbDtpZihudWxsPT09Y3x8bnVsbD09PWMucmV0dXJuKXtWPTE7c2o9YjtZPW51bGw7YnJlYWt9YTp7dmFyIGY9YSxnPWMucmV0dXJuLGg9YyxrPWI7Yj1XO2guZmxhZ3N8PTIwNDg7aC5maXJzdEVmZmVjdD1oLmxhc3RFZmZlY3Q9bnVsbDtpZihudWxsIT09ayYmXCJvYmplY3RcIj09PXR5cGVvZiBrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2Ygay50aGVuKXt2YXIgbD1rO2lmKDA9PT0oaC5tb2RlJjIpKXt2YXIgbj1oLmFsdGVybmF0ZTtuPyhoLnVwZGF0ZVF1ZXVlPW4udXBkYXRlUXVldWUsaC5tZW1vaXplZFN0YXRlPW4ubWVtb2l6ZWRTdGF0ZSxoLmxhbmVzPW4ubGFuZXMpOlxuKGgudXBkYXRlUXVldWU9bnVsbCxoLm1lbW9pemVkU3RhdGU9bnVsbCl9dmFyIEE9MCE9PShQLmN1cnJlbnQmMSkscD1nO2Rve3ZhciBDO2lmKEM9MTM9PT1wLnRhZyl7dmFyIHg9cC5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT14KUM9bnVsbCE9PXguZGVoeWRyYXRlZD8hMDohMTtlbHNle3ZhciB3PXAubWVtb2l6ZWRQcm9wcztDPXZvaWQgMD09PXcuZmFsbGJhY2s/ITE6ITAhPT13LnVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrPyEwOkE/ITE6ITB9fWlmKEMpe3ZhciB6PXAudXBkYXRlUXVldWU7aWYobnVsbD09PXope3ZhciB1PW5ldyBTZXQ7dS5hZGQobCk7cC51cGRhdGVRdWV1ZT11fWVsc2Ugei5hZGQobCk7aWYoMD09PShwLm1vZGUmMikpe3AuZmxhZ3N8PTY0O2guZmxhZ3N8PTE2Mzg0O2guZmxhZ3MmPS0yOTgxO2lmKDE9PT1oLnRhZylpZihudWxsPT09aC5hbHRlcm5hdGUpaC50YWc9MTc7ZWxzZXt2YXIgdD16ZygtMSwxKTt0LnRhZz0yO0FnKGgsdCl9aC5sYW5lc3w9MTticmVhayBhfWs9XG52b2lkIDA7aD1iO3ZhciBxPWYucGluZ0NhY2hlO251bGw9PT1xPyhxPWYucGluZ0NhY2hlPW5ldyBPaSxrPW5ldyBTZXQscS5zZXQobCxrKSk6KGs9cS5nZXQobCksdm9pZCAwPT09ayYmKGs9bmV3IFNldCxxLnNldChsLGspKSk7aWYoIWsuaGFzKGgpKXtrLmFkZChoKTt2YXIgdj1Zai5iaW5kKG51bGwsZixsLGgpO2wudGhlbih2LHYpfXAuZmxhZ3N8PTQwOTY7cC5sYW5lcz1iO2JyZWFrIGF9cD1wLnJldHVybn13aGlsZShudWxsIT09cCk7az1FcnJvcigoUmEoaC50eXBlKXx8XCJBIFJlYWN0IGNvbXBvbmVudFwiKStcIiBzdXNwZW5kZWQgd2hpbGUgcmVuZGVyaW5nLCBidXQgbm8gZmFsbGJhY2sgVUkgd2FzIHNwZWNpZmllZC5cXG5cXG5BZGQgYSA8U3VzcGVuc2UgZmFsbGJhY2s9Li4uPiBjb21wb25lbnQgaGlnaGVyIGluIHRoZSB0cmVlIHRvIHByb3ZpZGUgYSBsb2FkaW5nIGluZGljYXRvciBvciBwbGFjZWhvbGRlciB0byBkaXNwbGF5LlwiKX01IT09ViYmKFY9Mik7az1NaShrLGgpO3A9XG5nO2Rve3N3aXRjaChwLnRhZyl7Y2FzZSAzOmY9aztwLmZsYWdzfD00MDk2O2ImPS1iO3AubGFuZXN8PWI7dmFyIEo9UGkocCxmLGIpO0JnKHAsSik7YnJlYWsgYTtjYXNlIDE6Zj1rO3ZhciBLPXAudHlwZSxRPXAuc3RhdGVOb2RlO2lmKDA9PT0ocC5mbGFncyY2NCkmJihcImZ1bmN0aW9uXCI9PT10eXBlb2YgSy5nZXREZXJpdmVkU3RhdGVGcm9tRXJyb3J8fG51bGwhPT1RJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgUS5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhRKSkpKXtwLmZsYWdzfD00MDk2O2ImPS1iO3AubGFuZXN8PWI7dmFyIEw9U2kocCxmLGIpO0JnKHAsTCk7YnJlYWsgYX19cD1wLnJldHVybn13aGlsZShudWxsIT09cCl9WmooYyl9Y2F0Y2godmEpe2I9dmE7WT09PWMmJm51bGwhPT1jJiYoWT1jPWMucmV0dXJuKTtjb250aW51ZX1icmVha313aGlsZSgxKX1cbmZ1bmN0aW9uIFBqKCl7dmFyIGE9b2ouY3VycmVudDtvai5jdXJyZW50PUdoO3JldHVybiBudWxsPT09YT9HaDphfWZ1bmN0aW9uIFRqKGEsYil7dmFyIGM9WDtYfD0xNjt2YXIgZD1QaigpO1U9PT1hJiZXPT09Ynx8UWooYSxiKTtkbyB0cnl7YWsoKTticmVha31jYXRjaChlKXtTaihhLGUpfXdoaWxlKDEpO3FnKCk7WD1jO29qLmN1cnJlbnQ9ZDtpZihudWxsIT09WSl0aHJvdyBFcnJvcih5KDI2MSkpO1U9bnVsbDtXPTA7cmV0dXJuIFZ9ZnVuY3Rpb24gYWsoKXtmb3IoO251bGwhPT1ZOyliayhZKX1mdW5jdGlvbiBSaigpe2Zvcig7bnVsbCE9PVkmJiFRZigpOyliayhZKX1mdW5jdGlvbiBiayhhKXt2YXIgYj1jayhhLmFsdGVybmF0ZSxhLHFqKTthLm1lbW9pemVkUHJvcHM9YS5wZW5kaW5nUHJvcHM7bnVsbD09PWI/WmooYSk6WT1iO3BqLmN1cnJlbnQ9bnVsbH1cbmZ1bmN0aW9uIFpqKGEpe3ZhciBiPWE7ZG97dmFyIGM9Yi5hbHRlcm5hdGU7YT1iLnJldHVybjtpZigwPT09KGIuZmxhZ3MmMjA0OCkpe2M9R2koYyxiLHFqKTtpZihudWxsIT09Yyl7WT1jO3JldHVybn1jPWI7aWYoMjQhPT1jLnRhZyYmMjMhPT1jLnRhZ3x8bnVsbD09PWMubWVtb2l6ZWRTdGF0ZXx8MCE9PShxaiYxMDczNzQxODI0KXx8MD09PShjLm1vZGUmNCkpe2Zvcih2YXIgZD0wLGU9Yy5jaGlsZDtudWxsIT09ZTspZHw9ZS5sYW5lc3xlLmNoaWxkTGFuZXMsZT1lLnNpYmxpbmc7Yy5jaGlsZExhbmVzPWR9bnVsbCE9PWEmJjA9PT0oYS5mbGFncyYyMDQ4KSYmKG51bGw9PT1hLmZpcnN0RWZmZWN0JiYoYS5maXJzdEVmZmVjdD1iLmZpcnN0RWZmZWN0KSxudWxsIT09Yi5sYXN0RWZmZWN0JiYobnVsbCE9PWEubGFzdEVmZmVjdCYmKGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWIuZmlyc3RFZmZlY3QpLGEubGFzdEVmZmVjdD1iLmxhc3RFZmZlY3QpLDE8Yi5mbGFncyYmKG51bGwhPT1cbmEubGFzdEVmZmVjdD9hLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1iOmEuZmlyc3RFZmZlY3Q9YixhLmxhc3RFZmZlY3Q9YikpfWVsc2V7Yz1MaShiKTtpZihudWxsIT09Yyl7Yy5mbGFncyY9MjA0NztZPWM7cmV0dXJufW51bGwhPT1hJiYoYS5maXJzdEVmZmVjdD1hLmxhc3RFZmZlY3Q9bnVsbCxhLmZsYWdzfD0yMDQ4KX1iPWIuc2libGluZztpZihudWxsIT09Yil7WT1iO3JldHVybn1ZPWI9YX13aGlsZShudWxsIT09Yik7MD09PVYmJihWPTUpfWZ1bmN0aW9uIFVqKGEpe3ZhciBiPWVnKCk7Z2coOTksZGsuYmluZChudWxsLGEsYikpO3JldHVybiBudWxsfVxuZnVuY3Rpb24gZGsoYSxiKXtkbyBPaigpO3doaWxlKG51bGwhPT15aik7aWYoMCE9PShYJjQ4KSl0aHJvdyBFcnJvcih5KDMyNykpO3ZhciBjPWEuZmluaXNoZWRXb3JrO2lmKG51bGw9PT1jKXJldHVybiBudWxsO2EuZmluaXNoZWRXb3JrPW51bGw7YS5maW5pc2hlZExhbmVzPTA7aWYoYz09PWEuY3VycmVudCl0aHJvdyBFcnJvcih5KDE3NykpO2EuY2FsbGJhY2tOb2RlPW51bGw7dmFyIGQ9Yy5sYW5lc3xjLmNoaWxkTGFuZXMsZT1kLGY9YS5wZW5kaW5nTGFuZXMmfmU7YS5wZW5kaW5nTGFuZXM9ZTthLnN1c3BlbmRlZExhbmVzPTA7YS5waW5nZWRMYW5lcz0wO2EuZXhwaXJlZExhbmVzJj1lO2EubXV0YWJsZVJlYWRMYW5lcyY9ZTthLmVudGFuZ2xlZExhbmVzJj1lO2U9YS5lbnRhbmdsZW1lbnRzO2Zvcih2YXIgZz1hLmV2ZW50VGltZXMsaD1hLmV4cGlyYXRpb25UaW1lczswPGY7KXt2YXIgaz0zMS1WYyhmKSxsPTE8PGs7ZVtrXT0wO2dba109LTE7aFtrXT0tMTtmJj1+bH1udWxsIT09XG5DaiYmMD09PShkJjI0KSYmQ2ouaGFzKGEpJiZDai5kZWxldGUoYSk7YT09PVUmJihZPVU9bnVsbCxXPTApOzE8Yy5mbGFncz9udWxsIT09Yy5sYXN0RWZmZWN0PyhjLmxhc3RFZmZlY3QubmV4dEVmZmVjdD1jLGQ9Yy5maXJzdEVmZmVjdCk6ZD1jOmQ9Yy5maXJzdEVmZmVjdDtpZihudWxsIT09ZCl7ZT1YO1h8PTMyO3BqLmN1cnJlbnQ9bnVsbDtrZj1mZDtnPU5lKCk7aWYoT2UoZykpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluIGcpaD17c3RhcnQ6Zy5zZWxlY3Rpb25TdGFydCxlbmQ6Zy5zZWxlY3Rpb25FbmR9O2Vsc2UgYTppZihoPShoPWcub3duZXJEb2N1bWVudCkmJmguZGVmYXVsdFZpZXd8fHdpbmRvdywobD1oLmdldFNlbGVjdGlvbiYmaC5nZXRTZWxlY3Rpb24oKSkmJjAhPT1sLnJhbmdlQ291bnQpe2g9bC5hbmNob3JOb2RlO2Y9bC5hbmNob3JPZmZzZXQ7az1sLmZvY3VzTm9kZTtsPWwuZm9jdXNPZmZzZXQ7dHJ5e2gubm9kZVR5cGUsay5ub2RlVHlwZX1jYXRjaCh2YSl7aD1udWxsO1xuYnJlYWsgYX12YXIgbj0wLEE9LTEscD0tMSxDPTAseD0wLHc9Zyx6PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgdTs7KXt3IT09aHx8MCE9PWYmJjMhPT13Lm5vZGVUeXBlfHwoQT1uK2YpO3chPT1rfHwwIT09bCYmMyE9PXcubm9kZVR5cGV8fChwPW4rbCk7Mz09PXcubm9kZVR5cGUmJihuKz13Lm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0odT13LmZpcnN0Q2hpbGQpKWJyZWFrO3o9dzt3PXV9Zm9yKDs7KXtpZih3PT09ZylicmVhayBiO3o9PT1oJiYrK0M9PT1mJiYoQT1uKTt6PT09ayYmKyt4PT09bCYmKHA9bik7aWYobnVsbCE9PSh1PXcubmV4dFNpYmxpbmcpKWJyZWFrO3c9ejt6PXcucGFyZW50Tm9kZX13PXV9aD0tMT09PUF8fC0xPT09cD9udWxsOntzdGFydDpBLGVuZDpwfX1lbHNlIGg9bnVsbDtoPWh8fHtzdGFydDowLGVuZDowfX1lbHNlIGg9bnVsbDtsZj17Zm9jdXNlZEVsZW06ZyxzZWxlY3Rpb25SYW5nZTpofTtmZD0hMTtJaj1udWxsO0pqPSExO1o9ZDtkbyB0cnl7ZWsoKX1jYXRjaCh2YSl7aWYobnVsbD09PVxuWil0aHJvdyBFcnJvcih5KDMzMCkpO1dpKFosdmEpO1o9Wi5uZXh0RWZmZWN0fXdoaWxlKG51bGwhPT1aKTtJaj1udWxsO1o9ZDtkbyB0cnl7Zm9yKGc9YTtudWxsIT09Wjspe3ZhciB0PVouZmxhZ3M7dCYxNiYmcGIoWi5zdGF0ZU5vZGUsXCJcIik7aWYodCYxMjgpe3ZhciBxPVouYWx0ZXJuYXRlO2lmKG51bGwhPT1xKXt2YXIgdj1xLnJlZjtudWxsIT09diYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiB2P3YobnVsbCk6di5jdXJyZW50PW51bGwpfX1zd2l0Y2godCYxMDM4KXtjYXNlIDI6ZmooWik7Wi5mbGFncyY9LTM7YnJlYWs7Y2FzZSA2OmZqKFopO1ouZmxhZ3MmPS0zO2lqKFouYWx0ZXJuYXRlLFopO2JyZWFrO2Nhc2UgMTAyNDpaLmZsYWdzJj0tMTAyNTticmVhaztjYXNlIDEwMjg6Wi5mbGFncyY9LTEwMjU7aWooWi5hbHRlcm5hdGUsWik7YnJlYWs7Y2FzZSA0OmlqKFouYWx0ZXJuYXRlLFopO2JyZWFrO2Nhc2UgODpoPVo7Y2ooZyxoKTt2YXIgSj1oLmFsdGVybmF0ZTtkaihoKTtudWxsIT09XG5KJiZkaihKKX1aPVoubmV4dEVmZmVjdH19Y2F0Y2godmEpe2lmKG51bGw9PT1aKXRocm93IEVycm9yKHkoMzMwKSk7V2koWix2YSk7Wj1aLm5leHRFZmZlY3R9d2hpbGUobnVsbCE9PVopO3Y9bGY7cT1OZSgpO3Q9di5mb2N1c2VkRWxlbTtnPXYuc2VsZWN0aW9uUmFuZ2U7aWYocSE9PXQmJnQmJnQub3duZXJEb2N1bWVudCYmTWUodC5vd25lckRvY3VtZW50LmRvY3VtZW50RWxlbWVudCx0KSl7bnVsbCE9PWcmJk9lKHQpJiYocT1nLnN0YXJ0LHY9Zy5lbmQsdm9pZCAwPT09diYmKHY9cSksXCJzZWxlY3Rpb25TdGFydFwiaW4gdD8odC5zZWxlY3Rpb25TdGFydD1xLHQuc2VsZWN0aW9uRW5kPU1hdGgubWluKHYsdC52YWx1ZS5sZW5ndGgpKToodj0ocT10Lm93bmVyRG9jdW1lbnR8fGRvY3VtZW50KSYmcS5kZWZhdWx0Vmlld3x8d2luZG93LHYuZ2V0U2VsZWN0aW9uJiYodj12LmdldFNlbGVjdGlvbigpLGg9dC50ZXh0Q29udGVudC5sZW5ndGgsSj1NYXRoLm1pbihnLnN0YXJ0LGgpLGc9dm9pZCAwPT09XG5nLmVuZD9KOk1hdGgubWluKGcuZW5kLGgpLCF2LmV4dGVuZCYmSj5nJiYoaD1nLGc9SixKPWgpLGg9TGUodCxKKSxmPUxlKHQsZyksaCYmZiYmKDEhPT12LnJhbmdlQ291bnR8fHYuYW5jaG9yTm9kZSE9PWgubm9kZXx8di5hbmNob3JPZmZzZXQhPT1oLm9mZnNldHx8di5mb2N1c05vZGUhPT1mLm5vZGV8fHYuZm9jdXNPZmZzZXQhPT1mLm9mZnNldCkmJihxPXEuY3JlYXRlUmFuZ2UoKSxxLnNldFN0YXJ0KGgubm9kZSxoLm9mZnNldCksdi5yZW1vdmVBbGxSYW5nZXMoKSxKPmc/KHYuYWRkUmFuZ2UocSksdi5leHRlbmQoZi5ub2RlLGYub2Zmc2V0KSk6KHEuc2V0RW5kKGYubm9kZSxmLm9mZnNldCksdi5hZGRSYW5nZShxKSkpKSkpO3E9W107Zm9yKHY9dDt2PXYucGFyZW50Tm9kZTspMT09PXYubm9kZVR5cGUmJnEucHVzaCh7ZWxlbWVudDp2LGxlZnQ6di5zY3JvbGxMZWZ0LHRvcDp2LnNjcm9sbFRvcH0pO1wiZnVuY3Rpb25cIj09PXR5cGVvZiB0LmZvY3VzJiZ0LmZvY3VzKCk7Zm9yKHQ9XG4wO3Q8cS5sZW5ndGg7dCsrKXY9cVt0XSx2LmVsZW1lbnQuc2Nyb2xsTGVmdD12LmxlZnQsdi5lbGVtZW50LnNjcm9sbFRvcD12LnRvcH1mZD0hIWtmO2xmPWtmPW51bGw7YS5jdXJyZW50PWM7Wj1kO2RvIHRyeXtmb3IodD1hO251bGwhPT1aOyl7dmFyIEs9Wi5mbGFncztLJjM2JiZZaSh0LFouYWx0ZXJuYXRlLFopO2lmKEsmMTI4KXtxPXZvaWQgMDt2YXIgUT1aLnJlZjtpZihudWxsIT09USl7dmFyIEw9Wi5zdGF0ZU5vZGU7c3dpdGNoKFoudGFnKXtjYXNlIDU6cT1MO2JyZWFrO2RlZmF1bHQ6cT1MfVwiZnVuY3Rpb25cIj09PXR5cGVvZiBRP1EocSk6US5jdXJyZW50PXF9fVo9Wi5uZXh0RWZmZWN0fX1jYXRjaCh2YSl7aWYobnVsbD09PVopdGhyb3cgRXJyb3IoeSgzMzApKTtXaShaLHZhKTtaPVoubmV4dEVmZmVjdH13aGlsZShudWxsIT09Wik7Wj1udWxsOyRmKCk7WD1lfWVsc2UgYS5jdXJyZW50PWM7aWYoeGopeGo9ITEseWo9YSx6aj1iO2Vsc2UgZm9yKFo9ZDtudWxsIT09WjspYj1cbloubmV4dEVmZmVjdCxaLm5leHRFZmZlY3Q9bnVsbCxaLmZsYWdzJjgmJihLPVosSy5zaWJsaW5nPW51bGwsSy5zdGF0ZU5vZGU9bnVsbCksWj1iO2Q9YS5wZW5kaW5nTGFuZXM7MD09PWQmJihUaT1udWxsKTsxPT09ZD9hPT09RWo/RGorKzooRGo9MCxFaj1hKTpEaj0wO2M9Yy5zdGF0ZU5vZGU7aWYoTWYmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBNZi5vbkNvbW1pdEZpYmVyUm9vdCl0cnl7TWYub25Db21taXRGaWJlclJvb3QoTGYsYyx2b2lkIDAsNjQ9PT0oYy5jdXJyZW50LmZsYWdzJjY0KSl9Y2F0Y2godmEpe31NaihhLE8oKSk7aWYoUWkpdGhyb3cgUWk9ITEsYT1SaSxSaT1udWxsLGE7aWYoMCE9PShYJjgpKXJldHVybiBudWxsO2lnKCk7cmV0dXJuIG51bGx9XG5mdW5jdGlvbiBlaygpe2Zvcig7bnVsbCE9PVo7KXt2YXIgYT1aLmFsdGVybmF0ZTtKanx8bnVsbD09PUlqfHwoMCE9PShaLmZsYWdzJjgpP2RjKFosSWopJiYoSmo9ITApOjEzPT09Wi50YWcmJm1qKGEsWikmJmRjKFosSWopJiYoSmo9ITApKTt2YXIgYj1aLmZsYWdzOzAhPT0oYiYyNTYpJiZYaShhLFopOzA9PT0oYiY1MTIpfHx4anx8KHhqPSEwLGhnKDk3LGZ1bmN0aW9uKCl7T2ooKTtyZXR1cm4gbnVsbH0pKTtaPVoubmV4dEVmZmVjdH19ZnVuY3Rpb24gT2ooKXtpZig5MCE9PXpqKXt2YXIgYT05Nzx6aj85Nzp6ajt6aj05MDtyZXR1cm4gZ2coYSxmayl9cmV0dXJuITF9ZnVuY3Rpb24gJGkoYSxiKXtBai5wdXNoKGIsYSk7eGp8fCh4aj0hMCxoZyg5NyxmdW5jdGlvbigpe09qKCk7cmV0dXJuIG51bGx9KSl9ZnVuY3Rpb24gWmkoYSxiKXtCai5wdXNoKGIsYSk7eGp8fCh4aj0hMCxoZyg5NyxmdW5jdGlvbigpe09qKCk7cmV0dXJuIG51bGx9KSl9XG5mdW5jdGlvbiBmaygpe2lmKG51bGw9PT15ailyZXR1cm4hMTt2YXIgYT15ajt5aj1udWxsO2lmKDAhPT0oWCY0OCkpdGhyb3cgRXJyb3IoeSgzMzEpKTt2YXIgYj1YO1h8PTMyO3ZhciBjPUJqO0JqPVtdO2Zvcih2YXIgZD0wO2Q8Yy5sZW5ndGg7ZCs9Mil7dmFyIGU9Y1tkXSxmPWNbZCsxXSxnPWUuZGVzdHJveTtlLmRlc3Ryb3k9dm9pZCAwO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBnKXRyeXtnKCl9Y2F0Y2goayl7aWYobnVsbD09PWYpdGhyb3cgRXJyb3IoeSgzMzApKTtXaShmLGspfX1jPUFqO0FqPVtdO2ZvcihkPTA7ZDxjLmxlbmd0aDtkKz0yKXtlPWNbZF07Zj1jW2QrMV07dHJ5e3ZhciBoPWUuY3JlYXRlO2UuZGVzdHJveT1oKCl9Y2F0Y2goayl7aWYobnVsbD09PWYpdGhyb3cgRXJyb3IoeSgzMzApKTtXaShmLGspfX1mb3IoaD1hLmN1cnJlbnQuZmlyc3RFZmZlY3Q7bnVsbCE9PWg7KWE9aC5uZXh0RWZmZWN0LGgubmV4dEVmZmVjdD1udWxsLGguZmxhZ3MmOCYmKGguc2libGluZz1cbm51bGwsaC5zdGF0ZU5vZGU9bnVsbCksaD1hO1g9YjtpZygpO3JldHVybiEwfWZ1bmN0aW9uIGdrKGEsYixjKXtiPU1pKGMsYik7Yj1QaShhLGIsMSk7QWcoYSxiKTtiPUhnKCk7YT1LaihhLDEpO251bGwhPT1hJiYoJGMoYSwxLGIpLE1qKGEsYikpfVxuZnVuY3Rpb24gV2koYSxiKXtpZigzPT09YS50YWcpZ2soYSxhLGIpO2Vsc2UgZm9yKHZhciBjPWEucmV0dXJuO251bGwhPT1jOyl7aWYoMz09PWMudGFnKXtnayhjLGEsYik7YnJlYWt9ZWxzZSBpZigxPT09Yy50YWcpe3ZhciBkPWMuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLnR5cGUuZ2V0RGVyaXZlZFN0YXRlRnJvbUVycm9yfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1UaXx8IVRpLmhhcyhkKSkpe2E9TWkoYixhKTt2YXIgZT1TaShjLGEsMSk7QWcoYyxlKTtlPUhnKCk7Yz1LaihjLDEpO2lmKG51bGwhPT1jKSRjKGMsMSxlKSxNaihjLGUpO2Vsc2UgaWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihudWxsPT09VGl8fCFUaS5oYXMoZCkpKXRyeXtkLmNvbXBvbmVudERpZENhdGNoKGIsYSl9Y2F0Y2goZil7fWJyZWFrfX1jPWMucmV0dXJufX1cbmZ1bmN0aW9uIFlqKGEsYixjKXt2YXIgZD1hLnBpbmdDYWNoZTtudWxsIT09ZCYmZC5kZWxldGUoYik7Yj1IZygpO2EucGluZ2VkTGFuZXN8PWEuc3VzcGVuZGVkTGFuZXMmYztVPT09YSYmKFcmYyk9PT1jJiYoND09PVZ8fDM9PT1WJiYoVyY2MjkxNDU2MCk9PT1XJiY1MDA+TygpLWpqP1FqKGEsMCk6dWp8PWMpO01qKGEsYil9ZnVuY3Rpb24gbGooYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtudWxsIT09YyYmYy5kZWxldGUoYik7Yj0wOzA9PT1iJiYoYj1hLm1vZGUsMD09PShiJjIpP2I9MTowPT09KGImNCk/Yj05OT09PWVnKCk/MToyOigwPT09R2omJihHaj10aiksYj1ZYyg2MjkxNDU2MCZ+R2opLDA9PT1iJiYoYj00MTk0MzA0KSkpO2M9SGcoKTthPUtqKGEsYik7bnVsbCE9PWEmJigkYyhhLGIsYyksTWooYSxjKSl9dmFyIGNrO1xuY2s9ZnVuY3Rpb24oYSxiLGMpe3ZhciBkPWIubGFuZXM7aWYobnVsbCE9PWEpaWYoYS5tZW1vaXplZFByb3BzIT09Yi5wZW5kaW5nUHJvcHN8fE4uY3VycmVudCl1Zz0hMDtlbHNlIGlmKDAhPT0oYyZkKSl1Zz0wIT09KGEuZmxhZ3MmMTYzODQpPyEwOiExO2Vsc2V7dWc9ITE7c3dpdGNoKGIudGFnKXtjYXNlIDM6cmkoYik7c2goKTticmVhaztjYXNlIDU6Z2goYik7YnJlYWs7Y2FzZSAxOkZmKGIudHlwZSkmJkpmKGIpO2JyZWFrO2Nhc2UgNDplaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTA6ZD1iLm1lbW9pemVkUHJvcHMudmFsdWU7dmFyIGU9Yi50eXBlLl9jb250ZXh0O0kobWcsZS5fY3VycmVudFZhbHVlKTtlLl9jdXJyZW50VmFsdWU9ZDticmVhaztjYXNlIDEzOmlmKG51bGwhPT1iLm1lbW9pemVkU3RhdGUpe2lmKDAhPT0oYyZiLmNoaWxkLmNoaWxkTGFuZXMpKXJldHVybiB0aShhLGIsYyk7SShQLFAuY3VycmVudCYxKTtiPWhpKGEsYixjKTtyZXR1cm4gbnVsbCE9PVxuYj9iLnNpYmxpbmc6bnVsbH1JKFAsUC5jdXJyZW50JjEpO2JyZWFrO2Nhc2UgMTk6ZD0wIT09KGMmYi5jaGlsZExhbmVzKTtpZigwIT09KGEuZmxhZ3MmNjQpKXtpZihkKXJldHVybiBBaShhLGIsYyk7Yi5mbGFnc3w9NjR9ZT1iLm1lbW9pemVkU3RhdGU7bnVsbCE9PWUmJihlLnJlbmRlcmluZz1udWxsLGUudGFpbD1udWxsLGUubGFzdEVmZmVjdD1udWxsKTtJKFAsUC5jdXJyZW50KTtpZihkKWJyZWFrO2Vsc2UgcmV0dXJuIG51bGw7Y2FzZSAyMzpjYXNlIDI0OnJldHVybiBiLmxhbmVzPTAsbWkoYSxiLGMpfXJldHVybiBoaShhLGIsYyl9ZWxzZSB1Zz0hMTtiLmxhbmVzPTA7c3dpdGNoKGIudGFnKXtjYXNlIDI6ZD1iLnR5cGU7bnVsbCE9PWEmJihhLmFsdGVybmF0ZT1udWxsLGIuYWx0ZXJuYXRlPW51bGwsYi5mbGFnc3w9Mik7YT1iLnBlbmRpbmdQcm9wcztlPUVmKGIsTS5jdXJyZW50KTt0ZyhiLGMpO2U9Q2gobnVsbCxiLGQsYSxlLGMpO2IuZmxhZ3N8PTE7aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIGUmJm51bGwhPT1lJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZS5yZW5kZXImJnZvaWQgMD09PWUuJCR0eXBlb2Ype2IudGFnPTE7Yi5tZW1vaXplZFN0YXRlPW51bGw7Yi51cGRhdGVRdWV1ZT1udWxsO2lmKEZmKGQpKXt2YXIgZj0hMDtKZihiKX1lbHNlIGY9ITE7Yi5tZW1vaXplZFN0YXRlPW51bGwhPT1lLnN0YXRlJiZ2b2lkIDAhPT1lLnN0YXRlP2Uuc3RhdGU6bnVsbDt4ZyhiKTt2YXIgZz1kLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZyYmR2coYixkLGcsYSk7ZS51cGRhdGVyPUtnO2Iuc3RhdGVOb2RlPWU7ZS5fcmVhY3RJbnRlcm5hbHM9YjtPZyhiLGQsYSxjKTtiPXFpKG51bGwsYixkLCEwLGYsYyl9ZWxzZSBiLnRhZz0wLGZpKG51bGwsYixlLGMpLGI9Yi5jaGlsZDtyZXR1cm4gYjtjYXNlIDE2OmU9Yi5lbGVtZW50VHlwZTthOntudWxsIT09YSYmKGEuYWx0ZXJuYXRlPW51bGwsYi5hbHRlcm5hdGU9bnVsbCxiLmZsYWdzfD0yKTtcbmE9Yi5wZW5kaW5nUHJvcHM7Zj1lLl9pbml0O2U9ZihlLl9wYXlsb2FkKTtiLnR5cGU9ZTtmPWIudGFnPWhrKGUpO2E9bGcoZSxhKTtzd2l0Y2goZil7Y2FzZSAwOmI9bGkobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTpiPXBpKG51bGwsYixlLGEsYyk7YnJlYWsgYTtjYXNlIDExOmI9Z2kobnVsbCxiLGUsYSxjKTticmVhayBhO2Nhc2UgMTQ6Yj1paShudWxsLGIsZSxsZyhlLnR5cGUsYSksZCxjKTticmVhayBhfXRocm93IEVycm9yKHkoMzA2LGUsXCJcIikpO31yZXR1cm4gYjtjYXNlIDA6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksbGkoYSxiLGQsZSxjKTtjYXNlIDE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSkscGkoYSxiLGQsZSxjKTtjYXNlIDM6cmkoYik7ZD1iLnVwZGF0ZVF1ZXVlO2lmKG51bGw9PT1hfHxudWxsPT09ZCl0aHJvdyBFcnJvcih5KDI4MikpO1xuZD1iLnBlbmRpbmdQcm9wcztlPWIubWVtb2l6ZWRTdGF0ZTtlPW51bGwhPT1lP2UuZWxlbWVudDpudWxsO3lnKGEsYik7Q2coYixkLG51bGwsYyk7ZD1iLm1lbW9pemVkU3RhdGUuZWxlbWVudDtpZihkPT09ZSlzaCgpLGI9aGkoYSxiLGMpO2Vsc2V7ZT1iLnN0YXRlTm9kZTtpZihmPWUuaHlkcmF0ZSlraD1yZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvLmZpcnN0Q2hpbGQpLGpoPWIsZj1saD0hMDtpZihmKXthPWUubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YTtpZihudWxsIT1hKWZvcihlPTA7ZTxhLmxlbmd0aDtlKz0yKWY9YVtlXSxmLl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5PWFbZSsxXSx0aC5wdXNoKGYpO2M9WmcoYixudWxsLGQsYyk7Zm9yKGIuY2hpbGQ9YztjOyljLmZsYWdzPWMuZmxhZ3MmLTN8MTAyNCxjPWMuc2libGluZ31lbHNlIGZpKGEsYixkLGMpLHNoKCk7Yj1iLmNoaWxkfXJldHVybiBiO2Nhc2UgNTpyZXR1cm4gZ2goYiksbnVsbD09PWEmJlxucGgoYiksZD1iLnR5cGUsZT1iLnBlbmRpbmdQcm9wcyxmPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpudWxsLGc9ZS5jaGlsZHJlbixuZihkLGUpP2c9bnVsbDpudWxsIT09ZiYmbmYoZCxmKSYmKGIuZmxhZ3N8PTE2KSxvaShhLGIpLGZpKGEsYixnLGMpLGIuY2hpbGQ7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmcGgoYiksbnVsbDtjYXNlIDEzOnJldHVybiB0aShhLGIsYyk7Y2FzZSA0OnJldHVybiBlaChiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pLGQ9Yi5wZW5kaW5nUHJvcHMsbnVsbD09PWE/Yi5jaGlsZD1ZZyhiLG51bGwsZCxjKTpmaShhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTE6cmV0dXJuIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZT1iLmVsZW1lbnRUeXBlPT09ZD9lOmxnKGQsZSksZ2koYSxiLGQsZSxjKTtjYXNlIDc6cmV0dXJuIGZpKGEsYixiLnBlbmRpbmdQcm9wcyxjKSxiLmNoaWxkO2Nhc2UgODpyZXR1cm4gZmkoYSxiLGIucGVuZGluZ1Byb3BzLmNoaWxkcmVuLFxuYyksYi5jaGlsZDtjYXNlIDEyOnJldHVybiBmaShhLGIsYi5wZW5kaW5nUHJvcHMuY2hpbGRyZW4sYyksYi5jaGlsZDtjYXNlIDEwOmE6e2Q9Yi50eXBlLl9jb250ZXh0O2U9Yi5wZW5kaW5nUHJvcHM7Zz1iLm1lbW9pemVkUHJvcHM7Zj1lLnZhbHVlO3ZhciBoPWIudHlwZS5fY29udGV4dDtJKG1nLGguX2N1cnJlbnRWYWx1ZSk7aC5fY3VycmVudFZhbHVlPWY7aWYobnVsbCE9PWcpaWYoaD1nLnZhbHVlLGY9SGUoaCxmKT8wOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM/ZC5fY2FsY3VsYXRlQ2hhbmdlZEJpdHMoaCxmKToxMDczNzQxODIzKXwwLDA9PT1mKXtpZihnLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmIU4uY3VycmVudCl7Yj1oaShhLGIsYyk7YnJlYWsgYX19ZWxzZSBmb3IoaD1iLmNoaWxkLG51bGwhPT1oJiYoaC5yZXR1cm49Yik7bnVsbCE9PWg7KXt2YXIgaz1oLmRlcGVuZGVuY2llcztpZihudWxsIT09ayl7Zz1oLmNoaWxkO2Zvcih2YXIgbD1cbmsuZmlyc3RDb250ZXh0O251bGwhPT1sOyl7aWYobC5jb250ZXh0PT09ZCYmMCE9PShsLm9ic2VydmVkQml0cyZmKSl7MT09PWgudGFnJiYobD16ZygtMSxjJi1jKSxsLnRhZz0yLEFnKGgsbCkpO2gubGFuZXN8PWM7bD1oLmFsdGVybmF0ZTtudWxsIT09bCYmKGwubGFuZXN8PWMpO3NnKGgucmV0dXJuLGMpO2subGFuZXN8PWM7YnJlYWt9bD1sLm5leHR9fWVsc2UgZz0xMD09PWgudGFnP2gudHlwZT09PWIudHlwZT9udWxsOmguY2hpbGQ6aC5jaGlsZDtpZihudWxsIT09ZylnLnJldHVybj1oO2Vsc2UgZm9yKGc9aDtudWxsIT09Zzspe2lmKGc9PT1iKXtnPW51bGw7YnJlYWt9aD1nLnNpYmxpbmc7aWYobnVsbCE9PWgpe2gucmV0dXJuPWcucmV0dXJuO2c9aDticmVha31nPWcucmV0dXJufWg9Z31maShhLGIsZS5jaGlsZHJlbixjKTtiPWIuY2hpbGR9cmV0dXJuIGI7Y2FzZSA5OnJldHVybiBlPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGQ9Zi5jaGlsZHJlbix0ZyhiLGMpLGU9dmcoZSxcbmYudW5zdGFibGVfb2JzZXJ2ZWRCaXRzKSxkPWQoZSksYi5mbGFnc3w9MSxmaShhLGIsZCxjKSxiLmNoaWxkO2Nhc2UgMTQ6cmV0dXJuIGU9Yi50eXBlLGY9bGcoZSxiLnBlbmRpbmdQcm9wcyksZj1sZyhlLnR5cGUsZiksaWkoYSxiLGUsZixkLGMpO2Nhc2UgMTU6cmV0dXJuIGtpKGEsYixiLnR5cGUsYi5wZW5kaW5nUHJvcHMsZCxjKTtjYXNlIDE3OnJldHVybiBkPWIudHlwZSxlPWIucGVuZGluZ1Byb3BzLGU9Yi5lbGVtZW50VHlwZT09PWQ/ZTpsZyhkLGUpLG51bGwhPT1hJiYoYS5hbHRlcm5hdGU9bnVsbCxiLmFsdGVybmF0ZT1udWxsLGIuZmxhZ3N8PTIpLGIudGFnPTEsRmYoZCk/KGE9ITAsSmYoYikpOmE9ITEsdGcoYixjKSxNZyhiLGQsZSksT2coYixkLGUsYykscWkobnVsbCxiLGQsITAsYSxjKTtjYXNlIDE5OnJldHVybiBBaShhLGIsYyk7Y2FzZSAyMzpyZXR1cm4gbWkoYSxiLGMpO2Nhc2UgMjQ6cmV0dXJuIG1pKGEsYixjKX10aHJvdyBFcnJvcih5KDE1NixiLnRhZykpO1xufTtmdW5jdGlvbiBpayhhLGIsYyxkKXt0aGlzLnRhZz1hO3RoaXMua2V5PWM7dGhpcy5zaWJsaW5nPXRoaXMuY2hpbGQ9dGhpcy5yZXR1cm49dGhpcy5zdGF0ZU5vZGU9dGhpcy50eXBlPXRoaXMuZWxlbWVudFR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMuZGVwZW5kZW5jaWVzPXRoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZmxhZ3M9MDt0aGlzLmxhc3RFZmZlY3Q9dGhpcy5maXJzdEVmZmVjdD10aGlzLm5leHRFZmZlY3Q9bnVsbDt0aGlzLmNoaWxkTGFuZXM9dGhpcy5sYW5lcz0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9ZnVuY3Rpb24gbmgoYSxiLGMsZCl7cmV0dXJuIG5ldyBpayhhLGIsYyxkKX1mdW5jdGlvbiBqaShhKXthPWEucHJvdG90eXBlO3JldHVybiEoIWF8fCFhLmlzUmVhY3RDb21wb25lbnQpfVxuZnVuY3Rpb24gaGsoYSl7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEpcmV0dXJuIGppKGEpPzE6MDtpZih2b2lkIDAhPT1hJiZudWxsIT09YSl7YT1hLiQkdHlwZW9mO2lmKGE9PT1BYSlyZXR1cm4gMTE7aWYoYT09PURhKXJldHVybiAxNH1yZXR1cm4gMn1cbmZ1bmN0aW9uIFRnKGEsYil7dmFyIGM9YS5hbHRlcm5hdGU7bnVsbD09PWM/KGM9bmgoYS50YWcsYixhLmtleSxhLm1vZGUpLGMuZWxlbWVudFR5cGU9YS5lbGVtZW50VHlwZSxjLnR5cGU9YS50eXBlLGMuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGMuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9Yyk6KGMucGVuZGluZ1Byb3BzPWIsYy50eXBlPWEudHlwZSxjLmZsYWdzPTAsYy5uZXh0RWZmZWN0PW51bGwsYy5maXJzdEVmZmVjdD1udWxsLGMubGFzdEVmZmVjdD1udWxsKTtjLmNoaWxkTGFuZXM9YS5jaGlsZExhbmVzO2MubGFuZXM9YS5sYW5lcztjLmNoaWxkPWEuY2hpbGQ7Yy5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztjLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2MudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtiPWEuZGVwZW5kZW5jaWVzO2MuZGVwZW5kZW5jaWVzPW51bGw9PT1iP251bGw6e2xhbmVzOmIubGFuZXMsZmlyc3RDb250ZXh0OmIuZmlyc3RDb250ZXh0fTtcbmMuc2libGluZz1hLnNpYmxpbmc7Yy5pbmRleD1hLmluZGV4O2MucmVmPWEucmVmO3JldHVybiBjfVxuZnVuY3Rpb24gVmcoYSxiLGMsZCxlLGYpe3ZhciBnPTI7ZD1hO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhKWppKGEpJiYoZz0xKTtlbHNlIGlmKFwic3RyaW5nXCI9PT10eXBlb2YgYSlnPTU7ZWxzZSBhOnN3aXRjaChhKXtjYXNlIHVhOnJldHVybiBYZyhjLmNoaWxkcmVuLGUsZixiKTtjYXNlIEhhOmc9ODtlfD0xNjticmVhaztjYXNlIHdhOmc9ODtlfD0xO2JyZWFrO2Nhc2UgeGE6cmV0dXJuIGE9bmgoMTIsYyxiLGV8OCksYS5lbGVtZW50VHlwZT14YSxhLnR5cGU9eGEsYS5sYW5lcz1mLGE7Y2FzZSBCYTpyZXR1cm4gYT1uaCgxMyxjLGIsZSksYS50eXBlPUJhLGEuZWxlbWVudFR5cGU9QmEsYS5sYW5lcz1mLGE7Y2FzZSBDYTpyZXR1cm4gYT1uaCgxOSxjLGIsZSksYS5lbGVtZW50VHlwZT1DYSxhLmxhbmVzPWYsYTtjYXNlIElhOnJldHVybiB2aShjLGUsZixiKTtjYXNlIEphOnJldHVybiBhPW5oKDI0LGMsYixlKSxhLmVsZW1lbnRUeXBlPUphLGEubGFuZXM9ZixhO2RlZmF1bHQ6aWYoXCJvYmplY3RcIj09PVxudHlwZW9mIGEmJm51bGwhPT1hKXN3aXRjaChhLiQkdHlwZW9mKXtjYXNlIHlhOmc9MTA7YnJlYWsgYTtjYXNlIHphOmc9OTticmVhayBhO2Nhc2UgQWE6Zz0xMTticmVhayBhO2Nhc2UgRGE6Zz0xNDticmVhayBhO2Nhc2UgRWE6Zz0xNjtkPW51bGw7YnJlYWsgYTtjYXNlIEZhOmc9MjI7YnJlYWsgYX10aHJvdyBFcnJvcih5KDEzMCxudWxsPT1hP2E6dHlwZW9mIGEsXCJcIikpO31iPW5oKGcsYyxiLGUpO2IuZWxlbWVudFR5cGU9YTtiLnR5cGU9ZDtiLmxhbmVzPWY7cmV0dXJuIGJ9ZnVuY3Rpb24gWGcoYSxiLGMsZCl7YT1uaCg3LGEsZCxiKTthLmxhbmVzPWM7cmV0dXJuIGF9ZnVuY3Rpb24gdmkoYSxiLGMsZCl7YT1uaCgyMyxhLGQsYik7YS5lbGVtZW50VHlwZT1JYTthLmxhbmVzPWM7cmV0dXJuIGF9ZnVuY3Rpb24gVWcoYSxiLGMpe2E9bmgoNixhLG51bGwsYik7YS5sYW5lcz1jO3JldHVybiBhfVxuZnVuY3Rpb24gV2coYSxiLGMpe2I9bmgoNCxudWxsIT09YS5jaGlsZHJlbj9hLmNoaWxkcmVuOltdLGEua2V5LGIpO2IubGFuZXM9YztiLnN0YXRlTm9kZT17Y29udGFpbmVySW5mbzphLmNvbnRhaW5lckluZm8scGVuZGluZ0NoaWxkcmVuOm51bGwsaW1wbGVtZW50YXRpb246YS5pbXBsZW1lbnRhdGlvbn07cmV0dXJuIGJ9XG5mdW5jdGlvbiBqayhhLGIsYyl7dGhpcy50YWc9Yjt0aGlzLmNvbnRhaW5lckluZm89YTt0aGlzLmZpbmlzaGVkV29yaz10aGlzLnBpbmdDYWNoZT10aGlzLmN1cnJlbnQ9dGhpcy5wZW5kaW5nQ2hpbGRyZW49bnVsbDt0aGlzLnRpbWVvdXRIYW5kbGU9LTE7dGhpcy5wZW5kaW5nQ29udGV4dD10aGlzLmNvbnRleHQ9bnVsbDt0aGlzLmh5ZHJhdGU9Yzt0aGlzLmNhbGxiYWNrTm9kZT1udWxsO3RoaXMuY2FsbGJhY2tQcmlvcml0eT0wO3RoaXMuZXZlbnRUaW1lcz1aYygwKTt0aGlzLmV4cGlyYXRpb25UaW1lcz1aYygtMSk7dGhpcy5lbnRhbmdsZWRMYW5lcz10aGlzLmZpbmlzaGVkTGFuZXM9dGhpcy5tdXRhYmxlUmVhZExhbmVzPXRoaXMuZXhwaXJlZExhbmVzPXRoaXMucGluZ2VkTGFuZXM9dGhpcy5zdXNwZW5kZWRMYW5lcz10aGlzLnBlbmRpbmdMYW5lcz0wO3RoaXMuZW50YW5nbGVtZW50cz1aYygwKTt0aGlzLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGE9bnVsbH1cbmZ1bmN0aW9uIGtrKGEsYixjKXt2YXIgZD0zPGFyZ3VtZW50cy5sZW5ndGgmJnZvaWQgMCE9PWFyZ3VtZW50c1szXT9hcmd1bWVudHNbM106bnVsbDtyZXR1cm57JCR0eXBlb2Y6dGEsa2V5Om51bGw9PWQ/bnVsbDpcIlwiK2QsY2hpbGRyZW46YSxjb250YWluZXJJbmZvOmIsaW1wbGVtZW50YXRpb246Y319XG5mdW5jdGlvbiBsayhhLGIsYyxkKXt2YXIgZT1iLmN1cnJlbnQsZj1IZygpLGc9SWcoZSk7YTppZihjKXtjPWMuX3JlYWN0SW50ZXJuYWxzO2I6e2lmKFpiKGMpIT09Y3x8MSE9PWMudGFnKXRocm93IEVycm9yKHkoMTcwKSk7dmFyIGg9Yztkb3tzd2l0Y2goaC50YWcpe2Nhc2UgMzpoPWguc3RhdGVOb2RlLmNvbnRleHQ7YnJlYWsgYjtjYXNlIDE6aWYoRmYoaC50eXBlKSl7aD1oLnN0YXRlTm9kZS5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dDticmVhayBifX1oPWgucmV0dXJufXdoaWxlKG51bGwhPT1oKTt0aHJvdyBFcnJvcih5KDE3MSkpO31pZigxPT09Yy50YWcpe3ZhciBrPWMudHlwZTtpZihGZihrKSl7Yz1JZihjLGssaCk7YnJlYWsgYX19Yz1ofWVsc2UgYz1DZjtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPXpnKGYsZyk7Yi5wYXlsb2FkPXtlbGVtZW50OmF9O2Q9dm9pZCAwPT09ZD9udWxsOmQ7bnVsbCE9PVxuZCYmKGIuY2FsbGJhY2s9ZCk7QWcoZSxiKTtKZyhlLGcsZik7cmV0dXJuIGd9ZnVuY3Rpb24gbWsoYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1mdW5jdGlvbiBuayhhLGIpe2E9YS5tZW1vaXplZFN0YXRlO2lmKG51bGwhPT1hJiZudWxsIT09YS5kZWh5ZHJhdGVkKXt2YXIgYz1hLnJldHJ5TGFuZTthLnJldHJ5TGFuZT0wIT09YyYmYzxiP2M6Yn19ZnVuY3Rpb24gb2soYSxiKXtuayhhLGIpOyhhPWEuYWx0ZXJuYXRlKSYmbmsoYSxiKX1mdW5jdGlvbiBwaygpe3JldHVybiBudWxsfVxuZnVuY3Rpb24gcWsoYSxiLGMpe3ZhciBkPW51bGwhPWMmJm51bGwhPWMuaHlkcmF0aW9uT3B0aW9ucyYmYy5oeWRyYXRpb25PcHRpb25zLm11dGFibGVTb3VyY2VzfHxudWxsO2M9bmV3IGprKGEsYixudWxsIT1jJiYhMD09PWMuaHlkcmF0ZSk7Yj1uaCgzLG51bGwsbnVsbCwyPT09Yj83OjE9PT1iPzM6MCk7Yy5jdXJyZW50PWI7Yi5zdGF0ZU5vZGU9Yzt4ZyhiKTthW2ZmXT1jLmN1cnJlbnQ7Y2YoOD09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmEpO2lmKGQpZm9yKGE9MDthPGQubGVuZ3RoO2ErKyl7Yj1kW2FdO3ZhciBlPWIuX2dldFZlcnNpb247ZT1lKGIuX3NvdXJjZSk7bnVsbD09Yy5tdXRhYmxlU291cmNlRWFnZXJIeWRyYXRpb25EYXRhP2MubXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YT1bYixlXTpjLm11dGFibGVTb3VyY2VFYWdlckh5ZHJhdGlvbkRhdGEucHVzaChiLGUpfXRoaXMuX2ludGVybmFsUm9vdD1jfVxucWsucHJvdG90eXBlLnJlbmRlcj1mdW5jdGlvbihhKXtsayhhLHRoaXMuX2ludGVybmFsUm9vdCxudWxsLG51bGwpfTtxay5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbigpe3ZhciBhPXRoaXMuX2ludGVybmFsUm9vdCxiPWEuY29udGFpbmVySW5mbztsayhudWxsLGEsbnVsbCxmdW5jdGlvbigpe2JbZmZdPW51bGx9KX07ZnVuY3Rpb24gcmsoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfVxuZnVuY3Rpb24gc2soYSxiKXtifHwoYj1hPzk9PT1hLm5vZGVUeXBlP2EuZG9jdW1lbnRFbGVtZW50OmEuZmlyc3RDaGlsZDpudWxsLGI9ISghYnx8MSE9PWIubm9kZVR5cGV8fCFiLmhhc0F0dHJpYnV0ZShcImRhdGEtcmVhY3Ryb290XCIpKSk7aWYoIWIpZm9yKHZhciBjO2M9YS5sYXN0Q2hpbGQ7KWEucmVtb3ZlQ2hpbGQoYyk7cmV0dXJuIG5ldyBxayhhLDAsYj97aHlkcmF0ZTohMH06dm9pZCAwKX1cbmZ1bmN0aW9uIHRrKGEsYixjLGQsZSl7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe3ZhciBnPWYuX2ludGVybmFsUm9vdDtpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZSl7dmFyIGg9ZTtlPWZ1bmN0aW9uKCl7dmFyIGE9bWsoZyk7aC5jYWxsKGEpfX1sayhiLGcsYSxlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPXNrKGMsZCk7Zz1mLl9pbnRlcm5hbFJvb3Q7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBrPWU7ZT1mdW5jdGlvbigpe3ZhciBhPW1rKGcpO2suY2FsbChhKX19WGooZnVuY3Rpb24oKXtsayhiLGcsYSxlKX0pfXJldHVybiBtayhnKX1lYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpO0pnKGEsNCxiKTtvayhhLDQpfX07ZmM9ZnVuY3Rpb24oYSl7aWYoMTM9PT1hLnRhZyl7dmFyIGI9SGcoKTtKZyhhLDY3MTA4ODY0LGIpO29rKGEsNjcxMDg4NjQpfX07XG5nYz1mdW5jdGlvbihhKXtpZigxMz09PWEudGFnKXt2YXIgYj1IZygpLGM9SWcoYSk7SmcoYSxjLGIpO29rKGEsYyl9fTtoYz1mdW5jdGlvbihhLGIpe3JldHVybiBiKCl9O1xueWI9ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjphYihhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO2M9Yy5xdWVyeVNlbGVjdG9yQWxsKFwiaW5wdXRbbmFtZT1cIitKU09OLnN0cmluZ2lmeShcIlwiK2IpKyddW3R5cGU9XCJyYWRpb1wiXScpO2ZvcihiPTA7YjxjLmxlbmd0aDtiKyspe3ZhciBkPWNbYl07aWYoZCE9PWEmJmQuZm9ybT09PWEuZm9ybSl7dmFyIGU9RGIoZCk7aWYoIWUpdGhyb3cgRXJyb3IoeSg5MCkpO1dhKGQpO2FiKGQsZSl9fX1icmVhaztjYXNlIFwidGV4dGFyZWFcIjppYihhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpiPWMudmFsdWUsbnVsbCE9YiYmZmIoYSwhIWMubXVsdGlwbGUsYiwhMSl9fTtHYj1XajtcbkhiPWZ1bmN0aW9uKGEsYixjLGQsZSl7dmFyIGY9WDtYfD00O3RyeXtyZXR1cm4gZ2coOTgsYS5iaW5kKG51bGwsYixjLGQsZSkpfWZpbmFsbHl7WD1mLDA9PT1YJiYod2ooKSxpZygpKX19O0liPWZ1bmN0aW9uKCl7MD09PShYJjQ5KSYmKFZqKCksT2ooKSl9O0piPWZ1bmN0aW9uKGEsYil7dmFyIGM9WDtYfD0yO3RyeXtyZXR1cm4gYShiKX1maW5hbGx5e1g9YywwPT09WCYmKHdqKCksaWcoKSl9fTtmdW5jdGlvbiB1ayhhLGIpe3ZhciBjPTI8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzJdP2FyZ3VtZW50c1syXTpudWxsO2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiBrayhhLGIsbnVsbCxjKX12YXIgdms9e0V2ZW50czpbQ2IsdWUsRGIsRWIsRmIsT2ose2N1cnJlbnQ6ITF9XX0sd2s9e2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOndjLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTcuMC4yXCIscmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifTtcbnZhciB4az17YnVuZGxlVHlwZTp3ay5idW5kbGVUeXBlLHZlcnNpb246d2sudmVyc2lvbixyZW5kZXJlclBhY2thZ2VOYW1lOndrLnJlbmRlcmVyUGFja2FnZU5hbWUscmVuZGVyZXJDb25maWc6d2sucmVuZGVyZXJDb25maWcsb3ZlcnJpZGVIb29rU3RhdGU6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZURlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZUhvb2tTdGF0ZVJlbmFtZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzOm51bGwsb3ZlcnJpZGVQcm9wc0RlbGV0ZVBhdGg6bnVsbCxvdmVycmlkZVByb3BzUmVuYW1lUGF0aDpudWxsLHNldFN1c3BlbnNlSGFuZGxlcjpudWxsLHNjaGVkdWxlVXBkYXRlOm51bGwsY3VycmVudERpc3BhdGNoZXJSZWY6cmEuUmVhY3RDdXJyZW50RGlzcGF0Y2hlcixmaW5kSG9zdEluc3RhbmNlQnlGaWJlcjpmdW5jdGlvbihhKXthPWNjKGEpO3JldHVybiBudWxsPT09YT9udWxsOmEuc3RhdGVOb2RlfSxmaW5kRmliZXJCeUhvc3RJbnN0YW5jZTp3ay5maW5kRmliZXJCeUhvc3RJbnN0YW5jZXx8XG5wayxmaW5kSG9zdEluc3RhbmNlc0ZvclJlZnJlc2g6bnVsbCxzY2hlZHVsZVJlZnJlc2g6bnVsbCxzY2hlZHVsZVJvb3Q6bnVsbCxzZXRSZWZyZXNoSGFuZGxlcjpudWxsLGdldEN1cnJlbnRGaWJlcjpudWxsfTtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyl7dmFyIHlrPV9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXztpZigheWsuaXNEaXNhYmxlZCYmeWsuc3VwcG9ydHNGaWJlcil0cnl7TGY9eWsuaW5qZWN0KHhrKSxNZj15a31jYXRjaChhKXt9fWV4cG9ydHMuX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQ9dms7ZXhwb3J0cy5jcmVhdGVQb3J0YWw9dWs7XG5leHBvcnRzLmZpbmRET01Ob2RlPWZ1bmN0aW9uKGEpe2lmKG51bGw9PWEpcmV0dXJuIG51bGw7aWYoMT09PWEubm9kZVR5cGUpcmV0dXJuIGE7dmFyIGI9YS5fcmVhY3RJbnRlcm5hbHM7aWYodm9pZCAwPT09Yil7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGEucmVuZGVyKXRocm93IEVycm9yKHkoMTg4KSk7dGhyb3cgRXJyb3IoeSgyNjgsT2JqZWN0LmtleXMoYSkpKTt9YT1jYyhiKTthPW51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGU7cmV0dXJuIGF9O2V4cG9ydHMuZmx1c2hTeW5jPWZ1bmN0aW9uKGEsYil7dmFyIGM9WDtpZigwIT09KGMmNDgpKXJldHVybiBhKGIpO1h8PTE7dHJ5e2lmKGEpcmV0dXJuIGdnKDk5LGEuYmluZChudWxsLGIpKX1maW5hbGx5e1g9YyxpZygpfX07ZXhwb3J0cy5oeWRyYXRlPWZ1bmN0aW9uKGEsYixjKXtpZighcmsoYikpdGhyb3cgRXJyb3IoeSgyMDApKTtyZXR1cm4gdGsobnVsbCxhLGIsITAsYyl9O1xuZXhwb3J0cy5yZW5kZXI9ZnVuY3Rpb24oYSxiLGMpe2lmKCFyayhiKSl0aHJvdyBFcnJvcih5KDIwMCkpO3JldHVybiB0ayhudWxsLGEsYiwhMSxjKX07ZXhwb3J0cy51bm1vdW50Q29tcG9uZW50QXROb2RlPWZ1bmN0aW9uKGEpe2lmKCFyayhhKSl0aHJvdyBFcnJvcih5KDQwKSk7cmV0dXJuIGEuX3JlYWN0Um9vdENvbnRhaW5lcj8oWGooZnVuY3Rpb24oKXt0ayhudWxsLG51bGwsYSwhMSxmdW5jdGlvbigpe2EuX3JlYWN0Um9vdENvbnRhaW5lcj1udWxsO2FbZmZdPW51bGx9KX0pLCEwKTohMX07ZXhwb3J0cy51bnN0YWJsZV9iYXRjaGVkVXBkYXRlcz1XajtleHBvcnRzLnVuc3RhYmxlX2NyZWF0ZVBvcnRhbD1mdW5jdGlvbihhLGIpe3JldHVybiB1ayhhLGIsMjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGwpfTtcbmV4cG9ydHMudW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXI9ZnVuY3Rpb24oYSxiLGMsZCl7aWYoIXJrKGMpKXRocm93IEVycm9yKHkoMjAwKSk7aWYobnVsbD09YXx8dm9pZCAwPT09YS5fcmVhY3RJbnRlcm5hbHMpdGhyb3cgRXJyb3IoeSgzOCkpO3JldHVybiB0ayhhLGIsYywhMSxkKX07ZXhwb3J0cy52ZXJzaW9uPVwiMTcuMC4yXCI7XG4iLCIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNoZWNrRENFKCkge1xuICAvKiBnbG9iYWwgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fICovXG4gIGlmIChcbiAgICB0eXBlb2YgX19SRUFDVF9ERVZUT09MU19HTE9CQUxfSE9PS19fID09PSAndW5kZWZpbmVkJyB8fFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UgIT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgLy8gVGhpcyBicmFuY2ggaXMgdW5yZWFjaGFibGUgYmVjYXVzZSB0aGlzIGZ1bmN0aW9uIGlzIG9ubHkgY2FsbGVkXG4gICAgLy8gaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBjb25kaXRpb24gaXMgdHJ1ZSBvbmx5IGluIGRldmVsb3BtZW50LlxuICAgIC8vIFRoZXJlZm9yZSBpZiB0aGUgYnJhbmNoIGlzIHN0aWxsIGhlcmUsIGRlYWQgY29kZSBlbGltaW5hdGlvbiB3YXNuJ3RcbiAgICAvLyBwcm9wZXJseSBhcHBsaWVkLlxuICAgIC8vIERvbid0IGNoYW5nZSB0aGUgbWVzc2FnZS4gUmVhY3QgRGV2VG9vbHMgcmVsaWVzIG9uIGl0LiBBbHNvIG1ha2Ugc3VyZVxuICAgIC8vIHRoaXMgbWVzc2FnZSBkb2Vzbid0IG9jY3VyIGVsc2V3aGVyZSBpbiB0aGlzIGZ1bmN0aW9uLCBvciBpdCB3aWxsIGNhdXNlXG4gICAgLy8gYSBmYWxzZSBwb3NpdGl2ZS5cbiAgICB0aHJvdyBuZXcgRXJyb3IoJ15fXicpO1xuICB9XG4gIHRyeSB7XG4gICAgLy8gVmVyaWZ5IHRoYXQgdGhlIGNvZGUgYWJvdmUgaGFzIGJlZW4gZGVhZCBjb2RlIGVsaW1pbmF0ZWQgKERDRSdkKS5cbiAgICBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18uY2hlY2tEQ0UoY2hlY2tEQ0UpO1xuICB9IGNhdGNoIChlcnIpIHtcbiAgICAvLyBEZXZUb29scyBzaG91bGRuJ3QgY3Jhc2ggUmVhY3QsIG5vIG1hdHRlciB3aGF0LlxuICAgIC8vIFdlIHNob3VsZCBzdGlsbCByZXBvcnQgaW4gY2FzZSB3ZSBicmVhayB0aGlzIGNvZGUuXG4gICAgY29uc29sZS5lcnJvcihlcnIpO1xuICB9XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIC8vIERDRSBjaGVjayBzaG91bGQgaGFwcGVuIGJlZm9yZSBSZWFjdERPTSBidW5kbGUgZXhlY3V0ZXMgc28gdGhhdFxuICAvLyBEZXZUb29scyBjYW4gcmVwb3J0IGJhZCBtaW5pZmljYXRpb24gZHVyaW5nIGluamVjdGlvbi5cbiAgY2hlY2tEQ0UoKTtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20ucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtZG9tLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE2LjEzLjFcbiAqIHJlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBiPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsYz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5lbGVtZW50XCIpOjYwMTAzLGQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QucG9ydGFsXCIpOjYwMTA2LGU9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsZj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zdHJpY3RfbW9kZVwiKTo2MDEwOCxnPWI/U3ltYm9sLmZvcihcInJlYWN0LnByb2ZpbGVyXCIpOjYwMTE0LGg9Yj9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksaz1iP1N5bWJvbC5mb3IoXCJyZWFjdC5jb250ZXh0XCIpOjYwMTEwLGw9Yj9TeW1ib2wuZm9yKFwicmVhY3QuYXN5bmNfbW9kZVwiKTo2MDExMSxtPWI/U3ltYm9sLmZvcihcInJlYWN0LmNvbmN1cnJlbnRfbW9kZVwiKTo2MDExMSxuPWI/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHA9Yj9TeW1ib2wuZm9yKFwicmVhY3Quc3VzcGVuc2VcIik6NjAxMTMscT1iP1xuU3ltYm9sLmZvcihcInJlYWN0LnN1c3BlbnNlX2xpc3RcIik6NjAxMjAscj1iP1N5bWJvbC5mb3IoXCJyZWFjdC5tZW1vXCIpOjYwMTE1LHQ9Yj9TeW1ib2wuZm9yKFwicmVhY3QubGF6eVwiKTo2MDExNix2PWI/U3ltYm9sLmZvcihcInJlYWN0LmJsb2NrXCIpOjYwMTIxLHc9Yj9TeW1ib2wuZm9yKFwicmVhY3QuZnVuZGFtZW50YWxcIik6NjAxMTcseD1iP1N5bWJvbC5mb3IoXCJyZWFjdC5yZXNwb25kZXJcIik6NjAxMTgseT1iP1N5bWJvbC5mb3IoXCJyZWFjdC5zY29wZVwiKTo2MDExOTtcbmZ1bmN0aW9uIHooYSl7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSl7dmFyIHU9YS4kJHR5cGVvZjtzd2l0Y2godSl7Y2FzZSBjOnN3aXRjaChhPWEudHlwZSxhKXtjYXNlIGw6Y2FzZSBtOmNhc2UgZTpjYXNlIGc6Y2FzZSBmOmNhc2UgcDpyZXR1cm4gYTtkZWZhdWx0OnN3aXRjaChhPWEmJmEuJCR0eXBlb2YsYSl7Y2FzZSBrOmNhc2UgbjpjYXNlIHQ6Y2FzZSByOmNhc2UgaDpyZXR1cm4gYTtkZWZhdWx0OnJldHVybiB1fX1jYXNlIGQ6cmV0dXJuIHV9fX1mdW5jdGlvbiBBKGEpe3JldHVybiB6KGEpPT09bX1leHBvcnRzLkFzeW5jTW9kZT1sO2V4cG9ydHMuQ29uY3VycmVudE1vZGU9bTtleHBvcnRzLkNvbnRleHRDb25zdW1lcj1rO2V4cG9ydHMuQ29udGV4dFByb3ZpZGVyPWg7ZXhwb3J0cy5FbGVtZW50PWM7ZXhwb3J0cy5Gb3J3YXJkUmVmPW47ZXhwb3J0cy5GcmFnbWVudD1lO2V4cG9ydHMuTGF6eT10O2V4cG9ydHMuTWVtbz1yO2V4cG9ydHMuUG9ydGFsPWQ7XG5leHBvcnRzLlByb2ZpbGVyPWc7ZXhwb3J0cy5TdHJpY3RNb2RlPWY7ZXhwb3J0cy5TdXNwZW5zZT1wO2V4cG9ydHMuaXNBc3luY01vZGU9ZnVuY3Rpb24oYSl7cmV0dXJuIEEoYSl8fHooYSk9PT1sfTtleHBvcnRzLmlzQ29uY3VycmVudE1vZGU9QTtleHBvcnRzLmlzQ29udGV4dENvbnN1bWVyPWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09a307ZXhwb3J0cy5pc0NvbnRleHRQcm92aWRlcj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWh9O2V4cG9ydHMuaXNFbGVtZW50PWZ1bmN0aW9uKGEpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJmEuJCR0eXBlb2Y9PT1jfTtleHBvcnRzLmlzRm9yd2FyZFJlZj1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PW59O2V4cG9ydHMuaXNGcmFnbWVudD1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWV9O2V4cG9ydHMuaXNMYXp5PWZ1bmN0aW9uKGEpe3JldHVybiB6KGEpPT09dH07XG5leHBvcnRzLmlzTWVtbz1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXJ9O2V4cG9ydHMuaXNQb3J0YWw9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1kfTtleHBvcnRzLmlzUHJvZmlsZXI9ZnVuY3Rpb24oYSl7cmV0dXJuIHooYSk9PT1nfTtleHBvcnRzLmlzU3RyaWN0TW9kZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PWZ9O2V4cG9ydHMuaXNTdXNwZW5zZT1mdW5jdGlvbihhKXtyZXR1cm4geihhKT09PXB9O1xuZXhwb3J0cy5pc1ZhbGlkRWxlbWVudFR5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBhfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYXx8YT09PWV8fGE9PT1tfHxhPT09Z3x8YT09PWZ8fGE9PT1wfHxhPT09cXx8XCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmKGEuJCR0eXBlb2Y9PT10fHxhLiQkdHlwZW9mPT09cnx8YS4kJHR5cGVvZj09PWh8fGEuJCR0eXBlb2Y9PT1rfHxhLiQkdHlwZW9mPT09bnx8YS4kJHR5cGVvZj09PXd8fGEuJCR0eXBlb2Y9PT14fHxhLiQkdHlwZW9mPT09eXx8YS4kJHR5cGVvZj09PXYpfTtleHBvcnRzLnR5cGVPZj16O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLmRldmVsb3BtZW50LmpzJyk7XG59XG4iLCIvKiogQGxpY2Vuc2UgUmVhY3QgdjE3LjAuMlxuICogcmVhY3QucHJvZHVjdGlvbi5taW4uanNcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuJ3VzZSBzdHJpY3QnO3ZhciBsPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49NjAxMDMscD02MDEwNjtleHBvcnRzLkZyYWdtZW50PTYwMTA3O2V4cG9ydHMuU3RyaWN0TW9kZT02MDEwODtleHBvcnRzLlByb2ZpbGVyPTYwMTE0O3ZhciBxPTYwMTA5LHI9NjAxMTAsdD02MDExMjtleHBvcnRzLlN1c3BlbnNlPTYwMTEzO3ZhciB1PTYwMTE1LHY9NjAxMTY7XG5pZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuZm9yKXt2YXIgdz1TeW1ib2wuZm9yO249dyhcInJlYWN0LmVsZW1lbnRcIik7cD13KFwicmVhY3QucG9ydGFsXCIpO2V4cG9ydHMuRnJhZ21lbnQ9dyhcInJlYWN0LmZyYWdtZW50XCIpO2V4cG9ydHMuU3RyaWN0TW9kZT13KFwicmVhY3Quc3RyaWN0X21vZGVcIik7ZXhwb3J0cy5Qcm9maWxlcj13KFwicmVhY3QucHJvZmlsZXJcIik7cT13KFwicmVhY3QucHJvdmlkZXJcIik7cj13KFwicmVhY3QuY29udGV4dFwiKTt0PXcoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTtleHBvcnRzLlN1c3BlbnNlPXcoXCJyZWFjdC5zdXNwZW5zZVwiKTt1PXcoXCJyZWFjdC5tZW1vXCIpO3Y9dyhcInJlYWN0LmxhenlcIil9dmFyIHg9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLml0ZXJhdG9yO1xuZnVuY3Rpb24geShhKXtpZihudWxsPT09YXx8XCJvYmplY3RcIiE9PXR5cGVvZiBhKXJldHVybiBudWxsO2E9eCYmYVt4XXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfWZ1bmN0aW9uIHooYSl7Zm9yKHZhciBiPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxjPTE7Yzxhcmd1bWVudHMubGVuZ3RoO2MrKyliKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tjXSk7cmV0dXJuXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgXCIrYitcIiBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuXCJ9XG52YXIgQT17aXNNb3VudGVkOmZ1bmN0aW9uKCl7cmV0dXJuITF9LGVucXVldWVGb3JjZVVwZGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVJlcGxhY2VTdGF0ZTpmdW5jdGlvbigpe30sZW5xdWV1ZVNldFN0YXRlOmZ1bmN0aW9uKCl7fX0sQj17fTtmdW5jdGlvbiBDKGEsYixjKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPUI7dGhpcy51cGRhdGVyPWN8fEF9Qy5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtDLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe2lmKFwib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWEpdGhyb3cgRXJyb3Ioeig4NSkpO3RoaXMudXBkYXRlci5lbnF1ZXVlU2V0U3RhdGUodGhpcyxhLGIsXCJzZXRTdGF0ZVwiKX07Qy5wcm90b3R5cGUuZm9yY2VVcGRhdGU9ZnVuY3Rpb24oYSl7dGhpcy51cGRhdGVyLmVucXVldWVGb3JjZVVwZGF0ZSh0aGlzLGEsXCJmb3JjZVVwZGF0ZVwiKX07XG5mdW5jdGlvbiBEKCl7fUQucHJvdG90eXBlPUMucHJvdG90eXBlO2Z1bmN0aW9uIEUoYSxiLGMpe3RoaXMucHJvcHM9YTt0aGlzLmNvbnRleHQ9Yjt0aGlzLnJlZnM9Qjt0aGlzLnVwZGF0ZXI9Y3x8QX12YXIgRj1FLnByb3RvdHlwZT1uZXcgRDtGLmNvbnN0cnVjdG9yPUU7bChGLEMucHJvdG90eXBlKTtGLmlzUHVyZVJlYWN0Q29tcG9uZW50PSEwO3ZhciBHPXtjdXJyZW50Om51bGx9LEg9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eSxJPXtrZXk6ITAscmVmOiEwLF9fc2VsZjohMCxfX3NvdXJjZTohMH07XG5mdW5jdGlvbiBKKGEsYixjKXt2YXIgZSxkPXt9LGs9bnVsbCxoPW51bGw7aWYobnVsbCE9Yilmb3IoZSBpbiB2b2lkIDAhPT1iLnJlZiYmKGg9Yi5yZWYpLHZvaWQgMCE9PWIua2V5JiYoaz1cIlwiK2Iua2V5KSxiKUguY2FsbChiLGUpJiYhSS5oYXNPd25Qcm9wZXJ0eShlKSYmKGRbZV09YltlXSk7dmFyIGc9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1nKWQuY2hpbGRyZW49YztlbHNlIGlmKDE8Zyl7Zm9yKHZhciBmPUFycmF5KGcpLG09MDttPGc7bSsrKWZbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1mfWlmKGEmJmEuZGVmYXVsdFByb3BzKWZvcihlIGluIGc9YS5kZWZhdWx0UHJvcHMsZyl2b2lkIDA9PT1kW2VdJiYoZFtlXT1nW2VdKTtyZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEsa2V5OmsscmVmOmgscHJvcHM6ZCxfb3duZXI6Ry5jdXJyZW50fX1cbmZ1bmN0aW9uIEsoYSxiKXtyZXR1cm57JCR0eXBlb2Y6bix0eXBlOmEudHlwZSxrZXk6YixyZWY6YS5yZWYscHJvcHM6YS5wcm9wcyxfb3duZXI6YS5fb3duZXJ9fWZ1bmN0aW9uIEwoYSl7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmYS4kJHR5cGVvZj09PW59ZnVuY3Rpb24gZXNjYXBlKGEpe3ZhciBiPXtcIj1cIjpcIj0wXCIsXCI6XCI6XCI9MlwifTtyZXR1cm5cIiRcIithLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBNPS9cXC8rL2c7ZnVuY3Rpb24gTihhLGIpe3JldHVyblwib2JqZWN0XCI9PT10eXBlb2YgYSYmbnVsbCE9PWEmJm51bGwhPWEua2V5P2VzY2FwZShcIlwiK2Eua2V5KTpiLnRvU3RyaW5nKDM2KX1cbmZ1bmN0aW9uIE8oYSxiLGMsZSxkKXt2YXIgaz10eXBlb2YgYTtpZihcInVuZGVmaW5lZFwiPT09a3x8XCJib29sZWFuXCI9PT1rKWE9bnVsbDt2YXIgaD0hMTtpZihudWxsPT09YSloPSEwO2Vsc2Ugc3dpdGNoKGspe2Nhc2UgXCJzdHJpbmdcIjpjYXNlIFwibnVtYmVyXCI6aD0hMDticmVhaztjYXNlIFwib2JqZWN0XCI6c3dpdGNoKGEuJCR0eXBlb2Ype2Nhc2UgbjpjYXNlIHA6aD0hMH19aWYoaClyZXR1cm4gaD1hLGQ9ZChoKSxhPVwiXCI9PT1lP1wiLlwiK04oaCwwKTplLEFycmF5LmlzQXJyYXkoZCk/KGM9XCJcIixudWxsIT1hJiYoYz1hLnJlcGxhY2UoTSxcIiQmL1wiKStcIi9cIiksTyhkLGIsYyxcIlwiLGZ1bmN0aW9uKGEpe3JldHVybiBhfSkpOm51bGwhPWQmJihMKGQpJiYoZD1LKGQsYysoIWQua2V5fHxoJiZoLmtleT09PWQua2V5P1wiXCI6KFwiXCIrZC5rZXkpLnJlcGxhY2UoTSxcIiQmL1wiKStcIi9cIikrYSkpLGIucHVzaChkKSksMTtoPTA7ZT1cIlwiPT09ZT9cIi5cIjplK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBnPVxuMDtnPGEubGVuZ3RoO2crKyl7az1hW2ddO3ZhciBmPWUrTihrLGcpO2grPU8oayxiLGMsZixkKX1lbHNlIGlmKGY9eShhKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZilmb3IoYT1mLmNhbGwoYSksZz0wOyEoaz1hLm5leHQoKSkuZG9uZTspaz1rLnZhbHVlLGY9ZStOKGssZysrKSxoKz1PKGssYixjLGYsZCk7ZWxzZSBpZihcIm9iamVjdFwiPT09ayl0aHJvdyBiPVwiXCIrYSxFcnJvcih6KDMxLFwiW29iamVjdCBPYmplY3RdXCI9PT1iP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYSkuam9pbihcIiwgXCIpK1wifVwiOmIpKTtyZXR1cm4gaH1mdW5jdGlvbiBQKGEsYixjKXtpZihudWxsPT1hKXJldHVybiBhO3ZhciBlPVtdLGQ9MDtPKGEsZSxcIlwiLFwiXCIsZnVuY3Rpb24oYSl7cmV0dXJuIGIuY2FsbChjLGEsZCsrKX0pO3JldHVybiBlfVxuZnVuY3Rpb24gUShhKXtpZigtMT09PWEuX3N0YXR1cyl7dmFyIGI9YS5fcmVzdWx0O2I9YigpO2EuX3N0YXR1cz0wO2EuX3Jlc3VsdD1iO2IudGhlbihmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYj1iLmRlZmF1bHQsYS5fc3RhdHVzPTEsYS5fcmVzdWx0PWIpfSxmdW5jdGlvbihiKXswPT09YS5fc3RhdHVzJiYoYS5fc3RhdHVzPTIsYS5fcmVzdWx0PWIpfSl9aWYoMT09PWEuX3N0YXR1cylyZXR1cm4gYS5fcmVzdWx0O3Rocm93IGEuX3Jlc3VsdDt9dmFyIFI9e2N1cnJlbnQ6bnVsbH07ZnVuY3Rpb24gUygpe3ZhciBhPVIuY3VycmVudDtpZihudWxsPT09YSl0aHJvdyBFcnJvcih6KDMyMSkpO3JldHVybiBhfXZhciBUPXtSZWFjdEN1cnJlbnREaXNwYXRjaGVyOlIsUmVhY3RDdXJyZW50QmF0Y2hDb25maWc6e3RyYW5zaXRpb246MH0sUmVhY3RDdXJyZW50T3duZXI6RyxJc1NvbWVSZW5kZXJlckFjdGluZzp7Y3VycmVudDohMX0sYXNzaWduOmx9O1xuZXhwb3J0cy5DaGlsZHJlbj17bWFwOlAsZm9yRWFjaDpmdW5jdGlvbihhLGIsYyl7UChhLGZ1bmN0aW9uKCl7Yi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGMpfSxjb3VudDpmdW5jdGlvbihhKXt2YXIgYj0wO1AoYSxmdW5jdGlvbigpe2IrK30pO3JldHVybiBifSx0b0FycmF5OmZ1bmN0aW9uKGEpe3JldHVybiBQKGEsZnVuY3Rpb24oYSl7cmV0dXJuIGF9KXx8W119LG9ubHk6ZnVuY3Rpb24oYSl7aWYoIUwoYSkpdGhyb3cgRXJyb3IoeigxNDMpKTtyZXR1cm4gYX19O2V4cG9ydHMuQ29tcG9uZW50PUM7ZXhwb3J0cy5QdXJlQ29tcG9uZW50PUU7ZXhwb3J0cy5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRD1UO1xuZXhwb3J0cy5jbG9uZUVsZW1lbnQ9ZnVuY3Rpb24oYSxiLGMpe2lmKG51bGw9PT1hfHx2b2lkIDA9PT1hKXRocm93IEVycm9yKHooMjY3LGEpKTt2YXIgZT1sKHt9LGEucHJvcHMpLGQ9YS5rZXksaz1hLnJlZixoPWEuX293bmVyO2lmKG51bGwhPWIpe3ZvaWQgMCE9PWIucmVmJiYoaz1iLnJlZixoPUcuY3VycmVudCk7dm9pZCAwIT09Yi5rZXkmJihkPVwiXCIrYi5rZXkpO2lmKGEudHlwZSYmYS50eXBlLmRlZmF1bHRQcm9wcyl2YXIgZz1hLnR5cGUuZGVmYXVsdFByb3BzO2ZvcihmIGluIGIpSC5jYWxsKGIsZikmJiFJLmhhc093blByb3BlcnR5KGYpJiYoZVtmXT12b2lkIDA9PT1iW2ZdJiZ2b2lkIDAhPT1nP2dbZl06YltmXSl9dmFyIGY9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1mKWUuY2hpbGRyZW49YztlbHNlIGlmKDE8Zil7Zz1BcnJheShmKTtmb3IodmFyIG09MDttPGY7bSsrKWdbbV09YXJndW1lbnRzW20rMl07ZS5jaGlsZHJlbj1nfXJldHVybnskJHR5cGVvZjpuLHR5cGU6YS50eXBlLFxua2V5OmQscmVmOmsscHJvcHM6ZSxfb3duZXI6aH19O2V4cG9ydHMuY3JlYXRlQ29udGV4dD1mdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOnIsX2NhbGN1bGF0ZUNoYW5nZWRCaXRzOmIsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX3RocmVhZENvdW50OjAsUHJvdmlkZXI6bnVsbCxDb25zdW1lcjpudWxsfTthLlByb3ZpZGVyPXskJHR5cGVvZjpxLF9jb250ZXh0OmF9O3JldHVybiBhLkNvbnN1bWVyPWF9O2V4cG9ydHMuY3JlYXRlRWxlbWVudD1KO2V4cG9ydHMuY3JlYXRlRmFjdG9yeT1mdW5jdGlvbihhKXt2YXIgYj1KLmJpbmQobnVsbCxhKTtiLnR5cGU9YTtyZXR1cm4gYn07ZXhwb3J0cy5jcmVhdGVSZWY9ZnVuY3Rpb24oKXtyZXR1cm57Y3VycmVudDpudWxsfX07ZXhwb3J0cy5mb3J3YXJkUmVmPWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp0LHJlbmRlcjphfX07ZXhwb3J0cy5pc1ZhbGlkRWxlbWVudD1MO1xuZXhwb3J0cy5sYXp5PWZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjp2LF9wYXlsb2FkOntfc3RhdHVzOi0xLF9yZXN1bHQ6YX0sX2luaXQ6UX19O2V4cG9ydHMubWVtbz1mdW5jdGlvbihhLGIpe3JldHVybnskJHR5cGVvZjp1LHR5cGU6YSxjb21wYXJlOnZvaWQgMD09PWI/bnVsbDpifX07ZXhwb3J0cy51c2VDYWxsYmFjaz1mdW5jdGlvbihhLGIpe3JldHVybiBTKCkudXNlQ2FsbGJhY2soYSxiKX07ZXhwb3J0cy51c2VDb250ZXh0PWZ1bmN0aW9uKGEsYil7cmV0dXJuIFMoKS51c2VDb250ZXh0KGEsYil9O2V4cG9ydHMudXNlRGVidWdWYWx1ZT1mdW5jdGlvbigpe307ZXhwb3J0cy51c2VFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUVmZmVjdChhLGIpfTtleHBvcnRzLnVzZUltcGVyYXRpdmVIYW5kbGU9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBTKCkudXNlSW1wZXJhdGl2ZUhhbmRsZShhLGIsYyl9O1xuZXhwb3J0cy51c2VMYXlvdXRFZmZlY3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZUxheW91dEVmZmVjdChhLGIpfTtleHBvcnRzLnVzZU1lbW89ZnVuY3Rpb24oYSxiKXtyZXR1cm4gUygpLnVzZU1lbW8oYSxiKX07ZXhwb3J0cy51c2VSZWR1Y2VyPWZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gUygpLnVzZVJlZHVjZXIoYSxiLGMpfTtleHBvcnRzLnVzZVJlZj1mdW5jdGlvbihhKXtyZXR1cm4gUygpLnVzZVJlZihhKX07ZXhwb3J0cy51c2VTdGF0ZT1mdW5jdGlvbihhKXtyZXR1cm4gUygpLnVzZVN0YXRlKGEpfTtleHBvcnRzLnZlcnNpb249XCIxNy4wLjJcIjtcbiIsIid1c2Ugc3RyaWN0JztcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC5kZXZlbG9wbWVudC5qcycpO1xufVxuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYwLjIwLjJcbiAqIHNjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG4ndXNlIHN0cmljdCc7dmFyIGYsZyxoLGs7aWYoXCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdyl7dmFyIGw9cGVyZm9ybWFuY2U7ZXhwb3J0cy51bnN0YWJsZV9ub3c9ZnVuY3Rpb24oKXtyZXR1cm4gbC5ub3coKX19ZWxzZXt2YXIgcD1EYXRlLHE9cC5ub3coKTtleHBvcnRzLnVuc3RhYmxlX25vdz1mdW5jdGlvbigpe3JldHVybiBwLm5vdygpLXF9fVxuaWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiB3aW5kb3d8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBNZXNzYWdlQ2hhbm5lbCl7dmFyIHQ9bnVsbCx1PW51bGwsdz1mdW5jdGlvbigpe2lmKG51bGwhPT10KXRyeXt2YXIgYT1leHBvcnRzLnVuc3RhYmxlX25vdygpO3QoITAsYSk7dD1udWxsfWNhdGNoKGIpe3Rocm93IHNldFRpbWVvdXQodywwKSxiO319O2Y9ZnVuY3Rpb24oYSl7bnVsbCE9PXQ/c2V0VGltZW91dChmLDAsYSk6KHQ9YSxzZXRUaW1lb3V0KHcsMCkpfTtnPWZ1bmN0aW9uKGEsYil7dT1zZXRUaW1lb3V0KGEsYil9O2g9ZnVuY3Rpb24oKXtjbGVhclRpbWVvdXQodSl9O2V4cG9ydHMudW5zdGFibGVfc2hvdWxkWWllbGQ9ZnVuY3Rpb24oKXtyZXR1cm4hMX07az1leHBvcnRzLnVuc3RhYmxlX2ZvcmNlRnJhbWVSYXRlPWZ1bmN0aW9uKCl7fX1lbHNle3ZhciB4PXdpbmRvdy5zZXRUaW1lb3V0LHk9d2luZG93LmNsZWFyVGltZW91dDtpZihcInVuZGVmaW5lZFwiIT09dHlwZW9mIGNvbnNvbGUpe3ZhciB6PVxud2luZG93LmNhbmNlbEFuaW1hdGlvbkZyYW1lO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGRvZXNuJ3Qgc3VwcG9ydCByZXF1ZXN0QW5pbWF0aW9uRnJhbWUuIE1ha2Ugc3VyZSB0aGF0IHlvdSBsb2FkIGEgcG9seWZpbGwgaW4gb2xkZXIgYnJvd3NlcnMuIGh0dHBzOi8vcmVhY3Rqcy5vcmcvbGluay9yZWFjdC1wb2x5ZmlsbHNcIik7XCJmdW5jdGlvblwiIT09dHlwZW9mIHomJmNvbnNvbGUuZXJyb3IoXCJUaGlzIGJyb3dzZXIgZG9lc24ndCBzdXBwb3J0IGNhbmNlbEFuaW1hdGlvbkZyYW1lLiBNYWtlIHN1cmUgdGhhdCB5b3UgbG9hZCBhIHBvbHlmaWxsIGluIG9sZGVyIGJyb3dzZXJzLiBodHRwczovL3JlYWN0anMub3JnL2xpbmsvcmVhY3QtcG9seWZpbGxzXCIpfXZhciBBPSExLEI9bnVsbCxDPS0xLEQ9NSxFPTA7ZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZD1mdW5jdGlvbigpe3JldHVybiBleHBvcnRzLnVuc3RhYmxlX25vdygpPj1cbkV9O2s9ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfZm9yY2VGcmFtZVJhdGU9ZnVuY3Rpb24oYSl7MD5hfHwxMjU8YT9jb25zb2xlLmVycm9yKFwiZm9yY2VGcmFtZVJhdGUgdGFrZXMgYSBwb3NpdGl2ZSBpbnQgYmV0d2VlbiAwIGFuZCAxMjUsIGZvcmNpbmcgZnJhbWUgcmF0ZXMgaGlnaGVyIHRoYW4gMTI1IGZwcyBpcyBub3Qgc3VwcG9ydGVkXCIpOkQ9MDxhP01hdGguZmxvb3IoMUUzL2EpOjV9O3ZhciBGPW5ldyBNZXNzYWdlQ2hhbm5lbCxHPUYucG9ydDI7Ri5wb3J0MS5vbm1lc3NhZ2U9ZnVuY3Rpb24oKXtpZihudWxsIT09Qil7dmFyIGE9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtFPWErRDt0cnl7QighMCxhKT9HLnBvc3RNZXNzYWdlKG51bGwpOihBPSExLEI9bnVsbCl9Y2F0Y2goYil7dGhyb3cgRy5wb3N0TWVzc2FnZShudWxsKSxiO319ZWxzZSBBPSExfTtmPWZ1bmN0aW9uKGEpe0I9YTtBfHwoQT0hMCxHLnBvc3RNZXNzYWdlKG51bGwpKX07Zz1mdW5jdGlvbihhLGIpe0M9XG54KGZ1bmN0aW9uKCl7YShleHBvcnRzLnVuc3RhYmxlX25vdygpKX0sYil9O2g9ZnVuY3Rpb24oKXt5KEMpO0M9LTF9fWZ1bmN0aW9uIEgoYSxiKXt2YXIgYz1hLmxlbmd0aDthLnB1c2goYik7YTpmb3IoOzspe3ZhciBkPWMtMT4+PjEsZT1hW2RdO2lmKHZvaWQgMCE9PWUmJjA8SShlLGIpKWFbZF09YixhW2NdPWUsYz1kO2Vsc2UgYnJlYWsgYX19ZnVuY3Rpb24gSihhKXthPWFbMF07cmV0dXJuIHZvaWQgMD09PWE/bnVsbDphfVxuZnVuY3Rpb24gSyhhKXt2YXIgYj1hWzBdO2lmKHZvaWQgMCE9PWIpe3ZhciBjPWEucG9wKCk7aWYoYyE9PWIpe2FbMF09YzthOmZvcih2YXIgZD0wLGU9YS5sZW5ndGg7ZDxlOyl7dmFyIG09MiooZCsxKS0xLG49YVttXSx2PW0rMSxyPWFbdl07aWYodm9pZCAwIT09biYmMD5JKG4sYykpdm9pZCAwIT09ciYmMD5JKHIsbik/KGFbZF09cixhW3ZdPWMsZD12KTooYVtkXT1uLGFbbV09YyxkPW0pO2Vsc2UgaWYodm9pZCAwIT09ciYmMD5JKHIsYykpYVtkXT1yLGFbdl09YyxkPXY7ZWxzZSBicmVhayBhfX1yZXR1cm4gYn1yZXR1cm4gbnVsbH1mdW5jdGlvbiBJKGEsYil7dmFyIGM9YS5zb3J0SW5kZXgtYi5zb3J0SW5kZXg7cmV0dXJuIDAhPT1jP2M6YS5pZC1iLmlkfXZhciBMPVtdLE09W10sTj0xLE89bnVsbCxQPTMsUT0hMSxSPSExLFM9ITE7XG5mdW5jdGlvbiBUKGEpe2Zvcih2YXIgYj1KKE0pO251bGwhPT1iOyl7aWYobnVsbD09PWIuY2FsbGJhY2spSyhNKTtlbHNlIGlmKGIuc3RhcnRUaW1lPD1hKUsoTSksYi5zb3J0SW5kZXg9Yi5leHBpcmF0aW9uVGltZSxIKEwsYik7ZWxzZSBicmVhaztiPUooTSl9fWZ1bmN0aW9uIFUoYSl7Uz0hMTtUKGEpO2lmKCFSKWlmKG51bGwhPT1KKEwpKVI9ITAsZihWKTtlbHNle3ZhciBiPUooTSk7bnVsbCE9PWImJmcoVSxiLnN0YXJ0VGltZS1hKX19XG5mdW5jdGlvbiBWKGEsYil7Uj0hMTtTJiYoUz0hMSxoKCkpO1E9ITA7dmFyIGM9UDt0cnl7VChiKTtmb3IoTz1KKEwpO251bGwhPT1PJiYoIShPLmV4cGlyYXRpb25UaW1lPmIpfHxhJiYhZXhwb3J0cy51bnN0YWJsZV9zaG91bGRZaWVsZCgpKTspe3ZhciBkPU8uY2FsbGJhY2s7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpe08uY2FsbGJhY2s9bnVsbDtQPU8ucHJpb3JpdHlMZXZlbDt2YXIgZT1kKE8uZXhwaXJhdGlvblRpbWU8PWIpO2I9ZXhwb3J0cy51bnN0YWJsZV9ub3coKTtcImZ1bmN0aW9uXCI9PT10eXBlb2YgZT9PLmNhbGxiYWNrPWU6Tz09PUooTCkmJksoTCk7VChiKX1lbHNlIEsoTCk7Tz1KKEwpfWlmKG51bGwhPT1PKXZhciBtPSEwO2Vsc2V7dmFyIG49SihNKTtudWxsIT09biYmZyhVLG4uc3RhcnRUaW1lLWIpO209ITF9cmV0dXJuIG19ZmluYWxseXtPPW51bGwsUD1jLFE9ITF9fXZhciBXPWs7ZXhwb3J0cy51bnN0YWJsZV9JZGxlUHJpb3JpdHk9NTtcbmV4cG9ydHMudW5zdGFibGVfSW1tZWRpYXRlUHJpb3JpdHk9MTtleHBvcnRzLnVuc3RhYmxlX0xvd1ByaW9yaXR5PTQ7ZXhwb3J0cy51bnN0YWJsZV9Ob3JtYWxQcmlvcml0eT0zO2V4cG9ydHMudW5zdGFibGVfUHJvZmlsaW5nPW51bGw7ZXhwb3J0cy51bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eT0yO2V4cG9ydHMudW5zdGFibGVfY2FuY2VsQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7YS5jYWxsYmFjaz1udWxsfTtleHBvcnRzLnVuc3RhYmxlX2NvbnRpbnVlRXhlY3V0aW9uPWZ1bmN0aW9uKCl7Unx8UXx8KFI9ITAsZihWKSl9O2V4cG9ydHMudW5zdGFibGVfZ2V0Q3VycmVudFByaW9yaXR5TGV2ZWw9ZnVuY3Rpb24oKXtyZXR1cm4gUH07ZXhwb3J0cy51bnN0YWJsZV9nZXRGaXJzdENhbGxiYWNrTm9kZT1mdW5jdGlvbigpe3JldHVybiBKKEwpfTtcbmV4cG9ydHMudW5zdGFibGVfbmV4dD1mdW5jdGlvbihhKXtzd2l0Y2goUCl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6dmFyIGI9MzticmVhaztkZWZhdWx0OmI9UH12YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEoKX1maW5hbGx5e1A9Y319O2V4cG9ydHMudW5zdGFibGVfcGF1c2VFeGVjdXRpb249ZnVuY3Rpb24oKXt9O2V4cG9ydHMudW5zdGFibGVfcmVxdWVzdFBhaW50PVc7ZXhwb3J0cy51bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHk9ZnVuY3Rpb24oYSxiKXtzd2l0Y2goYSl7Y2FzZSAxOmNhc2UgMjpjYXNlIDM6Y2FzZSA0OmNhc2UgNTpicmVhaztkZWZhdWx0OmE9M312YXIgYz1QO1A9YTt0cnl7cmV0dXJuIGIoKX1maW5hbGx5e1A9Y319O1xuZXhwb3J0cy51bnN0YWJsZV9zY2hlZHVsZUNhbGxiYWNrPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD1leHBvcnRzLnVuc3RhYmxlX25vdygpO1wib2JqZWN0XCI9PT10eXBlb2YgYyYmbnVsbCE9PWM/KGM9Yy5kZWxheSxjPVwibnVtYmVyXCI9PT10eXBlb2YgYyYmMDxjP2QrYzpkKTpjPWQ7c3dpdGNoKGEpe2Nhc2UgMTp2YXIgZT0tMTticmVhaztjYXNlIDI6ZT0yNTA7YnJlYWs7Y2FzZSA1OmU9MTA3Mzc0MTgyMzticmVhaztjYXNlIDQ6ZT0xRTQ7YnJlYWs7ZGVmYXVsdDplPTVFM31lPWMrZTthPXtpZDpOKyssY2FsbGJhY2s6Yixwcmlvcml0eUxldmVsOmEsc3RhcnRUaW1lOmMsZXhwaXJhdGlvblRpbWU6ZSxzb3J0SW5kZXg6LTF9O2M+ZD8oYS5zb3J0SW5kZXg9YyxIKE0sYSksbnVsbD09PUooTCkmJmE9PT1KKE0pJiYoUz9oKCk6Uz0hMCxnKFUsYy1kKSkpOihhLnNvcnRJbmRleD1lLEgoTCxhKSxSfHxRfHwoUj0hMCxmKFYpKSk7cmV0dXJuIGF9O1xuZXhwb3J0cy51bnN0YWJsZV93cmFwQ2FsbGJhY2s9ZnVuY3Rpb24oYSl7dmFyIGI9UDtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgYz1QO1A9Yjt0cnl7cmV0dXJuIGEuYXBwbHkodGhpcyxhcmd1bWVudHMpfWZpbmFsbHl7UD1jfX19O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3NjaGVkdWxlci5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9zY2hlZHVsZXIuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8vXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc2hhbGxvd0VxdWFsKG9iakEsIG9iakIsIGNvbXBhcmUsIGNvbXBhcmVDb250ZXh0KSB7XG4gIHZhciByZXQgPSBjb21wYXJlID8gY29tcGFyZS5jYWxsKGNvbXBhcmVDb250ZXh0LCBvYmpBLCBvYmpCKSA6IHZvaWQgMDtcblxuICBpZiAocmV0ICE9PSB2b2lkIDApIHtcbiAgICByZXR1cm4gISFyZXQ7XG4gIH1cblxuICBpZiAob2JqQSA9PT0gb2JqQikge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBvYmpBICE9PSBcIm9iamVjdFwiIHx8ICFvYmpBIHx8IHR5cGVvZiBvYmpCICE9PSBcIm9iamVjdFwiIHx8ICFvYmpCKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMob2JqQSk7XG4gIHZhciBrZXlzQiA9IE9iamVjdC5rZXlzKG9iakIpO1xuXG4gIGlmIChrZXlzQS5sZW5ndGggIT09IGtleXNCLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBiSGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmJpbmQob2JqQik7XG5cbiAgLy8gVGVzdCBmb3IgQSdzIGtleXMgZGlmZmVyZW50IGZyb20gQi5cbiAgZm9yICh2YXIgaWR4ID0gMDsgaWR4IDwga2V5c0EubGVuZ3RoOyBpZHgrKykge1xuICAgIHZhciBrZXkgPSBrZXlzQVtpZHhdO1xuXG4gICAgaWYgKCFiSGFzT3duUHJvcGVydHkoa2V5KSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHZhciB2YWx1ZUEgPSBvYmpBW2tleV07XG4gICAgdmFyIHZhbHVlQiA9IG9iakJba2V5XTtcblxuICAgIHJldCA9IGNvbXBhcmUgPyBjb21wYXJlLmNhbGwoY29tcGFyZUNvbnRleHQsIHZhbHVlQSwgdmFsdWVCLCBrZXkpIDogdm9pZCAwO1xuXG4gICAgaWYgKHJldCA9PT0gZmFsc2UgfHwgKHJldCA9PT0gdm9pZCAwICYmIHZhbHVlQSAhPT0gdmFsdWVCKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufTtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL25vcm1hbGl6ZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbm9ybWFsaXplLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5Eb20gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRvbS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRvbVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdXG4gICAgfTtcblxuICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdHlsZXNJbkRvbS5wdXNoKHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogYWRkU3R5bGUob2JqLCBvcHRpb25zKSxcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkU3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlU3R5bGUobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCkge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRG9tW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRvbVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRvbS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuICBvcHRpb25zLnNldEF0dHJpYnV0ZXMoc3R5bGUsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KHN0eWxlKTtcbiAgcmV0dXJuIHN0eWxlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGUpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZSwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBvYmouY3NzO1xuICB2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChtZWRpYSkge1xuICAgIHN0eWxlLnNldEF0dHJpYnV0ZShcIm1lZGlhXCIsIG1lZGlhKTtcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5yZW1vdmVBdHRyaWJ1dGUoXCJtZWRpYVwiKTtcbiAgfVxuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGUpO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gZG9tQVBJKG9wdGlvbnMpIHtcbiAgdmFyIHN0eWxlID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZSwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlKTtcbiAgICB9XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGUpIHtcbiAgaWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlLmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlLnJlbW92ZUNoaWxkKHN0eWxlLmZpcnN0Q2hpbGQpO1xuICAgIH1cblxuICAgIHN0eWxlLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiZnVuY3Rpb24gc3R5bGlzX21pbiAoVykge1xuICBmdW5jdGlvbiBNKGQsIGMsIGUsIGgsIGEpIHtcbiAgICBmb3IgKHZhciBtID0gMCwgYiA9IDAsIHYgPSAwLCBuID0gMCwgcSwgZywgeCA9IDAsIEsgPSAwLCBrLCB1ID0gayA9IHEgPSAwLCBsID0gMCwgciA9IDAsIEkgPSAwLCB0ID0gMCwgQiA9IGUubGVuZ3RoLCBKID0gQiAtIDEsIHksIGYgPSAnJywgcCA9ICcnLCBGID0gJycsIEcgPSAnJywgQzsgbCA8IEI7KSB7XG4gICAgICBnID0gZS5jaGFyQ29kZUF0KGwpO1xuICAgICAgbCA9PT0gSiAmJiAwICE9PSBiICsgbiArIHYgKyBtICYmICgwICE9PSBiICYmIChnID0gNDcgPT09IGIgPyAxMCA6IDQ3KSwgbiA9IHYgPSBtID0gMCwgQisrLCBKKyspO1xuXG4gICAgICBpZiAoMCA9PT0gYiArIG4gKyB2ICsgbSkge1xuICAgICAgICBpZiAobCA9PT0gSiAmJiAoMCA8IHIgJiYgKGYgPSBmLnJlcGxhY2UoTiwgJycpKSwgMCA8IGYudHJpbSgpLmxlbmd0aCkpIHtcbiAgICAgICAgICBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICAgIGNhc2UgMzI6XG4gICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICBjYXNlIDU5OlxuICAgICAgICAgICAgY2FzZSAxMzpcbiAgICAgICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICBmICs9IGUuY2hhckF0KGwpO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGcgPSA1OTtcbiAgICAgICAgfVxuXG4gICAgICAgIHN3aXRjaCAoZykge1xuICAgICAgICAgIGNhc2UgMTIzOlxuICAgICAgICAgICAgZiA9IGYudHJpbSgpO1xuICAgICAgICAgICAgcSA9IGYuY2hhckNvZGVBdCgwKTtcbiAgICAgICAgICAgIGsgPSAxO1xuXG4gICAgICAgICAgICBmb3IgKHQgPSArK2w7IGwgPCBCOykge1xuICAgICAgICAgICAgICBzd2l0Y2ggKGcgPSBlLmNoYXJDb2RlQXQobCkpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDEyMzpcbiAgICAgICAgICAgICAgICAgIGsrKztcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSAxMjU6XG4gICAgICAgICAgICAgICAgICBrLS07XG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgNDc6XG4gICAgICAgICAgICAgICAgICBzd2l0Y2ggKGcgPSBlLmNoYXJDb2RlQXQobCArIDEpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNDI6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgNDc6XG4gICAgICAgICAgICAgICAgICAgICAgYToge1xuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh1ID0gbCArIDE7IHUgPCBKOyArK3UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChlLmNoYXJDb2RlQXQodSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDQ3OlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKDQyID09PSBnICYmIDQyID09PSBlLmNoYXJDb2RlQXQodSAtIDEpICYmIGwgKyAyICE9PSB1KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGwgPSB1ICsgMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsgYTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKDQ3ID09PSBnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGwgPSB1ICsgMTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWsgYTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIGwgPSB1O1xuICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgOTE6XG4gICAgICAgICAgICAgICAgICBnKys7XG5cbiAgICAgICAgICAgICAgICBjYXNlIDQwOlxuICAgICAgICAgICAgICAgICAgZysrO1xuXG4gICAgICAgICAgICAgICAgY2FzZSAzNDpcbiAgICAgICAgICAgICAgICBjYXNlIDM5OlxuICAgICAgICAgICAgICAgICAgZm9yICg7IGwrKyA8IEogJiYgZS5jaGFyQ29kZUF0KGwpICE9PSBnOykge1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoMCA9PT0gaykgYnJlYWs7XG4gICAgICAgICAgICAgIGwrKztcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgayA9IGUuc3Vic3RyaW5nKHQsIGwpO1xuICAgICAgICAgICAgMCA9PT0gcSAmJiAocSA9IChmID0gZi5yZXBsYWNlKGNhLCAnJykudHJpbSgpKS5jaGFyQ29kZUF0KDApKTtcblxuICAgICAgICAgICAgc3dpdGNoIChxKSB7XG4gICAgICAgICAgICAgIGNhc2UgNjQ6XG4gICAgICAgICAgICAgICAgMCA8IHIgJiYgKGYgPSBmLnJlcGxhY2UoTiwgJycpKTtcbiAgICAgICAgICAgICAgICBnID0gZi5jaGFyQ29kZUF0KDEpO1xuXG4gICAgICAgICAgICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgICAgICAgICAgICBjYXNlIDEwMDpcbiAgICAgICAgICAgICAgICAgIGNhc2UgMTA5OlxuICAgICAgICAgICAgICAgICAgY2FzZSAxMTU6XG4gICAgICAgICAgICAgICAgICBjYXNlIDQ1OlxuICAgICAgICAgICAgICAgICAgICByID0gYztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIHIgPSBPO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGsgPSBNKGMsIHIsIGssIGcsIGEgKyAxKTtcbiAgICAgICAgICAgICAgICB0ID0gay5sZW5ndGg7XG4gICAgICAgICAgICAgICAgMCA8IEEgJiYgKHIgPSBYKE8sIGYsIEkpLCBDID0gSCgzLCBrLCByLCBjLCBELCB6LCB0LCBnLCBhLCBoKSwgZiA9IHIuam9pbignJyksIHZvaWQgMCAhPT0gQyAmJiAwID09PSAodCA9IChrID0gQy50cmltKCkpLmxlbmd0aCkgJiYgKGcgPSAwLCBrID0gJycpKTtcbiAgICAgICAgICAgICAgICBpZiAoMCA8IHQpIHN3aXRjaCAoZykge1xuICAgICAgICAgICAgICAgICAgY2FzZSAxMTU6XG4gICAgICAgICAgICAgICAgICAgIGYgPSBmLnJlcGxhY2UoZGEsIGVhKTtcblxuICAgICAgICAgICAgICAgICAgY2FzZSAxMDA6XG4gICAgICAgICAgICAgICAgICBjYXNlIDEwOTpcbiAgICAgICAgICAgICAgICAgIGNhc2UgNDU6XG4gICAgICAgICAgICAgICAgICAgIGsgPSBmICsgJ3snICsgayArICd9JztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgIGNhc2UgMTA3OlxuICAgICAgICAgICAgICAgICAgICBmID0gZi5yZXBsYWNlKGZhLCAnJDEgJDInKTtcbiAgICAgICAgICAgICAgICAgICAgayA9IGYgKyAneycgKyBrICsgJ30nO1xuICAgICAgICAgICAgICAgICAgICBrID0gMSA9PT0gdyB8fCAyID09PSB3ICYmIEwoJ0AnICsgaywgMykgPyAnQC13ZWJraXQtJyArIGsgKyAnQCcgKyBrIDogJ0AnICsgaztcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgICAgIGsgPSBmICsgaywgMTEyID09PSBoICYmIChrID0gKHAgKz0gaywgJycpKTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgayA9ICcnO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgayA9IE0oYywgWChjLCBmLCBJKSwgaywgaCwgYSArIDEpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBGICs9IGs7XG4gICAgICAgICAgICBrID0gSSA9IHIgPSB1ID0gcSA9IDA7XG4gICAgICAgICAgICBmID0gJyc7XG4gICAgICAgICAgICBnID0gZS5jaGFyQ29kZUF0KCsrbCk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMTI1OlxuICAgICAgICAgIGNhc2UgNTk6XG4gICAgICAgICAgICBmID0gKDAgPCByID8gZi5yZXBsYWNlKE4sICcnKSA6IGYpLnRyaW0oKTtcbiAgICAgICAgICAgIGlmICgxIDwgKHQgPSBmLmxlbmd0aCkpIHN3aXRjaCAoMCA9PT0gdSAmJiAocSA9IGYuY2hhckNvZGVBdCgwKSwgNDUgPT09IHEgfHwgOTYgPCBxICYmIDEyMyA+IHEpICYmICh0ID0gKGYgPSBmLnJlcGxhY2UoJyAnLCAnOicpKS5sZW5ndGgpLCAwIDwgQSAmJiB2b2lkIDAgIT09IChDID0gSCgxLCBmLCBjLCBkLCBELCB6LCBwLmxlbmd0aCwgaCwgYSwgaCkpICYmIDAgPT09ICh0ID0gKGYgPSBDLnRyaW0oKSkubGVuZ3RoKSAmJiAoZiA9ICdcXHgwMFxceDAwJyksIHEgPSBmLmNoYXJDb2RlQXQoMCksIGcgPSBmLmNoYXJDb2RlQXQoMSksIHEpIHtcbiAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgIGNhc2UgNjQ6XG4gICAgICAgICAgICAgICAgaWYgKDEwNSA9PT0gZyB8fCA5OSA9PT0gZykge1xuICAgICAgICAgICAgICAgICAgRyArPSBmICsgZS5jaGFyQXQobCk7XG4gICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICA1OCAhPT0gZi5jaGFyQ29kZUF0KHQgLSAxKSAmJiAocCArPSBQKGYsIHEsIGcsIGYuY2hhckNvZGVBdCgyKSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgSSA9IHIgPSB1ID0gcSA9IDA7XG4gICAgICAgICAgICBmID0gJyc7XG4gICAgICAgICAgICBnID0gZS5jaGFyQ29kZUF0KCsrbCk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgc3dpdGNoIChnKSB7XG4gICAgICAgIGNhc2UgMTM6XG4gICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgNDcgPT09IGIgPyBiID0gMCA6IDAgPT09IDEgKyBxICYmIDEwNyAhPT0gaCAmJiAwIDwgZi5sZW5ndGggJiYgKHIgPSAxLCBmICs9ICdcXHgwMCcpO1xuICAgICAgICAgIDAgPCBBICogWSAmJiBIKDAsIGYsIGMsIGQsIEQsIHosIHAubGVuZ3RoLCBoLCBhLCBoKTtcbiAgICAgICAgICB6ID0gMTtcbiAgICAgICAgICBEKys7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSA1OTpcbiAgICAgICAgY2FzZSAxMjU6XG4gICAgICAgICAgaWYgKDAgPT09IGIgKyBuICsgdiArIG0pIHtcbiAgICAgICAgICAgIHorKztcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgIHorKztcbiAgICAgICAgICB5ID0gZS5jaGFyQXQobCk7XG5cbiAgICAgICAgICBzd2l0Y2ggKGcpIHtcbiAgICAgICAgICAgIGNhc2UgOTpcbiAgICAgICAgICAgIGNhc2UgMzI6XG4gICAgICAgICAgICAgIGlmICgwID09PSBuICsgbSArIGIpIHN3aXRjaCAoeCkge1xuICAgICAgICAgICAgICAgIGNhc2UgNDQ6XG4gICAgICAgICAgICAgICAgY2FzZSA1ODpcbiAgICAgICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICAgICAgY2FzZSAzMjpcbiAgICAgICAgICAgICAgICAgIHkgPSAnJztcbiAgICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgIDMyICE9PSBnICYmICh5ID0gJyAnKTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICB5ID0gJ1xcXFwwJztcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMTI6XG4gICAgICAgICAgICAgIHkgPSAnXFxcXGYnO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSAxMTpcbiAgICAgICAgICAgICAgeSA9ICdcXFxcdic7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDM4OlxuICAgICAgICAgICAgICAwID09PSBuICsgYiArIG0gJiYgKHIgPSBJID0gMSwgeSA9ICdcXGYnICsgeSk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDEwODpcbiAgICAgICAgICAgICAgaWYgKDAgPT09IG4gKyBiICsgbSArIEUgJiYgMCA8IHUpIHN3aXRjaCAobCAtIHUpIHtcbiAgICAgICAgICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgICAgICAgICAxMTIgPT09IHggJiYgNTggPT09IGUuY2hhckNvZGVBdChsIC0gMykgJiYgKEUgPSB4KTtcblxuICAgICAgICAgICAgICAgIGNhc2UgODpcbiAgICAgICAgICAgICAgICAgIDExMSA9PT0gSyAmJiAoRSA9IEspO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDU4OlxuICAgICAgICAgICAgICAwID09PSBuICsgYiArIG0gJiYgKHUgPSBsKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNDQ6XG4gICAgICAgICAgICAgIDAgPT09IGIgKyB2ICsgbiArIG0gJiYgKHIgPSAxLCB5ICs9ICdcXHInKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgMzQ6XG4gICAgICAgICAgICBjYXNlIDM5OlxuICAgICAgICAgICAgICAwID09PSBiICYmIChuID0gbiA9PT0gZyA/IDAgOiAwID09PSBuID8gZyA6IG4pO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA5MTpcbiAgICAgICAgICAgICAgMCA9PT0gbiArIGIgKyB2ICYmIG0rKztcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgOTM6XG4gICAgICAgICAgICAgIDAgPT09IG4gKyBiICsgdiAmJiBtLS07XG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDQxOlxuICAgICAgICAgICAgICAwID09PSBuICsgYiArIG0gJiYgdi0tO1xuICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSA0MDpcbiAgICAgICAgICAgICAgaWYgKDAgPT09IG4gKyBiICsgbSkge1xuICAgICAgICAgICAgICAgIGlmICgwID09PSBxKSBzd2l0Y2ggKDIgKiB4ICsgMyAqIEspIHtcbiAgICAgICAgICAgICAgICAgIGNhc2UgNTMzOlxuICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgcSA9IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHYrKztcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIDY0OlxuICAgICAgICAgICAgICAwID09PSBiICsgdiArIG4gKyBtICsgdSArIGsgJiYgKGsgPSAxKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgNDI6XG4gICAgICAgICAgICBjYXNlIDQ3OlxuICAgICAgICAgICAgICBpZiAoISgwIDwgbiArIG0gKyB2KSkgc3dpdGNoIChiKSB7XG4gICAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgICAgc3dpdGNoICgyICogZyArIDMgKiBlLmNoYXJDb2RlQXQobCArIDEpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMjM1OlxuICAgICAgICAgICAgICAgICAgICAgIGIgPSA0NztcbiAgICAgICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgICAgICBjYXNlIDIyMDpcbiAgICAgICAgICAgICAgICAgICAgICB0ID0gbCwgYiA9IDQyO1xuICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgICAgIGNhc2UgNDI6XG4gICAgICAgICAgICAgICAgICA0NyA9PT0gZyAmJiA0MiA9PT0geCAmJiB0ICsgMiAhPT0gbCAmJiAoMzMgPT09IGUuY2hhckNvZGVBdCh0ICsgMikgJiYgKHAgKz0gZS5zdWJzdHJpbmcodCwgbCArIDEpKSwgeSA9ICcnLCBiID0gMCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICAwID09PSBiICYmIChmICs9IHkpO1xuICAgICAgfVxuXG4gICAgICBLID0geDtcbiAgICAgIHggPSBnO1xuICAgICAgbCsrO1xuICAgIH1cblxuICAgIHQgPSBwLmxlbmd0aDtcblxuICAgIGlmICgwIDwgdCkge1xuICAgICAgciA9IGM7XG4gICAgICBpZiAoMCA8IEEgJiYgKEMgPSBIKDIsIHAsIHIsIGQsIEQsIHosIHQsIGgsIGEsIGgpLCB2b2lkIDAgIT09IEMgJiYgMCA9PT0gKHAgPSBDKS5sZW5ndGgpKSByZXR1cm4gRyArIHAgKyBGO1xuICAgICAgcCA9IHIuam9pbignLCcpICsgJ3snICsgcCArICd9JztcblxuICAgICAgaWYgKDAgIT09IHcgKiBFKSB7XG4gICAgICAgIDIgIT09IHcgfHwgTChwLCAyKSB8fCAoRSA9IDApO1xuXG4gICAgICAgIHN3aXRjaCAoRSkge1xuICAgICAgICAgIGNhc2UgMTExOlxuICAgICAgICAgICAgcCA9IHAucmVwbGFjZShoYSwgJzotbW96LSQxJykgKyBwO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDExMjpcbiAgICAgICAgICAgIHAgPSBwLnJlcGxhY2UoUSwgJzo6LXdlYmtpdC1pbnB1dC0kMScpICsgcC5yZXBsYWNlKFEsICc6Oi1tb3otJDEnKSArIHAucmVwbGFjZShRLCAnOi1tcy1pbnB1dC0kMScpICsgcDtcbiAgICAgICAgfVxuXG4gICAgICAgIEUgPSAwO1xuICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiBHICsgcCArIEY7XG4gIH1cblxuICBmdW5jdGlvbiBYKGQsIGMsIGUpIHtcbiAgICB2YXIgaCA9IGMudHJpbSgpLnNwbGl0KGlhKTtcbiAgICBjID0gaDtcbiAgICB2YXIgYSA9IGgubGVuZ3RoLFxuICAgICAgICBtID0gZC5sZW5ndGg7XG5cbiAgICBzd2l0Y2ggKG0pIHtcbiAgICAgIGNhc2UgMDpcbiAgICAgIGNhc2UgMTpcbiAgICAgICAgdmFyIGIgPSAwO1xuXG4gICAgICAgIGZvciAoZCA9IDAgPT09IG0gPyAnJyA6IGRbMF0gKyAnICc7IGIgPCBhOyArK2IpIHtcbiAgICAgICAgICBjW2JdID0gWihkLCBjW2JdLCBlKS50cmltKCk7XG4gICAgICAgIH1cblxuICAgICAgICBicmVhaztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgdmFyIHYgPSBiID0gMDtcblxuICAgICAgICBmb3IgKGMgPSBbXTsgYiA8IGE7ICsrYikge1xuICAgICAgICAgIGZvciAodmFyIG4gPSAwOyBuIDwgbTsgKytuKSB7XG4gICAgICAgICAgICBjW3YrK10gPSBaKGRbbl0gKyAnICcsIGhbYl0sIGUpLnRyaW0oKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgIH1cblxuICAgIHJldHVybiBjO1xuICB9XG5cbiAgZnVuY3Rpb24gWihkLCBjLCBlKSB7XG4gICAgdmFyIGggPSBjLmNoYXJDb2RlQXQoMCk7XG4gICAgMzMgPiBoICYmIChoID0gKGMgPSBjLnRyaW0oKSkuY2hhckNvZGVBdCgwKSk7XG5cbiAgICBzd2l0Y2ggKGgpIHtcbiAgICAgIGNhc2UgMzg6XG4gICAgICAgIHJldHVybiBjLnJlcGxhY2UoRiwgJyQxJyArIGQudHJpbSgpKTtcblxuICAgICAgY2FzZSA1ODpcbiAgICAgICAgcmV0dXJuIGQudHJpbSgpICsgYy5yZXBsYWNlKEYsICckMScgKyBkLnRyaW0oKSk7XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIGlmICgwIDwgMSAqIGUgJiYgMCA8IGMuaW5kZXhPZignXFxmJykpIHJldHVybiBjLnJlcGxhY2UoRiwgKDU4ID09PSBkLmNoYXJDb2RlQXQoMCkgPyAnJyA6ICckMScpICsgZC50cmltKCkpO1xuICAgIH1cblxuICAgIHJldHVybiBkICsgYztcbiAgfVxuXG4gIGZ1bmN0aW9uIFAoZCwgYywgZSwgaCkge1xuICAgIHZhciBhID0gZCArICc7JyxcbiAgICAgICAgbSA9IDIgKiBjICsgMyAqIGUgKyA0ICogaDtcblxuICAgIGlmICg5NDQgPT09IG0pIHtcbiAgICAgIGQgPSBhLmluZGV4T2YoJzonLCA5KSArIDE7XG4gICAgICB2YXIgYiA9IGEuc3Vic3RyaW5nKGQsIGEubGVuZ3RoIC0gMSkudHJpbSgpO1xuICAgICAgYiA9IGEuc3Vic3RyaW5nKDAsIGQpLnRyaW0oKSArIGIgKyAnOyc7XG4gICAgICByZXR1cm4gMSA9PT0gdyB8fCAyID09PSB3ICYmIEwoYiwgMSkgPyAnLXdlYmtpdC0nICsgYiArIGIgOiBiO1xuICAgIH1cblxuICAgIGlmICgwID09PSB3IHx8IDIgPT09IHcgJiYgIUwoYSwgMSkpIHJldHVybiBhO1xuXG4gICAgc3dpdGNoIChtKSB7XG4gICAgICBjYXNlIDEwMTU6XG4gICAgICAgIHJldHVybiA5NyA9PT0gYS5jaGFyQ29kZUF0KDEwKSA/ICctd2Via2l0LScgKyBhICsgYSA6IGE7XG5cbiAgICAgIGNhc2UgOTUxOlxuICAgICAgICByZXR1cm4gMTE2ID09PSBhLmNoYXJDb2RlQXQoMykgPyAnLXdlYmtpdC0nICsgYSArIGEgOiBhO1xuXG4gICAgICBjYXNlIDk2MzpcbiAgICAgICAgcmV0dXJuIDExMCA9PT0gYS5jaGFyQ29kZUF0KDUpID8gJy13ZWJraXQtJyArIGEgKyBhIDogYTtcblxuICAgICAgY2FzZSAxMDA5OlxuICAgICAgICBpZiAoMTAwICE9PSBhLmNoYXJDb2RlQXQoNCkpIGJyZWFrO1xuXG4gICAgICBjYXNlIDk2OTpcbiAgICAgIGNhc2UgOTQyOlxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyBhO1xuXG4gICAgICBjYXNlIDk3ODpcbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tb3otJyArIGEgKyBhO1xuXG4gICAgICBjYXNlIDEwMTk6XG4gICAgICBjYXNlIDk4MzpcbiAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tb3otJyArIGEgKyAnLW1zLScgKyBhICsgYTtcblxuICAgICAgY2FzZSA4ODM6XG4gICAgICAgIGlmICg0NSA9PT0gYS5jaGFyQ29kZUF0KDgpKSByZXR1cm4gJy13ZWJraXQtJyArIGEgKyBhO1xuICAgICAgICBpZiAoMCA8IGEuaW5kZXhPZignaW1hZ2Utc2V0KCcsIDExKSkgcmV0dXJuIGEucmVwbGFjZShqYSwgJyQxLXdlYmtpdC0kMicpICsgYTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTMyOlxuICAgICAgICBpZiAoNDUgPT09IGEuY2hhckNvZGVBdCg0KSkgc3dpdGNoIChhLmNoYXJDb2RlQXQoNSkpIHtcbiAgICAgICAgICBjYXNlIDEwMzpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC1ib3gtJyArIGEucmVwbGFjZSgnLWdyb3cnLCAnJykgKyAnLXdlYmtpdC0nICsgYSArICctbXMtJyArIGEucmVwbGFjZSgnZ3JvdycsICdwb3NpdGl2ZScpICsgYTtcblxuICAgICAgICAgIGNhc2UgMTE1OlxuICAgICAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYS5yZXBsYWNlKCdzaHJpbmsnLCAnbmVnYXRpdmUnKSArIGE7XG5cbiAgICAgICAgICBjYXNlIDk4OlxuICAgICAgICAgICAgcmV0dXJuICctd2Via2l0LScgKyBhICsgJy1tcy0nICsgYS5yZXBsYWNlKCdiYXNpcycsICdwcmVmZXJyZWQtc2l6ZScpICsgYTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLScgKyBhICsgYTtcblxuICAgICAgY2FzZSA5NjQ6XG4gICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtZmxleC0nICsgYSArIGE7XG5cbiAgICAgIGNhc2UgMTAyMzpcbiAgICAgICAgaWYgKDk5ICE9PSBhLmNoYXJDb2RlQXQoOCkpIGJyZWFrO1xuICAgICAgICBiID0gYS5zdWJzdHJpbmcoYS5pbmRleE9mKCc6JywgMTUpKS5yZXBsYWNlKCdmbGV4LScsICcnKS5yZXBsYWNlKCdzcGFjZS1iZXR3ZWVuJywgJ2p1c3RpZnknKTtcbiAgICAgICAgcmV0dXJuICctd2Via2l0LWJveC1wYWNrJyArIGIgKyAnLXdlYmtpdC0nICsgYSArICctbXMtZmxleC1wYWNrJyArIGIgKyBhO1xuXG4gICAgICBjYXNlIDEwMDU6XG4gICAgICAgIHJldHVybiBrYS50ZXN0KGEpID8gYS5yZXBsYWNlKGFhLCAnOi13ZWJraXQtJykgKyBhLnJlcGxhY2UoYWEsICc6LW1vei0nKSArIGEgOiBhO1xuXG4gICAgICBjYXNlIDFlMzpcbiAgICAgICAgYiA9IGEuc3Vic3RyaW5nKDEzKS50cmltKCk7XG4gICAgICAgIGMgPSBiLmluZGV4T2YoJy0nKSArIDE7XG5cbiAgICAgICAgc3dpdGNoIChiLmNoYXJDb2RlQXQoMCkgKyBiLmNoYXJDb2RlQXQoYykpIHtcbiAgICAgICAgICBjYXNlIDIyNjpcbiAgICAgICAgICAgIGIgPSBhLnJlcGxhY2UoRywgJ3RiJyk7XG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgMjMyOlxuICAgICAgICAgICAgYiA9IGEucmVwbGFjZShHLCAndGItcmwnKTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAyMjA6XG4gICAgICAgICAgICBiID0gYS5yZXBsYWNlKEcsICdscicpO1xuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIGE7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLScgKyBiICsgYTtcblxuICAgICAgY2FzZSAxMDE3OlxuICAgICAgICBpZiAoLTEgPT09IGEuaW5kZXhPZignc3RpY2t5JywgOSkpIGJyZWFrO1xuXG4gICAgICBjYXNlIDk3NTpcbiAgICAgICAgYyA9IChhID0gZCkubGVuZ3RoIC0gMTA7XG4gICAgICAgIGIgPSAoMzMgPT09IGEuY2hhckNvZGVBdChjKSA/IGEuc3Vic3RyaW5nKDAsIGMpIDogYSkuc3Vic3RyaW5nKGQuaW5kZXhPZignOicsIDcpICsgMSkudHJpbSgpO1xuXG4gICAgICAgIHN3aXRjaCAobSA9IGIuY2hhckNvZGVBdCgwKSArIChiLmNoYXJDb2RlQXQoNykgfCAwKSkge1xuICAgICAgICAgIGNhc2UgMjAzOlxuICAgICAgICAgICAgaWYgKDExMSA+IGIuY2hhckNvZGVBdCg4KSkgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlIDExNTpcbiAgICAgICAgICAgIGEgPSBhLnJlcGxhY2UoYiwgJy13ZWJraXQtJyArIGIpICsgJzsnICsgYTtcbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAyMDc6XG4gICAgICAgICAgY2FzZSAxMDI6XG4gICAgICAgICAgICBhID0gYS5yZXBsYWNlKGIsICctd2Via2l0LScgKyAoMTAyIDwgbSA/ICdpbmxpbmUtJyA6ICcnKSArICdib3gnKSArICc7JyArIGEucmVwbGFjZShiLCAnLXdlYmtpdC0nICsgYikgKyAnOycgKyBhLnJlcGxhY2UoYiwgJy1tcy0nICsgYiArICdib3gnKSArICc7JyArIGE7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gYSArICc7JztcblxuICAgICAgY2FzZSA5Mzg6XG4gICAgICAgIGlmICg0NSA9PT0gYS5jaGFyQ29kZUF0KDUpKSBzd2l0Y2ggKGEuY2hhckNvZGVBdCg2KSkge1xuICAgICAgICAgIGNhc2UgMTA1OlxuICAgICAgICAgICAgcmV0dXJuIGIgPSBhLnJlcGxhY2UoJy1pdGVtcycsICcnKSwgJy13ZWJraXQtJyArIGEgKyAnLXdlYmtpdC1ib3gtJyArIGIgKyAnLW1zLWZsZXgtJyArIGIgKyBhO1xuXG4gICAgICAgICAgY2FzZSAxMTU6XG4gICAgICAgICAgICByZXR1cm4gJy13ZWJraXQtJyArIGEgKyAnLW1zLWZsZXgtaXRlbS0nICsgYS5yZXBsYWNlKGJhLCAnJykgKyBhO1xuXG4gICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiAnLXdlYmtpdC0nICsgYSArICctbXMtZmxleC1saW5lLXBhY2snICsgYS5yZXBsYWNlKCdhbGlnbi1jb250ZW50JywgJycpLnJlcGxhY2UoYmEsICcnKSArIGE7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTczOlxuICAgICAgY2FzZSA5ODk6XG4gICAgICAgIGlmICg0NSAhPT0gYS5jaGFyQ29kZUF0KDMpIHx8IDEyMiA9PT0gYS5jaGFyQ29kZUF0KDQpKSBicmVhaztcblxuICAgICAgY2FzZSA5MzE6XG4gICAgICBjYXNlIDk1MzpcbiAgICAgICAgaWYgKCEwID09PSBsYS50ZXN0KGQpKSByZXR1cm4gMTE1ID09PSAoYiA9IGQuc3Vic3RyaW5nKGQuaW5kZXhPZignOicpICsgMSkpLmNoYXJDb2RlQXQoMCkgPyBQKGQucmVwbGFjZSgnc3RyZXRjaCcsICdmaWxsLWF2YWlsYWJsZScpLCBjLCBlLCBoKS5yZXBsYWNlKCc6ZmlsbC1hdmFpbGFibGUnLCAnOnN0cmV0Y2gnKSA6IGEucmVwbGFjZShiLCAnLXdlYmtpdC0nICsgYikgKyBhLnJlcGxhY2UoYiwgJy1tb3otJyArIGIucmVwbGFjZSgnZmlsbC0nLCAnJykpICsgYTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgOTYyOlxuICAgICAgICBpZiAoYSA9ICctd2Via2l0LScgKyBhICsgKDEwMiA9PT0gYS5jaGFyQ29kZUF0KDUpID8gJy1tcy0nICsgYSA6ICcnKSArIGEsIDIxMSA9PT0gZSArIGggJiYgMTA1ID09PSBhLmNoYXJDb2RlQXQoMTMpICYmIDAgPCBhLmluZGV4T2YoJ3RyYW5zZm9ybScsIDEwKSkgcmV0dXJuIGEuc3Vic3RyaW5nKDAsIGEuaW5kZXhPZignOycsIDI3KSArIDEpLnJlcGxhY2UobWEsICckMS13ZWJraXQtJDInKSArIGE7XG4gICAgfVxuXG4gICAgcmV0dXJuIGE7XG4gIH1cblxuICBmdW5jdGlvbiBMKGQsIGMpIHtcbiAgICB2YXIgZSA9IGQuaW5kZXhPZigxID09PSBjID8gJzonIDogJ3snKSxcbiAgICAgICAgaCA9IGQuc3Vic3RyaW5nKDAsIDMgIT09IGMgPyBlIDogMTApO1xuICAgIGUgPSBkLnN1YnN0cmluZyhlICsgMSwgZC5sZW5ndGggLSAxKTtcbiAgICByZXR1cm4gUigyICE9PSBjID8gaCA6IGgucmVwbGFjZShuYSwgJyQxJyksIGUsIGMpO1xuICB9XG5cbiAgZnVuY3Rpb24gZWEoZCwgYykge1xuICAgIHZhciBlID0gUChjLCBjLmNoYXJDb2RlQXQoMCksIGMuY2hhckNvZGVBdCgxKSwgYy5jaGFyQ29kZUF0KDIpKTtcbiAgICByZXR1cm4gZSAhPT0gYyArICc7JyA/IGUucmVwbGFjZShvYSwgJyBvciAoJDEpJykuc3Vic3RyaW5nKDQpIDogJygnICsgYyArICcpJztcbiAgfVxuXG4gIGZ1bmN0aW9uIEgoZCwgYywgZSwgaCwgYSwgbSwgYiwgdiwgbiwgcSkge1xuICAgIGZvciAodmFyIGcgPSAwLCB4ID0gYywgdzsgZyA8IEE7ICsrZykge1xuICAgICAgc3dpdGNoICh3ID0gU1tnXS5jYWxsKEIsIGQsIHgsIGUsIGgsIGEsIG0sIGIsIHYsIG4sIHEpKSB7XG4gICAgICAgIGNhc2Ugdm9pZCAwOlxuICAgICAgICBjYXNlICExOlxuICAgICAgICBjYXNlICEwOlxuICAgICAgICBjYXNlIG51bGw6XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICB4ID0gdztcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoeCAhPT0gYykgcmV0dXJuIHg7XG4gIH1cblxuICBmdW5jdGlvbiBUKGQpIHtcbiAgICBzd2l0Y2ggKGQpIHtcbiAgICAgIGNhc2Ugdm9pZCAwOlxuICAgICAgY2FzZSBudWxsOlxuICAgICAgICBBID0gUy5sZW5ndGggPSAwO1xuICAgICAgICBicmVhaztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgaWYgKCdmdW5jdGlvbicgPT09IHR5cGVvZiBkKSBTW0ErK10gPSBkO2Vsc2UgaWYgKCdvYmplY3QnID09PSB0eXBlb2YgZCkgZm9yICh2YXIgYyA9IDAsIGUgPSBkLmxlbmd0aDsgYyA8IGU7ICsrYykge1xuICAgICAgICAgIFQoZFtjXSk7XG4gICAgICAgIH0gZWxzZSBZID0gISFkIHwgMDtcbiAgICB9XG5cbiAgICByZXR1cm4gVDtcbiAgfVxuXG4gIGZ1bmN0aW9uIFUoZCkge1xuICAgIGQgPSBkLnByZWZpeDtcbiAgICB2b2lkIDAgIT09IGQgJiYgKFIgPSBudWxsLCBkID8gJ2Z1bmN0aW9uJyAhPT0gdHlwZW9mIGQgPyB3ID0gMSA6ICh3ID0gMiwgUiA9IGQpIDogdyA9IDApO1xuICAgIHJldHVybiBVO1xuICB9XG5cbiAgZnVuY3Rpb24gQihkLCBjKSB7XG4gICAgdmFyIGUgPSBkO1xuICAgIDMzID4gZS5jaGFyQ29kZUF0KDApICYmIChlID0gZS50cmltKCkpO1xuICAgIFYgPSBlO1xuICAgIGUgPSBbVl07XG5cbiAgICBpZiAoMCA8IEEpIHtcbiAgICAgIHZhciBoID0gSCgtMSwgYywgZSwgZSwgRCwgeiwgMCwgMCwgMCwgMCk7XG4gICAgICB2b2lkIDAgIT09IGggJiYgJ3N0cmluZycgPT09IHR5cGVvZiBoICYmIChjID0gaCk7XG4gICAgfVxuXG4gICAgdmFyIGEgPSBNKE8sIGUsIGMsIDAsIDApO1xuICAgIDAgPCBBICYmIChoID0gSCgtMiwgYSwgZSwgZSwgRCwgeiwgYS5sZW5ndGgsIDAsIDAsIDApLCB2b2lkIDAgIT09IGggJiYgKGEgPSBoKSk7XG4gICAgViA9ICcnO1xuICAgIEUgPSAwO1xuICAgIHogPSBEID0gMTtcbiAgICByZXR1cm4gYTtcbiAgfVxuXG4gIHZhciBjYSA9IC9eXFwwKy9nLFxuICAgICAgTiA9IC9bXFwwXFxyXFxmXS9nLFxuICAgICAgYWEgPSAvOiAqL2csXG4gICAgICBrYSA9IC96b298Z3JhLyxcbiAgICAgIG1hID0gLyhbLDogXSkodHJhbnNmb3JtKS9nLFxuICAgICAgaWEgPSAvLFxccis/L2csXG4gICAgICBGID0gLyhbXFx0XFxyXFxuIF0pKlxcZj8mL2csXG4gICAgICBmYSA9IC9AKGtcXHcrKVxccyooXFxTKilcXHMqLyxcbiAgICAgIFEgPSAvOjoocGxhY2UpL2csXG4gICAgICBoYSA9IC86KHJlYWQtb25seSkvZyxcbiAgICAgIEcgPSAvW3N2aF1cXHcrLVt0YmxyXXsyfS8sXG4gICAgICBkYSA9IC9cXChcXHMqKC4qKVxccypcXCkvZyxcbiAgICAgIG9hID0gLyhbXFxzXFxTXSo/KTsvZyxcbiAgICAgIGJhID0gLy1zZWxmfGZsZXgtL2csXG4gICAgICBuYSA9IC9bXl0qPyg6W3JwXVtlbF1hW1xcdy1dKylbXl0qLyxcbiAgICAgIGxhID0gL3N0cmV0Y2h8OlxccypcXHcrXFwtKD86Y29udGV8YXZhaWwpLyxcbiAgICAgIGphID0gLyhbXi1dKShpbWFnZS1zZXRcXCgpLyxcbiAgICAgIHogPSAxLFxuICAgICAgRCA9IDEsXG4gICAgICBFID0gMCxcbiAgICAgIHcgPSAxLFxuICAgICAgTyA9IFtdLFxuICAgICAgUyA9IFtdLFxuICAgICAgQSA9IDAsXG4gICAgICBSID0gbnVsbCxcbiAgICAgIFkgPSAwLFxuICAgICAgViA9ICcnO1xuICBCLnVzZSA9IFQ7XG4gIEIuc2V0ID0gVTtcbiAgdm9pZCAwICE9PSBXICYmIFUoVyk7XG4gIHJldHVybiBCO1xufVxuXG5leHBvcnQgZGVmYXVsdCBzdHlsaXNfbWluO1xuIiwidmFyIHVuaXRsZXNzS2V5cyA9IHtcbiAgYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQ6IDEsXG4gIGJvcmRlckltYWdlT3V0c2V0OiAxLFxuICBib3JkZXJJbWFnZVNsaWNlOiAxLFxuICBib3JkZXJJbWFnZVdpZHRoOiAxLFxuICBib3hGbGV4OiAxLFxuICBib3hGbGV4R3JvdXA6IDEsXG4gIGJveE9yZGluYWxHcm91cDogMSxcbiAgY29sdW1uQ291bnQ6IDEsXG4gIGNvbHVtbnM6IDEsXG4gIGZsZXg6IDEsXG4gIGZsZXhHcm93OiAxLFxuICBmbGV4UG9zaXRpdmU6IDEsXG4gIGZsZXhTaHJpbms6IDEsXG4gIGZsZXhOZWdhdGl2ZTogMSxcbiAgZmxleE9yZGVyOiAxLFxuICBncmlkUm93OiAxLFxuICBncmlkUm93RW5kOiAxLFxuICBncmlkUm93U3BhbjogMSxcbiAgZ3JpZFJvd1N0YXJ0OiAxLFxuICBncmlkQ29sdW1uOiAxLFxuICBncmlkQ29sdW1uRW5kOiAxLFxuICBncmlkQ29sdW1uU3BhbjogMSxcbiAgZ3JpZENvbHVtblN0YXJ0OiAxLFxuICBtc0dyaWRSb3c6IDEsXG4gIG1zR3JpZFJvd1NwYW46IDEsXG4gIG1zR3JpZENvbHVtbjogMSxcbiAgbXNHcmlkQ29sdW1uU3BhbjogMSxcbiAgZm9udFdlaWdodDogMSxcbiAgbGluZUhlaWdodDogMSxcbiAgb3BhY2l0eTogMSxcbiAgb3JkZXI6IDEsXG4gIG9ycGhhbnM6IDEsXG4gIHRhYlNpemU6IDEsXG4gIHdpZG93czogMSxcbiAgekluZGV4OiAxLFxuICB6b29tOiAxLFxuICBXZWJraXRMaW5lQ2xhbXA6IDEsXG4gIC8vIFNWRy1yZWxhdGVkIHByb3BlcnRpZXNcbiAgZmlsbE9wYWNpdHk6IDEsXG4gIGZsb29kT3BhY2l0eTogMSxcbiAgc3RvcE9wYWNpdHk6IDEsXG4gIHN0cm9rZURhc2hhcnJheTogMSxcbiAgc3Ryb2tlRGFzaG9mZnNldDogMSxcbiAgc3Ryb2tlTWl0ZXJsaW1pdDogMSxcbiAgc3Ryb2tlT3BhY2l0eTogMSxcbiAgc3Ryb2tlV2lkdGg6IDFcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHVuaXRsZXNzS2V5cztcbiIsImltcG9ydCBtZW1vaXplIGZyb20gJ0BlbW90aW9uL21lbW9pemUnO1xuXG52YXIgcmVhY3RQcm9wc1JlZ2V4ID0gL14oKGNoaWxkcmVufGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MfGtleXxyZWZ8YXV0b0ZvY3VzfGRlZmF1bHRWYWx1ZXxkZWZhdWx0Q2hlY2tlZHxpbm5lckhUTUx8c3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nfHN1cHByZXNzSHlkcmF0aW9uV2FybmluZ3x2YWx1ZUxpbmt8YWNjZXB0fGFjY2VwdENoYXJzZXR8YWNjZXNzS2V5fGFjdGlvbnxhbGxvd3xhbGxvd1VzZXJNZWRpYXxhbGxvd1BheW1lbnRSZXF1ZXN0fGFsbG93RnVsbFNjcmVlbnxhbGxvd1RyYW5zcGFyZW5jeXxhbHR8YXN5bmN8YXV0b0NvbXBsZXRlfGF1dG9QbGF5fGNhcHR1cmV8Y2VsbFBhZGRpbmd8Y2VsbFNwYWNpbmd8Y2hhbGxlbmdlfGNoYXJTZXR8Y2hlY2tlZHxjaXRlfGNsYXNzSUR8Y2xhc3NOYW1lfGNvbHN8Y29sU3Bhbnxjb250ZW50fGNvbnRlbnRFZGl0YWJsZXxjb250ZXh0TWVudXxjb250cm9sc3xjb250cm9sc0xpc3R8Y29vcmRzfGNyb3NzT3JpZ2lufGRhdGF8ZGF0ZVRpbWV8ZGVjb2Rpbmd8ZGVmYXVsdHxkZWZlcnxkaXJ8ZGlzYWJsZWR8ZGlzYWJsZVBpY3R1cmVJblBpY3R1cmV8ZG93bmxvYWR8ZHJhZ2dhYmxlfGVuY1R5cGV8Zm9ybXxmb3JtQWN0aW9ufGZvcm1FbmNUeXBlfGZvcm1NZXRob2R8Zm9ybU5vVmFsaWRhdGV8Zm9ybVRhcmdldHxmcmFtZUJvcmRlcnxoZWFkZXJzfGhlaWdodHxoaWRkZW58aGlnaHxocmVmfGhyZWZMYW5nfGh0bWxGb3J8aHR0cEVxdWl2fGlkfGlucHV0TW9kZXxpbnRlZ3JpdHl8aXN8a2V5UGFyYW1zfGtleVR5cGV8a2luZHxsYWJlbHxsYW5nfGxpc3R8bG9hZGluZ3xsb29wfGxvd3xtYXJnaW5IZWlnaHR8bWFyZ2luV2lkdGh8bWF4fG1heExlbmd0aHxtZWRpYXxtZWRpYUdyb3VwfG1ldGhvZHxtaW58bWluTGVuZ3RofG11bHRpcGxlfG11dGVkfG5hbWV8bm9uY2V8bm9WYWxpZGF0ZXxvcGVufG9wdGltdW18cGF0dGVybnxwbGFjZWhvbGRlcnxwbGF5c0lubGluZXxwb3N0ZXJ8cHJlbG9hZHxwcm9maWxlfHJhZGlvR3JvdXB8cmVhZE9ubHl8cmVmZXJyZXJQb2xpY3l8cmVsfHJlcXVpcmVkfHJldmVyc2VkfHJvbGV8cm93c3xyb3dTcGFufHNhbmRib3h8c2NvcGV8c2NvcGVkfHNjcm9sbGluZ3xzZWFtbGVzc3xzZWxlY3RlZHxzaGFwZXxzaXplfHNpemVzfHNsb3R8c3BhbnxzcGVsbENoZWNrfHNyY3xzcmNEb2N8c3JjTGFuZ3xzcmNTZXR8c3RhcnR8c3RlcHxzdHlsZXxzdW1tYXJ5fHRhYkluZGV4fHRhcmdldHx0aXRsZXx0eXBlfHVzZU1hcHx2YWx1ZXx3aWR0aHx3bW9kZXx3cmFwfGFib3V0fGRhdGF0eXBlfGlubGlzdHxwcmVmaXh8cHJvcGVydHl8cmVzb3VyY2V8dHlwZW9mfHZvY2FifGF1dG9DYXBpdGFsaXplfGF1dG9Db3JyZWN0fGF1dG9TYXZlfGNvbG9yfGluZXJ0fGl0ZW1Qcm9wfGl0ZW1TY29wZXxpdGVtVHlwZXxpdGVtSUR8aXRlbVJlZnxvbnxyZXN1bHRzfHNlY3VyaXR5fHVuc2VsZWN0YWJsZXxhY2NlbnRIZWlnaHR8YWNjdW11bGF0ZXxhZGRpdGl2ZXxhbGlnbm1lbnRCYXNlbGluZXxhbGxvd1Jlb3JkZXJ8YWxwaGFiZXRpY3xhbXBsaXR1ZGV8YXJhYmljRm9ybXxhc2NlbnR8YXR0cmlidXRlTmFtZXxhdHRyaWJ1dGVUeXBlfGF1dG9SZXZlcnNlfGF6aW11dGh8YmFzZUZyZXF1ZW5jeXxiYXNlbGluZVNoaWZ0fGJhc2VQcm9maWxlfGJib3h8YmVnaW58Ymlhc3xieXxjYWxjTW9kZXxjYXBIZWlnaHR8Y2xpcHxjbGlwUGF0aFVuaXRzfGNsaXBQYXRofGNsaXBSdWxlfGNvbG9ySW50ZXJwb2xhdGlvbnxjb2xvckludGVycG9sYXRpb25GaWx0ZXJzfGNvbG9yUHJvZmlsZXxjb2xvclJlbmRlcmluZ3xjb250ZW50U2NyaXB0VHlwZXxjb250ZW50U3R5bGVUeXBlfGN1cnNvcnxjeHxjeXxkfGRlY2VsZXJhdGV8ZGVzY2VudHxkaWZmdXNlQ29uc3RhbnR8ZGlyZWN0aW9ufGRpc3BsYXl8ZGl2aXNvcnxkb21pbmFudEJhc2VsaW5lfGR1cnxkeHxkeXxlZGdlTW9kZXxlbGV2YXRpb258ZW5hYmxlQmFja2dyb3VuZHxlbmR8ZXhwb25lbnR8ZXh0ZXJuYWxSZXNvdXJjZXNSZXF1aXJlZHxmaWxsfGZpbGxPcGFjaXR5fGZpbGxSdWxlfGZpbHRlcnxmaWx0ZXJSZXN8ZmlsdGVyVW5pdHN8Zmxvb2RDb2xvcnxmbG9vZE9wYWNpdHl8Zm9jdXNhYmxlfGZvbnRGYW1pbHl8Zm9udFNpemV8Zm9udFNpemVBZGp1c3R8Zm9udFN0cmV0Y2h8Zm9udFN0eWxlfGZvbnRWYXJpYW50fGZvbnRXZWlnaHR8Zm9ybWF0fGZyb218ZnJ8Znh8Znl8ZzF8ZzJ8Z2x5cGhOYW1lfGdseXBoT3JpZW50YXRpb25Ib3Jpem9udGFsfGdseXBoT3JpZW50YXRpb25WZXJ0aWNhbHxnbHlwaFJlZnxncmFkaWVudFRyYW5zZm9ybXxncmFkaWVudFVuaXRzfGhhbmdpbmd8aG9yaXpBZHZYfGhvcml6T3JpZ2luWHxpZGVvZ3JhcGhpY3xpbWFnZVJlbmRlcmluZ3xpbnxpbjJ8aW50ZXJjZXB0fGt8azF8azJ8azN8azR8a2VybmVsTWF0cml4fGtlcm5lbFVuaXRMZW5ndGh8a2VybmluZ3xrZXlQb2ludHN8a2V5U3BsaW5lc3xrZXlUaW1lc3xsZW5ndGhBZGp1c3R8bGV0dGVyU3BhY2luZ3xsaWdodGluZ0NvbG9yfGxpbWl0aW5nQ29uZUFuZ2xlfGxvY2FsfG1hcmtlckVuZHxtYXJrZXJNaWR8bWFya2VyU3RhcnR8bWFya2VySGVpZ2h0fG1hcmtlclVuaXRzfG1hcmtlcldpZHRofG1hc2t8bWFza0NvbnRlbnRVbml0c3xtYXNrVW5pdHN8bWF0aGVtYXRpY2FsfG1vZGV8bnVtT2N0YXZlc3xvZmZzZXR8b3BhY2l0eXxvcGVyYXRvcnxvcmRlcnxvcmllbnR8b3JpZW50YXRpb258b3JpZ2lufG92ZXJmbG93fG92ZXJsaW5lUG9zaXRpb258b3ZlcmxpbmVUaGlja25lc3N8cGFub3NlMXxwYWludE9yZGVyfHBhdGhMZW5ndGh8cGF0dGVybkNvbnRlbnRVbml0c3xwYXR0ZXJuVHJhbnNmb3JtfHBhdHRlcm5Vbml0c3xwb2ludGVyRXZlbnRzfHBvaW50c3xwb2ludHNBdFh8cG9pbnRzQXRZfHBvaW50c0F0WnxwcmVzZXJ2ZUFscGhhfHByZXNlcnZlQXNwZWN0UmF0aW98cHJpbWl0aXZlVW5pdHN8cnxyYWRpdXN8cmVmWHxyZWZZfHJlbmRlcmluZ0ludGVudHxyZXBlYXRDb3VudHxyZXBlYXREdXJ8cmVxdWlyZWRFeHRlbnNpb25zfHJlcXVpcmVkRmVhdHVyZXN8cmVzdGFydHxyZXN1bHR8cm90YXRlfHJ4fHJ5fHNjYWxlfHNlZWR8c2hhcGVSZW5kZXJpbmd8c2xvcGV8c3BhY2luZ3xzcGVjdWxhckNvbnN0YW50fHNwZWN1bGFyRXhwb25lbnR8c3BlZWR8c3ByZWFkTWV0aG9kfHN0YXJ0T2Zmc2V0fHN0ZERldmlhdGlvbnxzdGVtaHxzdGVtdnxzdGl0Y2hUaWxlc3xzdG9wQ29sb3J8c3RvcE9wYWNpdHl8c3RyaWtldGhyb3VnaFBvc2l0aW9ufHN0cmlrZXRocm91Z2hUaGlja25lc3N8c3RyaW5nfHN0cm9rZXxzdHJva2VEYXNoYXJyYXl8c3Ryb2tlRGFzaG9mZnNldHxzdHJva2VMaW5lY2FwfHN0cm9rZUxpbmVqb2lufHN0cm9rZU1pdGVybGltaXR8c3Ryb2tlT3BhY2l0eXxzdHJva2VXaWR0aHxzdXJmYWNlU2NhbGV8c3lzdGVtTGFuZ3VhZ2V8dGFibGVWYWx1ZXN8dGFyZ2V0WHx0YXJnZXRZfHRleHRBbmNob3J8dGV4dERlY29yYXRpb258dGV4dFJlbmRlcmluZ3x0ZXh0TGVuZ3RofHRvfHRyYW5zZm9ybXx1MXx1Mnx1bmRlcmxpbmVQb3NpdGlvbnx1bmRlcmxpbmVUaGlja25lc3N8dW5pY29kZXx1bmljb2RlQmlkaXx1bmljb2RlUmFuZ2V8dW5pdHNQZXJFbXx2QWxwaGFiZXRpY3x2SGFuZ2luZ3x2SWRlb2dyYXBoaWN8dk1hdGhlbWF0aWNhbHx2YWx1ZXN8dmVjdG9yRWZmZWN0fHZlcnNpb258dmVydEFkdll8dmVydE9yaWdpblh8dmVydE9yaWdpbll8dmlld0JveHx2aWV3VGFyZ2V0fHZpc2liaWxpdHl8d2lkdGhzfHdvcmRTcGFjaW5nfHdyaXRpbmdNb2RlfHh8eEhlaWdodHx4MXx4Mnx4Q2hhbm5lbFNlbGVjdG9yfHhsaW5rQWN0dWF0ZXx4bGlua0FyY3JvbGV8eGxpbmtIcmVmfHhsaW5rUm9sZXx4bGlua1Nob3d8eGxpbmtUaXRsZXx4bGlua1R5cGV8eG1sQmFzZXx4bWxuc3x4bWxuc1hsaW5rfHhtbExhbmd8eG1sU3BhY2V8eXx5MXx5Mnx5Q2hhbm5lbFNlbGVjdG9yfHp8em9vbUFuZFBhbnxmb3J8Y2xhc3N8YXV0b2ZvY3VzKXwoKFtEZF1bQWFdW1R0XVtBYV18W0FhXVtScl1bSWldW0FhXXx4KS0uKikpJC87IC8vIGh0dHBzOi8vZXNiZW5jaC5jb20vYmVuY2gvNWJmZWU2OGE0Y2Q3ZTYwMDllZjYxZDIzXG5cbnZhciBpbmRleCA9IG1lbW9pemUoZnVuY3Rpb24gKHByb3ApIHtcbiAgcmV0dXJuIHJlYWN0UHJvcHNSZWdleC50ZXN0KHByb3ApIHx8IHByb3AuY2hhckNvZGVBdCgwKSA9PT0gMTExXG4gIC8qIG8gKi9cbiAgJiYgcHJvcC5jaGFyQ29kZUF0KDEpID09PSAxMTBcbiAgLyogbiAqL1xuICAmJiBwcm9wLmNoYXJDb2RlQXQoMikgPCA5MTtcbn1cbi8qIForMSAqL1xuKTtcblxuZXhwb3J0IGRlZmF1bHQgaW5kZXg7XG4iLCJmdW5jdGlvbiBtZW1vaXplKGZuKSB7XG4gIHZhciBjYWNoZSA9IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgIGlmIChjYWNoZVthcmddID09PSB1bmRlZmluZWQpIGNhY2hlW2FyZ10gPSBmbihhcmcpO1xuICAgIHJldHVybiBjYWNoZVthcmddO1xuICB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplO1xuIiwiaW1wb3J0e3R5cGVPZiBhcyBlLGlzRWxlbWVudCBhcyB0LGlzVmFsaWRFbGVtZW50VHlwZSBhcyBufWZyb21cInJlYWN0LWlzXCI7aW1wb3J0IHIse3VzZVN0YXRlIGFzIG8sdXNlQ29udGV4dCBhcyBzLHVzZU1lbW8gYXMgaSx1c2VFZmZlY3QgYXMgYSx1c2VSZWYgYXMgYyxjcmVhdGVFbGVtZW50IGFzIHUsdXNlRGVidWdWYWx1ZSBhcyBsLHVzZUxheW91dEVmZmVjdCBhcyBkfWZyb21cInJlYWN0XCI7aW1wb3J0IGggZnJvbVwic2hhbGxvd2VxdWFsXCI7aW1wb3J0IHAgZnJvbVwiQGVtb3Rpb24vc3R5bGlzXCI7aW1wb3J0IGYgZnJvbVwiQGVtb3Rpb24vdW5pdGxlc3NcIjtpbXBvcnQgbSBmcm9tXCJAZW1vdGlvbi9pcy1wcm9wLXZhbGlkXCI7aW1wb3J0IHkgZnJvbVwiaG9pc3Qtbm9uLXJlYWN0LXN0YXRpY3NcIjtmdW5jdGlvbiB2KCl7cmV0dXJuKHY9T2JqZWN0LmFzc2lnbnx8ZnVuY3Rpb24oZSl7Zm9yKHZhciB0PTE7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyl7dmFyIG49YXJndW1lbnRzW3RdO2Zvcih2YXIgciBpbiBuKU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChuLHIpJiYoZVtyXT1uW3JdKX1yZXR1cm4gZX0pLmFwcGx5KHRoaXMsYXJndW1lbnRzKX12YXIgZz1mdW5jdGlvbihlLHQpe2Zvcih2YXIgbj1bZVswXV0scj0wLG89dC5sZW5ndGg7cjxvO3IrPTEpbi5wdXNoKHRbcl0sZVtyKzFdKTtyZXR1cm4gbn0sUz1mdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9PXQmJlwib2JqZWN0XCI9PXR5cGVvZiB0JiZcIltvYmplY3QgT2JqZWN0XVwiPT09KHQudG9TdHJpbmc/dC50b1N0cmluZygpOk9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KSkmJiFlKHQpfSx3PU9iamVjdC5mcmVlemUoW10pLEU9T2JqZWN0LmZyZWV6ZSh7fSk7ZnVuY3Rpb24gYihlKXtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBlfWZ1bmN0aW9uIF8oZSl7cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmXCJzdHJpbmdcIj09dHlwZW9mIGUmJmV8fGUuZGlzcGxheU5hbWV8fGUubmFtZXx8XCJDb21wb25lbnRcIn1mdW5jdGlvbiBOKGUpe3JldHVybiBlJiZcInN0cmluZ1wiPT10eXBlb2YgZS5zdHlsZWRDb21wb25lbnRJZH12YXIgQT1cInVuZGVmaW5lZFwiIT10eXBlb2YgcHJvY2VzcyYmKHByb2Nlc3MuZW52LlJFQUNUX0FQUF9TQ19BVFRSfHxwcm9jZXNzLmVudi5TQ19BVFRSKXx8XCJkYXRhLXN0eWxlZFwiLEM9XCI1LjMuMVwiLEk9XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmXCJIVE1MRWxlbWVudFwiaW4gd2luZG93LFA9Qm9vbGVhbihcImJvb2xlYW5cIj09dHlwZW9mIFNDX0RJU0FCTEVfU1BFRURZP1NDX0RJU0FCTEVfU1BFRURZOlwidW5kZWZpbmVkXCIhPXR5cGVvZiBwcm9jZXNzJiZ2b2lkIDAhPT1wcm9jZXNzLmVudi5SRUFDVF9BUFBfU0NfRElTQUJMRV9TUEVFRFkmJlwiXCIhPT1wcm9jZXNzLmVudi5SRUFDVF9BUFBfU0NfRElTQUJMRV9TUEVFRFk/XCJmYWxzZVwiIT09cHJvY2Vzcy5lbnYuUkVBQ1RfQVBQX1NDX0RJU0FCTEVfU1BFRURZJiZwcm9jZXNzLmVudi5SRUFDVF9BUFBfU0NfRElTQUJMRV9TUEVFRFk6XCJ1bmRlZmluZWRcIiE9dHlwZW9mIHByb2Nlc3MmJnZvaWQgMCE9PXByb2Nlc3MuZW52LlNDX0RJU0FCTEVfU1BFRURZJiZcIlwiIT09cHJvY2Vzcy5lbnYuU0NfRElTQUJMRV9TUEVFRFk/XCJmYWxzZVwiIT09cHJvY2Vzcy5lbnYuU0NfRElTQUJMRV9TUEVFRFkmJnByb2Nlc3MuZW52LlNDX0RJU0FCTEVfU1BFRURZOlwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYpLE89e30sUj1cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WP3sxOlwiQ2Fubm90IGNyZWF0ZSBzdHlsZWQtY29tcG9uZW50IGZvciBjb21wb25lbnQ6ICVzLlxcblxcblwiLDI6XCJDYW4ndCBjb2xsZWN0IHN0eWxlcyBvbmNlIHlvdSd2ZSBjb25zdW1lZCBhIGBTZXJ2ZXJTdHlsZVNoZWV0YCdzIHN0eWxlcyEgYFNlcnZlclN0eWxlU2hlZXRgIGlzIGEgb25lIG9mZiBpbnN0YW5jZSBmb3IgZWFjaCBzZXJ2ZXItc2lkZSByZW5kZXIgY3ljbGUuXFxuXFxuLSBBcmUgeW91IHRyeWluZyB0byByZXVzZSBpdCBhY3Jvc3MgcmVuZGVycz9cXG4tIEFyZSB5b3UgYWNjaWRlbnRhbGx5IGNhbGxpbmcgY29sbGVjdFN0eWxlcyB0d2ljZT9cXG5cXG5cIiwzOlwiU3RyZWFtaW5nIFNTUiBpcyBvbmx5IHN1cHBvcnRlZCBpbiBhIE5vZGUuanMgZW52aXJvbm1lbnQ7IFBsZWFzZSBkbyBub3QgdHJ5IHRvIGNhbGwgdGhpcyBtZXRob2QgaW4gdGhlIGJyb3dzZXIuXFxuXFxuXCIsNDpcIlRoZSBgU3R5bGVTaGVldE1hbmFnZXJgIGV4cGVjdHMgYSB2YWxpZCB0YXJnZXQgb3Igc2hlZXQgcHJvcCFcXG5cXG4tIERvZXMgdGhpcyBlcnJvciBvY2N1ciBvbiB0aGUgY2xpZW50IGFuZCBpcyB5b3VyIHRhcmdldCBmYWxzeT9cXG4tIERvZXMgdGhpcyBlcnJvciBvY2N1ciBvbiB0aGUgc2VydmVyIGFuZCBpcyB0aGUgc2hlZXQgZmFsc3k/XFxuXFxuXCIsNTpcIlRoZSBjbG9uZSBtZXRob2QgY2Fubm90IGJlIHVzZWQgb24gdGhlIGNsaWVudCFcXG5cXG4tIEFyZSB5b3UgcnVubmluZyBpbiBhIGNsaWVudC1saWtlIGVudmlyb25tZW50IG9uIHRoZSBzZXJ2ZXI/XFxuLSBBcmUgeW91IHRyeWluZyB0byBydW4gU1NSIG9uIHRoZSBjbGllbnQ/XFxuXFxuXCIsNjpcIlRyeWluZyB0byBpbnNlcnQgYSBuZXcgc3R5bGUgdGFnLCBidXQgdGhlIGdpdmVuIE5vZGUgaXMgdW5tb3VudGVkIVxcblxcbi0gQXJlIHlvdSB1c2luZyBhIGN1c3RvbSB0YXJnZXQgdGhhdCBpc24ndCBtb3VudGVkP1xcbi0gRG9lcyB5b3VyIGRvY3VtZW50IG5vdCBoYXZlIGEgdmFsaWQgaGVhZCBlbGVtZW50P1xcbi0gSGF2ZSB5b3UgYWNjaWRlbnRhbGx5IHJlbW92ZWQgYSBzdHlsZSB0YWcgbWFudWFsbHk/XFxuXFxuXCIsNzonVGhlbWVQcm92aWRlcjogUGxlYXNlIHJldHVybiBhbiBvYmplY3QgZnJvbSB5b3VyIFwidGhlbWVcIiBwcm9wIGZ1bmN0aW9uLCBlLmcuXFxuXFxuYGBganNcXG50aGVtZT17KCkgPT4gKHt9KX1cXG5gYGBcXG5cXG4nLDg6J1RoZW1lUHJvdmlkZXI6IFBsZWFzZSBtYWtlIHlvdXIgXCJ0aGVtZVwiIHByb3AgYW4gb2JqZWN0LlxcblxcbicsOTpcIk1pc3NpbmcgZG9jdW1lbnQgYDxoZWFkPmBcXG5cXG5cIiwxMDpcIkNhbm5vdCBmaW5kIGEgU3R5bGVTaGVldCBpbnN0YW5jZS4gVXN1YWxseSB0aGlzIGhhcHBlbnMgaWYgdGhlcmUgYXJlIG11bHRpcGxlIGNvcGllcyBvZiBzdHlsZWQtY29tcG9uZW50cyBsb2FkZWQgYXQgb25jZS4gQ2hlY2sgb3V0IHRoaXMgaXNzdWUgZm9yIGhvdyB0byB0cm91Ymxlc2hvb3QgYW5kIGZpeCB0aGUgY29tbW9uIGNhc2VzIHdoZXJlIHRoaXMgc2l0dWF0aW9uIGNhbiBoYXBwZW46IGh0dHBzOi8vZ2l0aHViLmNvbS9zdHlsZWQtY29tcG9uZW50cy9zdHlsZWQtY29tcG9uZW50cy9pc3N1ZXMvMTk0MSNpc3N1ZWNvbW1lbnQtNDE3ODYyMDIxXFxuXFxuXCIsMTE6XCJfVGhpcyBlcnJvciB3YXMgcmVwbGFjZWQgd2l0aCBhIGRldi10aW1lIHdhcm5pbmcsIGl0IHdpbGwgYmUgZGVsZXRlZCBmb3IgdjQgZmluYWwuXyBbY3JlYXRlR2xvYmFsU3R5bGVdIHJlY2VpdmVkIGNoaWxkcmVuIHdoaWNoIHdpbGwgbm90IGJlIHJlbmRlcmVkLiBQbGVhc2UgdXNlIHRoZSBjb21wb25lbnQgd2l0aG91dCBwYXNzaW5nIGNoaWxkcmVuIGVsZW1lbnRzLlxcblxcblwiLDEyOlwiSXQgc2VlbXMgeW91IGFyZSBpbnRlcnBvbGF0aW5nIGEga2V5ZnJhbWUgZGVjbGFyYXRpb24gKCVzKSBpbnRvIGFuIHVudGFnZ2VkIHN0cmluZy4gVGhpcyB3YXMgc3VwcG9ydGVkIGluIHN0eWxlZC1jb21wb25lbnRzIHYzLCBidXQgaXMgbm90IGxvbmdlciBzdXBwb3J0ZWQgaW4gdjQgYXMga2V5ZnJhbWVzIGFyZSBub3cgaW5qZWN0ZWQgb24tZGVtYW5kLiBQbGVhc2Ugd3JhcCB5b3VyIHN0cmluZyBpbiB0aGUgY3NzXFxcXGBcXFxcYCBoZWxwZXIgd2hpY2ggZW5zdXJlcyB0aGUgc3R5bGVzIGFyZSBpbmplY3RlZCBjb3JyZWN0bHkuIFNlZSBodHRwczovL3d3dy5zdHlsZWQtY29tcG9uZW50cy5jb20vZG9jcy9hcGkjY3NzXFxuXFxuXCIsMTM6XCIlcyBpcyBub3QgYSBzdHlsZWQgY29tcG9uZW50IGFuZCBjYW5ub3QgYmUgcmVmZXJyZWQgdG8gdmlhIGNvbXBvbmVudCBzZWxlY3Rvci4gU2VlIGh0dHBzOi8vd3d3LnN0eWxlZC1jb21wb25lbnRzLmNvbS9kb2NzL2FkdmFuY2VkI3JlZmVycmluZy10by1vdGhlci1jb21wb25lbnRzIGZvciBtb3JlIGRldGFpbHMuXFxuXFxuXCIsMTQ6J1RoZW1lUHJvdmlkZXI6IFwidGhlbWVcIiBwcm9wIGlzIHJlcXVpcmVkLlxcblxcbicsMTU6XCJBIHN0eWxpcyBwbHVnaW4gaGFzIGJlZW4gc3VwcGxpZWQgdGhhdCBpcyBub3QgbmFtZWQuIFdlIG5lZWQgYSBuYW1lIGZvciBlYWNoIHBsdWdpbiB0byBiZSBhYmxlIHRvIHByZXZlbnQgc3R5bGluZyBjb2xsaXNpb25zIGJldHdlZW4gZGlmZmVyZW50IHN0eWxpcyBjb25maWd1cmF0aW9ucyB3aXRoaW4gdGhlIHNhbWUgYXBwLiBCZWZvcmUgeW91IHBhc3MgeW91ciBwbHVnaW4gdG8gYDxTdHlsZVNoZWV0TWFuYWdlciBzdHlsaXNQbHVnaW5zPXtbXX0+YCwgcGxlYXNlIG1ha2Ugc3VyZSBlYWNoIHBsdWdpbiBpcyB1bmlxdWVseS1uYW1lZCwgZS5nLlxcblxcbmBgYGpzXFxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGltcG9ydGVkUGx1Z2luLCAnbmFtZScsIHsgdmFsdWU6ICdzb21lLXVuaXF1ZS1uYW1lJyB9KTtcXG5gYGBcXG5cXG5cIiwxNjpcIlJlYWNoZWQgdGhlIGxpbWl0IG9mIGhvdyBtYW55IHN0eWxlZCBjb21wb25lbnRzIG1heSBiZSBjcmVhdGVkIGF0IGdyb3VwICVzLlxcbllvdSBtYXkgb25seSBjcmVhdGUgdXAgdG8gMSwwNzMsNzQxLDgyNCBjb21wb25lbnRzLiBJZiB5b3UncmUgY3JlYXRpbmcgY29tcG9uZW50cyBkeW5hbWljYWxseSxcXG5hcyBmb3IgaW5zdGFuY2UgaW4geW91ciByZW5kZXIgbWV0aG9kIHRoZW4geW91IG1heSBiZSBydW5uaW5nIGludG8gdGhpcyBsaW1pdGF0aW9uLlxcblxcblwiLDE3OlwiQ1NTU3R5bGVTaGVldCBjb3VsZCBub3QgYmUgZm91bmQgb24gSFRNTFN0eWxlRWxlbWVudC5cXG5IYXMgc3R5bGVkLWNvbXBvbmVudHMnIHN0eWxlIHRhZyBiZWVuIHVubW91bnRlZCBvciBhbHRlcmVkIGJ5IGFub3RoZXIgc2NyaXB0P1xcblwifTp7fTtmdW5jdGlvbiBEKCl7Zm9yKHZhciBlPWFyZ3VtZW50cy5sZW5ndGg8PTA/dm9pZCAwOmFyZ3VtZW50c1swXSx0PVtdLG49MSxyPWFyZ3VtZW50cy5sZW5ndGg7bjxyO24rPTEpdC5wdXNoKG48MHx8YXJndW1lbnRzLmxlbmd0aDw9bj92b2lkIDA6YXJndW1lbnRzW25dKTtyZXR1cm4gdC5mb3JFYWNoKChmdW5jdGlvbih0KXtlPWUucmVwbGFjZSgvJVthLXpdLyx0KX0pKSxlfWZ1bmN0aW9uIGooZSl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkodD4xP3QtMTowKSxyPTE7cjx0O3IrKyluW3ItMV09YXJndW1lbnRzW3JdO3Rocm93XCJwcm9kdWN0aW9uXCI9PT1wcm9jZXNzLmVudi5OT0RFX0VOVj9uZXcgRXJyb3IoXCJBbiBlcnJvciBvY2N1cnJlZC4gU2VlIGh0dHBzOi8vZ2l0LmlvL0pVSWFFI1wiK2UrXCIgZm9yIG1vcmUgaW5mb3JtYXRpb24uXCIrKG4ubGVuZ3RoPjA/XCIgQXJnczogXCIrbi5qb2luKFwiLCBcIik6XCJcIikpOm5ldyBFcnJvcihELmFwcGx5KHZvaWQgMCxbUltlXV0uY29uY2F0KG4pKS50cmltKCkpfXZhciBUPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt0aGlzLmdyb3VwU2l6ZXM9bmV3IFVpbnQzMkFycmF5KDUxMiksdGhpcy5sZW5ndGg9NTEyLHRoaXMudGFnPWV9dmFyIHQ9ZS5wcm90b3R5cGU7cmV0dXJuIHQuaW5kZXhPZkdyb3VwPWZ1bmN0aW9uKGUpe2Zvcih2YXIgdD0wLG49MDtuPGU7bisrKXQrPXRoaXMuZ3JvdXBTaXplc1tuXTtyZXR1cm4gdH0sdC5pbnNlcnRSdWxlcz1mdW5jdGlvbihlLHQpe2lmKGU+PXRoaXMuZ3JvdXBTaXplcy5sZW5ndGgpe2Zvcih2YXIgbj10aGlzLmdyb3VwU2l6ZXMscj1uLmxlbmd0aCxvPXI7ZT49bzspKG88PD0xKTwwJiZqKDE2LFwiXCIrZSk7dGhpcy5ncm91cFNpemVzPW5ldyBVaW50MzJBcnJheShvKSx0aGlzLmdyb3VwU2l6ZXMuc2V0KG4pLHRoaXMubGVuZ3RoPW87Zm9yKHZhciBzPXI7czxvO3MrKyl0aGlzLmdyb3VwU2l6ZXNbc109MH1mb3IodmFyIGk9dGhpcy5pbmRleE9mR3JvdXAoZSsxKSxhPTAsYz10Lmxlbmd0aDthPGM7YSsrKXRoaXMudGFnLmluc2VydFJ1bGUoaSx0W2FdKSYmKHRoaXMuZ3JvdXBTaXplc1tlXSsrLGkrKyl9LHQuY2xlYXJHcm91cD1mdW5jdGlvbihlKXtpZihlPHRoaXMubGVuZ3RoKXt2YXIgdD10aGlzLmdyb3VwU2l6ZXNbZV0sbj10aGlzLmluZGV4T2ZHcm91cChlKSxyPW4rdDt0aGlzLmdyb3VwU2l6ZXNbZV09MDtmb3IodmFyIG89bjtvPHI7bysrKXRoaXMudGFnLmRlbGV0ZVJ1bGUobil9fSx0LmdldEdyb3VwPWZ1bmN0aW9uKGUpe3ZhciB0PVwiXCI7aWYoZT49dGhpcy5sZW5ndGh8fDA9PT10aGlzLmdyb3VwU2l6ZXNbZV0pcmV0dXJuIHQ7Zm9yKHZhciBuPXRoaXMuZ3JvdXBTaXplc1tlXSxyPXRoaXMuaW5kZXhPZkdyb3VwKGUpLG89cituLHM9cjtzPG87cysrKXQrPXRoaXMudGFnLmdldFJ1bGUocykrXCIvKiFzYyovXFxuXCI7cmV0dXJuIHR9LGV9KCksaz1uZXcgTWFwLHg9bmV3IE1hcCxWPTEsQj1mdW5jdGlvbihlKXtpZihrLmhhcyhlKSlyZXR1cm4gay5nZXQoZSk7Zm9yKDt4LmhhcyhWKTspVisrO3ZhciB0PVYrKztyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiYoKDB8dCk8MHx8dD4xPDwzMCkmJmooMTYsXCJcIit0KSxrLnNldChlLHQpLHguc2V0KHQsZSksdH0sTT1mdW5jdGlvbihlKXtyZXR1cm4geC5nZXQoZSl9LHo9ZnVuY3Rpb24oZSx0KXt0Pj1WJiYoVj10KzEpLGsuc2V0KGUsdCkseC5zZXQodCxlKX0sTD1cInN0eWxlW1wiK0ErJ11bZGF0YS1zdHlsZWQtdmVyc2lvbj1cIjUuMy4xXCJdJyxHPW5ldyBSZWdFeHAoXCJeXCIrQSsnXFxcXC5nKFxcXFxkKylcXFxcW2lkPVwiKFtcXFxcd1xcXFxkLV0rKVwiXFxcXF0uKj9cIihbXlwiXSopJyksRj1mdW5jdGlvbihlLHQsbil7Zm9yKHZhciByLG89bi5zcGxpdChcIixcIikscz0wLGk9by5sZW5ndGg7czxpO3MrKykocj1vW3NdKSYmZS5yZWdpc3Rlck5hbWUodCxyKX0sWT1mdW5jdGlvbihlLHQpe2Zvcih2YXIgbj0odC5pbm5lckhUTUx8fFwiXCIpLnNwbGl0KFwiLyohc2MqL1xcblwiKSxyPVtdLG89MCxzPW4ubGVuZ3RoO288cztvKyspe3ZhciBpPW5bb10udHJpbSgpO2lmKGkpe3ZhciBhPWkubWF0Y2goRyk7aWYoYSl7dmFyIGM9MHxwYXJzZUludChhWzFdLDEwKSx1PWFbMl07MCE9PWMmJih6KHUsYyksRihlLHUsYVszXSksZS5nZXRUYWcoKS5pbnNlcnRSdWxlcyhjLHIpKSxyLmxlbmd0aD0wfWVsc2Ugci5wdXNoKGkpfX19LHE9ZnVuY3Rpb24oKXtyZXR1cm5cInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ2b2lkIDAhPT13aW5kb3cuX193ZWJwYWNrX25vbmNlX18/d2luZG93Ll9fd2VicGFja19ub25jZV9fOm51bGx9LEg9ZnVuY3Rpb24oZSl7dmFyIHQ9ZG9jdW1lbnQuaGVhZCxuPWV8fHQscj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIiksbz1mdW5jdGlvbihlKXtmb3IodmFyIHQ9ZS5jaGlsZE5vZGVzLG49dC5sZW5ndGg7bj49MDtuLS0pe3ZhciByPXRbbl07aWYociYmMT09PXIubm9kZVR5cGUmJnIuaGFzQXR0cmlidXRlKEEpKXJldHVybiByfX0obikscz12b2lkIDAhPT1vP28ubmV4dFNpYmxpbmc6bnVsbDtyLnNldEF0dHJpYnV0ZShBLFwiYWN0aXZlXCIpLHIuc2V0QXR0cmlidXRlKFwiZGF0YS1zdHlsZWQtdmVyc2lvblwiLFwiNS4zLjFcIik7dmFyIGk9cSgpO3JldHVybiBpJiZyLnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsaSksbi5pbnNlcnRCZWZvcmUocixzKSxyfSwkPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlKXt2YXIgdD10aGlzLmVsZW1lbnQ9SChlKTt0LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKFwiXCIpKSx0aGlzLnNoZWV0PWZ1bmN0aW9uKGUpe2lmKGUuc2hlZXQpcmV0dXJuIGUuc2hlZXQ7Zm9yKHZhciB0PWRvY3VtZW50LnN0eWxlU2hlZXRzLG49MCxyPXQubGVuZ3RoO248cjtuKyspe3ZhciBvPXRbbl07aWYoby5vd25lck5vZGU9PT1lKXJldHVybiBvfWooMTcpfSh0KSx0aGlzLmxlbmd0aD0wfXZhciB0PWUucHJvdG90eXBlO3JldHVybiB0Lmluc2VydFJ1bGU9ZnVuY3Rpb24oZSx0KXt0cnl7cmV0dXJuIHRoaXMuc2hlZXQuaW5zZXJ0UnVsZSh0LGUpLHRoaXMubGVuZ3RoKyssITB9Y2F0Y2goZSl7cmV0dXJuITF9fSx0LmRlbGV0ZVJ1bGU9ZnVuY3Rpb24oZSl7dGhpcy5zaGVldC5kZWxldGVSdWxlKGUpLHRoaXMubGVuZ3RoLS19LHQuZ2V0UnVsZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLnNoZWV0LmNzc1J1bGVzW2VdO3JldHVybiB2b2lkIDAhPT10JiZcInN0cmluZ1wiPT10eXBlb2YgdC5jc3NUZXh0P3QuY3NzVGV4dDpcIlwifSxlfSgpLFc9ZnVuY3Rpb24oKXtmdW5jdGlvbiBlKGUpe3ZhciB0PXRoaXMuZWxlbWVudD1IKGUpO3RoaXMubm9kZXM9dC5jaGlsZE5vZGVzLHRoaXMubGVuZ3RoPTB9dmFyIHQ9ZS5wcm90b3R5cGU7cmV0dXJuIHQuaW5zZXJ0UnVsZT1mdW5jdGlvbihlLHQpe2lmKGU8PXRoaXMubGVuZ3RoJiZlPj0wKXt2YXIgbj1kb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSh0KSxyPXRoaXMubm9kZXNbZV07cmV0dXJuIHRoaXMuZWxlbWVudC5pbnNlcnRCZWZvcmUobixyfHxudWxsKSx0aGlzLmxlbmd0aCsrLCEwfXJldHVybiExfSx0LmRlbGV0ZVJ1bGU9ZnVuY3Rpb24oZSl7dGhpcy5lbGVtZW50LnJlbW92ZUNoaWxkKHRoaXMubm9kZXNbZV0pLHRoaXMubGVuZ3RoLS19LHQuZ2V0UnVsZT1mdW5jdGlvbihlKXtyZXR1cm4gZTx0aGlzLmxlbmd0aD90aGlzLm5vZGVzW2VdLnRleHRDb250ZW50OlwiXCJ9LGV9KCksVT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSl7dGhpcy5ydWxlcz1bXSx0aGlzLmxlbmd0aD0wfXZhciB0PWUucHJvdG90eXBlO3JldHVybiB0Lmluc2VydFJ1bGU9ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZTw9dGhpcy5sZW5ndGgmJih0aGlzLnJ1bGVzLnNwbGljZShlLDAsdCksdGhpcy5sZW5ndGgrKywhMCl9LHQuZGVsZXRlUnVsZT1mdW5jdGlvbihlKXt0aGlzLnJ1bGVzLnNwbGljZShlLDEpLHRoaXMubGVuZ3RoLS19LHQuZ2V0UnVsZT1mdW5jdGlvbihlKXtyZXR1cm4gZTx0aGlzLmxlbmd0aD90aGlzLnJ1bGVzW2VdOlwiXCJ9LGV9KCksSj1JLFg9e2lzU2VydmVyOiFJLHVzZUNTU09NSW5qZWN0aW9uOiFQfSxaPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQsbil7dm9pZCAwPT09ZSYmKGU9RSksdm9pZCAwPT09dCYmKHQ9e30pLHRoaXMub3B0aW9ucz12KHt9LFgse30sZSksdGhpcy5ncz10LHRoaXMubmFtZXM9bmV3IE1hcChuKSx0aGlzLnNlcnZlcj0hIWUuaXNTZXJ2ZXIsIXRoaXMuc2VydmVyJiZJJiZKJiYoSj0hMSxmdW5jdGlvbihlKXtmb3IodmFyIHQ9ZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChMKSxuPTAscj10Lmxlbmd0aDtuPHI7bisrKXt2YXIgbz10W25dO28mJlwiYWN0aXZlXCIhPT1vLmdldEF0dHJpYnV0ZShBKSYmKFkoZSxvKSxvLnBhcmVudE5vZGUmJm8ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChvKSl9fSh0aGlzKSl9ZS5yZWdpc3RlcklkPWZ1bmN0aW9uKGUpe3JldHVybiBCKGUpfTt2YXIgdD1lLnByb3RvdHlwZTtyZXR1cm4gdC5yZWNvbnN0cnVjdFdpdGhPcHRpb25zPWZ1bmN0aW9uKHQsbil7cmV0dXJuIHZvaWQgMD09PW4mJihuPSEwKSxuZXcgZSh2KHt9LHRoaXMub3B0aW9ucyx7fSx0KSx0aGlzLmdzLG4mJnRoaXMubmFtZXN8fHZvaWQgMCl9LHQuYWxsb2NhdGVHU0luc3RhbmNlPWZ1bmN0aW9uKGUpe3JldHVybiB0aGlzLmdzW2VdPSh0aGlzLmdzW2VdfHwwKSsxfSx0LmdldFRhZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRhZ3x8KHRoaXMudGFnPShuPSh0PXRoaXMub3B0aW9ucykuaXNTZXJ2ZXIscj10LnVzZUNTU09NSW5qZWN0aW9uLG89dC50YXJnZXQsZT1uP25ldyBVKG8pOnI/bmV3ICQobyk6bmV3IFcobyksbmV3IFQoZSkpKTt2YXIgZSx0LG4scixvfSx0Lmhhc05hbWVGb3JJZD1mdW5jdGlvbihlLHQpe3JldHVybiB0aGlzLm5hbWVzLmhhcyhlKSYmdGhpcy5uYW1lcy5nZXQoZSkuaGFzKHQpfSx0LnJlZ2lzdGVyTmFtZT1mdW5jdGlvbihlLHQpe2lmKEIoZSksdGhpcy5uYW1lcy5oYXMoZSkpdGhpcy5uYW1lcy5nZXQoZSkuYWRkKHQpO2Vsc2V7dmFyIG49bmV3IFNldDtuLmFkZCh0KSx0aGlzLm5hbWVzLnNldChlLG4pfX0sdC5pbnNlcnRSdWxlcz1mdW5jdGlvbihlLHQsbil7dGhpcy5yZWdpc3Rlck5hbWUoZSx0KSx0aGlzLmdldFRhZygpLmluc2VydFJ1bGVzKEIoZSksbil9LHQuY2xlYXJOYW1lcz1mdW5jdGlvbihlKXt0aGlzLm5hbWVzLmhhcyhlKSYmdGhpcy5uYW1lcy5nZXQoZSkuY2xlYXIoKX0sdC5jbGVhclJ1bGVzPWZ1bmN0aW9uKGUpe3RoaXMuZ2V0VGFnKCkuY2xlYXJHcm91cChCKGUpKSx0aGlzLmNsZWFyTmFtZXMoZSl9LHQuY2xlYXJUYWc9ZnVuY3Rpb24oKXt0aGlzLnRhZz12b2lkIDB9LHQudG9TdHJpbmc9ZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24oZSl7Zm9yKHZhciB0PWUuZ2V0VGFnKCksbj10Lmxlbmd0aCxyPVwiXCIsbz0wO288bjtvKyspe3ZhciBzPU0obyk7aWYodm9pZCAwIT09cyl7dmFyIGk9ZS5uYW1lcy5nZXQocyksYT10LmdldEdyb3VwKG8pO2lmKGkmJmEmJmkuc2l6ZSl7dmFyIGM9QStcIi5nXCIrbysnW2lkPVwiJytzKydcIl0nLHU9XCJcIjt2b2lkIDAhPT1pJiZpLmZvckVhY2goKGZ1bmN0aW9uKGUpe2UubGVuZ3RoPjAmJih1Kz1lK1wiLFwiKX0pKSxyKz1cIlwiK2ErYysne2NvbnRlbnQ6XCInK3UrJ1wifS8qIXNjKi9cXG4nfX19cmV0dXJuIHJ9KHRoaXMpfSxlfSgpLEs9LyhhKShkKS9naSxRPWZ1bmN0aW9uKGUpe3JldHVybiBTdHJpbmcuZnJvbUNoYXJDb2RlKGUrKGU+MjU/Mzk6OTcpKX07ZnVuY3Rpb24gZWUoZSl7dmFyIHQsbj1cIlwiO2Zvcih0PU1hdGguYWJzKGUpO3Q+NTI7dD10LzUyfDApbj1RKHQlNTIpK247cmV0dXJuKFEodCU1MikrbikucmVwbGFjZShLLFwiJDEtJDJcIil9dmFyIHRlPWZ1bmN0aW9uKGUsdCl7Zm9yKHZhciBuPXQubGVuZ3RoO247KWU9MzMqZV50LmNoYXJDb2RlQXQoLS1uKTtyZXR1cm4gZX0sbmU9ZnVuY3Rpb24oZSl7cmV0dXJuIHRlKDUzODEsZSl9O2Z1bmN0aW9uIHJlKGUpe2Zvcih2YXIgdD0wO3Q8ZS5sZW5ndGg7dCs9MSl7dmFyIG49ZVt0XTtpZihiKG4pJiYhTihuKSlyZXR1cm4hMX1yZXR1cm4hMH12YXIgb2U9bmUoXCI1LjMuMVwiKSxzZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0LG4pe3RoaXMucnVsZXM9ZSx0aGlzLnN0YXRpY1J1bGVzSWQ9XCJcIix0aGlzLmlzU3RhdGljPVwicHJvZHVjdGlvblwiPT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJih2b2lkIDA9PT1ufHxuLmlzU3RhdGljKSYmcmUoZSksdGhpcy5jb21wb25lbnRJZD10LHRoaXMuYmFzZUhhc2g9dGUob2UsdCksdGhpcy5iYXNlU3R5bGU9bixaLnJlZ2lzdGVySWQodCl9cmV0dXJuIGUucHJvdG90eXBlLmdlbmVyYXRlQW5kSW5qZWN0U3R5bGVzPWZ1bmN0aW9uKGUsdCxuKXt2YXIgcj10aGlzLmNvbXBvbmVudElkLG89W107aWYodGhpcy5iYXNlU3R5bGUmJm8ucHVzaCh0aGlzLmJhc2VTdHlsZS5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyhlLHQsbikpLHRoaXMuaXNTdGF0aWMmJiFuLmhhc2gpaWYodGhpcy5zdGF0aWNSdWxlc0lkJiZ0Lmhhc05hbWVGb3JJZChyLHRoaXMuc3RhdGljUnVsZXNJZCkpby5wdXNoKHRoaXMuc3RhdGljUnVsZXNJZCk7ZWxzZXt2YXIgcz1OZSh0aGlzLnJ1bGVzLGUsdCxuKS5qb2luKFwiXCIpLGk9ZWUodGUodGhpcy5iYXNlSGFzaCxzKT4+PjApO2lmKCF0Lmhhc05hbWVGb3JJZChyLGkpKXt2YXIgYT1uKHMsXCIuXCIraSx2b2lkIDAscik7dC5pbnNlcnRSdWxlcyhyLGksYSl9by5wdXNoKGkpLHRoaXMuc3RhdGljUnVsZXNJZD1pfWVsc2V7Zm9yKHZhciBjPXRoaXMucnVsZXMubGVuZ3RoLHU9dGUodGhpcy5iYXNlSGFzaCxuLmhhc2gpLGw9XCJcIixkPTA7ZDxjO2QrKyl7dmFyIGg9dGhpcy5ydWxlc1tkXTtpZihcInN0cmluZ1wiPT10eXBlb2YgaClsKz1oLFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJih1PXRlKHUsaCtkKSk7ZWxzZSBpZihoKXt2YXIgcD1OZShoLGUsdCxuKSxmPUFycmF5LmlzQXJyYXkocCk/cC5qb2luKFwiXCIpOnA7dT10ZSh1LGYrZCksbCs9Zn19aWYobCl7dmFyIG09ZWUodT4+PjApO2lmKCF0Lmhhc05hbWVGb3JJZChyLG0pKXt2YXIgeT1uKGwsXCIuXCIrbSx2b2lkIDAscik7dC5pbnNlcnRSdWxlcyhyLG0seSl9by5wdXNoKG0pfX1yZXR1cm4gby5qb2luKFwiIFwiKX0sZX0oKSxpZT0vXlxccypcXC9cXC8uKiQvZ20sYWU9W1wiOlwiLFwiW1wiLFwiLlwiLFwiI1wiXTtmdW5jdGlvbiBjZShlKXt2YXIgdCxuLHIsbyxzPXZvaWQgMD09PWU/RTplLGk9cy5vcHRpb25zLGE9dm9pZCAwPT09aT9FOmksYz1zLnBsdWdpbnMsdT12b2lkIDA9PT1jP3c6YyxsPW5ldyBwKGEpLGQ9W10saD1mdW5jdGlvbihlKXtmdW5jdGlvbiB0KHQpe2lmKHQpdHJ5e2UodCtcIn1cIil9Y2F0Y2goZSl7fX1yZXR1cm4gZnVuY3Rpb24obixyLG8scyxpLGEsYyx1LGwsZCl7c3dpdGNoKG4pe2Nhc2UgMTppZigwPT09bCYmNjQ9PT1yLmNoYXJDb2RlQXQoMCkpcmV0dXJuIGUocitcIjtcIiksXCJcIjticmVhaztjYXNlIDI6aWYoMD09PXUpcmV0dXJuIHIrXCIvKnwqL1wiO2JyZWFrO2Nhc2UgMzpzd2l0Y2godSl7Y2FzZSAxMDI6Y2FzZSAxMTI6cmV0dXJuIGUob1swXStyKSxcIlwiO2RlZmF1bHQ6cmV0dXJuIHIrKDA9PT1kP1wiLyp8Ki9cIjpcIlwiKX1jYXNlLTI6ci5zcGxpdChcIi8qfCovfVwiKS5mb3JFYWNoKHQpfX19KChmdW5jdGlvbihlKXtkLnB1c2goZSl9KSksZj1mdW5jdGlvbihlLHIscyl7cmV0dXJuIDA9PT1yJiYtMSE9PWFlLmluZGV4T2Yoc1tuLmxlbmd0aF0pfHxzLm1hdGNoKG8pP2U6XCIuXCIrdH07ZnVuY3Rpb24gbShlLHMsaSxhKXt2b2lkIDA9PT1hJiYoYT1cIiZcIik7dmFyIGM9ZS5yZXBsYWNlKGllLFwiXCIpLHU9cyYmaT9pK1wiIFwiK3MrXCIgeyBcIitjK1wiIH1cIjpjO3JldHVybiB0PWEsbj1zLHI9bmV3IFJlZ0V4cChcIlxcXFxcIituK1wiXFxcXGJcIixcImdcIiksbz1uZXcgUmVnRXhwKFwiKFxcXFxcIituK1wiXFxcXGIpezIsfVwiKSxsKGl8fCFzP1wiXCI6cyx1KX1yZXR1cm4gbC51c2UoW10uY29uY2F0KHUsW2Z1bmN0aW9uKGUsdCxvKXsyPT09ZSYmby5sZW5ndGgmJm9bMF0ubGFzdEluZGV4T2Yobik+MCYmKG9bMF09b1swXS5yZXBsYWNlKHIsZikpfSxoLGZ1bmN0aW9uKGUpe2lmKC0yPT09ZSl7dmFyIHQ9ZDtyZXR1cm4gZD1bXSx0fX1dKSksbS5oYXNoPXUubGVuZ3RoP3UucmVkdWNlKChmdW5jdGlvbihlLHQpe3JldHVybiB0Lm5hbWV8fGooMTUpLHRlKGUsdC5uYW1lKX0pLDUzODEpLnRvU3RyaW5nKCk6XCJcIixtfXZhciB1ZT1yLmNyZWF0ZUNvbnRleHQoKSxsZT11ZS5Db25zdW1lcixkZT1yLmNyZWF0ZUNvbnRleHQoKSxoZT0oZGUuQ29uc3VtZXIsbmV3IFopLHBlPWNlKCk7ZnVuY3Rpb24gZmUoKXtyZXR1cm4gcyh1ZSl8fGhlfWZ1bmN0aW9uIG1lKCl7cmV0dXJuIHMoZGUpfHxwZX1mdW5jdGlvbiB5ZShlKXt2YXIgdD1vKGUuc3R5bGlzUGx1Z2lucyksbj10WzBdLHM9dFsxXSxjPWZlKCksdT1pKChmdW5jdGlvbigpe3ZhciB0PWM7cmV0dXJuIGUuc2hlZXQ/dD1lLnNoZWV0OmUudGFyZ2V0JiYodD10LnJlY29uc3RydWN0V2l0aE9wdGlvbnMoe3RhcmdldDplLnRhcmdldH0sITEpKSxlLmRpc2FibGVDU1NPTUluamVjdGlvbiYmKHQ9dC5yZWNvbnN0cnVjdFdpdGhPcHRpb25zKHt1c2VDU1NPTUluamVjdGlvbjohMX0pKSx0fSksW2UuZGlzYWJsZUNTU09NSW5qZWN0aW9uLGUuc2hlZXQsZS50YXJnZXRdKSxsPWkoKGZ1bmN0aW9uKCl7cmV0dXJuIGNlKHtvcHRpb25zOntwcmVmaXg6IWUuZGlzYWJsZVZlbmRvclByZWZpeGVzfSxwbHVnaW5zOm59KX0pLFtlLmRpc2FibGVWZW5kb3JQcmVmaXhlcyxuXSk7cmV0dXJuIGEoKGZ1bmN0aW9uKCl7aChuLGUuc3R5bGlzUGx1Z2lucyl8fHMoZS5zdHlsaXNQbHVnaW5zKX0pLFtlLnN0eWxpc1BsdWdpbnNdKSxyLmNyZWF0ZUVsZW1lbnQodWUuUHJvdmlkZXIse3ZhbHVlOnV9LHIuY3JlYXRlRWxlbWVudChkZS5Qcm92aWRlcix7dmFsdWU6bH0sXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOVj9yLkNoaWxkcmVuLm9ubHkoZS5jaGlsZHJlbik6ZS5jaGlsZHJlbikpfXZhciB2ZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoZSx0KXt2YXIgbj10aGlzO3RoaXMuaW5qZWN0PWZ1bmN0aW9uKGUsdCl7dm9pZCAwPT09dCYmKHQ9cGUpO3ZhciByPW4ubmFtZSt0Lmhhc2g7ZS5oYXNOYW1lRm9ySWQobi5pZCxyKXx8ZS5pbnNlcnRSdWxlcyhuLmlkLHIsdChuLnJ1bGVzLHIsXCJAa2V5ZnJhbWVzXCIpKX0sdGhpcy50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiBqKDEyLFN0cmluZyhuLm5hbWUpKX0sdGhpcy5uYW1lPWUsdGhpcy5pZD1cInNjLWtleWZyYW1lcy1cIitlLHRoaXMucnVsZXM9dH1yZXR1cm4gZS5wcm90b3R5cGUuZ2V0TmFtZT1mdW5jdGlvbihlKXtyZXR1cm4gdm9pZCAwPT09ZSYmKGU9cGUpLHRoaXMubmFtZStlLmhhc2h9LGV9KCksZ2U9LyhbQS1aXSkvLFNlPS8oW0EtWl0pL2csd2U9L15tcy0vLEVlPWZ1bmN0aW9uKGUpe3JldHVyblwiLVwiK2UudG9Mb3dlckNhc2UoKX07ZnVuY3Rpb24gYmUoZSl7cmV0dXJuIGdlLnRlc3QoZSk/ZS5yZXBsYWNlKFNlLEVlKS5yZXBsYWNlKHdlLFwiLW1zLVwiKTplfXZhciBfZT1mdW5jdGlvbihlKXtyZXR1cm4gbnVsbD09ZXx8ITE9PT1lfHxcIlwiPT09ZX07ZnVuY3Rpb24gTmUoZSxuLHIsbyl7aWYoQXJyYXkuaXNBcnJheShlKSl7Zm9yKHZhciBzLGk9W10sYT0wLGM9ZS5sZW5ndGg7YTxjO2ErPTEpXCJcIiE9PShzPU5lKGVbYV0sbixyLG8pKSYmKEFycmF5LmlzQXJyYXkocyk/aS5wdXNoLmFwcGx5KGkscyk6aS5wdXNoKHMpKTtyZXR1cm4gaX1pZihfZShlKSlyZXR1cm5cIlwiO2lmKE4oZSkpcmV0dXJuXCIuXCIrZS5zdHlsZWRDb21wb25lbnRJZDtpZihiKGUpKXtpZihcImZ1bmN0aW9uXCIhPXR5cGVvZihsPWUpfHxsLnByb3RvdHlwZSYmbC5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudHx8IW4pcmV0dXJuIGU7dmFyIHU9ZShuKTtyZXR1cm5cInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZ0KHUpJiZjb25zb2xlLndhcm4oXyhlKStcIiBpcyBub3QgYSBzdHlsZWQgY29tcG9uZW50IGFuZCBjYW5ub3QgYmUgcmVmZXJyZWQgdG8gdmlhIGNvbXBvbmVudCBzZWxlY3Rvci4gU2VlIGh0dHBzOi8vd3d3LnN0eWxlZC1jb21wb25lbnRzLmNvbS9kb2NzL2FkdmFuY2VkI3JlZmVycmluZy10by1vdGhlci1jb21wb25lbnRzIGZvciBtb3JlIGRldGFpbHMuXCIpLE5lKHUsbixyLG8pfXZhciBsO3JldHVybiBlIGluc3RhbmNlb2YgdmU/cj8oZS5pbmplY3QocixvKSxlLmdldE5hbWUobykpOmU6UyhlKT9mdW5jdGlvbiBlKHQsbil7dmFyIHIsbyxzPVtdO2Zvcih2YXIgaSBpbiB0KXQuaGFzT3duUHJvcGVydHkoaSkmJiFfZSh0W2ldKSYmKEFycmF5LmlzQXJyYXkodFtpXSkmJnRbaV0uaXNDc3N8fGIodFtpXSk/cy5wdXNoKGJlKGkpK1wiOlwiLHRbaV0sXCI7XCIpOlModFtpXSk/cy5wdXNoLmFwcGx5KHMsZSh0W2ldLGkpKTpzLnB1c2goYmUoaSkrXCI6IFwiKyhyPWksbnVsbD09KG89dFtpXSl8fFwiYm9vbGVhblwiPT10eXBlb2Ygb3x8XCJcIj09PW8/XCJcIjpcIm51bWJlclwiIT10eXBlb2Ygb3x8MD09PW98fHIgaW4gZj9TdHJpbmcobykudHJpbSgpOm8rXCJweFwiKStcIjtcIikpO3JldHVybiBuP1tuK1wiIHtcIl0uY29uY2F0KHMsW1wifVwiXSk6c30oZSk6ZS50b1N0cmluZygpfXZhciBBZT1mdW5jdGlvbihlKXtyZXR1cm4gQXJyYXkuaXNBcnJheShlKSYmKGUuaXNDc3M9ITApLGV9O2Z1bmN0aW9uIENlKGUpe2Zvcih2YXIgdD1hcmd1bWVudHMubGVuZ3RoLG49bmV3IEFycmF5KHQ+MT90LTE6MCkscj0xO3I8dDtyKyspbltyLTFdPWFyZ3VtZW50c1tyXTtyZXR1cm4gYihlKXx8UyhlKT9BZShOZShnKHcsW2VdLmNvbmNhdChuKSkpKTowPT09bi5sZW5ndGgmJjE9PT1lLmxlbmd0aCYmXCJzdHJpbmdcIj09dHlwZW9mIGVbMF0/ZTpBZShOZShnKGUsbikpKX12YXIgSWU9L2ludmFsaWQgaG9vayBjYWxsL2ksUGU9bmV3IFNldCxPZT1mdW5jdGlvbihlLHQpe2lmKFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYpe3ZhciBuPVwiVGhlIGNvbXBvbmVudCBcIitlKyh0Pycgd2l0aCB0aGUgaWQgb2YgXCInK3QrJ1wiJzpcIlwiKStcIiBoYXMgYmVlbiBjcmVhdGVkIGR5bmFtaWNhbGx5LlxcbllvdSBtYXkgc2VlIHRoaXMgd2FybmluZyBiZWNhdXNlIHlvdSd2ZSBjYWxsZWQgc3R5bGVkIGluc2lkZSBhbm90aGVyIGNvbXBvbmVudC5cXG5UbyByZXNvbHZlIHRoaXMgb25seSBjcmVhdGUgbmV3IFN0eWxlZENvbXBvbmVudHMgb3V0c2lkZSBvZiBhbnkgcmVuZGVyIG1ldGhvZCBhbmQgZnVuY3Rpb24gY29tcG9uZW50LlwiLHI9Y29uc29sZS5lcnJvcjt0cnl7dmFyIG89ITA7Y29uc29sZS5lcnJvcj1mdW5jdGlvbihlKXtpZihJZS50ZXN0KGUpKW89ITEsUGUuZGVsZXRlKG4pO2Vsc2V7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgscz1uZXcgQXJyYXkodD4xP3QtMTowKSxpPTE7aTx0O2krKylzW2ktMV09YXJndW1lbnRzW2ldO3IuYXBwbHkodm9pZCAwLFtlXS5jb25jYXQocykpfX0sYygpLG8mJiFQZS5oYXMobikmJihjb25zb2xlLndhcm4obiksUGUuYWRkKG4pKX1jYXRjaChlKXtJZS50ZXN0KGUubWVzc2FnZSkmJlBlLmRlbGV0ZShuKX1maW5hbGx5e2NvbnNvbGUuZXJyb3I9cn19fSxSZT1mdW5jdGlvbihlLHQsbil7cmV0dXJuIHZvaWQgMD09PW4mJihuPUUpLGUudGhlbWUhPT1uLnRoZW1lJiZlLnRoZW1lfHx0fHxuLnRoZW1lfSxEZT0vWyFcIiMkJSYnKCkqKywuLzo7PD0+P0BbXFxcXFxcXV5ge3x9fi1dKy9nLGplPS8oXi18LSQpL2c7ZnVuY3Rpb24gVGUoZSl7cmV0dXJuIGUucmVwbGFjZShEZSxcIi1cIikucmVwbGFjZShqZSxcIlwiKX12YXIga2U9ZnVuY3Rpb24oZSl7cmV0dXJuIGVlKG5lKGUpPj4+MCl9O2Z1bmN0aW9uIHhlKGUpe3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiBlJiYoXCJwcm9kdWN0aW9uXCI9PT1wcm9jZXNzLmVudi5OT0RFX0VOVnx8ZS5jaGFyQXQoMCk9PT1lLmNoYXJBdCgwKS50b0xvd2VyQ2FzZSgpKX12YXIgVmU9ZnVuY3Rpb24oZSl7cmV0dXJuXCJmdW5jdGlvblwiPT10eXBlb2YgZXx8XCJvYmplY3RcIj09dHlwZW9mIGUmJm51bGwhPT1lJiYhQXJyYXkuaXNBcnJheShlKX0sQmU9ZnVuY3Rpb24oZSl7cmV0dXJuXCJfX3Byb3RvX19cIiE9PWUmJlwiY29uc3RydWN0b3JcIiE9PWUmJlwicHJvdG90eXBlXCIhPT1lfTtmdW5jdGlvbiBNZShlLHQsbil7dmFyIHI9ZVtuXTtWZSh0KSYmVmUocik/emUocix0KTplW25dPXR9ZnVuY3Rpb24gemUoZSl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkodD4xP3QtMTowKSxyPTE7cjx0O3IrKyluW3ItMV09YXJndW1lbnRzW3JdO2Zvcih2YXIgbz0wLHM9bjtvPHMubGVuZ3RoO28rKyl7dmFyIGk9c1tvXTtpZihWZShpKSlmb3IodmFyIGEgaW4gaSlCZShhKSYmTWUoZSxpW2FdLGEpfXJldHVybiBlfXZhciBMZT1yLmNyZWF0ZUNvbnRleHQoKSxHZT1MZS5Db25zdW1lcjtmdW5jdGlvbiBGZShlKXt2YXIgdD1zKExlKSxuPWkoKGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uKGUsdCl7aWYoIWUpcmV0dXJuIGooMTQpO2lmKGIoZSkpe3ZhciBuPWUodCk7cmV0dXJuXCJwcm9kdWN0aW9uXCI9PT1wcm9jZXNzLmVudi5OT0RFX0VOVnx8bnVsbCE9PW4mJiFBcnJheS5pc0FycmF5KG4pJiZcIm9iamVjdFwiPT10eXBlb2Ygbj9uOmooNyl9cmV0dXJuIEFycmF5LmlzQXJyYXkoZSl8fFwib2JqZWN0XCIhPXR5cGVvZiBlP2ooOCk6dD92KHt9LHQse30sZSk6ZX0oZS50aGVtZSx0KX0pLFtlLnRoZW1lLHRdKTtyZXR1cm4gZS5jaGlsZHJlbj9yLmNyZWF0ZUVsZW1lbnQoTGUuUHJvdmlkZXIse3ZhbHVlOm59LGUuY2hpbGRyZW4pOm51bGx9dmFyIFllPXt9O2Z1bmN0aW9uIHFlKGUsdCxuKXt2YXIgbz1OKGUpLGk9IXhlKGUpLGE9dC5hdHRycyxjPXZvaWQgMD09PWE/dzphLGQ9dC5jb21wb25lbnRJZCxoPXZvaWQgMD09PWQ/ZnVuY3Rpb24oZSx0KXt2YXIgbj1cInN0cmluZ1wiIT10eXBlb2YgZT9cInNjXCI6VGUoZSk7WWVbbl09KFllW25dfHwwKSsxO3ZhciByPW4rXCItXCIra2UoXCI1LjMuMVwiK24rWWVbbl0pO3JldHVybiB0P3QrXCItXCIrcjpyfSh0LmRpc3BsYXlOYW1lLHQucGFyZW50Q29tcG9uZW50SWQpOmQscD10LmRpc3BsYXlOYW1lLGY9dm9pZCAwPT09cD9mdW5jdGlvbihlKXtyZXR1cm4geGUoZSk/XCJzdHlsZWQuXCIrZTpcIlN0eWxlZChcIitfKGUpK1wiKVwifShlKTpwLGc9dC5kaXNwbGF5TmFtZSYmdC5jb21wb25lbnRJZD9UZSh0LmRpc3BsYXlOYW1lKStcIi1cIit0LmNvbXBvbmVudElkOnQuY29tcG9uZW50SWR8fGgsUz1vJiZlLmF0dHJzP0FycmF5LnByb3RvdHlwZS5jb25jYXQoZS5hdHRycyxjKS5maWx0ZXIoQm9vbGVhbik6YyxBPXQuc2hvdWxkRm9yd2FyZFByb3A7byYmZS5zaG91bGRGb3J3YXJkUHJvcCYmKEE9dC5zaG91bGRGb3J3YXJkUHJvcD9mdW5jdGlvbihuLHIsbyl7cmV0dXJuIGUuc2hvdWxkRm9yd2FyZFByb3AobixyLG8pJiZ0LnNob3VsZEZvcndhcmRQcm9wKG4scixvKX06ZS5zaG91bGRGb3J3YXJkUHJvcCk7dmFyIEMsST1uZXcgc2UobixnLG8/ZS5jb21wb25lbnRTdHlsZTp2b2lkIDApLFA9SS5pc1N0YXRpYyYmMD09PWMubGVuZ3RoLE89ZnVuY3Rpb24oZSx0KXtyZXR1cm4gZnVuY3Rpb24oZSx0LG4scil7dmFyIG89ZS5hdHRycyxpPWUuY29tcG9uZW50U3R5bGUsYT1lLmRlZmF1bHRQcm9wcyxjPWUuZm9sZGVkQ29tcG9uZW50SWRzLGQ9ZS5zaG91bGRGb3J3YXJkUHJvcCxoPWUuc3R5bGVkQ29tcG9uZW50SWQscD1lLnRhcmdldDtcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiZsKGgpO3ZhciBmPWZ1bmN0aW9uKGUsdCxuKXt2b2lkIDA9PT1lJiYoZT1FKTt2YXIgcj12KHt9LHQse3RoZW1lOmV9KSxvPXt9O3JldHVybiBuLmZvckVhY2goKGZ1bmN0aW9uKGUpe3ZhciB0LG4scyxpPWU7Zm9yKHQgaW4gYihpKSYmKGk9aShyKSksaSlyW3RdPW9bdF09XCJjbGFzc05hbWVcIj09PXQ/KG49b1t0XSxzPWlbdF0sbiYmcz9uK1wiIFwiK3M6bnx8cyk6aVt0XX0pKSxbcixvXX0oUmUodCxzKExlKSxhKXx8RSx0LG8pLHk9ZlswXSxnPWZbMV0sUz1mdW5jdGlvbihlLHQsbixyKXt2YXIgbz1mZSgpLHM9bWUoKSxpPXQ/ZS5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyhFLG8scyk6ZS5nZW5lcmF0ZUFuZEluamVjdFN0eWxlcyhuLG8scyk7cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmbChpKSxcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiYhdCYmciYmcihpKSxpfShpLHIseSxcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WP2Uud2FyblRvb01hbnlDbGFzc2VzOnZvaWQgMCksdz1uLF89Zy4kYXN8fHQuJGFzfHxnLmFzfHx0LmFzfHxwLE49eGUoXyksQT1nIT09dD92KHt9LHQse30sZyk6dCxDPXt9O2Zvcih2YXIgSSBpbiBBKVwiJFwiIT09SVswXSYmXCJhc1wiIT09SSYmKFwiZm9yd2FyZGVkQXNcIj09PUk/Qy5hcz1BW0ldOihkP2QoSSxtLF8pOiFOfHxtKEkpKSYmKENbSV09QVtJXSkpO3JldHVybiB0LnN0eWxlJiZnLnN0eWxlIT09dC5zdHlsZSYmKEMuc3R5bGU9dih7fSx0LnN0eWxlLHt9LGcuc3R5bGUpKSxDLmNsYXNzTmFtZT1BcnJheS5wcm90b3R5cGUuY29uY2F0KGMsaCxTIT09aD9TOm51bGwsdC5jbGFzc05hbWUsZy5jbGFzc05hbWUpLmZpbHRlcihCb29sZWFuKS5qb2luKFwiIFwiKSxDLnJlZj13LHUoXyxDKX0oQyxlLHQsUCl9O3JldHVybiBPLmRpc3BsYXlOYW1lPWYsKEM9ci5mb3J3YXJkUmVmKE8pKS5hdHRycz1TLEMuY29tcG9uZW50U3R5bGU9SSxDLmRpc3BsYXlOYW1lPWYsQy5zaG91bGRGb3J3YXJkUHJvcD1BLEMuZm9sZGVkQ29tcG9uZW50SWRzPW8/QXJyYXkucHJvdG90eXBlLmNvbmNhdChlLmZvbGRlZENvbXBvbmVudElkcyxlLnN0eWxlZENvbXBvbmVudElkKTp3LEMuc3R5bGVkQ29tcG9uZW50SWQ9ZyxDLnRhcmdldD1vP2UudGFyZ2V0OmUsQy53aXRoQ29tcG9uZW50PWZ1bmN0aW9uKGUpe3ZhciByPXQuY29tcG9uZW50SWQsbz1mdW5jdGlvbihlLHQpe2lmKG51bGw9PWUpcmV0dXJue307dmFyIG4scixvPXt9LHM9T2JqZWN0LmtleXMoZSk7Zm9yKHI9MDtyPHMubGVuZ3RoO3IrKyluPXNbcl0sdC5pbmRleE9mKG4pPj0wfHwob1tuXT1lW25dKTtyZXR1cm4gb30odCxbXCJjb21wb25lbnRJZFwiXSkscz1yJiZyK1wiLVwiKyh4ZShlKT9lOlRlKF8oZSkpKTtyZXR1cm4gcWUoZSx2KHt9LG8se2F0dHJzOlMsY29tcG9uZW50SWQ6c30pLG4pfSxPYmplY3QuZGVmaW5lUHJvcGVydHkoQyxcImRlZmF1bHRQcm9wc1wiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZm9sZGVkRGVmYXVsdFByb3BzfSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5fZm9sZGVkRGVmYXVsdFByb3BzPW8/emUoe30sZS5kZWZhdWx0UHJvcHMsdCk6dH19KSxcInByb2R1Y3Rpb25cIiE9PXByb2Nlc3MuZW52Lk5PREVfRU5WJiYoT2UoZixnKSxDLndhcm5Ub29NYW55Q2xhc3Nlcz1mdW5jdGlvbihlLHQpe3ZhciBuPXt9LHI9ITE7cmV0dXJuIGZ1bmN0aW9uKG8pe2lmKCFyJiYobltvXT0hMCxPYmplY3Qua2V5cyhuKS5sZW5ndGg+PTIwMCkpe3ZhciBzPXQ/JyB3aXRoIHRoZSBpZCBvZiBcIicrdCsnXCInOlwiXCI7Y29uc29sZS53YXJuKFwiT3ZlciAyMDAgY2xhc3NlcyB3ZXJlIGdlbmVyYXRlZCBmb3IgY29tcG9uZW50IFwiK2UrcytcIi5cXG5Db25zaWRlciB1c2luZyB0aGUgYXR0cnMgbWV0aG9kLCB0b2dldGhlciB3aXRoIGEgc3R5bGUgb2JqZWN0IGZvciBmcmVxdWVudGx5IGNoYW5nZWQgc3R5bGVzLlxcbkV4YW1wbGU6XFxuICBjb25zdCBDb21wb25lbnQgPSBzdHlsZWQuZGl2LmF0dHJzKHByb3BzID0+ICh7XFxuICAgIHN0eWxlOiB7XFxuICAgICAgYmFja2dyb3VuZDogcHJvcHMuYmFja2dyb3VuZCxcXG4gICAgfSxcXG4gIH0pKWB3aWR0aDogMTAwJTtgXFxuXFxuICA8Q29tcG9uZW50IC8+XCIpLHI9ITAsbj17fX19fShmLGcpKSxDLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuXCIuXCIrQy5zdHlsZWRDb21wb25lbnRJZH0saSYmeShDLGUse2F0dHJzOiEwLGNvbXBvbmVudFN0eWxlOiEwLGRpc3BsYXlOYW1lOiEwLGZvbGRlZENvbXBvbmVudElkczohMCxzaG91bGRGb3J3YXJkUHJvcDohMCxzdHlsZWRDb21wb25lbnRJZDohMCx0YXJnZXQ6ITAsd2l0aENvbXBvbmVudDohMH0pLEN9dmFyIEhlPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbiBlKHQscixvKXtpZih2b2lkIDA9PT1vJiYobz1FKSwhbihyKSlyZXR1cm4gaigxLFN0cmluZyhyKSk7dmFyIHM9ZnVuY3Rpb24oKXtyZXR1cm4gdChyLG8sQ2UuYXBwbHkodm9pZCAwLGFyZ3VtZW50cykpfTtyZXR1cm4gcy53aXRoQ29uZmlnPWZ1bmN0aW9uKG4pe3JldHVybiBlKHQscix2KHt9LG8se30sbikpfSxzLmF0dHJzPWZ1bmN0aW9uKG4pe3JldHVybiBlKHQscix2KHt9LG8se2F0dHJzOkFycmF5LnByb3RvdHlwZS5jb25jYXQoby5hdHRycyxuKS5maWx0ZXIoQm9vbGVhbil9KSl9LHN9KHFlLGUpfTtbXCJhXCIsXCJhYmJyXCIsXCJhZGRyZXNzXCIsXCJhcmVhXCIsXCJhcnRpY2xlXCIsXCJhc2lkZVwiLFwiYXVkaW9cIixcImJcIixcImJhc2VcIixcImJkaVwiLFwiYmRvXCIsXCJiaWdcIixcImJsb2NrcXVvdGVcIixcImJvZHlcIixcImJyXCIsXCJidXR0b25cIixcImNhbnZhc1wiLFwiY2FwdGlvblwiLFwiY2l0ZVwiLFwiY29kZVwiLFwiY29sXCIsXCJjb2xncm91cFwiLFwiZGF0YVwiLFwiZGF0YWxpc3RcIixcImRkXCIsXCJkZWxcIixcImRldGFpbHNcIixcImRmblwiLFwiZGlhbG9nXCIsXCJkaXZcIixcImRsXCIsXCJkdFwiLFwiZW1cIixcImVtYmVkXCIsXCJmaWVsZHNldFwiLFwiZmlnY2FwdGlvblwiLFwiZmlndXJlXCIsXCJmb290ZXJcIixcImZvcm1cIixcImgxXCIsXCJoMlwiLFwiaDNcIixcImg0XCIsXCJoNVwiLFwiaDZcIixcImhlYWRcIixcImhlYWRlclwiLFwiaGdyb3VwXCIsXCJoclwiLFwiaHRtbFwiLFwiaVwiLFwiaWZyYW1lXCIsXCJpbWdcIixcImlucHV0XCIsXCJpbnNcIixcImtiZFwiLFwia2V5Z2VuXCIsXCJsYWJlbFwiLFwibGVnZW5kXCIsXCJsaVwiLFwibGlua1wiLFwibWFpblwiLFwibWFwXCIsXCJtYXJrXCIsXCJtYXJxdWVlXCIsXCJtZW51XCIsXCJtZW51aXRlbVwiLFwibWV0YVwiLFwibWV0ZXJcIixcIm5hdlwiLFwibm9zY3JpcHRcIixcIm9iamVjdFwiLFwib2xcIixcIm9wdGdyb3VwXCIsXCJvcHRpb25cIixcIm91dHB1dFwiLFwicFwiLFwicGFyYW1cIixcInBpY3R1cmVcIixcInByZVwiLFwicHJvZ3Jlc3NcIixcInFcIixcInJwXCIsXCJydFwiLFwicnVieVwiLFwic1wiLFwic2FtcFwiLFwic2NyaXB0XCIsXCJzZWN0aW9uXCIsXCJzZWxlY3RcIixcInNtYWxsXCIsXCJzb3VyY2VcIixcInNwYW5cIixcInN0cm9uZ1wiLFwic3R5bGVcIixcInN1YlwiLFwic3VtbWFyeVwiLFwic3VwXCIsXCJ0YWJsZVwiLFwidGJvZHlcIixcInRkXCIsXCJ0ZXh0YXJlYVwiLFwidGZvb3RcIixcInRoXCIsXCJ0aGVhZFwiLFwidGltZVwiLFwidGl0bGVcIixcInRyXCIsXCJ0cmFja1wiLFwidVwiLFwidWxcIixcInZhclwiLFwidmlkZW9cIixcIndiclwiLFwiY2lyY2xlXCIsXCJjbGlwUGF0aFwiLFwiZGVmc1wiLFwiZWxsaXBzZVwiLFwiZm9yZWlnbk9iamVjdFwiLFwiZ1wiLFwiaW1hZ2VcIixcImxpbmVcIixcImxpbmVhckdyYWRpZW50XCIsXCJtYXJrZXJcIixcIm1hc2tcIixcInBhdGhcIixcInBhdHRlcm5cIixcInBvbHlnb25cIixcInBvbHlsaW5lXCIsXCJyYWRpYWxHcmFkaWVudFwiLFwicmVjdFwiLFwic3RvcFwiLFwic3ZnXCIsXCJ0ZXh0XCIsXCJ0ZXh0UGF0aFwiLFwidHNwYW5cIl0uZm9yRWFjaCgoZnVuY3Rpb24oZSl7SGVbZV09SGUoZSl9KSk7dmFyICRlPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZShlLHQpe3RoaXMucnVsZXM9ZSx0aGlzLmNvbXBvbmVudElkPXQsdGhpcy5pc1N0YXRpYz1yZShlKSxaLnJlZ2lzdGVySWQodGhpcy5jb21wb25lbnRJZCsxKX12YXIgdD1lLnByb3RvdHlwZTtyZXR1cm4gdC5jcmVhdGVTdHlsZXM9ZnVuY3Rpb24oZSx0LG4scil7dmFyIG89cihOZSh0aGlzLnJ1bGVzLHQsbixyKS5qb2luKFwiXCIpLFwiXCIpLHM9dGhpcy5jb21wb25lbnRJZCtlO24uaW5zZXJ0UnVsZXMocyxzLG8pfSx0LnJlbW92ZVN0eWxlcz1mdW5jdGlvbihlLHQpe3QuY2xlYXJSdWxlcyh0aGlzLmNvbXBvbmVudElkK2UpfSx0LnJlbmRlclN0eWxlcz1mdW5jdGlvbihlLHQsbixyKXtlPjImJloucmVnaXN0ZXJJZCh0aGlzLmNvbXBvbmVudElkK2UpLHRoaXMucmVtb3ZlU3R5bGVzKGUsbiksdGhpcy5jcmVhdGVTdHlsZXMoZSx0LG4scil9LGV9KCk7ZnVuY3Rpb24gV2UoZSl7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkodD4xP3QtMTowKSxvPTE7bzx0O28rKyluW28tMV09YXJndW1lbnRzW29dO3ZhciBpPUNlLmFwcGx5KHZvaWQgMCxbZV0uY29uY2F0KG4pKSxhPVwic2MtZ2xvYmFsLVwiK2tlKEpTT04uc3RyaW5naWZ5KGkpKSx1PW5ldyAkZShpLGEpO2Z1bmN0aW9uIGwoZSl7dmFyIHQ9ZmUoKSxuPW1lKCksbz1zKExlKSxsPWModC5hbGxvY2F0ZUdTSW5zdGFuY2UoYSkpLmN1cnJlbnQ7cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmci5DaGlsZHJlbi5jb3VudChlLmNoaWxkcmVuKSYmY29uc29sZS53YXJuKFwiVGhlIGdsb2JhbCBzdHlsZSBjb21wb25lbnQgXCIrYStcIiB3YXMgZ2l2ZW4gY2hpbGQgSlNYLiBjcmVhdGVHbG9iYWxTdHlsZSBkb2VzIG5vdCByZW5kZXIgY2hpbGRyZW4uXCIpLFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJmkuc29tZSgoZnVuY3Rpb24oZSl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIGUmJi0xIT09ZS5pbmRleE9mKFwiQGltcG9ydFwiKX0pKSYmY29uc29sZS53YXJuKFwiUGxlYXNlIGRvIG5vdCB1c2UgQGltcG9ydCBDU1Mgc3ludGF4IGluIGNyZWF0ZUdsb2JhbFN0eWxlIGF0IHRoaXMgdGltZSwgYXMgdGhlIENTU09NIEFQSXMgd2UgdXNlIGluIHByb2R1Y3Rpb24gZG8gbm90IGhhbmRsZSBpdCB3ZWxsLiBJbnN0ZWFkLCB3ZSByZWNvbW1lbmQgdXNpbmcgYSBsaWJyYXJ5IHN1Y2ggYXMgcmVhY3QtaGVsbWV0IHRvIGluamVjdCBhIHR5cGljYWwgPGxpbms+IG1ldGEgdGFnIHRvIHRoZSBzdHlsZXNoZWV0LCBvciBzaW1wbHkgZW1iZWRkaW5nIGl0IG1hbnVhbGx5IGluIHlvdXIgaW5kZXguaHRtbCA8aGVhZD4gc2VjdGlvbiBmb3IgYSBzaW1wbGVyIGFwcC5cIiksdC5zZXJ2ZXImJmgobCxlLHQsbyxuKSxkKChmdW5jdGlvbigpe2lmKCF0LnNlcnZlcilyZXR1cm4gaChsLGUsdCxvLG4pLGZ1bmN0aW9uKCl7cmV0dXJuIHUucmVtb3ZlU3R5bGVzKGwsdCl9fSksW2wsZSx0LG8sbl0pLG51bGx9ZnVuY3Rpb24gaChlLHQsbixyLG8pe2lmKHUuaXNTdGF0aWMpdS5yZW5kZXJTdHlsZXMoZSxPLG4sbyk7ZWxzZXt2YXIgcz12KHt9LHQse3RoZW1lOlJlKHQscixsLmRlZmF1bHRQcm9wcyl9KTt1LnJlbmRlclN0eWxlcyhlLHMsbixvKX19cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmT2UoYSksci5tZW1vKGwpfWZ1bmN0aW9uIFVlKGUpe1wicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBuYXZpZ2F0b3ImJlwiUmVhY3ROYXRpdmVcIj09PW5hdmlnYXRvci5wcm9kdWN0JiZjb25zb2xlLndhcm4oXCJga2V5ZnJhbWVzYCBjYW5ub3QgYmUgdXNlZCBvbiBSZWFjdE5hdGl2ZSwgb25seSBvbiB0aGUgd2ViLiBUbyBkbyBhbmltYXRpb24gaW4gUmVhY3ROYXRpdmUgcGxlYXNlIHVzZSBBbmltYXRlZC5cIik7Zm9yKHZhciB0PWFyZ3VtZW50cy5sZW5ndGgsbj1uZXcgQXJyYXkodD4xP3QtMTowKSxyPTE7cjx0O3IrKyluW3ItMV09YXJndW1lbnRzW3JdO3ZhciBvPUNlLmFwcGx5KHZvaWQgMCxbZV0uY29uY2F0KG4pKS5qb2luKFwiXCIpLHM9a2Uobyk7cmV0dXJuIG5ldyB2ZShzLG8pfXZhciBKZT1mdW5jdGlvbigpe2Z1bmN0aW9uIGUoKXt2YXIgZT10aGlzO3RoaXMuX2VtaXRTaGVldENTUz1mdW5jdGlvbigpe3ZhciB0PWUuaW5zdGFuY2UudG9TdHJpbmcoKTtpZighdClyZXR1cm5cIlwiO3ZhciBuPXEoKTtyZXR1cm5cIjxzdHlsZSBcIitbbiYmJ25vbmNlPVwiJytuKydcIicsQSsnPVwidHJ1ZVwiJywnZGF0YS1zdHlsZWQtdmVyc2lvbj1cIjUuMy4xXCInXS5maWx0ZXIoQm9vbGVhbikuam9pbihcIiBcIikrXCI+XCIrdCtcIjwvc3R5bGU+XCJ9LHRoaXMuZ2V0U3R5bGVUYWdzPWZ1bmN0aW9uKCl7cmV0dXJuIGUuc2VhbGVkP2ooMik6ZS5fZW1pdFNoZWV0Q1NTKCl9LHRoaXMuZ2V0U3R5bGVFbGVtZW50PWZ1bmN0aW9uKCl7dmFyIHQ7aWYoZS5zZWFsZWQpcmV0dXJuIGooMik7dmFyIG49KCh0PXt9KVtBXT1cIlwiLHRbXCJkYXRhLXN0eWxlZC12ZXJzaW9uXCJdPVwiNS4zLjFcIix0LmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXtfX2h0bWw6ZS5pbnN0YW5jZS50b1N0cmluZygpfSx0KSxvPXEoKTtyZXR1cm4gbyYmKG4ubm9uY2U9byksW3IuY3JlYXRlRWxlbWVudChcInN0eWxlXCIsdih7fSxuLHtrZXk6XCJzYy0wLTBcIn0pKV19LHRoaXMuc2VhbD1mdW5jdGlvbigpe2Uuc2VhbGVkPSEwfSx0aGlzLmluc3RhbmNlPW5ldyBaKHtpc1NlcnZlcjohMH0pLHRoaXMuc2VhbGVkPSExfXZhciB0PWUucHJvdG90eXBlO3JldHVybiB0LmNvbGxlY3RTdHlsZXM9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuc2VhbGVkP2ooMik6ci5jcmVhdGVFbGVtZW50KHllLHtzaGVldDp0aGlzLmluc3RhbmNlfSxlKX0sdC5pbnRlcmxlYXZlV2l0aE5vZGVTdHJlYW09ZnVuY3Rpb24oZSl7cmV0dXJuIGooMyl9LGV9KCksWGU9ZnVuY3Rpb24oZSl7dmFyIHQ9ci5mb3J3YXJkUmVmKChmdW5jdGlvbih0LG4pe3ZhciBvPXMoTGUpLGk9ZS5kZWZhdWx0UHJvcHMsYT1SZSh0LG8saSk7cmV0dXJuXCJwcm9kdWN0aW9uXCIhPT1wcm9jZXNzLmVudi5OT0RFX0VOViYmdm9pZCAwPT09YSYmY29uc29sZS53YXJuKCdbd2l0aFRoZW1lXSBZb3UgYXJlIG5vdCB1c2luZyBhIFRoZW1lUHJvdmlkZXIgbm9yIHBhc3NpbmcgYSB0aGVtZSBwcm9wIG9yIGEgdGhlbWUgaW4gZGVmYXVsdFByb3BzIGluIGNvbXBvbmVudCBjbGFzcyBcIicrXyhlKSsnXCInKSxyLmNyZWF0ZUVsZW1lbnQoZSx2KHt9LHQse3RoZW1lOmEscmVmOm59KSl9KSk7cmV0dXJuIHkodCxlKSx0LmRpc3BsYXlOYW1lPVwiV2l0aFRoZW1lKFwiK18oZSkrXCIpXCIsdH0sWmU9ZnVuY3Rpb24oKXtyZXR1cm4gcyhMZSl9LEtlPXtTdHlsZVNoZWV0OlosbWFzdGVyU2hlZXQ6aGV9O1wicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBuYXZpZ2F0b3ImJlwiUmVhY3ROYXRpdmVcIj09PW5hdmlnYXRvci5wcm9kdWN0JiZjb25zb2xlLndhcm4oXCJJdCBsb29rcyBsaWtlIHlvdSd2ZSBpbXBvcnRlZCAnc3R5bGVkLWNvbXBvbmVudHMnIG9uIFJlYWN0IE5hdGl2ZS5cXG5QZXJoYXBzIHlvdSdyZSBsb29raW5nIHRvIGltcG9ydCAnc3R5bGVkLWNvbXBvbmVudHMvbmF0aXZlJz9cXG5SZWFkIG1vcmUgYWJvdXQgdGhpcyBhdCBodHRwczovL3d3dy5zdHlsZWQtY29tcG9uZW50cy5jb20vZG9jcy9iYXNpY3MjcmVhY3QtbmF0aXZlXCIpLFwicHJvZHVjdGlvblwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJlwidGVzdFwiIT09cHJvY2Vzcy5lbnYuTk9ERV9FTlYmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJih3aW5kb3dbXCJfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfX1wiXT13aW5kb3dbXCJfX3N0eWxlZC1jb21wb25lbnRzLWluaXRfX1wiXXx8MCwxPT09d2luZG93W1wiX19zdHlsZWQtY29tcG9uZW50cy1pbml0X19cIl0mJmNvbnNvbGUud2FybihcIkl0IGxvb2tzIGxpa2UgdGhlcmUgYXJlIHNldmVyYWwgaW5zdGFuY2VzIG9mICdzdHlsZWQtY29tcG9uZW50cycgaW5pdGlhbGl6ZWQgaW4gdGhpcyBhcHBsaWNhdGlvbi4gVGhpcyBtYXkgY2F1c2UgZHluYW1pYyBzdHlsZXMgdG8gbm90IHJlbmRlciBwcm9wZXJseSwgZXJyb3JzIGR1cmluZyB0aGUgcmVoeWRyYXRpb24gcHJvY2VzcywgYSBtaXNzaW5nIHRoZW1lIHByb3AsIGFuZCBtYWtlcyB5b3VyIGFwcGxpY2F0aW9uIGJpZ2dlciB3aXRob3V0IGdvb2QgcmVhc29uLlxcblxcblNlZSBodHRwczovL3MtYy5zaC8yQkFYemVkIGZvciBtb3JlIGluZm8uXCIpLHdpbmRvd1tcIl9fc3R5bGVkLWNvbXBvbmVudHMtaW5pdF9fXCJdKz0xKTtleHBvcnQgZGVmYXVsdCBIZTtleHBvcnR7SmUgYXMgU2VydmVyU3R5bGVTaGVldCxsZSBhcyBTdHlsZVNoZWV0Q29uc3VtZXIsdWUgYXMgU3R5bGVTaGVldENvbnRleHQseWUgYXMgU3R5bGVTaGVldE1hbmFnZXIsR2UgYXMgVGhlbWVDb25zdW1lcixMZSBhcyBUaGVtZUNvbnRleHQsRmUgYXMgVGhlbWVQcm92aWRlcixLZSBhcyBfX1BSSVZBVEVfXyxXZSBhcyBjcmVhdGVHbG9iYWxTdHlsZSxDZSBhcyBjc3MsTiBhcyBpc1N0eWxlZENvbXBvbmVudCxVZSBhcyBrZXlmcmFtZXMsWmUgYXMgdXNlVGhlbWUsQyBhcyB2ZXJzaW9uLFhlIGFzIHdpdGhUaGVtZX07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zdHlsZWQtY29tcG9uZW50cy5icm93c2VyLmVzbS5qcy5tYXBcbiIsImltcG9ydCBTY2hlbWEgZnJvbSAnY29tbW9uL1NjaGVtYSc7XG5cbmltcG9ydCBQb3N0IGZyb20gJ2FwaS9zdG9yZS9Qb3N0JztcbmltcG9ydCBUaHJlYWQgZnJvbSAnYXBpL3N0b3JlL1RocmVhZCc7XG5cbmV4cG9ydCB0eXBlIEZyb21UeXBlID0gJ0NoJyB8ICdCYWNrVG9Sb290Q2gnIHwgJ1RvTWVkaWEnIHwgJ0xpbmtzJyB8ICdmaW5kTWVkaWFDaCcgfCAnJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBwIGV4dGVuZHMgU2NoZW1hIHtcbiAgc3RhdGljIGdldCBkZWZhdWx0T2Zmc2V0RmluZElkKCkge1xuICAgIHJldHVybiBQb3N0LmRlZmF1bHRGaW5kSWQ7XG4gIH1cbiAgc3RhdGljIGdldCBkaXNwVGhyZWFkVHlwZVRpbWVsaW5lKCk6ICdUaW1lbGluZScge1xuICAgIHJldHVybiAnVGltZWxpbmUnO1xuICB9XG4gIHN0YXRpYyBnZXQgZGlzcFRocmVhZFR5cGVTaW5nbGUoKTogJ1NpbmdsZScge1xuICAgIHJldHVybiAnU2luZ2xlJztcbiAgfVxuICBzdGF0aWMgZ2V0IGRpc3BUaHJlYWRUeXBlTXVsdGkoKTogJ011bHRpJyB7XG4gICAgcmV0dXJuICdNdWx0aSc7XG4gIH1cbiAgc3RhdGljIGdldCBkaXNwVGhyZWFkVHlwZUNoaWxkKCk6ICdDaGlsZCcge1xuICAgIHJldHVybiAnQ2hpbGQnO1xuICB9XG4gIHN0YXRpYyBnZXQgZGlzcFRocmVhZFR5cGVMb2dzKCk6ICdMb2dzJyB7XG4gICAgcmV0dXJuICdMb2dzJztcbiAgfVxuICBzdGF0aWMgZ2V0IG1lZGlhVGFnVHlwZU5vKCkge1xuICAgIHJldHVybiAnaHRtbCc7XG4gIH1cbiAgc3RhdGljIGdldCBtZWRpYVRhZ1R5cGVBdWRpbygpIHtcbiAgICByZXR1cm4gJ2F1ZGlvJztcbiAgfVxuICBzdGF0aWMgZ2V0IG1lZGlhVGFnVHlwZVZpZGVvKCkge1xuICAgIHJldHVybiAndmlkZW8nO1xuICB9XG4gIHN0YXRpYyBnZXQgbWVkaWFUeXBlTXAzKCkge1xuICAgIHJldHVybiAnbXAzJztcbiAgfVxuICBzdGF0aWMgZ2V0IG1lZGlhVHlwZU1wNCgpIHtcbiAgICByZXR1cm4gJ21wNCc7XG4gIH1cbiAgc3RhdGljIGdldCBtZWRpYVR5cGVNNGEoKSB7XG4gICAgcmV0dXJuICdtNGEnO1xuICB9XG4gIHN0YXRpYyBnZXQgbWVkaWFDaHMoKSB7XG4gICAgcmV0dXJuIFtBcHAubWVkaWFUeXBlTXAzLCBBcHAubWVkaWFUeXBlTXA0LCBBcHAubWVkaWFUeXBlTTRhXTtcbiAgfVxuICBzdGF0aWMgZ2V0IG1lZGlhQ2hUYWdUeXBlcygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgW0FwcC5tZWRpYVR5cGVNcDNdOiBBcHAubWVkaWFUYWdUeXBlQXVkaW8sXG4gICAgICBbQXBwLm1lZGlhVHlwZU1wNF06IEFwcC5tZWRpYVRhZ1R5cGVWaWRlbyxcbiAgICAgIFtBcHAubWVkaWFUeXBlTTRhXTogQXBwLm1lZGlhVGFnVHlwZUF1ZGlvLFxuICAgIH07XG4gIH1cbiAgc3RhdGljIGdldE1lZGlhVHlwZShzcmMsIHBhcmFtcykge1xuICAgIGlmIChwYXJhbXMgJiYgcGFyYW1zLmNoVHlwZSkge1xuICAgICAgcmV0dXJuIHBhcmFtcy5jaFR5cGU7XG4gICAgfVxuICAgIHJldHVybiBBcHAuZ2V0TWVkaWFUeXBlRnJvbVNyYyhzcmMpO1xuICB9XG4gIHN0YXRpYyBnZXRNZWRpYVR5cGVGcm9tU3JjKHNyYykge1xuICAgIGNvbnN0IG1lZGlhQ2hUYWdUeXBlS2V5cyA9IE9iamVjdC5rZXlzKEFwcC5tZWRpYUNoVGFnVHlwZXMpO1xuICAgIGNvbnN0IG1lZGlhQ2hUYWdUeXBlTGVuZ3RoID0gbWVkaWFDaFRhZ1R5cGVLZXlzLmxlbmd0aDtcbiAgICBsZXQgbWVkaWFUeXBlID0gJ2h0bWwnO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbWVkaWFDaFRhZ1R5cGVMZW5ndGg7IGkrKykge1xuICAgICAgY29uc3QgcmVnRXhwID0gbmV3IFJlZ0V4cChgLiR7bWVkaWFDaFRhZ1R5cGVLZXlzW2ldfSRgKTtcbiAgICAgIGlmIChzcmMubWF0Y2gocmVnRXhwKSkge1xuICAgICAgICBtZWRpYVR5cGUgPSBBcHAubWVkaWFDaFRhZ1R5cGVzW21lZGlhQ2hUYWdUeXBlS2V5c1tpXV07XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbWVkaWFUeXBlO1xuICB9XG4gIHN0YXRpYyB2YWxpZElucHV0UG9zdCh2YWx1ZSkge1xuICAgIGlmICgvXFxyXFxuJHxcXG4kfFxcciQvZ2ltLnRlc3QodmFsdWUpKSByZXR1cm4gJ0xBU1QgVFlQRSBCUkVBSyBMSU5FLic7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3RhdGljIHZhbGlkUG9zdCh2YWx1ZSkge1xuICAgIGlmICh2YWx1ZSA9PT0gJycpIHJldHVybiAnTk8gSU5QVVQgUE9TVCc7XG4gICAgaWYgKC9eXFxyXFxuKyR8XFxuKyR8XFxyKyQvZy50ZXN0KHZhbHVlKSkgcmV0dXJuICdPTkxZIE5FVyBMSU5FJztcbiAgICBpZiAoL15cXHMrJC9nLnRlc3QodmFsdWUpKSByZXR1cm4gJ29ubHkgc3BhY2UnO1xuICAgIGlmICgvXlxcclxcbisoXFxzfFxcUykrJHxeXFxuKyhcXHN8XFxTKSskfF5cXHIrKFxcc3xcXFMpKyQvLnRlc3QodmFsdWUpKSByZXR1cm4gJ0VNUFRZIFBPU1QnO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRXaWR0aChwYXJhbXMpIHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcgJiYgd2luZG93LmlubmVyV2lkdGgpIHJldHVybiB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgICBpZiAocGFyYW1zLndpZHRoKSB7XG4gICAgICBpZiAodHlwZW9mIHBhcmFtcy53aWR0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHBhcmFtcy53aWR0aC5pbmRleE9mKCdweCcpID49IDApIHtcbiAgICAgICAgICByZXR1cm4gTnVtYmVyKHBhcmFtcy53aWR0aC5yZXBsYWNlKCdweCcsICcnKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBwYXJhbXMud2lkdGg7XG4gICAgfVxuICAgIHJldHVybiAwO1xuICB9XG5cbiAgc3RhdGljIGdldEhlaWdodChwYXJhbXMgPSB7fSkge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JyAmJiB3aW5kb3cuaW5uZXJIZWlnaHQpIHJldHVybiB3aW5kb3cuaW5uZXJIZWlnaHQ7XG4gICAgcmV0dXJuIDA7XG4gIH1cblxuICBpZDogc3RyaW5nO1xuXG4gIC8vIOOCueODrOODg+ODieWfuuacrOmWoumAo1xuICBpc1Jvb3RDaDogYm9vbGVhbjtcbiAgaXNMaW5rQ2g6IGJvb2xlYW47XG4gIGlzTWVkaWFDaDogYm9vbGVhbjtcbiAgcm9vdENoOiBzdHJpbmc7XG4gIHJvb3RUaXRsZTogc3RyaW5nO1xuICBjaFR5cGU6ICd2aWRlbycgfCAnYXVkaW8nIHwgJ2h0bWwnO1xuICBkaXNwVGhyZWFkVHlwZTogJ011bHRpJyB8ICdTaW5nbGUnIHwgJ0NoaWxkJyB8ICdUaW1lbGluZScgfCAnTG9ncyc7XG4gIHR1bmVkOiBzdHJpbmc7XG4gIG11bHRpc3RyZWFtOiBib29sZWFuO1xuXG4gIC8vIOaKleeov+aDheWgsVxuICBmaW5kVHlwZTogJ2h0bWwnIHwgJ21wMycgfCAnbXA0JyB8ICdtNGEnIHwgJ2F1ZGlvJyB8ICd2aWRlbyc7XG4gIG9mZnNldEZpbmRJZDogc3RyaW5nO1xuICBvZmZzZXRUaW1lbGluZUZpbmRJZDogc3RyaW5nID0gUG9zdC5kZWZhdWx0RmluZElkO1xuICBvZmZzZXRTaW5nbGVGaW5kSWQ6IHN0cmluZyA9IFBvc3QuZGVmYXVsdEZpbmRJZDtcbiAgb2Zmc2V0TXVsdGlGaW5kSWQ6IHN0cmluZyA9IFBvc3QuZGVmYXVsdEZpbmRJZDtcbiAgb2Zmc2V0Q2hpbGRGaW5kSWQ6IHN0cmluZyA9IFBvc3QuZGVmYXVsdEZpbmRJZDtcbiAgb2Zmc2V0TG9nc0ZpbmRJZDogc3RyaW5nID0gUG9zdC5kZWZhdWx0RmluZElkO1xuXG4gIC8vIOWFpeWKm+eKtuaFi1xuICBpbnB1dFBvc3Q6IHN0cmluZztcbiAgaW5wdXRTdGFtcElkOiBzdHJpbmcgfCBudW1iZXI7XG4gIGlucHV0Q3VycmVudFRpbWU6IG51bWJlcjtcbiAgaW5wdXRTZWFyY2g6IHN0cmluZztcblxuICAvLyDjgZ3jga7ku5ZcbiAgaXNUb2dnbGVNdWx0aXN0cmVhbTogYm9vbGVhbjtcbiAgaXNSYW5rRGV0YWlsTW9kZTogYm9vbGVhbjtcbiAgYWN0aW9uZWQ6IHN0cmluZztcbiAgZGVidWc6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihwYXJhbXM6IGFueSA9IHt9LCBjYWxsID0gJycpIHtcbiAgICBzdXBlcigpO1xuXG4gICAgLy8g5rqW5YKZXG4gICAgY29uc3QgY2ggPSBwYXJhbXMuY2ggPyBwYXJhbXMuY2ggOiAnLyc7XG5cbiAgICAvLyBJRFxuICAgIGNvbnN0IGlkID0gcGFyYW1zLmlkID8gcGFyYW1zLmlkIDogJyc7XG5cbiAgICAvLyDjgrnjg6zjg4Pjg4nln7rmnKzplqLpgKNcbiAgICBjb25zdCBpc01lZGlhQ2ggPSBTY2hlbWEuaXNTZXQocGFyYW1zLmlzTWVkaWFDaCkgPyBwYXJhbXMuaXNNZWRpYUNoIDogQXBwLmdldElzTWVkaWFDaChjaCk7XG4gICAgY29uc3QgaXNMaW5rQ2ggPSBTY2hlbWEuaXNTZXQocGFyYW1zLmlzTGlua0NoKSA/IHBhcmFtcy5pc0xpbmtDaCA6IGZhbHNlO1xuICAgIGNvbnN0IHJvb3RDaCA9IHBhcmFtcy5yb290Q2ggPyBwYXJhbXMucm9vdENoIDogY2g7XG4gICAgY29uc3QgaXNSb290Q2ggPSBTY2hlbWEuaXNTZXQocGFyYW1zLmlzUm9vdENoKSA/IHBhcmFtcy5pc1Jvb3RDaCA6IHJvb3RDaCA9PT0gY2g7XG4gICAgY29uc3Qgcm9vdFRpdGxlID0gcGFyYW1zLnJvb3RUaXRsZSA/IHBhcmFtcy5yb290VGl0bGUgOiAndGFsa24nO1xuICAgIGNvbnN0IHNyYyA9IEFwcC5nZXRNZWRpYVNyYyhwYXJhbXMucHJvdG9jb2wsIGNoKTtcbiAgICBjb25zdCBjaFR5cGUgPSBBcHAuZ2V0TWVkaWFUeXBlKHNyYywgcGFyYW1zKTtcbiAgICBjb25zdCB0dW5lZCA9IHBhcmFtcyAmJiBwYXJhbXMudHVuZWQgPyBwYXJhbXMudHVuZWQgOiAnJztcbiAgICBjb25zdCBkaXNwVGhyZWFkVHlwZSA9IEFwcC5nZXREaXNwVGhyZWFkVHlwZShwYXJhbXMsIGlzTWVkaWFDaCk7XG4gICAgY29uc3QgbXVsdGlzdHJlYW0gPSBTY2hlbWEuaXNTZXQocGFyYW1zLm11bHRpc3RyZWFtKSA/IHBhcmFtcy5tdWx0aXN0cmVhbSA6IHRydWU7XG5cbiAgICAvLyDmipXnqL/mg4XloLFcbiAgICBjb25zdCBmaW5kVHlwZSA9IHBhcmFtcyAmJiBwYXJhbXMuZmluZFR5cGUgPyBwYXJhbXMuZmluZFR5cGUgOiBUaHJlYWQuZmluZFR5cGVBbGw7XG4gICAgY29uc3Qgb2Zmc2V0RmluZElkID0gcGFyYW1zICYmIHBhcmFtcy5vZmZzZXRGaW5kSWQgPyBwYXJhbXMub2Zmc2V0RmluZElkIDogQXBwLmRlZmF1bHRPZmZzZXRGaW5kSWQ7XG4gICAgY29uc3Qgb2Zmc2V0VGltZWxpbmVGaW5kSWQgPSBwYXJhbXMgJiYgcGFyYW1zLm9mZnNldFRpbWVsaW5lRmluZElkID8gcGFyYW1zLm9mZnNldFRpbWVsaW5lRmluZElkIDogQXBwLmRlZmF1bHRPZmZzZXRGaW5kSWQ7XG4gICAgY29uc3Qgb2Zmc2V0U2luZ2xlRmluZElkID0gcGFyYW1zICYmIHBhcmFtcy5vZmZzZXRTaW5nbGVGaW5kSWQgPyBwYXJhbXMub2Zmc2V0U2luZ2xlRmluZElkIDogQXBwLmRlZmF1bHRPZmZzZXRGaW5kSWQ7XG4gICAgY29uc3Qgb2Zmc2V0TXVsdGlGaW5kSWQgPSBwYXJhbXMgJiYgcGFyYW1zLm9mZnNldE11bHRpRmluZElkID8gcGFyYW1zLm9mZnNldE11bHRpRmluZElkIDogQXBwLmRlZmF1bHRPZmZzZXRGaW5kSWQ7XG4gICAgY29uc3Qgb2Zmc2V0Q2hpbGRGaW5kSWQgPSBwYXJhbXMgJiYgcGFyYW1zLm9mZnNldENoaWxkRmluZElkID8gcGFyYW1zLm9mZnNldENoaWxkRmluZElkIDogQXBwLmRlZmF1bHRPZmZzZXRGaW5kSWQ7XG4gICAgY29uc3Qgb2Zmc2V0TG9nc0ZpbmRJZCA9IHBhcmFtcyAmJiBwYXJhbXMub2Zmc2V0TG9nc0ZpbmRJZCA/IHBhcmFtcy5vZmZzZXRMb2dzRmluZElkIDogQXBwLmRlZmF1bHRPZmZzZXRGaW5kSWQ7XG5cbiAgICAvLyDlhaXlipvnirbmhYtcbiAgICBjb25zdCBpbnB1dFBvc3QgPSBwYXJhbXMuaW5wdXRQb3N0ID8gcGFyYW1zLmlucHV0UG9zdCA6ICcnO1xuICAgIGNvbnN0IGlucHV0U3RhbXBJZCA9IHBhcmFtcy5pbnB1dFN0YW1wSWQgPyBwYXJhbXMuaW5wdXRTdGFtcElkIDogZmFsc2U7XG4gICAgY29uc3QgaW5wdXRDdXJyZW50VGltZSA9IHBhcmFtcy5pbnB1dEN1cnJlbnRUaW1lID8gcGFyYW1zLmlucHV0Q3VycmVudFRpbWUgOiAwLjA7XG4gICAgY29uc3QgaW5wdXRTZWFyY2ggPSBwYXJhbXMuaW5wdXRTZWFyY2ggPyBwYXJhbXMuaW5wdXRTZWFyY2ggOiAnJztcblxuICAgIC8vIOOBneOBruS7llxuICAgIGNvbnN0IGlzVG9nZ2xlTXVsdGlzdHJlYW0gPSBTY2hlbWEuaXNTZXQocGFyYW1zLmlzVG9nZ2xlTXVsdGlzdHJlYW0pID8gcGFyYW1zLmlzVG9nZ2xlTXVsdGlzdHJlYW0gOiBmYWxzZTtcbiAgICBjb25zdCBpc1JhbmtEZXRhaWxNb2RlID0gU2NoZW1hLmlzU2V0KHBhcmFtcy5pc1JhbmtEZXRhaWxNb2RlKSA/IHBhcmFtcy5pc1JhbmtEZXRhaWxNb2RlIDogZmFsc2U7XG4gICAgY29uc3QgYWN0aW9uZWQgPSBwYXJhbXMgJiYgcGFyYW1zLmFjdGlvbmVkID8gcGFyYW1zLmFjdGlvbmVkIDogJyc7XG4gICAgY29uc3QgZGVidWcgPSBTY2hlbWEuaXNTZXQocGFyYW1zLmRlYnVnKSA/IHBhcmFtcy5kZWJ1ZyA6ICcnO1xuICAgIHJldHVybiB0aGlzLmNyZWF0ZSh7XG4gICAgICAvLyBJRFxuICAgICAgaWQsXG5cbiAgICAgIC8vIOOCueODrOODg+ODieWfuuacrOmWoumAo1xuICAgICAgaXNSb290Q2gsXG4gICAgICBpc0xpbmtDaCxcbiAgICAgIGlzTWVkaWFDaCxcbiAgICAgIHJvb3RDaCxcbiAgICAgIHJvb3RUaXRsZSxcbiAgICAgIGNoVHlwZSxcbiAgICAgIGRpc3BUaHJlYWRUeXBlLFxuICAgICAgdHVuZWQsXG4gICAgICBtdWx0aXN0cmVhbSwgLy8gZGlzcFRocmVhZFR5cGXjgYxDaGlsZCwgVGltZWxpbmXjgavjgarjgaPjgabjgoJtdWx0aXN0cmVhbeeKtuaFi+OCkue2reaMgeOBmeOCi1xuXG4gICAgICAvLyAgICAgIHRocmVhZFNjcm9sbFksXG5cbiAgICAgIC8vIOaKleeov+aDheWgsVxuICAgICAgZmluZFR5cGUsXG4gICAgICBvZmZzZXRGaW5kSWQsXG4gICAgICBvZmZzZXRUaW1lbGluZUZpbmRJZCxcbiAgICAgIG9mZnNldFNpbmdsZUZpbmRJZCxcbiAgICAgIG9mZnNldE11bHRpRmluZElkLFxuICAgICAgb2Zmc2V0Q2hpbGRGaW5kSWQsXG4gICAgICBvZmZzZXRMb2dzRmluZElkLFxuXG4gICAgICAvLyBkZXRhaWzmg4XloLFcblxuICAgICAgLy8g5YWl5Yqb54q25oWLXG4gICAgICBpbnB1dFBvc3QsXG4gICAgICBpbnB1dFN0YW1wSWQsXG4gICAgICBpbnB1dEN1cnJlbnRUaW1lLFxuICAgICAgaW5wdXRTZWFyY2gsXG5cbiAgICAgIC8vIOOBneOBruS7llxuICAgICAgaXNUb2dnbGVNdWx0aXN0cmVhbSxcbiAgICAgIGlzUmFua0RldGFpbE1vZGUsXG4gICAgICBhY3Rpb25lZCxcbiAgICAgIGRlYnVnLFxuICAgIH0pO1xuICB9XG5cbiAgc3RhdGljIGlzTWVkaWFDb250ZW50VHlwZShjb250ZW50VHlwZSkge1xuICAgIHJldHVybiBBcHAuaXNBdWRpb0NvbnRlbnRUeXBlKGNvbnRlbnRUeXBlKSB8fCBBcHAuaXNWaWRlb0NvbnRlbnRUeXBlKGNvbnRlbnRUeXBlKTtcbiAgfVxuXG4gIHN0YXRpYyBpc0F1ZGlvQ29udGVudFR5cGUoY29udGVudFR5cGUpIHtcbiAgICByZXR1cm4gY29udGVudFR5cGUuaW5kZXhPZihBcHAubWVkaWFUYWdUeXBlQXVkaW8pID49IDA7XG4gIH1cblxuICBzdGF0aWMgaXNWaWRlb0NvbnRlbnRUeXBlKGNvbnRlbnRUeXBlKSB7XG4gICAgcmV0dXJuIGNvbnRlbnRUeXBlLmluZGV4T2YoQXBwLm1lZGlhVGFnVHlwZVZpZGVvKSA+PSAwO1xuICB9XG5cbiAgc3RhdGljIGdldE1lZGlhU3JjKHByb3RvY29sLCBjaCkge1xuICAgIHJldHVybiBwcm90b2NvbCArICcvJyArIGNoLnJlcGxhY2UoL1xcLyQvLCAnJyk7XG4gIH1cblxuICBzdGF0aWMgZ2V0SXNNZWRpYUNoKGNoKSB7XG4gICAgcmV0dXJuIEFwcC5tZWRpYUNocy5zb21lKChleHQpID0+IHtcbiAgICAgIGNvbnN0IHJlZ2V4cCA9IG5ldyBSZWdFeHAoYC4ke2V4dH1cXC8kfC4ke2V4dH0kYCk7XG4gICAgICByZXR1cm4gY2gubWF0Y2gocmVnZXhwKTtcbiAgICB9KTtcbiAgfVxuXG4gIHN0YXRpYyBnZXREaXNwVGhyZWFkVHlwZShwYXJhbXMsIGlzTWVkaWFDaCkge1xuICAgIGlmIChwYXJhbXMgJiYgcGFyYW1zLmRpc3BUaHJlYWRUeXBlKSB7XG4gICAgICByZXR1cm4gcGFyYW1zLmRpc3BUaHJlYWRUeXBlO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoaXNNZWRpYUNoKSB7XG4gICAgICAgIHJldHVybiBBcHAuZGlzcFRocmVhZFR5cGVUaW1lbGluZTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBBcHAuZGlzcFRocmVhZFR5cGVNdWx0aTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBzdGF0aWMgZ2V0T2Zmc2V0RmluZElkKHsgcG9zdHMgfSkge1xuICAgIGlmIChwb3N0cyAmJiBwb3N0c1swXSAmJiBwb3N0c1swXS5faWQpIHtcbiAgICAgIHJldHVybiBwb3N0c1swXS5faWQ7XG4gICAgfVxuICAgIHJldHVybiBQb3N0LmRlZmF1bHRGaW5kSWQ7XG4gIH1cblxuICBzdGF0aWMgZ2V0U3RlcFRvRGlzcFRocmVhZFR5cGUoeyBhcHAsIHJhbmtzIH06IGFueSwgdGhyZWFkU3RhdHVzOiBhbnksIHRvQ2g6IHN0cmluZywgY2xpY2tlZDogRnJvbVR5cGUgPSAnJykge1xuICAgIGxldCBhZnRlckRpc3BUaHJlYWRUeXBlID0gJyc7XG4gICAgY29uc3QgYmVmb3JlRGlzcFRocmVhZFR5cGUgPSBhcHAgJiYgYXBwLmRpc3BUaHJlYWRUeXBlID8gYXBwLmRpc3BUaHJlYWRUeXBlIDogQXBwLmRpc3BUaHJlYWRUeXBlTXVsdGk7XG4gICAgYXBwID0gQXBwLmdldFN0ZXBEaXNwVGhyZWFkVHlwZSh7IGFwcCwgcmFua3MgfSwgdGhyZWFkU3RhdHVzLCB0b0NoLCBjbGlja2VkKTtcbiAgICBhZnRlckRpc3BUaHJlYWRUeXBlID0gYXBwLmRpc3BUaHJlYWRUeXBlO1xuICAgIHJldHVybiB7IGFwcCwgc3RlcFRvOiBgJHtiZWZvcmVEaXNwVGhyZWFkVHlwZX0gdG8gJHthZnRlckRpc3BUaHJlYWRUeXBlfWAgfTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRTdGVwRGlzcFRocmVhZFR5cGUoeyBhcHAsIHJhbmtzIH0sIHRocmVhZFN0YXR1czogYW55ID0ge30sIHRvQ2gsIGNsaWNrZWQpIHtcbiAgICBjb25zdCBsb2cgPSBmYWxzZTtcbiAgICBjb25zdCB1cGRhdGVkQXBwID0gYXBwID8gYXBwIDoge307XG4gICAgdXBkYXRlZEFwcC5vZmZzZXRGaW5kSWQgPSBBcHAuZGVmYXVsdE9mZnNldEZpbmRJZDtcblxuICAgIGlmIChsb2cpIGNvbnNvbGUubG9nKHJhbmtzKTtcbiAgICBpZiAobG9nKSBjb25zb2xlLmxvZyh0aHJlYWRTdGF0dXMpO1xuXG4gICAgaWYgKHRocmVhZFN0YXR1cy5pc01lZGlhQ2gpIHtcbiAgICAgIGlmIChsb2cpIGNvbnNvbGUubG9nKCdCJyk7XG4gICAgICB1cGRhdGVkQXBwLmRpc3BUaHJlYWRUeXBlID0gQXBwLmRpc3BUaHJlYWRUeXBlVGltZWxpbmU7XG4gICAgICB1cGRhdGVkQXBwLm9mZnNldEZpbmRJZCA9IHVwZGF0ZWRBcHAub2Zmc2V0VGltZWxpbmVGaW5kSWQgPyB1cGRhdGVkQXBwLm9mZnNldFRpbWVsaW5lRmluZElkIDogQXBwLmRlZmF1bHRPZmZzZXRGaW5kSWQ7XG4gICAgICB1cGRhdGVkQXBwLmlzTGlua0NoID0gY2xpY2tlZCA9PT0gJ0xpbmtzJyB8fCBjbGlja2VkID09PSAnZmluZE1lZGlhQ2gnIHx8IGNsaWNrZWQgPT09ICdUb01lZGlhJyA/IHRydWUgOiBmYWxzZTtcbiAgICAgIHVwZGF0ZWRBcHAuaXNNZWRpYUNoID0gdHJ1ZTtcbiAgICAgIHJldHVybiB1cGRhdGVkQXBwO1xuICAgIH1cblxuICAgIGlmIChjbGlja2VkID09PSAnQmFja1RvUm9vdENoJykge1xuICAgICAgdXBkYXRlZEFwcC5pc0xpbmtDaCA9IGZhbHNlO1xuICAgIH1cblxuICAgIGlmIChjbGlja2VkID09PSAnTGlua3MnICYmIHJhbmtzLmxlbmd0aCA+IDApIHtcbiAgICAgIGNvbnN0IGhhdmVNZW51SW5kZXggPSByYW5rcy5zb21lKChtaSkgPT4ge1xuICAgICAgICByZXR1cm4gbWkuY2ggPT09IHRvQ2ggfHwgbWkuY2ggPT09IHRvQ2ggKyAnLyc7XG4gICAgICB9KTtcblxuICAgICAgaWYgKGxvZykgY29uc29sZS5sb2coJ0MgJyArIGhhdmVNZW51SW5kZXggKyAnJyk7XG5cbiAgICAgIGlmICghaGF2ZU1lbnVJbmRleCkge1xuICAgICAgICBpZiAobG9nKSBjb25zb2xlLmxvZygnRCcpO1xuXG4gICAgICAgIHVwZGF0ZWRBcHAub2Zmc2V0RmluZElkID0gQXBwLmRlZmF1bHRPZmZzZXRGaW5kSWQ7XG4gICAgICAgIHVwZGF0ZWRBcHAuZGlzcFRocmVhZFR5cGUgPSBBcHAuZGlzcFRocmVhZFR5cGVDaGlsZDtcbiAgICAgICAgdXBkYXRlZEFwcC5pc0xpbmtDaCA9IHRydWU7XG4gICAgICAgIHJldHVybiB1cGRhdGVkQXBwO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh1cGRhdGVkQXBwLnJvb3RDaCA9PT0gdG9DaCkge1xuICAgICAgaWYgKHVwZGF0ZWRBcHAubXVsdGlzdHJlYW0pIHtcbiAgICAgICAgaWYgKGxvZykgY29uc29sZS5sb2coJ0UnKTtcbiAgICAgICAgdXBkYXRlZEFwcC5kaXNwVGhyZWFkVHlwZSA9IEFwcC5kaXNwVGhyZWFkVHlwZU11bHRpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKGxvZykgY29uc29sZS5sb2coJ0YnKTtcbiAgICAgICAgdXBkYXRlZEFwcC5kaXNwVGhyZWFkVHlwZSA9IEFwcC5kaXNwVGhyZWFkVHlwZVNpbmdsZTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgaWYgKGxvZykgY29uc29sZS5sb2coJ0cnKTtcbiAgICAgIHVwZGF0ZWRBcHAuZGlzcFRocmVhZFR5cGUgPSBBcHAuZGlzcFRocmVhZFR5cGVDaGlsZDtcbiAgICB9XG4gICAgaWYgKGxvZykgY29uc29sZS5sb2coYXBwKTtcbiAgICByZXR1cm4gdXBkYXRlZEFwcDtcbiAgfVxufVxuIiwiaW1wb3J0IFNjaGVtYSBmcm9tICdjb21tb24vU2NoZW1hJztcbmltcG9ydCBjb25mIGZyb20gJ2NvbW1vbi9jb25mJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9zdCBleHRlbmRzIFNjaGVtYSB7XG4gIHN0YXRpYyBnZXQgZGVmYXVsdEZpbmRJZCgpIHtcbiAgICByZXR1cm4gJzAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMCc7XG4gIH1cbiAgc3RhdGljIGdldCBkZWZhdWx0VmFsdWVzKCkge1xuICAgIHJldHVybiB7XG4gICAgICBjaDogJy8nLFxuICAgICAgY2hzOiBbJy8nXSxcbiAgICAgIGZhdmljb246IGNvbmYuZGVmYXVsdEZhdmljb24sXG4gICAgICBmaW5kVHlwZTogJ0h0bWwnLFxuICAgICAgbGF5ZXI6IDEsXG4gICAgICBwb3N0OiAnJyxcbiAgICAgIHByb3RvY29sOiAnaHR0cHM6JyxcbiAgICAgIHN0YW1wSWQ6IDAsXG4gICAgICB0aXRsZTogJ3RhbGtuJyxcbiAgICAgIGxpdmVDbnQ6IDAsXG4gICAgICB1aWQ6ICcnLFxuICAgICAgdXR5cGU6ICcnLFxuICAgICAgZGlzcEZsZzogdHJ1ZSxcbiAgICAgIGRhdGE6IG51bGwsXG4gICAgICBjcmVhdGVUaW1lOiBuZXcgRGF0ZSgpLFxuICAgICAgY3VycmVudFRpbWU6IG5ldyBEYXRlKCksXG4gICAgICB1cGRhdGVUaW1lOiBuZXcgRGF0ZSgpLFxuICAgIH07XG4gIH1cbiAgY2g6IHN0cmluZyA9IFBvc3QuZGVmYXVsdFZhbHVlcy5jaDtcbiAgY2hzOiBzdHJpbmdbXSA9IFBvc3QuZGVmYXVsdFZhbHVlcy5jaHM7XG4gIGZhdmljb246IHN0cmluZyA9IFBvc3QuZGVmYXVsdFZhbHVlcy5mYXZpY29uO1xuICBmaW5kVHlwZTogc3RyaW5nID0gUG9zdC5kZWZhdWx0VmFsdWVzLmZpbmRUeXBlO1xuICBsYXllcjogbnVtYmVyID0gUG9zdC5kZWZhdWx0VmFsdWVzLmxheWVyO1xuICBwb3N0OiBzdHJpbmcgPSBQb3N0LmRlZmF1bHRWYWx1ZXMucG9zdDtcbiAgcHJvdG9jb2w6IHN0cmluZyA9IFBvc3QuZGVmYXVsdFZhbHVlcy5wcm90b2NvbDtcbiAgc3RhbXBJZDogbnVtYmVyID0gUG9zdC5kZWZhdWx0VmFsdWVzLnN0YW1wSWQ7XG4gIHRpdGxlOiBzdHJpbmcgPSBQb3N0LmRlZmF1bHRWYWx1ZXMudGl0bGU7XG4gIGxpdmVDbnQ6IG51bWJlciA9IFBvc3QuZGVmYXVsdFZhbHVlcy5saXZlQ250O1xuICB1aWQ6IHN0cmluZyA9IFBvc3QuZGVmYXVsdFZhbHVlcy51aWQ7XG4gIHV0eXBlOiBzdHJpbmcgPSBQb3N0LmRlZmF1bHRWYWx1ZXMudXR5cGU7XG4gIGRpc3BGbGc6IGJvb2xlYW4gPSBQb3N0LmRlZmF1bHRWYWx1ZXMuZGlzcEZsZztcbiAgZGF0YTogYW55ID0gUG9zdC5kZWZhdWx0VmFsdWVzLmRhdGE7XG4gIGNyZWF0ZVRpbWU6IERhdGUgPSBQb3N0LmRlZmF1bHRWYWx1ZXMuY3JlYXRlVGltZTtcbiAgY3VycmVudFRpbWU6IERhdGUgPSBQb3N0LmRlZmF1bHRWYWx1ZXMuY3VycmVudFRpbWU7XG4gIHVwZGF0ZVRpbWU6IERhdGUgPSBQb3N0LmRlZmF1bHRWYWx1ZXMudXBkYXRlVGltZTtcbiAgY29uc3RydWN0b3IocGFyYW1zPzogUG9zdCkge1xuICAgIHN1cGVyKCk7XG4gICAgY29uc3QgdmFsdWVzID0gcGFyYW1zID8geyAuLi5Qb3N0LmRlZmF1bHRWYWx1ZXMsIC4uLnBhcmFtcyB9IDogUG9zdC5kZWZhdWx0VmFsdWVzO1xuICAgIHJldHVybiB0aGlzLmNyZWF0ZSh2YWx1ZXMpO1xuICB9XG59XG4iLCJpbXBvcnQgU2NoZW1hIGZyb20gJ2NvbW1vbi9TY2hlbWEnO1xuaW1wb3J0IFNlcXVlbmNlIGZyb20gJ2NvbW1vbi9TZXF1ZW5jZSc7XG5pbXBvcnQgY29uZiBmcm9tICdjb21tb24vY29uZic7XG5cbmltcG9ydCBBcHAgZnJvbSAnYXBpL3N0b3JlL0FwcCc7XG5pbXBvcnQgQm9vdE9wdGlvbiBmcm9tICdhcGkvc3RvcmUvQm9vdE9wdGlvbic7XG5cbmV4cG9ydCB0eXBlIFRocmVhZFN0YXR1c1R5cGUgPSB7XG4gIGRpc3BUeXBlOiBzdHJpbmc7XG4gIGlzQ3JlYXRlOiBib29sZWFuO1xuICBpc1JlcXVpcmVVcHNlcnQ6IGJvb2xlYW47XG4gIGlzTXVsdGlzdHJlYW06IGJvb2xlYW47XG4gIGlzTWVkaWFDaDogYm9vbGVhbjtcbiAgaXNUb2dnbGVNdWx0aXN0cmVhbTogYm9vbGVhbjtcbiAgZ2V0TW9yZTogYm9vbGVhbjtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRocmVhZCBleHRlbmRzIFNjaGVtYSB7XG4gIHN0YXRpYyBnZXQgZmluZFR5cGVBbGwoKTogJ0FsbCcge1xuICAgIHJldHVybiAnQWxsJztcbiAgfVxuICBzdGF0aWMgZ2V0IGZpbmRUeXBlSHRtbCgpOiAnSHRtbCcge1xuICAgIHJldHVybiAnSHRtbCc7XG4gIH1cbiAgc3RhdGljIGdldCBmaW5kVHlwZU11c2ljKCk6ICdNdXNpYycge1xuICAgIHJldHVybiAnTXVzaWMnO1xuICB9XG4gIHN0YXRpYyBnZXQgZmluZFR5cGVWaWRlbygpOiAnVmlkZW8nIHtcbiAgICByZXR1cm4gJ1ZpZGVvJztcbiAgfVxuICBzdGF0aWMgZ2V0IGZpbmRUeXBlT3RoZXIoKTogJ090aGVyJyB7XG4gICAgcmV0dXJuICdPdGhlcic7XG4gIH1cbiAgc3RhdGljIGdldCBmaW5kVHlwZXMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIFtUaHJlYWQuZmluZFR5cGVIdG1sXTogWyd0ZXh0L2h0bWwnXSxcbiAgICAgIFtUaHJlYWQuZmluZFR5cGVNdXNpY106IFsnYXVkaW8nLCAnYXVkaW8vbXBlZycsICdhdWRpby9tcDQnLCAnYXVkaW8veC13YXYnLCAnYXVkaW8vbWlkaScsICdhcHBsaWNhdGlvbi94LXNtYWYnXSxcbiAgICAgIFtUaHJlYWQuZmluZFR5cGVWaWRlb106IFtcbiAgICAgICAgJ3ZpZGVvJyxcbiAgICAgICAgJ3ZpZGVvL21wZWcnLFxuICAgICAgICAndmlkZW8vbXA0JyxcbiAgICAgICAgJ3ZpZGVvL3F1aWNrdGltZScsXG4gICAgICAgICd2aWRlby94LW1zLXdtdicsXG4gICAgICAgICdhcHBsaWNhdGlvbi94LXNob2Nrd2F2ZS1mbGFzaCcsXG4gICAgICAgICd2aWRlby8zZ3BwMicsXG4gICAgICBdLFxuICAgIH07XG4gIH1cbiAgc3RhdGljIGdldERlZmF1bHRUaXRsZSgpIHtcbiAgICByZXR1cm4gJ3RhbGtuJztcbiAgfVxuXG4gIHN0YXRpYyBnZXREZWZhdWx0RmF2aWNvbigpIHtcbiAgICByZXR1cm4gYGh0dHBzOi8vJHtjb25mLmFzc2V0c1VSTH0vZmF2aWNvbi5pY29gO1xuICB9XG5cbiAgc3RhdGljIGlzV2luZG93T2JqKHBhcmFtcykge1xuICAgIHJldHVybiBwYXJhbXMuYWxlcnQgPyB0cnVlIDogZmFsc2U7XG4gIH1cblxuICBocmVmOiBzdHJpbmc7XG4gIGNoOiBzdHJpbmc7XG4gIGNoczogW3N0cmluZ10gPSBbJy8nXTtcbiAgaGFzU2xhc2g6IGJvb2xlYW47XG4gIHByb3RvY29sOiBzdHJpbmcgPSBTZXF1ZW5jZS5UQUxLTl9QUk9UT0NPTDtcbiAgY29udGVudFR5cGU6IHN0cmluZztcbiAgY2hhcnNldDogc3RyaW5nID0gJ1VURi04JztcbiAgaG9zdDogc3RyaW5nID0gJyc7XG4gIGZhdmljb246IHN0cmluZyA9IFRocmVhZC5nZXREZWZhdWx0RmF2aWNvbigpO1xuICBmaW5kVHlwZTogJ0FsbCcgfCAnSHRtbCcgfCAnTXVzaWMnIHwgJ1ZpZGVvJyA9IFRocmVhZC5maW5kVHlwZUFsbDtcbiAgdGl0bGU6IHN0cmluZyA9IFRocmVhZC5nZXREZWZhdWx0VGl0bGUoKTtcbiAgbWV0YXM6IGFueSA9IFtdO1xuICBlbW90aW9uczogYW55ID0ge307XG4gIHNlcnZlck1ldGFzOiBhbnkgPSB7fTtcbiAgY2xpZW50TWV0YXM6IGFueSA9IHt9O1xuICBsaW5rczogYW55ID0gW107XG4gIGgxczogYW55ID0gW107XG4gIGF1ZGlvczogYW55ID0gW107XG4gIHZpZGVvczogYW55ID0gW107XG4gIGxheWVyOiBudW1iZXIgPSBUaHJlYWQuZ2V0TGF5ZXIoKTtcbiAgbWVkaWFJbmRleDogYW55ID0gW107XG4gIHBvc3RDbnQ6IG51bWJlciA9IDA7XG4gIG11bHRpUG9zdENudDogbnVtYmVyID0gMDtcbiAgaXNTZWxmQ2g6IGJvb2xlYW4gPSBmYWxzZTtcbiAgY3JlYXRlVGltZTogc3RyaW5nID0gJyc7XG4gIHVwZGF0ZVRpbWU6IHN0cmluZyA9ICcnO1xuICBjb25zdHJ1Y3RvcihwYXJhbXM6IGFueSA9IHt9LCBib290T3B0aW9uPzogQm9vdE9wdGlvbiB8IHt9KSB7XG4gICAgc3VwZXIoKTtcbiAgICBjb25zdCB0aHJlYWQgPSBUaHJlYWQuaXNXaW5kb3dPYmoocGFyYW1zKSA/IFRocmVhZC5jb25zdHJ1Y3RvckZyb21XaW5kb3cocGFyYW1zLCBib290T3B0aW9uKSA6IHBhcmFtcztcbiAgICByZXR1cm4gdGhpcy5jcmVhdGUodGhyZWFkKTtcbiAgfVxuXG4gIHN0YXRpYyBjb25zdHJ1Y3RvckZyb21XaW5kb3cocGFyYW1zLCBib290T3B0aW9uKSB7XG4gICAgY29uc3QgYm9vdENoID0gYm9vdE9wdGlvbi5jaCA/IGJvb3RPcHRpb24uY2ggOiBmYWxzZTtcbiAgICBjb25zdCBjaCA9IFRocmVhZC5nZXRDaChib290T3B0aW9uKTtcblxuICAgIGxldCB0aHJlYWQ6IGFueSA9IHt9O1xuICAgIGxldCBocmVmID0gJyc7XG4gICAgdGhyZWFkLmNoID0gY2g7XG4gICAgdGhyZWFkLmNocyA9IFsnLyddO1xuICAgIHRocmVhZC5oYXNTbGFzaCA9IGJvb3RPcHRpb24uaGFzc2xhc2ggPyBTY2hlbWEuZ2V0Qm9vbChib290T3B0aW9uLmhhc3NsYXNoKSA6IGZhbHNlO1xuICAgIHRocmVhZC5wcm90b2NvbCA9ICd0YWxrbjonO1xuICAgIHRocmVhZC5jb250ZW50VHlwZSA9ICcnO1xuICAgIHRocmVhZC5jaGFyc2V0ID0gJ1VURi04JztcbiAgICB0aHJlYWQuaG9zdCA9ICcnO1xuICAgIHRocmVhZC5mYXZpY29uID0gVGhyZWFkLmdldERlZmF1bHRGYXZpY29uKCk7XG4gICAgdGhyZWFkLmZpbmRUeXBlID0gVGhyZWFkLmZpbmRUeXBlQWxsO1xuXG4gICAgaWYgKGJvb3RDaCkge1xuICAgICAgLy8gVVJM44Gu44Kz44ON44Kv44K344On44Oz5paH5a2X5YiX44GL44KJ44Gn44GvUFJPVE9DT0zjga/liKTliKXjgafjgY3jgarjgYTjgIJcbiAgICAgIHRocmVhZC5wcm90b2NvbCA9IFRocmVhZC5nZXRQcm90b2NvbChib290Q2gpO1xuICAgICAgdGhyZWFkLmhvc3QgPSBUaHJlYWQuZ2V0SG9zdChib290Q2gpO1xuICAgICAgdGhyZWFkLmNocyA9IGJvb3RDaC5jaHMgJiYgYm9vdENoLmNocy5sZW5ndGggPiAwID8gYm9vdENoLmNocyA6IFRocmVhZC5nZXRDaHMoY2gpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJlYWQucHJvdG9jb2wgPSBsb2NhdGlvbi5wcm90b2NvbCA/IGxvY2F0aW9uLnByb3RvY29sIDogJz8/Pz86JztcbiAgICAgIHRocmVhZC5jaHMgPSBwYXJhbXMuY2hzICYmIHBhcmFtcy5jaHMubGVuZ3RoID4gMCA/IHBhcmFtcy5jaHMgOiBUaHJlYWQuZ2V0Q2hzKGNoKTtcbiAgICAgIHRocmVhZC5jb250ZW50VHlwZSA9IGRvY3VtZW50LmNvbnRlbnRUeXBlID8gZG9jdW1lbnQuY29udGVudFR5cGUgOiAnJztcbiAgICAgIHRocmVhZC5jaGFyc2V0ID0gZG9jdW1lbnQuY2hhcnNldCA/IGRvY3VtZW50LmNoYXJzZXQgOiAnJztcblxuICAgICAgdGhyZWFkLmhvc3QgPSBsb2NhdGlvbi5ob3N0ID8gbG9jYXRpb24uaG9zdCA6ICcnO1xuICAgICAgdGhyZWFkLmZhdmljb24gPSBUaHJlYWQuZ2V0RmF2aWNvbkZyb21XaW5kb3cod2luZG93KTtcbiAgICB9XG5cbiAgICB0aHJlYWQudGl0bGUgPSBUaHJlYWQuZ2V0RGVmYXVsdFRpdGxlKCk7XG4gICAgdGhyZWFkLm1ldGFzID0gW107XG4gICAgdGhyZWFkLnNlcnZlck1ldGFzID0ge307XG4gICAgdGhyZWFkLmNsaWVudE1ldGFzID0ge307XG4gICAgdGhyZWFkLmVtb3Rpb25zID0ge307XG4gICAgdGhyZWFkLmxpbmtzID0gW107XG4gICAgdGhyZWFkLmgxcyA9IFtdO1xuICAgIHRocmVhZC5hdWRpb3MgPSBbXTtcbiAgICB0aHJlYWQudmlkZW9zID0gW107XG4gICAgdGhyZWFkLmxheWVyID0gVGhyZWFkLmdldExheWVyKHRocmVhZC5jaCk7XG4gICAgdGhyZWFkLm1lZGlhSW5kZXggPSBbXTtcbiAgICB0aHJlYWQucG9zdENudCA9IDA7XG4gICAgdGhyZWFkLm11bHRpUG9zdENudCA9IDA7XG4gICAgdGhyZWFkLmlzU2VsZkNoID0gVGhyZWFkLmdldElzU2VsZkNoKGhyZWYsIHRocmVhZC5jaCk7XG4gICAgdGhyZWFkLmNyZWF0ZVRpbWUgPSAnJztcbiAgICB0aHJlYWQudXBkYXRlVGltZSA9ICcnO1xuICAgIHJldHVybiB0aHJlYWQ7XG4gIH1cblxuICBzdGF0aWMgZ2V0Q2goYm9vdE9wdGlvbjogYW55KSB7XG4gICAgcmV0dXJuIGJvb3RPcHRpb24gJiYgYm9vdE9wdGlvbi5jaCAmJiBib290T3B0aW9uLmNoICE9PSAnJyA/IGJvb3RPcHRpb24uY2ggOiAnLyc7XG4gIH1cblxuICBzdGF0aWMgZ2V0Q2hUb3AoY2gpIHtcbiAgICBpZiAoY2ggIT09ICcnKSB7XG4gICAgICByZXR1cm4gJy8nICsgY2guc3BsaXQoJy8nKVsxXTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBnZXRDaHMoX2NoKSB7XG4gICAgbGV0IGNocyA9IFsnLyddO1xuXG4gICAgaWYgKF9jaCAhPT0gJycpIHtcbiAgICAgIC8vY2ggPSBjaC5yZXBsYWNlKC9cXHUwMDJmJC9nLCAnJyk7XG4gICAgICBjb25zdCBjaCA9IF9jaC5zbGljZSgtMSkgPT09ICcvJyA/IF9jaCA6IF9jaCArICcvJztcblxuICAgICAgaWYgKGNoICE9PSAnLycpIHtcbiAgICAgICAgY29uc3QgY2hBcnIgPSBjaC5zcGxpdCgnLycpO1xuICAgICAgICBjb25zdCBjaExlbmd0aCA9IGNoQXJyLmxlbmd0aDtcbiAgICAgICAgbGV0IG5ld0NoID0gJyc7XG4gICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgY2hMZW5ndGg7IGkrKykge1xuICAgICAgICAgIGlmIChjaEFycltpXSAhPT0gJycpIHtcbiAgICAgICAgICAgIG5ld0NoICs9IGNoQXJyW2ldO1xuXG4gICAgICAgICAgICAvLyDkuIDnlarmnIDlvozjgYwv44Gu5aC05ZCIXG4gICAgICAgICAgICBuZXdDaCA9IG5ld0NoLnNsaWNlKC0xKSA9PT0gJy8nID8gbmV3Q2ggOiBuZXdDaCArICcvJztcblxuICAgICAgICAgICAgLy8g5LiA55Wq5pyA5Yid44GML+OBruWgtOWQiFxuICAgICAgICAgICAgbmV3Q2ggPSBuZXdDaC5zbGljZSgwLCAxKSA9PT0gJy8nID8gbmV3Q2ggOiAnLycgKyBuZXdDaDtcblxuICAgICAgICAgICAgLy8g5pyA5b6M44GML+eEoeOBl+OBruOCs+ODjeOCr+OCt+ODp+ODs+OCkueUn+aIkFxuICAgICAgICAgICAgLy9ub1NsYXNoQ2ggPSBuZXdDaC5zbGljZSgwLCAtMSk7XG5cbiAgICAgICAgICAgIC8vY2hzLnB1c2goIG5vU2xhc2hDaCApO1xuICAgICAgICAgICAgY2hzLnB1c2gobmV3Q2gpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY2hzO1xuICB9XG5cbiAgc3RhdGljIGdldEhvc3QoY2gpIHtcbiAgICBpZiAoY2guaW5kZXhPZignLicpID49IDApIHtcbiAgICAgIGNoID0gY2gucmVwbGFjZSgnaHR0cHM6Ly8nLCAnJykucmVwbGFjZSgnaHR0cDovLycsICcnKTtcbiAgICAgIHJldHVybiBjaC5yZXBsYWNlKC9eXFwvLywgJycpLnJlcGxhY2UoL1xcLy4qJC8sICcnKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGNvbmYuZG9tYWluO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBnZXRQcm90b2NvbChocmVmKSB7XG4gICAgaWYgKGhyZWYuaW5kZXhPZignaHR0cDonKSA+PSAwKSByZXR1cm4gJ2h0dHA6JztcbiAgICBpZiAoaHJlZi5pbmRleE9mKCdodHRwczonKSA+PSAwKSByZXR1cm4gJ2h0dHBzOic7XG4gICAgaWYgKGxvY2F0aW9uICYmIGxvY2F0aW9uLnByb3RvY29sKSByZXR1cm4gbG9jYXRpb24ucHJvdG9jb2w7XG4gICAgcmV0dXJuICc/Pz8/Oic7XG4gIH1cblxuICBzdGF0aWMgZ2V0SXNTZWxmQ2goaHJlZiwgY2gpIHtcbiAgICBjb25zdCByZXBsYWNlZEhyZWYgPSBocmVmXG4gICAgICAucmVwbGFjZSgnaHR0cDovJywgJycpXG4gICAgICAucmVwbGFjZSgnaHR0cHM6LycsICcnKVxuICAgICAgLnJlcGxhY2UoL1xcdTAwMmYkLywgJycpO1xuICAgIHJldHVybiByZXBsYWNlZEhyZWYgPT09IGNoO1xuICB9XG5cbiAgc3RhdGljIGdldExheWVyKGNoID0gJy8nKSB7XG4gICAgcmV0dXJuIGNoLnNwbGl0KCcvJykubGVuZ3RoIC0gMTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRNZWRpYVNyYyh0aHJlYWQpIHtcbiAgICByZXR1cm4gQXBwLmdldE1lZGlhU3JjKHRocmVhZC5wcm90b2NvbCwgdGhyZWFkLmNoKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRNZWRpYVRhZ1R5cGUodGhyZWFkKSB7XG4gICAgY29uc3Qgc3JjID0gVGhyZWFkLmdldE1lZGlhU3JjKHRocmVhZCk7XG4gICAgcmV0dXJuIEFwcC5nZXRNZWRpYVR5cGUoc3JjLCBudWxsKTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRGYXZpY29uRnJvbVdpbmRvdyh3aW5kb3cpIHtcbiAgICBpZiAod2luZG93ICYmIHdpbmRvdy5kb2N1bWVudCkge1xuICAgICAgY29uc3QgdSA9IHdpbmRvdy5kb2N1bWVudC5ldmFsdWF0ZShcbiAgICAgICAgXCIvL2xpbmtbY29udGFpbnMoQHJlbCwnaWNvbicpb3IoY29udGFpbnMoQHJlbCwnSUNPTicpKV1bMV0vQGhyZWZcIixcbiAgICAgICAgd2luZG93LmRvY3VtZW50LFxuICAgICAgICBudWxsLFxuICAgICAgICAyLFxuICAgICAgICBudWxsXG4gICAgICApLnN0cmluZ1ZhbHVlO1xuICAgICAgY29uc3QgaCA9ICdodHRwOi8vJztcbiAgICAgIGNvbnN0IGhzID0gJ2h0dHBzOi8vJztcbiAgICAgIGNvbnN0IGwgPSBsb2NhdGlvbi5ob3N0O1xuICAgICAgaWYgKHUuaW5kZXhPZihoKSB8fCB1LmluZGV4T2YoaHMpKSB7XG4gICAgICAgIGNvbnN0IHVybCA9IGggKyBsICsgKHUgfHwgJy9mYXZpY29uLmljbycpO1xuICAgICAgICBjb25zdCBzdHJDbnQgPSB1cmwuc3BsaXQoJy8vJykubGVuZ3RoIC0gMTtcbiAgICAgICAgaWYgKHN0ckNudCA9PT0gMSkge1xuICAgICAgICAgIHJldHVybiB1cmw7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIHU7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB1O1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGdldFN0YXR1cyh0aHJlYWQsIGFwcCwgaXNFeGlzdCk6IFRocmVhZFN0YXR1c1R5cGUge1xuICAgIGxldCBzdGF0dXMgPSB7XG4gICAgICBkaXNwVHlwZTogJycsIC8vIFRJTUVMSU5FLCBNVUxUSSwgU0lOR0xFLCBDSElMRCwgTE9HU1xuICAgICAgaXNDcmVhdGU6IGZhbHNlLFxuICAgICAgaXNSZXF1aXJlVXBzZXJ0OiBmYWxzZSxcbiAgICAgIGlzTXVsdGlzdHJlYW06IGZhbHNlLFxuICAgICAgaXNNZWRpYUNoOiBmYWxzZSxcbiAgICAgIGlzVG9nZ2xlTXVsdGlzdHJlYW06IGZhbHNlLFxuICAgICAgZ2V0TW9yZTogZmFsc2UsXG4gICAgfTtcblxuICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuICAgIC8qIHRocmVhZOOBjOepuuOBrlNjaGVtYeOBi+OBqeOBhuOBiyhEQuOBq+ODh+ODvOOCv+OBjOWtmOWcqOOBl+OBquOBhCkgICAgICAgICovXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cbiAgICBzdGF0dXMuaXNDcmVhdGUgPSBUaHJlYWQuZ2V0U3RhdHVzQ3JlYXRlKGlzRXhpc3QpO1xuXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gICAgLyog5pu05paw44GM5b+F6KaB44GqdGhyZWFk44GL44Gp44GG44GLICAgICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4gICAgc3RhdHVzLmlzUmVxdWlyZVVwc2VydCA9IFRocmVhZC5nZXRTdGF0dXNJc1JlcXVpcmVVcHNlcnQodGhyZWFkLCBzdGF0dXMuaXNDcmVhdGUpO1xuXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gICAgLyogTXVsdGlzdHJlYW3lvaLlvI/jgYvjganjgYbjgYsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuICAgIHN0YXR1cy5pc011bHRpc3RyZWFtID0gVGhyZWFkLmdldFN0YXR1c0lzTXVsdGlzdHJlYW0oYXBwKTtcblxuICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuICAgIC8qIE11bHRpc3RyZWFt44Gu44Oc44K/44Oz44KS5oq844GX44Gf44GLICAgICAgICAgICAgICAgICAgICAgICAgICAqL1xuICAgIC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG4gICAgc3RhdHVzLmlzVG9nZ2xlTXVsdGlzdHJlYW0gPSBUaHJlYWQuZ2V0U3RhdHVzSXNUb2dnbGVNdWx0aXN0cmVhbShhcHApO1xuXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG4gICAgLyogdGhyZWFk44GM56m644GuU2NoZW1h44GL44Gp44GG44GLKERC44Gr44OH44O844K/44GM5a2Y5Zyo44GX44Gq44GEKSAgICAgICAgKi9cbiAgICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cblxuICAgIHN0YXR1cy5pc01lZGlhQ2ggPSBUaHJlYWQuZ2V0U3RhdHVzSXNNZWRpYUNoKHRocmVhZC5jaCk7XG4gICAgcmV0dXJuIHN0YXR1cztcbiAgfVxuXG4gIHN0YXRpYyBnZXRTdGF0dXNDcmVhdGUoaXNFeGlzdCkge1xuICAgIHJldHVybiAhaXNFeGlzdDtcbiAgfVxuXG4gIHN0YXRpYyBnZXRTdGF0dXNJc1JlcXVpcmVVcHNlcnQodGhyZWFkLCBpc0NyZWF0ZSA9IGZhbHNlKSB7XG4gICAgaWYgKCFpc0NyZWF0ZSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGlmICh0aHJlYWQudXBkYXRlVGltZSkge1xuICAgICAgY29uc3QgdGhyZWFkVXBkYXRlVGltZSA9IHRocmVhZC51cGRhdGVUaW1lLmdldFRpbWUgPyB0aHJlYWQudXBkYXRlVGltZS5nZXRUaW1lKCkgOiB0aHJlYWQudXBkYXRlVGltZTtcblxuICAgICAgLy8g54++5Zyo5pmC5Yi744KS5Y+W5b6XXG4gICAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpO1xuICAgICAgY29uc3Qgbm93WWVhciA9IG5vdy5nZXRGdWxsWWVhcigpO1xuICAgICAgY29uc3Qgbm93TW9udGggPSBub3cuZ2V0TW9udGgoKTtcbiAgICAgIGNvbnN0IG5vd0RheSA9IG5vdy5nZXREYXRlKCk7XG4gICAgICBjb25zdCBub3dIb3VyID0gbm93LmdldEhvdXJzKCk7XG4gICAgICBjb25zdCBub3dNaW51dGVzID0gbm93LmdldE1pbnV0ZXMoKTtcbiAgICAgIGNvbnN0IGFjdGl2ZURhdGUgPSBuZXcgRGF0ZShub3dZZWFyLCBub3dNb250aCwgbm93RGF5LCBub3dIb3VyIC0gY29uZi5maW5kT25lVGhyZWFkQWN0aXZlSG91cik7XG4gICAgICBjb25zdCBhY3RpdmVUaW1lID0gYWN0aXZlRGF0ZS5nZXRUaW1lKCk7XG5cbiAgICAgIC8vIOOCueODrOODg+ODieOBruabtOaWsOaZgumWk+OBqOOAgeePvuWcqOaZgumWkyAtIG4g44KS5q+U6LyD44GX44Gm44CB44K544Os44OD44OJ44Gu5pu05paw5pmC6ZaT44GM5Y+k44GL44Gj44Gf44KJdHJ1ZeOCkui/lOOBmVxuICAgICAgcmV0dXJuIHRocmVhZFVwZGF0ZVRpbWUgPCBhY3RpdmVUaW1lO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGdldFN0YXR1c0lzTXVsdGlzdHJlYW0oYXBwKTogYm9vbGVhbiB7XG4gICAgaWYgKGFwcCA9PT0gdW5kZWZpbmVkIHx8IGFwcC5kaXNwVGhyZWFkVHlwZSA9PT0gdW5kZWZpbmVkKSByZXR1cm4gdHJ1ZTtcbiAgICByZXR1cm4gYXBwLmRpc3BUaHJlYWRUeXBlID09PSBBcHAuZGlzcFRocmVhZFR5cGVNdWx0aSAmJiBhcHAubXVsdGlzdHJlYW07XG4gIH1cblxuICBzdGF0aWMgZ2V0U3RhdHVzSXNNZWRpYUNoKGNoKSB7XG4gICAgcmV0dXJuIEFwcC5nZXRJc01lZGlhQ2goY2gpO1xuICB9XG5cbiAgc3RhdGljIGdldFN0YXR1c0lzVG9nZ2xlTXVsdGlzdHJlYW0oYXBwKTogYm9vbGVhbiB7XG4gICAgLy8gVE9ETzogSnVkZ2UgZml4IGFjdGlvbmVkLlxuICAgIGlmIChhcHAgPT09IHVuZGVmaW5lZCB8fCBhcHAuYWN0aW9uZWQgPT09IHVuZGVmaW5lZCkgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiBhcHAuaXNUb2dnbGVNdWx0aXN0cmVhbTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRDb250ZW50VHlwZUZyb21GaW5kVHlwZShjb250ZW50VHlwZSkge1xuICAgIGNvbnN0IGZpbmRUeXBlSHRtbCA9IFRocmVhZC5maW5kVHlwZXNbVGhyZWFkLmZpbmRUeXBlSHRtbF07XG4gICAgY29uc3QgZmluZFR5cGVNdXNpYyA9IFRocmVhZC5maW5kVHlwZXNbVGhyZWFkLmZpbmRUeXBlTXVzaWNdO1xuICAgIGNvbnN0IGZpbmRUeXBlVmlkZW8gPSBUaHJlYWQuZmluZFR5cGVzW1RocmVhZC5maW5kVHlwZVZpZGVvXTtcblxuICAgIGxldCBmaW5kVHlwZTogdHlwZW9mIFRocmVhZC5maW5kVHlwZUh0bWwgfCB0eXBlb2YgVGhyZWFkLmZpbmRUeXBlTXVzaWMgfCB0eXBlb2YgVGhyZWFkLmZpbmRUeXBlVmlkZW8gfCB0eXBlb2YgVGhyZWFkLmZpbmRUeXBlT3RoZXI7XG4gICAgaWYgKGNvbnRlbnRUeXBlICYmIGNvbnRlbnRUeXBlICE9PSAnJykge1xuICAgICAgbGV0IHNwbGl0ZWRDb250ZW50VHlwZSA9ICcnO1xuICAgICAgaWYgKGNvbnRlbnRUeXBlLmluZGV4T2YoJzsnKSA+IDApIHtcbiAgICAgICAgc3BsaXRlZENvbnRlbnRUeXBlID0gY29udGVudFR5cGUuc3BsaXQoJzsnKVswXTtcbiAgICAgIH1cbiAgICAgIGlmIChmaW5kVHlwZUh0bWwuaW5jbHVkZXMoY29udGVudFR5cGUpIHx8IGZpbmRUeXBlSHRtbC5pbmNsdWRlcyhzcGxpdGVkQ29udGVudFR5cGUpKSB7XG4gICAgICAgIGZpbmRUeXBlID0gVGhyZWFkLmZpbmRUeXBlSHRtbDtcbiAgICAgIH1cbiAgICAgIGlmIChmaW5kVHlwZU11c2ljLmluY2x1ZGVzKGNvbnRlbnRUeXBlKSB8fCBmaW5kVHlwZU11c2ljLmluY2x1ZGVzKHNwbGl0ZWRDb250ZW50VHlwZSkpIHtcbiAgICAgICAgZmluZFR5cGUgPSBUaHJlYWQuZmluZFR5cGVNdXNpYztcbiAgICAgIH1cbiAgICAgIGlmIChmaW5kVHlwZVZpZGVvLmluY2x1ZGVzKGNvbnRlbnRUeXBlKSB8fCBmaW5kVHlwZVZpZGVvLmluY2x1ZGVzKHNwbGl0ZWRDb250ZW50VHlwZSkpIHtcbiAgICAgICAgZmluZFR5cGUgPSBUaHJlYWQuZmluZFR5cGVWaWRlbztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZpbmRUeXBlO1xuICB9XG5cbiAgc3RhdGljIGdldEZpbmRUeXBlRnJvbVNyYyhzcmMpIHtcbiAgICBjb25zdCBzdHIgPSBBcHAuZ2V0TWVkaWFUeXBlRnJvbVNyYyhzcmMpO1xuICAgIHJldHVybiBzdHIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzdHIuc2xpY2UoMSk7XG4gIH1cbn1cbiIsImltcG9ydCBwcm9jZXNzIGZyb20gJ3Byb2Nlc3MnO1xuXG5pbXBvcnQgY29uZiBmcm9tICdjb21tb24vY29uZic7XG5pbXBvcnQgZGVmaW5lIGZyb20gJ2NvbW1vbi9kZWZpbmUnO1xuXG5pZiAocHJvY2Vzcy50aXRsZSA9PT0gJ2Jyb3dzZXInKSB7XG4gIGNvbnN0IHsgU1VCX0RPTUFJTlMsIERFVkVMT1BNRU5UIH0gPSBkZWZpbmU7XG4gIGNvbnN0IHsgZW52LCBkb21haW4gfSA9IGNvbmY7XG4gIGNvbmYubWVkaWFTZWNvbmRJbnRlcnZhbCA9IDIwMDtcbiAgY29uZi5zY3JlZW5TaXplID0ge1xuICAgIHNtYWxsOiA2MDAsXG4gICAgbWlkZGxlOiA5NjAsXG4gIH07XG4gIGNvbmYuZGVmYXVsdEZhdmljb24gPSBgLy8ke1NVQl9ET01BSU5TLkFTU0VUU30uJHtkb21haW59L2Zhdmljb24uaWNvYDtcbiAgY29uZi5wb3J0YWxQYXRoID0gZW52ID09PSBERVZFTE9QTUVOVCA/IGAvLyR7U1VCX0RPTUFJTlMuQ0xJRU5UfS4ke2RvbWFpbn0vYCA6IGAvLyR7U1VCX0RPTUFJTlMuUE9SVEFMfS4ke2RvbWFpbn0vYDtcbiAgY29uZi5jbGllbnRQYXRoID0gYC8vJHtTVUJfRE9NQUlOUy5DTElFTlR9LiR7ZG9tYWlufS9gO1xuICBjb25mLmFzc2V0c1BhdGggPSBgLy8ke1NVQl9ET01BSU5TLkFTU0VUU30uJHtkb21haW59L2A7XG4gIGNvbmYuc2Vzc2lvblBhdGggPSBgLy8ke1NVQl9ET01BSU5TLlNFU1NJT059LiR7ZG9tYWlufS9gO1xuICBjb25mLmNhY2hlS2V5ID0geyBpbmRleDogJ3RhbGtuSW5kZXhMaXN0Jywgc2V0dGluZzogJ3RhbGtuU2V0dGluZ1BhcmFtcycgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY29uZjtcbiIsImltcG9ydCBTY2hlbWEgZnJvbSAnY29tbW9uL1NjaGVtYSc7XG5cbmltcG9ydCBBcHAgZnJvbSAnYXBpL3N0b3JlL0FwcCc7XG5cbmltcG9ydCBjb25mIGZyb20gJ2NsaWVudC9jb25mJztcblxuZXhwb3J0IHR5cGUgQ2xpY2tlZFR5cGUgPSAnQ2gnIHwgJ0JhY2tUb1Jvb3RDaCcgfCAnVG9NZWRpYScgfCAnTGlua3MnIHwgJ2ZpbmRNZWRpYUNoJyB8ICcnO1xuXG5leHBvcnQgdHlwZSBFeHRlbnNpb25Nb2RlVHlwZSA9XG4gIHwgdHlwZW9mIFVpLmV4dGVuc2lvbk1vZGVNb2RhbFxuICB8IHR5cGVvZiBVaS5leHRlbnNpb25Nb2RlQm90dG9tXG4gIHwgdHlwZW9mIFVpLmV4dGVuc2lvbk1vZGVPdXRXaW5kb3dcbiAgfCB0eXBlb2YgVWkuZXh0ZW5zaW9uTW9kZUxpdmVNZWRpYTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVWkgZXh0ZW5kcyBTY2hlbWEge1xuICBzdGF0aWMgZ2V0IG9wZW5Mb2NrTWVudUxhYmVsTm8oKSB7XG4gICAgcmV0dXJuICdObyc7XG4gIH1cbiAgc3RhdGljIGdldCBvcGVuTG9ja01lbnVMYWJlbExpa2UoKSB7XG4gICAgcmV0dXJuICdMaWtlJztcbiAgfVxuICBzdGF0aWMgZ2V0IG9wZW5Mb2NrTWVudUxhYmVsU2hhcmUoKSB7XG4gICAgcmV0dXJuICdTaGFyZSc7XG4gIH1cbiAgc3RhdGljIGdldCBvcGVuTG9ja01lbnVMYWJlbEFib3V0KCkge1xuICAgIHJldHVybiAnQWJvdXQnO1xuICB9XG4gIHN0YXRpYyBnZXQgc2NyZWVuU2l6ZVNtYWxsTGFiZWwoKSB7XG4gICAgcmV0dXJuICdTTUFMTCc7XG4gIH1cbiAgc3RhdGljIGdldCBzY3JlZW5TaXplTWlkZGxlTGFiZWwoKSB7XG4gICAgcmV0dXJuICdNSURETEUnO1xuICB9XG4gIHN0YXRpYyBnZXQgc2NyZWVuU2l6ZUxhcmdlTGFiZWwoKSB7XG4gICAgcmV0dXJuICdMQVJHRSc7XG4gIH1cbiAgc3RhdGljIGdldCBzY3JlZW5TaXplSW5kZXhMYWJlbCgpIHtcbiAgICByZXR1cm4gJ01FTlUnO1xuICB9XG4gIHN0YXRpYyBnZXQgc2NyZWVuU2l6ZVRocmVhZExhYmVsKCkge1xuICAgIHJldHVybiAnVEhSRUFEJztcbiAgfVxuICBzdGF0aWMgZ2V0IHNjcmVlblNpemVEZXRhaWxMYWJlbCgpIHtcbiAgICByZXR1cm4gJ0RFVEFJTCc7XG4gIH1cbiAgc3RhdGljIGdldCBzY3JlZW5TaXplU21hbGxXaWR0aFB4KCkge1xuICAgIHJldHVybiBjb25mLnNjcmVlblNpemUuc21hbGw7XG4gIH1cbiAgc3RhdGljIGdldCBzY3JlZW5TaXplTWlkZGxlV2lkdGhQeCgpIHtcbiAgICByZXR1cm4gY29uZi5zY3JlZW5TaXplLm1pZGRsZTtcbiAgfVxuICBzdGF0aWMgZ2V0IGV4dGVuc2lvbk1vZGVNb2RhbCgpIHtcbiAgICByZXR1cm4gJ01vZGFsJztcbiAgfVxuICBzdGF0aWMgZ2V0IGV4dGVuc2lvbk1vZGVCb3R0b20oKSB7XG4gICAgcmV0dXJuICdCb3R0b20nO1xuICB9XG4gIHN0YXRpYyBnZXQgZXh0ZW5zaW9uTW9kZUVtYmVkKCkge1xuICAgIHJldHVybiAnRW1iZWQnO1xuICB9XG4gIHN0YXRpYyBnZXQgZXh0ZW5zaW9uTW9kZUxpdmVNZWRpYSgpIHtcbiAgICByZXR1cm4gJ0xpdmVNZWRpYSc7XG4gIH1cbiAgc3RhdGljIGdldCBleHRlbnNpb25Nb2RlT3V0V2luZG93KCkge1xuICAgIHJldHVybiAnT3V0V2luZG93JztcbiAgfVxuICBzdGF0aWMgZ2V0IGV4dGVuc2lvbk1vZGVOb25lKCkge1xuICAgIHJldHVybiAnTm9uZSc7XG4gIH1cbiAgc3RhdGljIGdldCBtZW51Q29tcG9uZW50VXNlcnNMYWJlbCgpIHtcbiAgICByZXR1cm4gJ1VzZXJzJztcbiAgfVxuICBzdGF0aWMgZ2V0IG1lbnVDb21wb25lbnRSYW5rTGFiZWwoKSB7XG4gICAgcmV0dXJuICdSYW5rJztcbiAgfVxuICBzdGF0aWMgZ2V0IG1lbnVDb21wb25lbnRMb2dzTGFiZWwoKSB7XG4gICAgcmV0dXJuICdMb2dzJztcbiAgfVxuICBzdGF0aWMgZ2V0IG1lbnVDb21wb25lbnRTZXR0aW5nTGFiZWwoKSB7XG4gICAgcmV0dXJuICdTZXR0aW5nJztcbiAgfVxuICBzdGF0aWMgZ2V0RGVmYXVsdE1lbnVDb21wb25lbnQoKSB7XG4gICAgcmV0dXJuIFVpLm1lbnVDb21wb25lbnRSYW5rTGFiZWw7XG4gIH1cblxuICBzdGF0aWMgZ2V0V2lkdGgocGFyYW1zKSB7XG4gICAgaWYgKHBhcmFtcyAmJiBwYXJhbXMuZXh0ZW5zaW9uV2lkdGggPiAwKSB7XG4gICAgICByZXR1cm4gcGFyYW1zLmV4dGVuc2lvbldpZHRoO1xuICAgIH1cbiAgICBpZiAocGFyYW1zICYmIHBhcmFtcy53aWR0aCA+IDApIHtcbiAgICAgIHJldHVybiBwYXJhbXMud2lkdGg7XG4gICAgfVxuICAgIGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JyAmJiB3aW5kb3cuaW5uZXJXaWR0aCkge1xuICAgICAgcmV0dXJuIHdpbmRvdy5pbm5lcldpZHRoO1xuICAgIH1cbiAgICBpZiAocGFyYW1zLndpZHRoKSB7XG4gICAgICBpZiAodHlwZW9mIHBhcmFtcy53aWR0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgaWYgKHBhcmFtcy53aWR0aC5pbmRleE9mKCdweCcpID49IDApIHtcbiAgICAgICAgICByZXR1cm4gTnVtYmVyKHBhcmFtcy53aWR0aC5yZXBsYWNlKCdweCcsICcnKSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBwYXJhbXMud2lkdGg7XG4gICAgfVxuICAgIHJldHVybiAwO1xuICB9XG5cbiAgc3RhdGljIGdldEhlaWdodChwYXJhbXM6IGFueSA9IHt9KSB7XG4gICAgaWYgKHBhcmFtcyAmJiBwYXJhbXMuZXh0ZW5zaW9uSGVpZ3QgPiAwKSB7XG4gICAgICByZXR1cm4gcGFyYW1zLmV4dGVuc2lvbkhlaWd0O1xuICAgIH1cbiAgICBpZiAocGFyYW1zICYmIHBhcmFtcy5oZWlnaHQgPiAwKSB7XG4gICAgICByZXR1cm4gcGFyYW1zLmhlaWdodDtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnICYmIHdpbmRvdy5pbm5lckhlaWdodCkge1xuICAgICAgcmV0dXJuIHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICB9XG4gICAgcmV0dXJuIDA7XG4gIH1cblxuICBzdGF0aWMgZ2V0U2NyZWVuU2l6ZSh3aWR0aFB4OiBhbnkgPSAwKSB7XG4gICAgaWYgKCF3aWR0aFB4KSB7XG4gICAgICBpZiAoKHdpbmRvdyAmJiB3aW5kb3cuaW5uZXJXaWR0aCA9PT0gMCkgfHwgd2luZG93LmlubmVySGVpZ2h0ID09PSAwKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICB9XG5cbiAgICAgIGlmICh3aW5kb3cgJiYgd2luZG93LmlubmVyV2lkdGggPiAwKSB7XG4gICAgICAgIHdpZHRoUHggPSB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHdpZHRoUHggPT09ICdzdHJpbmcnKSB7XG4gICAgICB3aWR0aFB4ID0gd2lkdGhQeC5yZXBsYWNlKCdweCcsICcnKTtcbiAgICB9XG5cbiAgICBpZiAoVWkuc2NyZWVuU2l6ZVNtYWxsV2lkdGhQeCA+PSB3aWR0aFB4KSB7XG4gICAgICByZXR1cm4gVWkuc2NyZWVuU2l6ZVNtYWxsTGFiZWw7XG4gICAgfVxuXG4gICAgaWYgKFVpLnNjcmVlblNpemVTbWFsbFdpZHRoUHggPD0gd2lkdGhQeCAmJiBVaS5zY3JlZW5TaXplTWlkZGxlV2lkdGhQeCA+PSB3aWR0aFB4KSB7XG4gICAgICByZXR1cm4gVWkuc2NyZWVuU2l6ZU1pZGRsZUxhYmVsO1xuICAgIH1cbiAgICByZXR1cm4gVWkuc2NyZWVuU2l6ZUxhcmdlTGFiZWw7XG4gIH1cblxuICBzdGF0aWMgZ2V0SXNPcGVuTWVudSh1aSkge1xuICAgIHN3aXRjaCAodWkuc2NyZWVuU2l6ZSkge1xuICAgICAgY2FzZSBVaS5zY3JlZW5TaXplU21hbGxMYWJlbDpcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgY2FzZSBVaS5zY3JlZW5TaXplTWlkZGxlTGFiZWw6XG4gICAgICBjYXNlIFVpLnNjcmVlblNpemVMYXJnZUxhYmVsOlxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH1cblxuICBzdGF0aWMgZ2V0SXNPcGVuQm9hcmQodWkpIHtcbiAgICBzd2l0Y2ggKHVpLnNjcmVlblNpemUpIHtcbiAgICAgIGNhc2UgVWkuc2NyZWVuU2l6ZVNtYWxsTGFiZWw6XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgIGNhc2UgVWkuc2NyZWVuU2l6ZU1pZGRsZUxhYmVsOlxuICAgICAgY2FzZSBVaS5zY3JlZW5TaXplTGFyZ2VMYWJlbDpcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIGdldElzT3BlblBvc3RzKHVpOiBhbnksIGNhbGxlZDogc3RyaW5nID0gJycpIHtcbiAgICBsZXQgeyBleHRlbnNpb25Nb2RlLCBoZWlnaHQsIGV4dGVuc2lvbkhlaWdodCwgZXh0ZW5zaW9uQ2xvc2VIZWlnaHQgfSA9IHVpO1xuICAgIGNvbnN0IGxvZyA9IGZhbHNlO1xuICAgIGNvbnN0IGFsID0gZmFsc2U7XG4gICAgaWYgKGV4dGVuc2lvbk1vZGUgPT09IFVpLmV4dGVuc2lvbk1vZGVCb3R0b20gfHwgZXh0ZW5zaW9uTW9kZSA9PT0gVWkuZXh0ZW5zaW9uTW9kZU1vZGFsKSB7XG4gICAgICBpZiAodHlwZW9mIGhlaWdodCAhPT0gJ251bWJlcicpIGhlaWdodCA9IE51bWJlcihoZWlnaHQpO1xuICAgICAgaWYgKHR5cGVvZiBleHRlbnNpb25IZWlnaHQgIT09ICdudW1iZXInKSBleHRlbnNpb25IZWlnaHQgPSBOdW1iZXIoZXh0ZW5zaW9uSGVpZ2h0KTtcblxuICAgICAgaWYgKGhlaWdodCA9PT0gMCkge1xuICAgICAgICBpZiAobG9nKSBjb25zb2xlLmxvZygnQGdldElzT3BlblBvc3RzIEEgJyArICcgJyArIGV4dGVuc2lvbkhlaWdodCArICcgJyArIGhlaWdodCk7XG4gICAgICAgIGlmIChhbCkgYWxlcnQoJ0BnZXRJc09wZW5Qb3N0cyBBICcgKyAnICcgKyBleHRlbnNpb25IZWlnaHQgKyAnICcgKyBoZWlnaHQpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICB9XG5cbiAgICAgIC8vIE1FTU86IOOCueODnuODm+OBp+WFpeWKm+ODouODvOODieOBq+OBquOBo+OBn+aZguOBq2hlaWdodOOBjGV4dGVuc2lvbkhlaWdodOOCkuS4iuWbnuOCi+aZguOBjOOBguOCi+OBn+OCgVxuICAgICAgaWYgKGV4dGVuc2lvbkhlaWdodCA8PSBoZWlnaHQpIHtcbiAgICAgICAgaWYgKGxvZykgY29uc29sZS5sb2coJ0BnZXRJc09wZW5Qb3N0cyBDICcgKyAnICcgKyBleHRlbnNpb25IZWlnaHQgKyAnICcgKyBoZWlnaHQpO1xuICAgICAgICBpZiAoYWwpIGFsZXJ0KCdAZ2V0SXNPcGVuUG9zdHMgQyAnICsgJyAnICsgZXh0ZW5zaW9uSGVpZ2h0ICsgJyAnICsgaGVpZ2h0KTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChsb2cpIGNvbnNvbGUubG9nKCdAZ2V0SXNPcGVuUG9zdHMgRCAnICsgJyAnICsgZXh0ZW5zaW9uSGVpZ2h0ICsgJyAnICsgaGVpZ2h0KTtcbiAgICAgIGlmIChhbCkgYWxlcnQoJ0BnZXRJc09wZW5Qb3N0cyBEICcgKyAnICcgKyBleHRlbnNpb25IZWlnaHQgKyAnICcgKyBoZWlnaHQpO1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAobG9nKSBjb25zb2xlLmxvZygnQGdldElzT3BlblBvc3RzIEUgJyArICcgJyArIGV4dGVuc2lvbkhlaWdodCArICcgJyArIGhlaWdodCk7XG4gICAgICBpZiAoYWwpIGFsZXJ0KCdAZ2V0SXNPcGVuUG9zdHMgRSAnICsgJyAnICsgZXh0ZW5zaW9uSGVpZ2h0ICsgJyAnICsgaGVpZ2h0KTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIHN0YXRpYyBnZXRVaVVwZGF0ZWRPcGVuRmxncyh7IGFwcCwgdWkgfSwgY2FsbCA9ICcnKSB7XG4gICAgc3dpdGNoIChjYWxsKSB7XG4gICAgICBjYXNlICd0b2dnbGVNYWluJzpcbiAgICAgIGNhc2UgJ2hlYWRlckRldGFpbEljb24nOlxuICAgICAgICBzd2l0Y2ggKHVpLnNjcmVlblNpemUpIHtcbiAgICAgICAgICBjYXNlIFVpLnNjcmVlblNpemVTbWFsbExhYmVsOlxuICAgICAgICAgICAgdWkuaXNPcGVuRGV0YWlsID0gIXVpLmlzT3BlbkRldGFpbDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgVWkuc2NyZWVuU2l6ZU1pZGRsZUxhYmVsOlxuICAgICAgICAgICAgaWYgKHVpLmlzT3BlbkRldGFpbCkge1xuICAgICAgICAgICAgICBpZiAoYXBwLmRldGFpbENoID09PSBhcHAucm9vdENoKSB7XG4gICAgICAgICAgICAgICAgdWkuaXNPcGVuRGV0YWlsID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgdWkuaXNPcGVuTWVudSA9IHRydWU7XG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdWkuaXNPcGVuTWVudSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHVpLmlzT3BlbkRldGFpbCA9IGZhbHNlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB1aS5pc09wZW5NZW51ID0gZmFsc2U7XG4gICAgICAgICAgICAgIHVpLmlzT3BlbkRldGFpbCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgJ2hlYWRlck1lbnVJY29uJzpcbiAgICAgICAgc3dpdGNoICh1aS5zY3JlZW5TaXplKSB7XG4gICAgICAgICAgY2FzZSBVaS5zY3JlZW5TaXplTWlkZGxlTGFiZWw6XG4gICAgICAgICAgICBpZiAodWkuaXNPcGVuRGV0YWlsKSB7XG4gICAgICAgICAgICAgIHVpLmlzT3Blbk1lbnUgPSB0cnVlO1xuICAgICAgICAgICAgICB1aS5pc09wZW5EZXRhaWwgPSBmYWxzZTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHVpLmlzT3Blbk1lbnUgPSB0cnVlO1xuICAgICAgICAgICAgICB1aS5pc09wZW5EZXRhaWwgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnY2hhbmdlVGhyZWFkRGV0YWlsJzpcbiAgICAgIGNhc2UgJ3Bvc3QnOlxuICAgICAgICBzd2l0Y2ggKHVpLnNjcmVlblNpemUpIHtcbiAgICAgICAgICBjYXNlIFVpLnNjcmVlblNpemVTbWFsbExhYmVsOlxuICAgICAgICAgICAgdWkuaXNPcGVuRGV0YWlsID0gIXVpLmlzT3BlbkRldGFpbDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgVWkuc2NyZWVuU2l6ZU1pZGRsZUxhYmVsOlxuICAgICAgICAgICAgdWkuaXNPcGVuTWVudSA9IGZhbHNlO1xuICAgICAgICAgICAgdWkuaXNPcGVuRGV0YWlsID0gdHJ1ZTtcbiAgICAgICAgICBjYXNlIFVpLnNjcmVlblNpemVMYXJnZUxhYmVsOlxuICAgICAgICAgICAgdWkuaXNPcGVuTWVudSA9IHRydWU7XG4gICAgICAgICAgICB1aS5pc09wZW5EZXRhaWwgPSB0cnVlO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgfVxuICAgIHJldHVybiB1aTtcbiAgfVxuXG4gIHN0YXRpYyBpc0FjdGl2ZU11bHRpc3RyZWFtKHsgYXBwLCB1aSB9LCBjYWxsZWQgPSAnJykge1xuICAgIHJldHVybiB1aS5tZW51Q29tcG9uZW50ID09PSBVaS5tZW51Q29tcG9uZW50UmFua0xhYmVsICYmIGFwcC5kaXNwVGhyZWFkVHlwZSA9PT0gQXBwLmRpc3BUaHJlYWRUeXBlTXVsdGk7XG4gIH1cblxuICAvLyDln7rmnKzooajnpLrplqLpgKNcbiAgaUZyYW1lSWQ6IHN0cmluZztcbiAgd2lkdGg6IHN0cmluZyB8IG51bWJlcjtcbiAgaGVpZ2h0OiBzdHJpbmcgfCBudW1iZXI7XG4gIHBvc3RzSGVpZ2h0OiBzdHJpbmcgfCBudW1iZXI7XG4gIHNjcmVlblNpemU6ICdMQVJHRScgfCAnTUlERExFJyB8ICdTTUFMTCcgfCB1bmRlZmluZWQ7XG5cbiAgLy8gaWZyYW1l44Gu5ouh5by15qmf6IO96KGo56S644Gu5aC05ZCIXG4gIGV4dGVuc2lvbk1vZGU6ICdNb2RhbCcgfCAnQm90dG9tJyB8ICdFbWJlZCcgfCAnTm9uZSc7XG4gIGV4dGVuc2lvbldpZHRoOiBzdHJpbmcgfCBudW1iZXI7XG4gIGV4dGVuc2lvbkhlaWdodDogc3RyaW5nIHwgbnVtYmVyO1xuXG4gIGlzT3BlblBvc3RzOiBib29sZWFuO1xuICBpc09wZW5TZXR0aW5nOiBib29sZWFuO1xuICBpc09wZW5NZW51OiBib29sZWFuO1xuICBpc09wZW5EZXRhaWw6IGJvb2xlYW47XG4gIGlzT3Blbk5ld1Bvc3Q6IGJvb2xlYW47XG4gIGlzT3Blbk5vdGlmOiBib29sZWFuO1xuICBpc09wZW5Qb3N0c1N1cHBvcnRlcjogYm9vbGVhbjtcbiAgaXNPcGVuQm9hcmQ6IGJvb2xlYW47XG4gIGlzT3BlblNldENoTW9kYWw6IGJvb2xlYW47XG4gIGlzQnViYmxlUG9zdDogYm9vbGVhbjtcbiAgaXNEaXNwUG9zdHM6IGJvb2xlYW47XG4gIGlzT3BlbkxpbmtzOiBib29sZWFuO1xuICBpc1RyYW5zaXRpb246IGJvb2xlYW47XG5cbiAgLy8g44Kv44Oq44OD44Kv5oOF5aCxXG4gIGNsaWNrZWQ6IENsaWNrZWRUeXBlO1xuXG4gIC8vIGRldGFpbOaDheWgsVxuICBkZXRhaWxDaDogc3RyaW5nO1xuXG4gIC8vIEluZGV45oOF5aCxXG4gIG1lbnVDb21wb25lbnQ6ICdVc2VycycgfCAnSW5kZXgnIHwgJ0xvZ3MnIHwgJ1NldHRpbmcnO1xuXG4gIC8vIOWQhOODkeODvOODhOOBrueKtuaFiyjmloflrZfliJfliLblvqEpXG4gIHRocmVhZFNjcm9sbFk6IHN0cmluZyB8IG51bWJlcjtcbiAgb3BlbklubmVyTm90aWY6IGJvb2xlYW47XG4gIG9wZW5Mb2NrTWVudTogJ0Fib3VudCcgfCAnTGlrZScgfCAnU2hhcmUnIHwgJ05vJztcbiAgaW5wdXRQb3N0OiBzdHJpbmc7XG4gIGlucHV0U3RhbXBJZDogc3RyaW5nIHwgbnVtYmVyO1xuICBpbnB1dEN1cnJlbnRUaW1lOiBudW1iZXI7XG4gIGlucHV0U2VhcmNoOiBzdHJpbmc7XG5cbiAgaXNMb2FkaW5nOiBib29sZWFuO1xuXG4gIC8vIGlmcmFtZeebtOaOpeWfi+OCgei+vOOBv1xuICBpbmNsdWRlSWZyYW1lVGFnOiBib29sZWFuO1xuICBjb25zdHJ1Y3RvcihwYXJhbXM6IGFueSA9IHt9KSB7XG4gICAgc3VwZXIoKTtcbiAgICBjb25zdCBpRnJhbWVJZCA9IHBhcmFtcy5pRnJhbWVJZCA/IHBhcmFtcy5pRnJhbWVJZCA6ICcnO1xuICAgIGNvbnN0IHdpZHRoID0gVWkuZ2V0V2lkdGgocGFyYW1zKTtcbiAgICBjb25zdCBoZWlnaHQgPSBVaS5nZXRIZWlnaHQocGFyYW1zKTtcbiAgICBjb25zdCBwb3N0c0hlaWdodCA9IHBhcmFtcy5wb3N0c0hlaWdodCA/IHBhcmFtcy5wb3N0c0hlaWdodCA6IDA7XG4gICAgY29uc3Qgc2NyZWVuU2l6ZSA9IFVpLmdldFNjcmVlblNpemUod2lkdGgpO1xuICAgIGNvbnN0IGV4dGVuc2lvbk1vZGUgPSBwYXJhbXMuZXh0ZW5zaW9uTW9kZSA/IHBhcmFtcy5leHRlbnNpb25Nb2RlIDogVWkuZXh0ZW5zaW9uTW9kZU5vbmU7XG4gICAgY29uc3QgZXh0ZW5zaW9uV2lkdGggPSBwYXJhbXMuZXh0ZW5zaW9uV2lkdGggPyBwYXJhbXMuZXh0ZW5zaW9uV2lkdGggOiAnMCUnO1xuICAgIGNvbnN0IGV4dGVuc2lvbkhlaWdodCA9IHBhcmFtcy5leHRlbnNpb25IZWlnaHQgPyBwYXJhbXMuZXh0ZW5zaW9uSGVpZ2h0IDogMDtcblxuICAgIC8vIOWQhOODkeODvOODhOOBrueKtuaFiyjjg5Xjg6njgrDliLblvqEpXG4gICAgY29uc3QgdGhyZWFkU2Nyb2xsWSA9IHBhcmFtcyAmJiBwYXJhbXMudGhyZWFkU2Nyb2xsWSA/IHBhcmFtcy50aHJlYWRTY3JvbGxZIDogMDtcbiAgICBjb25zdCBpc09wZW5Qb3N0cyA9IFVpLmdldElzT3BlblBvc3RzKHtcbiAgICAgIGhlaWdodCxcbiAgICAgIGV4dGVuc2lvbk1vZGUsXG4gICAgICBleHRlbnNpb25IZWlnaHQsXG4gICAgfSk7XG4gICAgY29uc3QgaXNPcGVuU2V0dGluZyA9IHBhcmFtcy5pc09wZW5TZXR0aW5nID8gcGFyYW1zLmlzT3BlblNldHRpbmcgOiBmYWxzZTtcbiAgICBjb25zdCBpc09wZW5NZW51ID0gU2NoZW1hLmlzU2V0KHBhcmFtcy5pc09wZW5NZW51KSA/IHBhcmFtcy5pc09wZW5NZW51IDogVWkuZ2V0SXNPcGVuTWVudSh7IHNjcmVlblNpemUgfSk7XG4gICAgY29uc3QgaXNPcGVuRGV0YWlsID0gc2NyZWVuU2l6ZSA9PT0gVWkuc2NyZWVuU2l6ZURldGFpbExhYmVsID8gdHJ1ZSA6IFNjaGVtYS5pc1NldChwYXJhbXMuaXNPcGVuRGV0YWlsKSA/IHBhcmFtcy5pc09wZW5EZXRhaWwgOiBmYWxzZTtcbiAgICBjb25zdCBpc09wZW5OZXdQb3N0ID0gcGFyYW1zLmlzT3Blbk5ld1Bvc3QgPyBwYXJhbXMuaXNPcGVuTmV3UG9zdCA6IGZhbHNlO1xuICAgIGNvbnN0IGlzT3Blbk5vdGlmID0gcGFyYW1zLmlzT3Blbk5vdGlmID8gcGFyYW1zLmlzT3Blbk5vdGlmIDogZmFsc2U7XG4gICAgY29uc3QgaXNPcGVuUG9zdHNTdXBwb3J0ZXIgPSBTY2hlbWEuaXNTZXQocGFyYW1zLmlzT3BlblBvc3RzU3VwcG9ydGVyKSA/IHBhcmFtcy5pc09wZW5Qb3N0c1N1cHBvcnRlciA6IGZhbHNlO1xuICAgIGNvbnN0IGlzT3BlbkJvYXJkID0gU2NoZW1hLmlzU2V0KHBhcmFtcy5pc09wZW5Cb2FyZCkgPyBwYXJhbXMuaXNPcGVuQm9hcmQgOiBVaS5nZXRJc09wZW5Cb2FyZCh7IHNjcmVlblNpemUgfSk7XG4gICAgY29uc3QgaXNPcGVuU2V0Q2hNb2RhbCA9IFNjaGVtYS5pc1NldChwYXJhbXMuaXNPcGVuU2V0Q2hNb2RhbCkgPyBwYXJhbXMuaXNPcGVuU2V0Q2hNb2RhbCA6IGZhbHNlO1xuICAgIGNvbnN0IGlzQnViYmxlUG9zdCA9IFNjaGVtYS5pc1NldChwYXJhbXMuaXNCdWJibGVQb3N0KSA/IHBhcmFtcy5pc0J1YmJsZVBvc3QgOiB0cnVlO1xuICAgIGNvbnN0IGlzRGlzcFBvc3RzID0gU2NoZW1hLmlzU2V0KHBhcmFtcy5pc0Rpc3BQb3N0cykgPyBwYXJhbXMuaXNEaXNwUG9zdHMgOiBmYWxzZTtcbiAgICBjb25zdCBpc09wZW5MaW5rcyA9IFNjaGVtYS5pc1NldChwYXJhbXMuaXNPcGVuTGlua3MpID8gcGFyYW1zLmlzT3BlbkxpbmtzIDogZmFsc2U7XG4gICAgY29uc3QgaXNUcmFuc2l0aW9uID0gU2NoZW1hLmlzU2V0KHBhcmFtcy5pc1RyYW5zaXRpb24pID8gcGFyYW1zLmlzVHJhbnNpdGlvbiA6IHRydWU7XG4gICAgY29uc3QgbWVudUNvbXBvbmVudCA9IHBhcmFtcy5tZW51Q29tcG9uZW50ID8gcGFyYW1zLm1lbnVDb21wb25lbnQgOiBVaS5nZXREZWZhdWx0TWVudUNvbXBvbmVudCgpO1xuICAgIGNvbnN0IG9wZW5Mb2NrTWVudSA9IHBhcmFtcy5vcGVuTG9ja01lbnUgPyBwYXJhbXMub3BlbkxvY2tNZW51IDogVWkub3BlbkxvY2tNZW51TGFiZWxObztcbiAgICBjb25zdCBvcGVuSW5uZXJOb3RpZiA9IHBhcmFtcy5vcGVuSW5uZXJOb3RpZiA/IHBhcmFtcy5vcGVuSW5uZXJOb3RpZiA6ICcnO1xuXG4gICAgLy8g44Kv44Oq44OD44Kv5oOF5aCxXG4gICAgY29uc3QgY2xpY2tlZCA9IHBhcmFtcy5jbGlja2VkID8gcGFyYW1zLmNsaWNrZWQgOiAnJztcblxuICAgIC8vIGRldGFpbOaDheWgsVxuICAgIGNvbnN0IGRldGFpbENoID0gcGFyYW1zLmRldGFpbENoID8gcGFyYW1zLmRldGFpbENoIDogJy8nO1xuXG4gICAgLy8g5YWl5Yqb54q25oWLXG4gICAgY29uc3QgaW5wdXRQb3N0ID0gcGFyYW1zLmlucHV0UG9zdCA/IHBhcmFtcy5pbnB1dFBvc3QgOiAnJztcbiAgICBjb25zdCBpbnB1dFN0YW1wSWQgPSBwYXJhbXMuaW5wdXRTdGFtcElkID8gcGFyYW1zLmlucHV0U3RhbXBJZCA6IGZhbHNlO1xuICAgIGNvbnN0IGlucHV0Q3VycmVudFRpbWUgPSBwYXJhbXMuaW5wdXRDdXJyZW50VGltZSA/IHBhcmFtcy5pbnB1dEN1cnJlbnRUaW1lIDogMC4wO1xuICAgIGNvbnN0IGlucHV0U2VhcmNoID0gcGFyYW1zLmlucHV0U2VhcmNoID8gcGFyYW1zLmlucHV0U2VhcmNoIDogJyc7XG4gICAgY29uc3QgaXNMb2FkaW5nID0gU2NoZW1hLmlzU2V0KHBhcmFtcy5pc0xvYWRpbmcpID8gcGFyYW1zLmlzTG9hZGluZyA6IHRydWU7XG4gICAgcmV0dXJuIHRoaXMuY3JlYXRlKHtcbiAgICAgIGlGcmFtZUlkLFxuICAgICAgd2lkdGgsXG4gICAgICBoZWlnaHQsXG4gICAgICBwb3N0c0hlaWdodCxcbiAgICAgIHNjcmVlblNpemUsXG4gICAgICBleHRlbnNpb25Nb2RlLFxuICAgICAgZXh0ZW5zaW9uV2lkdGgsXG4gICAgICBleHRlbnNpb25IZWlnaHQsXG4gICAgICB0aHJlYWRTY3JvbGxZLFxuICAgICAgaXNPcGVuUG9zdHMsXG4gICAgICBpc09wZW5TZXR0aW5nLFxuICAgICAgaXNPcGVuTWVudSxcbiAgICAgIGlzT3BlbkRldGFpbCxcbiAgICAgIGlzT3Blbk5ld1Bvc3QsXG4gICAgICBpc09wZW5Ob3RpZixcbiAgICAgIGlzT3BlblBvc3RzU3VwcG9ydGVyLFxuICAgICAgaXNPcGVuQm9hcmQsXG4gICAgICBpc09wZW5TZXRDaE1vZGFsLFxuICAgICAgaXNCdWJibGVQb3N0LFxuICAgICAgaXNEaXNwUG9zdHMsXG4gICAgICBpc09wZW5MaW5rcyxcbiAgICAgIGlzVHJhbnNpdGlvbixcbiAgICAgIG1lbnVDb21wb25lbnQsXG4gICAgICBvcGVuTG9ja01lbnUsXG4gICAgICBvcGVuSW5uZXJOb3RpZixcbiAgICAgIGNsaWNrZWQsXG4gICAgICBkZXRhaWxDaCxcbiAgICAgIGlucHV0UG9zdCxcbiAgICAgIGlucHV0U3RhbXBJZCxcbiAgICAgIGlucHV0Q3VycmVudFRpbWUsXG4gICAgICBpbnB1dFNlYXJjaCxcbiAgICAgIGlzTG9hZGluZyxcbiAgICB9KTtcbiAgfVxufVxuIiwiaW1wb3J0IHByb2Nlc3MgZnJvbSAncHJvY2Vzcyc7XG5cbmltcG9ydCBtZWRpYVR5cGVzIGZyb20gJ2NvbW1vbi9tZWRpYVR5cGVzJztcblxuY29uc3QgZGV2ZWxvcG1lbnQgPSAnZGV2ZWxvcG1lbnQnO1xuY29uc3QgcHJvZHVjdGlvbiA9ICdwcm9kdWN0aW9uJztcbmNvbnN0IGVudiA9IHByb2Nlc3MuZW52WydFTlZJUk9NRU5UJ107XG5leHBvcnQgY29uc3QgbG9jYWxob3N0ID0gJ2xvY2FsaG9zdCc7XG5leHBvcnQgY29uc3QgcHJvZHVjdGhvc3QgPSAndGFsa24uaW8nO1xuZXhwb3J0IGNvbnN0IHRhbGtuTGl2ZU1lZGlhSG9zdCA9IGVudiA9PT0gZGV2ZWxvcG1lbnQgPyBsb2NhbGhvc3QgOiBwcm9kdWN0aG9zdDtcblxuLy8gdGFsa24gbGl2ZSBtZWRpYSBjYXRlZ29yaWVzLlxuZXhwb3J0IGNvbnN0IE1lZGlhVHlwZUNhdGVnb3J5QmFzZSA9ICdCYXNlIE1lZGlhJztcbmV4cG9ydCBjb25zdCBNZWRpYVR5cGVDYXRlZ29yeVJhbmtpbmcgPSAnUmFuayBNZWRpYSc7XG5leHBvcnQgY29uc3QgTWVkaWFUeXBlQ2F0ZWdvcnlCdXp6Q3ljbGUgPSAnQnV6eiBNZWRpYSc7XG5cbi8vIGRlZmF1bHQgbWVkaWEgdHlwZSBjYXRlZ29yeS5cbmV4cG9ydCBjb25zdCBkZWZhdWx0TWVkaWFUeXBlQ2F0ZWdvcnk6IE1lZGlhQ2F0ZWdvcnlUeXBlID0gTWVkaWFUeXBlQ2F0ZWdvcnlCdXp6Q3ljbGU7XG5cbi8vIHRhbGtuIGxpdmUgbWVkaWEgKHN1YmRvbWFpbikuXG5leHBvcnQgY29uc3QgTWVkaWFUeXBlQXJ0aXN0cyA9ICdhcnRpc3RzJztcbmV4cG9ydCBjb25zdCBNZWRpYVR5cGVDb250ZW50cyA9ICdjb250ZW50cyc7XG5leHBvcnQgY29uc3QgTWVkaWFUeXBlTXVzaWMgPSAnbXVzaWMnO1xuZXhwb3J0IGNvbnN0IE1lZGlhVHlwZU1vdmllcyA9ICdtb3ZpZXMnO1xuZXhwb3J0IGNvbnN0IE1lZGlhVHlwZUFwcHMgPSAnYXBwcyc7XG5leHBvcnQgY29uc3QgTWVkaWFUeXBlQm9va3MgPSAnYm9va3MnO1xuZXhwb3J0IGNvbnN0IE1lZGlhVHlwZU5ld3MgPSAnbmV3cyc7XG5leHBvcnQgY29uc3QgTWVkaWFUeXBlR2lybHNOZXdzID0gJ2dpcmxzLW5ld3MnO1xuZXhwb3J0IGNvbnN0IE1lZGlhVHlwZVRyZW5kV29yZCA9ICd0cmVuZC13b3JkJztcblxuZXhwb3J0IHR5cGUgTWVkaWFDYXRlZ29yeVR5cGUgPSB0eXBlb2YgTWVkaWFUeXBlQ2F0ZWdvcnlCYXNlIHwgdHlwZW9mIE1lZGlhVHlwZUNhdGVnb3J5UmFua2luZyB8IHR5cGVvZiBNZWRpYVR5cGVDYXRlZ29yeUJ1enpDeWNsZTtcblxuZXhwb3J0IHR5cGUgTWVkaWFDYXRlZ29yeUJhc2VCZWxvbmcgPSB0eXBlb2YgTWVkaWFUeXBlQXJ0aXN0cyB8IHR5cGVvZiBNZWRpYVR5cGVDb250ZW50cztcblxuZXhwb3J0IHR5cGUgTWVkaWFDYXRlZ29yeVJhbmtpbmdCZWxvbmcgPSB0eXBlb2YgTWVkaWFUeXBlTXVzaWMgfCB0eXBlb2YgTWVkaWFUeXBlTW92aWVzIHwgdHlwZW9mIE1lZGlhVHlwZUFwcHMgfCB0eXBlb2YgTWVkaWFUeXBlQm9va3M7XG5cbmV4cG9ydCB0eXBlIE1lZGlhQ2F0ZWdvcnlCdXp6Q3ljbGVCZWxvbmcgPSB0eXBlb2YgTWVkaWFUeXBlTmV3cyB8IHR5cGVvZiBNZWRpYVR5cGVHaXJsc05ld3MgfCB0eXBlb2YgTWVkaWFUeXBlVHJlbmRXb3JkO1xuXG5leHBvcnQgY29uc3QgTmV0d29ya0NhdGVnb3J5TGlzdEJhc2VCZWxvbmdUeXBlOiBNZWRpYUNhdGVnb3J5QmFzZUJlbG9uZ1tdID0gW01lZGlhVHlwZUFydGlzdHMsIE1lZGlhVHlwZUNvbnRlbnRzXTtcbmV4cG9ydCBjb25zdCBOZXR3b3JrQ2F0ZWdvcnlMaXN0UmFua2luZ0JlbG9uZ1R5cGU6IE1lZGlhQ2F0ZWdvcnlSYW5raW5nQmVsb25nW10gPSBbXG4gIE1lZGlhVHlwZU11c2ljLFxuICBNZWRpYVR5cGVNb3ZpZXMsXG4gIE1lZGlhVHlwZUFwcHMsXG4gIE1lZGlhVHlwZUJvb2tzLFxuXTtcbmV4cG9ydCBjb25zdCBOZXR3b3JrQ2F0ZWdvcnlMaXN0QnV6ekN5Y2xlQmVsb25nVHlwZTogTWVkaWFDYXRlZ29yeUJ1enpDeWNsZUJlbG9uZ1tdID0gW1xuICBNZWRpYVR5cGVOZXdzLFxuICBNZWRpYVR5cGVHaXJsc05ld3MsXG4gIE1lZGlhVHlwZVRyZW5kV29yZCxcbl07XG5cbmV4cG9ydCB0eXBlIE5ldHdvcmtDYXRlb2dyeUxpc3RCZWxvbmdUeXBlID0gTWVkaWFDYXRlZ29yeUJhc2VCZWxvbmdbXSB8IE1lZGlhQ2F0ZWdvcnlSYW5raW5nQmVsb25nW10gfCBNZWRpYUNhdGVnb3J5QnV6ekN5Y2xlQmVsb25nW107XG5cbnR5cGUgTmV0d29ya0NhdGVnb3J5TGlzdFR5cGUgPSBSZWNvcmQ8TWVkaWFDYXRlZ29yeVR5cGUsIE5ldHdvcmtDYXRlb2dyeUxpc3RCZWxvbmdUeXBlPjtcblxuZXhwb3J0IGNvbnN0IE5ldHdvcmtDYXRlZ29yeUxpc3Q6IE5ldHdvcmtDYXRlZ29yeUxpc3RUeXBlID0ge1xuICBbTWVkaWFUeXBlQ2F0ZWdvcnlCYXNlXTogTmV0d29ya0NhdGVnb3J5TGlzdEJhc2VCZWxvbmdUeXBlLFxuICBbTWVkaWFUeXBlQ2F0ZWdvcnlSYW5raW5nXTogTmV0d29ya0NhdGVnb3J5TGlzdFJhbmtpbmdCZWxvbmdUeXBlLFxuICBbTWVkaWFUeXBlQ2F0ZWdvcnlCdXp6Q3ljbGVdOiBOZXR3b3JrQ2F0ZWdvcnlMaXN0QnV6ekN5Y2xlQmVsb25nVHlwZSxcbn07XG5cbmV4cG9ydCB0eXBlIE1lZGlhVHlwZVN1YmRvbWFpbnMgPVxuICB8IHR5cGVvZiBNZWRpYVR5cGVBcnRpc3RzXG4gIHwgdHlwZW9mIE1lZGlhVHlwZUNvbnRlbnRzXG4gIHwgdHlwZW9mIE1lZGlhVHlwZU11c2ljXG4gIHwgdHlwZW9mIE1lZGlhVHlwZU1vdmllc1xuICB8IHR5cGVvZiBNZWRpYVR5cGVBcHBzXG4gIHwgdHlwZW9mIE1lZGlhVHlwZUJvb2tzXG4gIHwgdHlwZW9mIE1lZGlhVHlwZU5ld3NcbiAgfCB0eXBlb2YgTWVkaWFUeXBlR2lybHNOZXdzXG4gIHwgdHlwZW9mIE1lZGlhVHlwZVRyZW5kV29yZDtcblxuLy8gZGVmYXVsdCBtZWRpYSB0eXBlLlxuZXhwb3J0IGNvbnN0IGRlZmF1bHRNZWRpYVR5cGU6IE1lZGlhVHlwZVN1YmRvbWFpbnMgPSBNZWRpYVR5cGVOZXdzO1xuXG5leHBvcnQgdHlwZSBOZXR3b3JrVHlwZSA9IHtcbiAgc3ViRG9tYWluOiBNZWRpYVR5cGVTdWJkb21haW5zO1xuICBsYWJlbDogc3RyaW5nO1xuICBtZXRob2Q6ICdHRVQnIHwgJ1BPU1QnO1xuICBlbmRwb2ludDogc3RyaW5nO1xuICBoZWFkZXJzOiBIZWFkZXJzSW5pdDtcbiAgZGV2UG9ydDogbnVtYmVyO1xuICBjb3VudDogbnVtYmVyO1xuICBnZXRJbWFnZVBhcmFtczogc3RyaW5nO1xufTtcblxudHlwZSBOZXR3b3JrTGlzdFR5cGUgPSBSZWNvcmQ8TWVkaWFUeXBlU3ViZG9tYWlucywgTmV0d29ya1R5cGU+O1xuXG4vKlxuICBodHRwczovL3Jzcy5pdHVuZXMuYXBwbGUuY29tL2phLWpwXG4qL1xuLypcbiAgd2hlcmVcdOaknOe0ouOBp+S9v+eUqOOBleOCjOOCi+W4guWgtCAo5aC05omA44Go6KiA6KqeKSDjgpLpgbjmip7jgZnjgovjg4njg63jg4Pjg5fjg4Djgqbjg7Mg44Oh44OL44Ol44O844CCXG4gIHF1ZXJ5XHTmpJzntKLoqp7lj6XjgpLlhaXlipvjgZnjgovjg4bjgq3jgrnjg4gg44OV44Kj44O844Or44OJ44CCXG4gIGNhdGVnb3J5XHTnibnlrprjga7nqK7poZ7jga7ntZDmnpzjga7jg6zjg5njg6vjgpLkuIrjgZLjgovpmpvjgavkvb/nlKjjgZnjgovjg4Hjgqfjg4Pjgq8g44Oc44OD44Kv44K544CCIOOBn+OBqOOBiOOBsOOAgeWBpeW6t+ODi+ODpeODvOOCueOBruODqeODs+OCr+OCkuS4iuOBkuOCi+OBqOOAgeWBpeW6t+OBrumghuS9jeOBjOS4iuOBjOOCiuOBvuOBmeOAglxuICAgIE1heENsYXNzLCBXb3JsZCwgSmFwYW4sIEJ1c2luZXNzLCBFbnRlcnRhaW5tZW50LCBTcG9ydHMsIFNjaWVuY2VBbmRUZWNobm9sb2d5LCBQb2xpdGljcywgTGlmZVN0eWxlXG4gIHdoZW5cdOOCquODl+OCt+ODp+ODs+OBqOOBl+OBpuOAgeacgOi/keOBruaXpeOAgemAseOAgeOBvuOBn+OBr+aciOOBq+aknOe0ouOCkumZkOWumuOBmeOCi+OBn+OCgeOBruODieODreODg+ODl+ODgOOCpuODsyDjg6Hjg4vjg6Xjg7zjgIJcbiAgc2FmZVx0XCLmiJDkurrlkJHjgZFcIiDjga7ntZDmnpzjgpLjg5XjgqPjg6vjgr/jg7zjgafpmaTlpJbjgZnjgosgQmluZyDjga7jgrvjg7zjg5XjgrXjg7zjg4HmqZ/og73jgpLkvb/nlKjjgZnjgovjgYvjganjgYbjgYvjgpLmjIflrprjgZnjgovjg4Hjgqfjg4Pjgq8g44Oc44OD44Kv44K544CCXG4gIGNvdW50XHTpmqDjgZfjg5XjgqPjg7zjg6vjg4njgIIg5ZCE6KaB5rGC44Gr5a++44GX44Gm6L+U44GV44KM44KL5qSc57Si57WQ5p6c44Gu5pWw44CCIOWkieabtOOBmeOCi+OBqOOAgTEg44Oa44O844K444GC44Gf44KK44Gu57WQ5p6c44Gu6KGo56S65pWw44GM5aKX5rib44GX44G+44GZ44CCXG4gIG9mZnNldFx06Zqg44GX44OV44Kj44O844Or44OJ44CCIOimgeaxguOBq+OBiuOBkeOCi+acgOWIneOBruaknOe0oue1kOaenOOBruOCquODleOCu+ODg+ODiOOAguODmuODvOOCuOODs+OCsOOBq+S9v+eUqOOBleOCjOOBvuOBmeOAgiDmlrDjgZfjgYTopoHmsYLjgafjga8gMCDjgavjg6rjgrvjg4Pjg4jjgZXjgozjgb7jgZnjgIJcblxuICBodHRwczovL2RvY3MubWljcm9zb2Z0LmNvbS9lbi11cy9yZXN0L2FwaS9jb2duaXRpdmVzZXJ2aWNlcy1iaW5nc2VhcmNoL2JpbmctbmV3cy1hcGktdjctcmVmZXJlbmNlI25ld3MtY2F0ZWdvcmllcy1ieS1tYXJrZXRcbiovXG5cbmNvbnN0IE5ldHdvcmtBcnRpc3RzOiBOZXR3b3JrVHlwZSA9IHtcbiAgc3ViRG9tYWluOiAnYXJ0aXN0cycsXG4gIGxhYmVsOiAnQXJ0aXN0cycsXG4gIG1ldGhvZDogJ0dFVCcsXG4gIGVuZHBvaW50OiAnJyxcbiAgaGVhZGVyczoge30sXG4gIGRldlBvcnQ6IDQwMDEsXG4gIGdldEltYWdlUGFyYW1zOiAnJyxcbiAgY291bnQ6IDUwLFxufTtcblxuY29uc3QgTmV0d29ya0NvbnRlbnRzOiBOZXR3b3JrVHlwZSA9IHtcbiAgc3ViRG9tYWluOiAnY29udGVudHMnLFxuICBsYWJlbDogJ0NvbnRlbnRzJyxcbiAgbWV0aG9kOiAnR0VUJyxcbiAgZW5kcG9pbnQ6ICcnLFxuICBoZWFkZXJzOiB7fSxcbiAgZGV2UG9ydDogNDAwMixcbiAgZ2V0SW1hZ2VQYXJhbXM6ICcnLFxuICBjb3VudDogNTAsXG59O1xuXG5jb25zdCBOZXR3b3JrTXVzaWM6IE5ldHdvcmtUeXBlID0ge1xuICBzdWJEb21haW46ICdtdXNpYycsXG4gIGxhYmVsOiAnTXVzaWMgUmFuaycsXG4gIG1ldGhvZDogJ0dFVCcsXG4gIGVuZHBvaW50OiAnJyxcbiAgaGVhZGVyczoge30sXG4gIGRldlBvcnQ6IDUwMDEsXG4gIGdldEltYWdlUGFyYW1zOiAnJyxcbiAgY291bnQ6IDUwLFxufTtcblxuY29uc3QgTmV0d29ya01vdmllczogTmV0d29ya1R5cGUgPSB7XG4gIHN1YkRvbWFpbjogJ21vdmllcycsXG4gIGxhYmVsOiAnTW92aWVzIFJhbmsnLFxuICBtZXRob2Q6ICdHRVQnLFxuICBlbmRwb2ludDogJycsXG4gIGhlYWRlcnM6IHt9LFxuICBkZXZQb3J0OiA1MDAyLFxuICBnZXRJbWFnZVBhcmFtczogJycsXG4gIGNvdW50OiA1MCxcbn07XG5cbmNvbnN0IE5ldHdvcmtBcHBzOiBOZXR3b3JrVHlwZSA9IHtcbiAgc3ViRG9tYWluOiAnYXBwcycsXG4gIGxhYmVsOiAnQXBwcyBSYW5rJyxcbiAgbWV0aG9kOiAnR0VUJyxcbiAgZW5kcG9pbnQ6ICcnLFxuICBoZWFkZXJzOiB7fSxcbiAgZGV2UG9ydDogNTAwMyxcbiAgZ2V0SW1hZ2VQYXJhbXM6ICcnLFxuICBjb3VudDogNTAsXG59O1xuXG5jb25zdCBOZXR3b3JrQm9va3M6IE5ldHdvcmtUeXBlID0ge1xuICBzdWJEb21haW46ICdib29rcycsXG4gIGxhYmVsOiAnQm9va3MgUmFuaycsXG4gIG1ldGhvZDogJ0dFVCcsXG4gIGVuZHBvaW50OiAnJyxcbiAgaGVhZGVyczoge30sXG4gIGRldlBvcnQ6IDUwMDQsXG4gIGdldEltYWdlUGFyYW1zOiAnJyxcbiAgY291bnQ6IDUwLFxufTtcblxuY29uc3QgTmV0d29ya05ld3M6IE5ldHdvcmtUeXBlID0ge1xuICBzdWJEb21haW46ICduZXdzJyxcbiAgbGFiZWw6ICdOZXdzJyxcbiAgbWV0aG9kOiAnR0VUJyxcbiAgZW5kcG9pbnQ6IGBodHRwczovLyR7U3RyaW5nKG1lZGlhVHlwZXMubmV3cy5lbmRwb2ludEhvc3QpfWAsXG4gIGhlYWRlcnM6IHtcbiAgICAneC1yYXBpZGFwaS1ob3N0JzogU3RyaW5nKG1lZGlhVHlwZXMubmV3cy5lbmRwb2ludEhvc3QpLFxuICAgICd4LXJhcGlkYXBpLWtleSc6IG1lZGlhVHlwZXMubmV3cy5lbmRwb2ludEtleSxcbiAgICAndXNlUXVlcnlTdHJpbmcnOiAndHJ1ZScsXG4gIH0sXG4gIGRldlBvcnQ6IDYwMDEsXG4gIGdldEltYWdlUGFyYW1zOiAnJnc9MzAwJmRwcj0yJnFsdD0xOTAnLFxuICBjb3VudDogNTAsXG59O1xuXG5jb25zdCBOZXR3b3JrR2lybHNOZXdzOiBOZXR3b3JrVHlwZSA9IHtcbiAgc3ViRG9tYWluOiAnZ2lybHMtbmV3cycsXG4gIGxhYmVsOiAnR2lybHMgTmV3cycsXG4gIG1ldGhvZDogJ0dFVCcsXG4gIGVuZHBvaW50OiAnJyxcbiAgaGVhZGVyczoge30sXG4gIGRldlBvcnQ6IDYwMDIsXG4gIGdldEltYWdlUGFyYW1zOiAnJyxcbiAgY291bnQ6IDUwLFxufTtcblxuY29uc3QgTmV0d29ya1RyZW5kV29yZDogTmV0d29ya1R5cGUgPSB7XG4gIHN1YkRvbWFpbjogJ3RyZW5kLXdvcmQnLFxuICBsYWJlbDogJ1RyZW5kIFdvcmQnLFxuICBtZXRob2Q6ICdHRVQnLFxuICBlbmRwb2ludDogJycsXG4gIGhlYWRlcnM6IHt9LFxuICBkZXZQb3J0OiA2MDAzLFxuICBnZXRJbWFnZVBhcmFtczogJycsXG4gIGNvdW50OiA1MCxcbn07XG5cbmV4cG9ydCBjb25zdCBOZXR3b3JrTGlzdDogTmV0d29ya0xpc3RUeXBlID0ge1xuICBbTWVkaWFUeXBlQXJ0aXN0c106IE5ldHdvcmtBcnRpc3RzLFxuICBbTWVkaWFUeXBlQ29udGVudHNdOiBOZXR3b3JrQ29udGVudHMsXG4gIFtNZWRpYVR5cGVNdXNpY106IE5ldHdvcmtNdXNpYyxcbiAgW01lZGlhVHlwZU1vdmllc106IE5ldHdvcmtNb3ZpZXMsXG4gIFtNZWRpYVR5cGVBcHBzXTogTmV0d29ya0FwcHMsXG4gIFtNZWRpYVR5cGVCb29rc106IE5ldHdvcmtCb29rcyxcbiAgW01lZGlhVHlwZU5ld3NdOiBOZXR3b3JrTmV3cyxcbiAgW01lZGlhVHlwZUdpcmxzTmV3c106IE5ldHdvcmtHaXJsc05ld3MsXG4gIFtNZWRpYVR5cGVUcmVuZFdvcmRdOiBOZXR3b3JrVHJlbmRXb3JkLFxufTtcblxuZXhwb3J0IGNvbnN0IGdldE5ldHdvcmsgPSAobWVkaWFUeXBlOiBNZWRpYVR5cGVTdWJkb21haW5zKTogTmV0d29ya1R5cGUgPT4ge1xuICByZXR1cm4gTmV0d29ya0xpc3RbbWVkaWFUeXBlXSA/IE5ldHdvcmtMaXN0W21lZGlhVHlwZV0gOiBOZXR3b3JrTGlzdFtkZWZhdWx0TWVkaWFUeXBlXTtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRNZWRpYVR5cGUgPSAoaG9zdDogc3RyaW5nKTogTWVkaWFUeXBlU3ViZG9tYWlucyA9PiB7XG4gIGNvbnN0IGZpbmRDYWxsYmFrID1cbiAgICBlbnYgPT09IHByb2R1Y3Rpb25cbiAgICAgID8gKG1lZGlhVHlwZTogc3RyaW5nKSA9PiBob3N0LmluZGV4T2YoYCR7TmV0d29ya0xpc3RbbWVkaWFUeXBlIGFzIE1lZGlhVHlwZVN1YmRvbWFpbnNdLnN1YkRvbWFpbn0uJHtwcm9kdWN0aG9zdH1gKSA+PSAwXG4gICAgICA6IChtZWRpYVR5cGU6IHN0cmluZykgPT4gaG9zdC5pbmRleE9mKGAke2xvY2FsaG9zdH06JHtOZXR3b3JrTGlzdFttZWRpYVR5cGUgYXMgTWVkaWFUeXBlU3ViZG9tYWluc10uZGV2UG9ydH1gKSA+PSAwO1xuICBjb25zdCBtZWRpYVR5cGUgPSBPYmplY3Qua2V5cyhOZXR3b3JrTGlzdCkuZmluZChmaW5kQ2FsbGJhaykgYXMgTWVkaWFUeXBlU3ViZG9tYWlucztcbiAgcmV0dXJuIE5ldHdvcmtMaXN0W21lZGlhVHlwZV0gPyBtZWRpYVR5cGUgOiBkZWZhdWx0TWVkaWFUeXBlO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldE15SG9zdCA9IChtZWRpYVR5cGU6IE1lZGlhVHlwZVN1YmRvbWFpbnMpOiBzdHJpbmcgPT4ge1xuICByZXR1cm4gZW52ID09PSBwcm9kdWN0aW9uID8gYGh0dHBzOi8vJHttZWRpYVR5cGV9LiR7cHJvZHVjdGhvc3R9YCA6IGBodHRwOi8vJHtsb2NhbGhvc3R9OiR7Z2V0TmV0d29yayhtZWRpYVR5cGUpLmRldlBvcnR9YDtcbn07XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTY2hlbWEge1xuICBlcnJvclRocm93OiBhbnk7XG5cbiAgY29uc3RydWN0b3Iob3B0aW9uOiBhbnkgPSB7fSkge1xuICAgIC8qXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KFxuICAgICAgdGhpcyxcbiAgICAgICdfU0VUX0NPTFVNTlMnLFxuICAgICAge1xuICAgICAgICB2YWx1ZTogW10sXG4gICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZVxuICAgICAgfVxuICAgICk7XG4qL1xuICB9XG5cbiAgc3RhdGljIGdldFR5cGUodmFsdWU6IGFueSkge1xuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgcmV0dXJuIFwiTnVsbFwiO1xuICAgIH1cbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgcmV0dXJuIFwiVW5kZWZpbmVkXCI7XG4gICAgfVxuICAgIHJldHVybiB2YWx1ZS5jb25zdHJ1Y3Rvci5uYW1lO1xuICB9XG5cbiAgc3RhdGljIGlzU2V0KHZhbDogYW55KSB7XG4gICAgcmV0dXJuIFNjaGVtYS5nZXRUeXBlKHZhbCkgPT09IFwiVW5kZWZpbmVkXCIgfHwgU2NoZW1hLmdldFR5cGUodmFsKSA9PT0gXCJOdWxsXCIgPyBmYWxzZSA6IHRydWU7XG4gIH1cblxuICBzdGF0aWMgZ2V0Qm9vbCh2YWw6IGFueSkge1xuICAgIGlmICh0eXBlb2YgdmFsID09PSBcImJvb2xlYW5cIikgcmV0dXJuIHZhbDtcbiAgICByZXR1cm4gdmFsID09PSBcInRydWVcIiA/IHRydWUgOiBmYWxzZTtcbiAgfVxuXG4gIHN0YXRpYyBpc0Fub255bW91c0Z1bmMoZm4pIHtcbiAgICBjb25zdCBmblN0cmluZyA9IGZuLnRvU3RyaW5nKCk7XG5cbiAgICBpZiAoZm5TdHJpbmcgPT09IFwiZnVuY3Rpb24oKXt9XCIpIHJldHVybiB0cnVlO1xuICAgIGlmIChmblN0cmluZyA9PT0gXCJmdW5jdGlvbigpIHt9XCIpIHJldHVybiB0cnVlO1xuICAgIGlmIChmblN0cmluZyA9PT0gXCJmdW5jdGlvbiAoKXt9XCIpIHJldHVybiB0cnVlO1xuICAgIGlmIChmblN0cmluZyA9PT0gXCJmdW5jdGlvbiAoKSB7fVwiKSByZXR1cm4gdHJ1ZTtcbiAgICBpZiAoZm5TdHJpbmcgPT09IFwiKCk9Pnt9XCIpIHJldHVybiB0cnVlO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGNyZWF0ZShzdGF0ZTogYW55KSB7XG4gICAgY29uc3QgY2xhc3NOYW1lID0gdGhpcy5jb25zdHJ1Y3Rvci5uYW1lO1xuICAgIGNvbnN0IHN0YXRlVHlwZSA9IFNjaGVtYS5nZXRUeXBlKHN0YXRlKTtcbiAgICBsZXQgdmFsaWRNZXRob2RzID0ge307XG5cbiAgICBPYmplY3Qua2V5cyhzdGF0ZSkuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAvLyBQcm9wZXJ0aWVzIC5cbiAgICAgIGxldCB2YWx1ZXM7XG4gICAgICBsZXQgZGVmID0gbnVsbDtcbiAgICAgIGxldCB0eXBlOiBhbnk7XG4gICAgICBsZXQgaXNBY2NlcHROdWxsID0gZmFsc2U7XG4gICAgICBsZXQgaXNBY2NlcHRCbGFuayA9IGZhbHNlO1xuICAgICAgbGV0IHZhbGlkOiBhbnkgPSAoKSA9PiB7fTtcbiAgICAgIGxldCB2YWx1ZTogYW55ID0gbnVsbDtcblxuICAgICAgLy8gQXNzaWduIFByb3BlcnRpZXMgLlxuICAgICAgaWYgKFNjaGVtYS5nZXRUeXBlKHN0YXRlW2tleV0pID09PSBcIk9iamVjdFwiKSB7XG4gICAgICAgIHZhbHVlcyA9IHN0YXRlW2tleV07XG4gICAgICAgIGxldCBpc0VtcHR5T2JqZWN0ID0gT2JqZWN0LmtleXModmFsdWVzKS5sZW5ndGggPT09IDA7XG4gICAgICAgIGlzQWNjZXB0TnVsbCA9IHZhbHVlcy5pc0FjY2VwdE51bGwgPyB2YWx1ZXMuaXNBY2NlcHROdWxsIDogaXNBY2NlcHROdWxsO1xuICAgICAgICBpc0FjY2VwdEJsYW5rID0gdmFsdWVzLmlzQWNjZXB0QmxhbmsgPyB2YWx1ZXMuaXNBY2NlcHRCbGFuayA6IGlzQWNjZXB0Qmxhbms7XG4gICAgICAgIGRlZiA9ICFpc0VtcHR5T2JqZWN0ICYmIHZhbHVlcy5kZWYgPyB2YWx1ZXMuZGVmIDogZGVmO1xuICAgICAgICB2YWx1ZSA9ICFpc0VtcHR5T2JqZWN0ICYmICh2YWx1ZXMudmFsdWUgfHwgdmFsdWVzLnZhbHVlID09PSBcIlwiKSA/IHZhbHVlcy52YWx1ZSA6IHZhbHVlcztcbiAgICAgICAgdmFsdWUgPSBpc0VtcHR5T2JqZWN0ICYmIGRlZiA/IGRlZiA6IHZhbHVlO1xuICAgICAgICB0eXBlID0gU2NoZW1hLmdldFR5cGUodmFsdWUpO1xuICAgICAgICB2YWxpZCA9IHZhbHVlcy52YWxpZCA/IHZhbHVlcy52YWxpZCA6IHZhbGlkO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdmFsdWUgPSBzdGF0ZVtrZXldO1xuICAgICAgICBkZWYgPSB2YWx1ZTtcbiAgICAgICAgaXNBY2NlcHROdWxsID0gaXNBY2NlcHROdWxsO1xuICAgICAgICBpc0FjY2VwdEJsYW5rID0gaXNBY2NlcHRCbGFuaztcbiAgICAgICAgdHlwZSA9IFNjaGVtYS5nZXRUeXBlKHZhbHVlKTtcbiAgICAgICAgdmFsaWQgPSB2YWxpZDtcbiAgICAgIH1cblxuICAgICAgLy8gVmFsaWRhdGUgRnVuY3Rpb25zIC5cbiAgICAgIGNvbnN0IHZhbGlkRnVuYyA9IChfdmFsdWU6IGFueSkgPT4ge1xuICAgICAgICBsZXQgZXJyb3IgPSBudWxsO1xuICAgICAgICBjb25zdCBwb2ludGVyID0gYCR7Y2xhc3NOYW1lfS4ke2tleX1gO1xuICAgICAgICBjb25zdCB2YWxpZFZhbHVlID0gdmFsdWU7XG4gICAgICAgIGNvbnN0IHZhbGlkVHlwZSA9IHR5cGU7XG4gICAgICAgIGNvbnN0IHBhcmFtc1ZhbHVlID0gX3ZhbHVlO1xuICAgICAgICBjb25zdCBwYXJhbXNUeXBlID0gU2NoZW1hLmdldFR5cGUoX3ZhbHVlKTtcblxuICAgICAgICBpZiAocGFyYW1zVHlwZSAhPT0gdHlwZSkge1xuICAgICAgICAgIGVycm9yID0gYFNDSEVNQV9UWVBFIDogJHtwb2ludGVyfSBbdmFsaWRUeXBlOiAke3R5cGV9XVtwYXJhbXNUeXBlOiAke3BhcmFtc1R5cGV9XWA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzQWNjZXB0TnVsbCAmJiBfdmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgICBlcnJvciA9IGBTQ0hFTUFfSVNfQUNDRVBUX05VTEwgOiAgJHtwb2ludGVyfWA7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzQWNjZXB0QmxhbmsgJiYgX3ZhbHVlID09PSBcIlwiKSB7XG4gICAgICAgICAgZXJyb3IgPSBgU0NIRU1BX0lTX0FDQ0VQVF9CTEFOSyA6ICAke3BvaW50ZXJ9YDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoU2NoZW1hLmdldFR5cGUodmFsaWQpID09PSBcIkZ1bmN0aW9uXCIpIHtcbiAgICAgICAgICBpZiAodmFsaWQoX3ZhbHVlKSkge1xuICAgICAgICAgICAgZXJyb3IgPSBgU0NIRU1BX1lPVVJfVkFMSURfTUVUSE9EIDogICR7cG9pbnRlcn1gO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIHBvaW50ZXIsXG4gICAgICAgICAgdmFsaWRWYWx1ZSxcbiAgICAgICAgICB2YWxpZFR5cGUsXG4gICAgICAgICAgcGFyYW1zVmFsdWUsXG4gICAgICAgICAgcGFyYW1zVHlwZSxcbiAgICAgICAgICBlcnJvcixcbiAgICAgICAgfTtcbiAgICAgIH07XG5cbiAgICAgIGNvbnN0IHsgcG9pbnRlciwgdmFsaWRWYWx1ZSwgdmFsaWRUeXBlLCBwYXJhbXNWYWx1ZSwgcGFyYW1zVHlwZSwgZXJyb3IgfSA9IHZhbGlkRnVuYyh2YWx1ZSk7XG5cbiAgICAgIGlmIChlcnJvciA9PT0gbnVsbCkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywga2V5LCB7XG4gICAgICAgICAgZ2V0OiAoKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBzZXQ6IChfdmFsdWUpID0+IHtcbiAgICAgICAgICAgIC8vIHBvaW50ZXIsIHZhbGlkVmFsdWUsIHZhbGlkVHlwZSwgcGFyYW1zVmFsdWUsIHBhcmFtc1R5cGUsIGVycm9yXG4gICAgICAgICAgICBjb25zdCB2YWxpZFJlc3VsdCA9IHZhbGlkRnVuYyh2YWx1ZSk7XG4gICAgICAgICAgICBpZiAoZXJyb3IgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgdmFsdWUgPSBfdmFsdWU7XG4gICAgICAgICAgICAgIHJldHVybiB7IC4uLnRoaXMsIFtrZXldOiB2YWx1ZSB9O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdGhpcy52YWxpZFdhcm4odmFsaWRSZXN1bHQpO1xuICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICh0aGlzLmVycm9yVGhyb3cpIHtcbiAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oZXJyb3IpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBjYW5TZXQoa2V5OiBhbnksIHZhbGlkVmFsdWU6IGFueSkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBjdXJyZW50VmFsdWUgPSB0aGlzW2tleV07XG4gICAgICBpZiAoY3VycmVudFZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChjdXJyZW50VmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh2YWxpZFZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG5cbiAgICAgIGlmICh2YWxpZFZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuXG4gICAgICBjb25zdCB7IGVycm9yIH0gPSAodGhpc1trZXldID0gdmFsaWRWYWx1ZSk7XG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpc1trZXldID0gY3VycmVudFZhbHVlO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLndhcm4oXCJCQUQgQ0FOIFNFVCBLRVk6IFwiICsgdGhpcy5jb25zdHJ1Y3Rvci5uYW1lICsgXCIgXCIgKyBrZXkpO1xuICAgICAgY29uc29sZS53YXJuKFwiQkVGT0VSIFZBTFVFXCIpO1xuICAgICAgY29uc29sZS53YXJuKHR5cGVvZiB0aGlzW2tleV0pO1xuICAgICAgY29uc29sZS53YXJuKHRoaXNba2V5XSk7XG4gICAgICBjb25zb2xlLndhcm4oXCJBRlRFUiBWQUxVRVwiKTtcbiAgICAgIGNvbnNvbGUud2Fybih0eXBlb2YgdmFsaWRWYWx1ZSk7XG4gICAgICBjb25zb2xlLndhcm4odmFsaWRWYWx1ZSk7XG4gICAgICB0aHJvdyBgQkFEIENBTiBTRVQ6ICR7ZX1gO1xuICAgIH1cbiAgfVxuXG4gIG1lcmdlKHBhcmFtcyA9IHt9LCBpbW11dGFibGUgPSB0cnVlKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHBhcmFtc1R5cGUgPSBTY2hlbWEuZ2V0VHlwZShwYXJhbXMpO1xuICAgICAgY29uc3Qgb2JqS2V5cyA9IE9iamVjdC5rZXlzKHBhcmFtcyk7XG5cbiAgICAgIGlmIChvYmpLZXlzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgbGV0IG1lcmdlZE9iajogYW55ID0geyAuLi50aGlzIH07XG4gICAgICAgIG9iaktleXMuZm9yRWFjaCgoa2V5KSA9PiB7XG4gICAgICAgICAgaWYgKHRoaXNba2V5XSAhPT0gcGFyYW1zW2tleV0pIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmNhblNldChrZXksIHBhcmFtc1trZXldKSkge1xuICAgICAgICAgICAgICBtZXJnZWRPYmpba2V5XSA9IHBhcmFtc1trZXldO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgY29uc29sZS53YXJuKFwiQkFEIE1FUkdFIEEgOiBcIiArIGtleSArIFwiIFwiICsgcGFyYW1zW2tleV0gKyBcIiBcIiArIHR5cGVvZiBwYXJhbXNba2V5XSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcblxuICAgICAgICBpZiAocGFyYW1zVHlwZSA9PT0gXCJBcnJheVwiKSB7XG4gICAgICAgICAgbWVyZ2VkT2JqID0gT2JqZWN0LnZhbHVlcyhtZXJnZWRPYmopO1xuXG4gICAgICAgICAgLypcbiAgICAgICAgICAgIGNsYXNzIEEge1xuICAgICAgICAgICAgICBjb25zdHJ1Y3RvcigpIHsgIH1cbiAgICAgICAgICAgICAgcmVmcmVzaCgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3ICg8dHlwZW9mIEE+dGhpcy5jb25zdHJ1Y3Rvcik7IFxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgKi9cbiAgICAgICAgICByZXR1cm4gaW1tdXRhYmxlID8gbmV3ICg8dHlwZW9mIFNjaGVtYT50aGlzLmNvbnN0cnVjdG9yKShtZXJnZWRPYmopIDogbWVyZ2VkT2JqO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGlmIChpbW11dGFibGUpIHtcbiAgICAgICAgICAgIC8vY29uc29sZS5sb2coIG1lcmdlZE9iaiApO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyAoPHR5cGVvZiBTY2hlbWE+dGhpcy5jb25zdHJ1Y3RvcikobWVyZ2VkT2JqKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIG1lcmdlZE9iajtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBuZXcgKDx0eXBlb2YgU2NoZW1hPnRoaXMuY29uc3RydWN0b3IpKCk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgaWYgKHRoaXMuZXJyb3JUaHJvdykge1xuICAgICAgICBjb25zb2xlLndhcm4ocGFyYW1zKTtcbiAgICAgICAgY29uc29sZS53YXJuKGUpO1xuICAgICAgICB0aHJvdyBgQkFEIE1FUkdFIEIgOiAke1NjaGVtYS5nZXRUeXBlKHBhcmFtcyl9ICR7ZX1gO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS53YXJuKHBhcmFtcyk7XG4gICAgICAgIGNvbnNvbGUud2FybihlKTtcbiAgICAgICAgY29uc29sZS53YXJuKGBCQUQgTUVSR0UgQyA6ICR7U2NoZW1hLmdldFR5cGUocGFyYW1zKX0gJHtlfWApO1xuICAgICAgICByZXR1cm4gcGFyYW1zO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHRvSlNPTihvYmo6IGFueSA9IHRoaXMpIHtcbiAgICBsZXQganNvbk9iajogYW55ID0ge307XG4gICAgT2JqZWN0LmtleXMob2JqKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgIGxldCB2YWx1ZXM6IGFueSA9IG9ialtrZXldO1xuICAgICAgaWYgKHZhbHVlcy5jb25zdHJ1Y3Rvci5uYW1lID09PSBcIk9iamVjdFwiKSB7XG4gICAgICAgIGlmICghdmFsdWVzLnR5cGUgJiYgIXZhbHVlcy5kZWZhdWx0KSB7XG4gICAgICAgICAgdmFsdWVzID0gdGhpcy50b0pTT04odmFsdWVzKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAodmFsdWVzLmRlZmF1bHQgfHwgdmFsdWVzLmRlZmF1bHQgPT09IFwiXCIgfHwgdmFsdWVzLmRlZmF1bHQgPT09IDApIHtcbiAgICAgICAganNvbk9ialtrZXldID0gdmFsdWVzLmRlZmF1bHQ7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBqc29uT2JqW2tleV0gPSB2YWx1ZXM7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIGpzb25PYmo7XG4gIH1cblxuICBmb3JFYWNoKGZ1bmMpIHtcbiAgICByZXR1cm4gT2JqZWN0LnZhbHVlcyh0aGlzKS5mb3JFYWNoKGZ1bmMpO1xuICB9XG5cbiAgY29uY2F0KGZ1bmMpIHtcbiAgICByZXR1cm4gdGhpcy5yZXR1cm5JbW11dGFibGUoT2JqZWN0LnZhbHVlcyh0aGlzKS5jb25jYXQoZnVuYyksIGZ1bmMpO1xuICB9XG5cbiAgbWFwKGZ1bmMpIHtcbiAgICByZXR1cm4gdGhpcy5yZXR1cm5JbW11dGFibGUoT2JqZWN0LnZhbHVlcyh0aGlzKS5tYXAoZnVuYyksIGZ1bmMpO1xuICB9XG5cbiAgZmlsdGVyKGZ1bmMpIHtcbiAgICByZXR1cm4gdGhpcy5yZXR1cm5JbW11dGFibGUoT2JqZWN0LnZhbHVlcyh0aGlzKS5maWx0ZXIoZnVuYyksIGZ1bmMpO1xuICB9XG5cbiAgcmVkdWNlKGZ1bmMpIHtcbiAgICByZXR1cm4gdGhpcy5yZXR1cm5JbW11dGFibGUoT2JqZWN0LnZhbHVlcyh0aGlzKS5yZWR1Y2UoZnVuYyksIGZ1bmMpO1xuICB9XG5cbiAgZmluZChmdW5jKSB7XG4gICAgcmV0dXJuIE9iamVjdC52YWx1ZXModGhpcykuZmluZChmdW5jKTtcbiAgfVxuXG4gIHNvcnQoZnVuYykge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKHRoaXMpLnNvcnQoZnVuYyk7XG4gIH1cblxuICBwdXNoKHZhbHVlKSB7XG4gICAgY29uc3QgdmFsdWVzID0gT2JqZWN0LnZhbHVlcyh0aGlzKTtcbiAgICB2YWx1ZXMucHVzaCh2YWx1ZSk7XG4gICAgcmV0dXJuIHRoaXMucmV0dXJuSW1tdXRhYmxlKHZhbHVlcyk7XG4gIH1cblxuICB1bnNoaWZ0KHZhbHVlKSB7XG4gICAgY29uc3QgdmFsdWVzID0gT2JqZWN0LnZhbHVlcyh0aGlzKTtcbiAgICB2YWx1ZXMudW5zaGlmdCh2YWx1ZSk7XG4gICAgcmV0dXJuIHRoaXMucmV0dXJuSW1tdXRhYmxlKHZhbHVlcyk7XG4gIH1cblxuICBnZXRTaGlmdCgpIHtcbiAgICBjb25zdCB2YWx1ZXMgPSBPYmplY3QudmFsdWVzKHRoaXMpO1xuICAgIGNvbnN0IHJlc3VsdHMgPSB2YWx1ZXMuc2hpZnQoKTtcbiAgICByZXR1cm4gdGhpcy5yZXR1cm5JbW11dGFibGUocmVzdWx0cyk7XG4gIH1cblxuICBwb3AodmFsdWUpIHtcbiAgICBjb25zdCB2YWx1ZXM6IGFueSA9IE9iamVjdC52YWx1ZXModGhpcyk7XG4gICAgdmFsdWVzLnBvcCh2YWx1ZSk7XG4gICAgcmV0dXJuIHRoaXMucmV0dXJuSW1tdXRhYmxlKHZhbHVlcyk7XG4gIH1cblxuICByZXR1cm5JbW11dGFibGUodmFsdWVzLCBmdW5jID0gKCkgPT4ge30pIHtcbiAgICBpZiAodHlwZW9mIHZhbHVlcyA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgcmV0dXJuIG5ldyAoPHR5cGVvZiBTY2hlbWE+dGhpcy5jb25zdHJ1Y3RvcikoKTtcbiAgICB9IGVsc2UgaWYgKHZhbHVlcy5sZW5ndGggPT09IDAgJiYgT2JqZWN0LmtleXModGhpcykubGVuZ3RoID09PSAwKSB7XG4gICAgICBpZiAoU3RyaW5nKGZ1bmMpLmluZGV4T2YoXCJjcmVhdGVFbGVtZW50XCIpID4gMCkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gbmV3ICg8dHlwZW9mIFNjaGVtYT50aGlzLmNvbnN0cnVjdG9yKSh2YWx1ZXMpO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAodmFsdWVzWzBdICYmIHZhbHVlc1swXVtcIiQkdHlwZW9mXCJdICYmIHZhbHVlc1swXVtcIiQkdHlwZW9mXCJdLmNvbnN0cnVjdG9yLm5hbWUgPT09IFwiU3ltYm9sXCIpIHtcbiAgICAgIHJldHVybiB2YWx1ZXM7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBuZXcgKDx0eXBlb2YgU2NoZW1hPnRoaXMuY29uc3RydWN0b3IpKHZhbHVlcyk7XG4gICAgfVxuICB9XG5cbiAgdmFsaWRXYXJuKHZhbGlkUmVzdWx0KSB7XG4gICAgY29uc29sZS53YXJuKFwiIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcIik7XG4gICAgY29uc29sZS53YXJuKFwiI1wiICsgdmFsaWRSZXN1bHQucG9pbnRlcik7XG4gICAgY29uc29sZS53YXJuKFwiIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyNcIik7XG4gICAgY29uc29sZS53YXJuKFwiIyMjIGluaXRpYWxpemVkVmFsaWRUeXBlXCIpO1xuICAgIGNvbnNvbGUud2Fybih2YWxpZFJlc3VsdC52YWxpZFR5cGUpO1xuICAgIGNvbnNvbGUud2FybihcIiMjIyBpbml0aWFsaXplZFZhbGlkVmFsdWVcIik7XG4gICAgY29uc29sZS53YXJuKHZhbGlkUmVzdWx0LnZhbGlkVmFsdWUpO1xuICAgIGNvbnNvbGUud2FybihcIiMjIyBwYXJhbXNUeXBlXCIpO1xuICAgIGNvbnNvbGUud2Fybih2YWxpZFJlc3VsdC5wYXJhbXNUeXBlKTtcbiAgICBjb25zb2xlLndhcm4oXCIjIyMgcGFyYW1zVmFsdWVcIik7XG4gICAgY29uc29sZS53YXJuKHZhbGlkUmVzdWx0LnBhcmFtc1ZhbHVlKTtcbiAgICBjb25zb2xlLndhcm4oXCIjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjI1wiKTtcbiAgfVxufVxuIiwiaW1wb3J0IFNjaGVtYSBmcm9tICdjb21tb24vU2NoZW1hJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VxdWVuY2Uge1xuICBzdGF0aWMgZ2V0IFRBTEtOX1BST1RPQ09MKCkge1xuICAgIHJldHVybiAndGFsa246JztcbiAgfVxuICBzdGF0aWMgZ2V0IEhUVFBfUFJPVE9DT0woKSB7XG4gICAgcmV0dXJuICdodHRwOic7XG4gIH1cbiAgc3RhdGljIGdldCBIVFRQU19QUk9UT0NPTCgpIHtcbiAgICByZXR1cm4gJ2h0dHBzOic7XG4gIH1cbiAgc3RhdGljIGdldCBVTktOT1dOX1BST1RPQ09MKCkge1xuICAgIHJldHVybiAnPz8/PzonO1xuICB9XG4gIHN0YXRpYyBnZXQgQ0FUQ0hfTUVfS0VZKCkge1xuICAgIHJldHVybiAnQENBVENIX01FJztcbiAgfVxuICBzdGF0aWMgZ2V0IEFQSV9TRVBBUkFURV9JT19UWVBFX1NUQVJUKCkge1xuICAgIHJldHVybiAnWyc7XG4gIH1cbiAgc3RhdGljIGdldCBBUElfU0VQQVJBVEVfSU9fVFlQRV9FTkQoKSB7XG4gICAgcmV0dXJuICddJztcbiAgfVxuICBzdGF0aWMgZ2V0IEFQSV9SRVFVRVNUX1RZUEUoKSB7XG4gICAgcmV0dXJuICdSRVFVRVNUJztcbiAgfVxuICBzdGF0aWMgZ2V0IEFQSV9SRVNQT05TRV9UWVBFX0VNSVQoKSB7XG4gICAgcmV0dXJuICdFTUlUJztcbiAgfVxuICBzdGF0aWMgZ2V0IEFQSV9SRVNQT05TRV9UWVBFX0JST0FEQ0FTVCgpIHtcbiAgICByZXR1cm4gJ0JST0FEQ0FTVCc7XG4gIH1cbiAgc3RhdGljIGdldCBBUElfU0VUVVAoKSB7XG4gICAgcmV0dXJuICdBUElfU0VUVVAnO1xuICB9XG4gIHN0YXRpYyBnZXQgVU5LTk9XTigpIHtcbiAgICByZXR1cm4gJ1VOS05PV04nO1xuICB9XG4gIHN0YXRpYyBnZXQgQ09OTkVDVElPTl9TRVJWRVJfS0VZKCkge1xuICAgIHJldHVybiAnQ09OTkVDVElPTl9TRVJWRVInO1xuICB9XG4gIHN0YXRpYyBnZXQgQVBJX1RPX1NFUlZFUl9SRVFVRVNUKCkge1xuICAgIHJldHVybiBgQVBJX1RPX1NFUlZFUlske1NlcXVlbmNlLkFQSV9SRVFVRVNUX1RZUEV9XSR7U2VxdWVuY2UuTUVUSE9EX0NPTE9OfWA7XG4gIH1cbiAgc3RhdGljIGdldCBTRVJWRVJfVE9fQVBJX0VNSVQoKSB7XG4gICAgcmV0dXJuIGBTRVJWRVJfVE9fQVBJWyR7U2VxdWVuY2UuQVBJX1JFU1BPTlNFX1RZUEVfRU1JVH1dJHtTZXF1ZW5jZS5NRVRIT0RfQ09MT059YDtcbiAgfVxuICBzdGF0aWMgZ2V0IFNFUlZFUl9UT19BUElfQlJPQURDQVNUKCkge1xuICAgIHJldHVybiBgU0VSVkVSX1RPX0FQSVske1NlcXVlbmNlLkFQSV9SRVNQT05TRV9UWVBFX0JST0FEQ0FTVH1dJHtTZXF1ZW5jZS5NRVRIT0RfQ09MT059YDtcbiAgfVxuICBzdGF0aWMgZ2V0IEFQSV9UT19DTElFTlRfUkVRVUVTVCgpIHtcbiAgICByZXR1cm4gYEFQSV9UT19DTElFTlRbJHtTZXF1ZW5jZS5BUElfUkVRVUVTVF9UWVBFfV0ke1NlcXVlbmNlLk1FVEhPRF9DT0xPTn1gO1xuICB9XG4gIHN0YXRpYyBnZXQgQVBJX1RPX0NMSUVOVF9FTUlUKCkge1xuICAgIHJldHVybiBgQVBJX1RPX0NMSUVOVFske1NlcXVlbmNlLkFQSV9SRVNQT05TRV9UWVBFX0VNSVR9XSR7U2VxdWVuY2UuTUVUSE9EX0NPTE9OfWA7XG4gIH1cbiAgc3RhdGljIGdldCBBUElfVE9fQ0xJRU5UX0JST0FEQ0FTVCgpIHtcbiAgICByZXR1cm4gYEFQSV9UT19DTElFTlRbJHtTZXF1ZW5jZS5BUElfUkVTUE9OU0VfVFlQRV9CUk9BRENBU1R9XSR7U2VxdWVuY2UuTUVUSE9EX0NPTE9OfWA7XG4gIH1cbiAgc3RhdGljIGdldCBBUElfQlJPQURDQVNUX0NBTExCQUNLKCkge1xuICAgIHJldHVybiAndHVuZSc7XG4gIH1cbiAgc3RhdGljIGdldCBSRURVWF9BQ1RJT05fS0VZKCkge1xuICAgIHJldHVybiAndHlwZSc7XG4gIH1cbiAgc3RhdGljIGdldCBNRVRIT0RfQ09MT04oKSB7XG4gICAgcmV0dXJuICc6JztcbiAgfVxuICBzdGF0aWMgZ2V0IEFERF9DTElFTlRfQUNUSU9OX1BSRUZJWCgpIHtcbiAgICByZXR1cm4gJ0FQSV9UT19DTElFTlQnO1xuICB9XG4gIHN0YXRpYyBnZXQgbWFwKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0dW5lOiB7XG4gICAgICAgIHJlcXVlc3RQdWJsaWNTdGF0ZToge30sXG4gICAgICAgIHJlcXVlc3RQcml2YXRlU3RhdGU6IHtcbiAgICAgICAgICB0aHJlYWQ6IFsnY2gnLCAnaGFzU2xhc2gnLCAncHJvdG9jb2wnXSxcbiAgICAgICAgICBhcHA6IFsnbXVsdGlzdHJlYW0nLCAncm9vdENoJywgJ2Rpc3BUaHJlYWRUeXBlJywgJ2FjdGlvbmVkJywgJ29mZnNldEZpbmRJZCcsICdpc1RvZ2dsZU11bHRpc3RyZWFtJ10sXG4gICAgICAgIH0sXG4gICAgICAgIHJlc3BvbnNlRW1pdFN0YXRlOiB7IHVzZXI6IFsndWlkJ10sIHNldHRpbmc6ICcqJywgdGhyZWFkOiAnKicgfSxcbiAgICAgICAgcmVzcG9uc2VCcm9hZGNhc3RTdGF0ZTogeyB0aHJlYWQ6IFsnbGl2ZUNudCcsICdjaCddIH0sXG4gICAgICB9LFxuICAgICAgZmV0Y2hQb3N0czoge1xuICAgICAgICByZXF1ZXN0UHVibGljU3RhdGU6IHt9LFxuICAgICAgICByZXF1ZXN0UHJpdmF0ZVN0YXRlOiB7XG4gICAgICAgICAgdGhyZWFkOiBbJ2NoJywgJ3Byb3RvY29sJywgJ2hvc3QnLCAnaGFzU2xhc2gnXSxcbiAgICAgICAgICBhcHA6IFsnbXVsdGlzdHJlYW0nLCAncm9vdENoJywgJ2Rpc3BUaHJlYWRUeXBlJywgJ2FjdGlvbmVkJywgJ29mZnNldEZpbmRJZCcsICdpc1RvZ2dsZU11bHRpc3RyZWFtJ10sXG4gICAgICAgIH0sXG4gICAgICAgIHJlc3BvbnNlRW1pdFN0YXRlOiB7IHBvc3RzOiAnKicsIHRocmVhZDogJyonIH0sXG4gICAgICAgIHJlc3BvbnNlQnJvYWRjYXN0U3RhdGU6IHt9LFxuICAgICAgfSxcbiAgICAgIGdldE1vcmU6IHtcbiAgICAgICAgcmVxdWVzdFB1YmxpY1N0YXRlOiB7fSxcbiAgICAgICAgcmVxdWVzdFByaXZhdGVTdGF0ZToge1xuICAgICAgICAgIHRocmVhZDogWydjaCddLFxuICAgICAgICAgIGFwcDogWydtdWx0aXN0cmVhbScsICdkaXNwVGhyZWFkVHlwZScsICdvZmZzZXRGaW5kSWQnXSxcbiAgICAgICAgfSxcbiAgICAgICAgcmVzcG9uc2VFbWl0U3RhdGU6IHtcbiAgICAgICAgICBhcHA6IFsnZGlzcFRocmVhZFR5cGUnLCAnb2Zmc2V0RmluZElkJ10sXG4gICAgICAgICAgcG9zdHM6ICcqJyxcbiAgICAgICAgfSxcbiAgICAgICAgcmVzcG9uc2VCcm9hZGNhc3RTdGF0ZToge30sXG4gICAgICB9LFxuICAgICAgdXBkYXRlVGhyZWFkOiB7XG4gICAgICAgIHJlcXVlc3RQdWJsaWNTdGF0ZToge30sXG4gICAgICAgIHJlcXVlc3RQcml2YXRlU3RhdGU6IHtcbiAgICAgICAgICB0aHJlYWQ6IFsnY2gnLCAncHJvdG9jb2wnLCAnaG9zdCcsICdoYXNTbGFzaCddLFxuICAgICAgICB9LFxuICAgICAgICByZXNwb25zZUVtaXRTdGF0ZToge1xuICAgICAgICAgIHRocmVhZDogJyonLFxuICAgICAgICB9LFxuICAgICAgICByZXNwb25zZUJyb2FkY2FzdFN0YXRlOiB7fSxcbiAgICAgIH0sXG4gICAgICBjaGFuZ2VUaHJlYWQ6IHtcbiAgICAgICAgcmVxdWVzdFB1YmxpY1N0YXRlOiB7fSxcbiAgICAgICAgcmVxdWVzdFByaXZhdGVTdGF0ZToge1xuICAgICAgICAgIHRocmVhZDogWydjaCcsICdoYXNTbGFzaCcsICdwcm90b2NvbCddLFxuICAgICAgICAgIGFwcDogWyd0dW5lZCcsICdtdWx0aXN0cmVhbScsICdyb290Q2gnLCAnZGlzcFRocmVhZFR5cGUnLCAnYWN0aW9uZWQnLCAnb2Zmc2V0RmluZElkJywgJ2lzVG9nZ2xlTXVsdGlzdHJlYW0nXSxcbiAgICAgICAgfSxcbiAgICAgICAgcmVzcG9uc2VFbWl0U3RhdGU6IHsgdGhyZWFkOiAnKicgfSxcbiAgICAgICAgcmVzcG9uc2VCcm9hZGNhc3RTdGF0ZTogeyB0aHJlYWQ6IFsnbGl2ZUNudCcsICdjaCddIH0sXG4gICAgICB9LFxuICAgICAgY2hhbmdlVGhyZWFkRGV0YWlsOiB7XG4gICAgICAgIHJlcXVlc3RQdWJsaWNTdGF0ZToge30sXG4gICAgICAgIHJlcXVlc3RQcml2YXRlU3RhdGU6IHsgdGhyZWFkOiBbJ2NoJ10gfSxcbiAgICAgICAgcmVzcG9uc2VFbWl0U3RhdGU6IHsgdGhyZWFkOiAnKicgfSxcbiAgICAgICAgcmVzcG9uc2VCcm9hZGNhc3RTdGF0ZToge30sXG4gICAgICB9LFxuICAgICAgYWRkRmluZENoaWxkOiB7XG4gICAgICAgIHJlcXVlc3RQdWJsaWNTdGF0ZToge30sXG4gICAgICAgIHJlcXVlc3RQcml2YXRlU3RhdGU6IHsgdGhyZWFkOiBbJ2NoJ10gfSxcbiAgICAgICAgcmVzcG9uc2VFbWl0U3RhdGU6IHsgdGhyZWFkOiAnKicgfSxcbiAgICAgICAgcmVzcG9uc2VCcm9hZGNhc3RTdGF0ZToge30sXG4gICAgICB9LFxuICAgICAgcmFuazoge1xuICAgICAgICByZXF1ZXN0UHVibGljU3RhdGU6IHt9LFxuICAgICAgICByZXF1ZXN0UHJpdmF0ZVN0YXRlOiB7XG4gICAgICAgICAgYXBwOiBbJ2ZpbmRUeXBlJywgJ3Jvb3RDaCcsICdpc1JhbmtEZXRhaWxNb2RlJ10sXG4gICAgICAgIH0sXG4gICAgICAgIHJlc3BvbnNlRW1pdFN0YXRlOiB7IHJhbms6ICcqJyB9LFxuICAgICAgICByZXNwb25zZUJyb2FkY2FzdFN0YXRlOiB7fSxcbiAgICAgIH0sXG4gICAgICBwb3N0OiB7XG4gICAgICAgIHJlcXVlc3RQdWJsaWNTdGF0ZToge30sXG4gICAgICAgIHJlcXVlc3RQcml2YXRlU3RhdGU6IHtcbiAgICAgICAgICB1c2VyOiBbJ3VpZCcsICd1dHlwZSddLFxuICAgICAgICAgIGFwcDogWydpbnB1dFBvc3QnLCAnaW5wdXRTdGFtcElkJywgJ2lucHV0Q3VycmVudFRpbWUnLCAnZGlzcFRocmVhZFR5cGUnXSxcbiAgICAgICAgICB0aHJlYWQ6IFsnZmluZFR5cGUnLCAndGl0bGUnLCAncHJvdG9jb2wnLCAnY2gnLCAnY2hzJywgJ2Vtb3Rpb25zJywgJ2Zhdmljb24nLCAnY29udGVudFR5cGUnXSxcbiAgICAgICAgfSxcbiAgICAgICAgcmVzcG9uc2VFbWl0U3RhdGU6IHt9LFxuICAgICAgICByZXNwb25zZUJyb2FkY2FzdFN0YXRlOiB7IHBvc3RzOiAnKicsIHRocmVhZDogWydjaCcsICdlbW90aW9ucycsICdwb3N0Q250J10sIHVzZXI6IFsndWlkJ10gfSxcbiAgICAgIH0sXG4gICAgICB1cGRhdGVUaHJlYWRTZXJ2ZXJNZXRhczoge1xuICAgICAgICByZXF1ZXN0UHVibGljU3RhdGU6IHsgdGhyZWFkOiBbJ3NlcnZlck1ldGFzJ10gfSxcbiAgICAgICAgcmVxdWVzdFByaXZhdGVTdGF0ZToge1xuICAgICAgICAgIHRocmVhZDogWydob3N0JywgJ3Byb3RvY29sJywgJ2NoJ10sXG4gICAgICAgICAgdXNlcjogWyd1aWQnXSwgLy8g5oe45b+1IC5mb3JFYWNo44GV44KM44Gq44GE44Gu44Gn5LiA5pem44GT44Gu5b2i44Gr5L+u5q2jXG4gICAgICAgIH0sXG4gICAgICAgIHJlc3BvbnNlRW1pdFN0YXRlOiB7IHRocmVhZDogJyonIH0sXG4gICAgICAgIHJlc3BvbnNlQnJvYWRjYXN0U3RhdGU6IHt9LFxuICAgICAgfSxcbiAgICAgIGRpc2Nvbm5lY3Q6IHtcbiAgICAgICAgcmVxdWVzdFB1YmxpY1N0YXRlOiB7fSxcbiAgICAgICAgcmVxdWVzdFByaXZhdGVTdGF0ZToge30sXG4gICAgICAgIHJlc3BvbnNlRW1pdFN0YXRlOiB7fSxcbiAgICAgICAgcmVzcG9uc2VCcm9hZGNhc3RTdGF0ZTogeyB0aHJlYWQ6IFsnbGl2ZUNudCcsICdjaCddIH0sXG4gICAgICB9LFxuICAgIH07XG4gIH1cblxuICBzdGF0aWMgZ2V0U2VxdWVuY2VBY3Rpb25NYXAobWV0aG9kKTogeyBzZXF1ZW5jZTogc3RyaW5nOyBhY3Rpb25UeXBlOiBzdHJpbmc7IGFjdGlvbk5hbWU6IHN0cmluZyB9IHtcbiAgICBjb25zdCBzcGxpdGVkID0gbWV0aG9kLnNwbGl0KFNlcXVlbmNlLk1FVEhPRF9DT0xPTik7XG4gICAgY29uc3Qgc2VxdWVuY2UgPSBzcGxpdGVkWzBdLnNwbGl0KCdbJylbMF07XG4gICAgbGV0IGFjdGlvblR5cGU7XG5cbiAgICBpZiAoc3BsaXRlZFswXS5pbmRleE9mKGBbJHtTZXF1ZW5jZS5BUElfUkVRVUVTVF9UWVBFfV1gKSA+IDApIHtcbiAgICAgIGFjdGlvblR5cGUgPSBTZXF1ZW5jZS5BUElfUkVRVUVTVF9UWVBFO1xuICAgIH0gZWxzZSB7XG4gICAgICBhY3Rpb25UeXBlID1cbiAgICAgICAgc3BsaXRlZFswXS5pbmRleE9mKGBbJHtTZXF1ZW5jZS5BUElfUkVTUE9OU0VfVFlQRV9FTUlUfV1gKSA+IDBcbiAgICAgICAgICA/IFNlcXVlbmNlLkFQSV9SRVNQT05TRV9UWVBFX0VNSVRcbiAgICAgICAgICA6IFNlcXVlbmNlLkFQSV9SRVNQT05TRV9UWVBFX0JST0FEQ0FTVDtcbiAgICB9XG5cbiAgICBjb25zdCBhY3Rpb25OYW1lID0gc3BsaXRlZFsxXTtcbiAgICByZXR1cm4geyBzZXF1ZW5jZSwgYWN0aW9uVHlwZSwgYWN0aW9uTmFtZSB9O1xuICB9XG5cbiAgc3RhdGljIHVwZGF0ZUNhbGxiYWNrRXhlQ29uZGl0aW9uTWFwKGFjdGlvbk5hbWUpOiB7IGVtaXQ6IGJvb2xlYW47IGJyb2FkY2FzdDogYm9vbGVhbiB9IHtcbiAgICBsZXQgYWN0aXZlUmVzcG9uc2VNYXAgPSB7IGVtaXQ6IHRydWUsIGJyb2FkY2FzdDogdHJ1ZSB9O1xuICAgIGlmIChTZXF1ZW5jZS5tYXBbYWN0aW9uTmFtZV0pIHtcbiAgICAgIGFjdGl2ZVJlc3BvbnNlTWFwLmVtaXQgPSAhKE9iamVjdC5rZXlzKFNlcXVlbmNlLm1hcFthY3Rpb25OYW1lXS5yZXNwb25zZUVtaXRTdGF0ZSkubGVuZ3RoID4gMCk7XG4gICAgICBhY3RpdmVSZXNwb25zZU1hcC5icm9hZGNhc3QgPSAhKE9iamVjdC5rZXlzKFNlcXVlbmNlLm1hcFthY3Rpb25OYW1lXS5yZXNwb25zZUJyb2FkY2FzdFN0YXRlKS5sZW5ndGggPiAwKTtcbiAgICB9XG4gICAgcmV0dXJuIGFjdGl2ZVJlc3BvbnNlTWFwO1xuICB9XG5cbiAgc3RhdGljIGNvbnZlcnRTZXJ2ZXJUb0FwaUlvVHlwZShpRnJhbWVJZCwgYWN0aW9uVHlwZSkge1xuICAgIGlmIChhY3Rpb25UeXBlLmluZGV4T2YoYCR7U2VxdWVuY2UuQVBJX1NFUEFSQVRFX0lPX1RZUEVfU1RBUlR9JHtTZXF1ZW5jZS5BUElfUkVRVUVTVF9UWVBFfSR7U2VxdWVuY2UuQVBJX1NFUEFSQVRFX0lPX1RZUEVfRU5EfWApID49IDApIHtcbiAgICAgIHJldHVybiBTZXF1ZW5jZS5BUElfUkVRVUVTVF9UWVBFO1xuICAgIH1cbiAgICBpZiAoXG4gICAgICBhY3Rpb25UeXBlLmluZGV4T2YoXG4gICAgICAgIGAke1NlcXVlbmNlLkFQSV9TRVBBUkFURV9JT19UWVBFX1NUQVJUfSR7U2VxdWVuY2UuQVBJX1JFU1BPTlNFX1RZUEVfQlJPQURDQVNUfSR7U2VxdWVuY2UuQVBJX1NFUEFSQVRFX0lPX1RZUEVfRU5EfWBcbiAgICAgICkgPj0gMFxuICAgICkge1xuICAgICAgcmV0dXJuIFNlcXVlbmNlLkFQSV9SRVNQT05TRV9UWVBFX0JST0FEQ0FTVDtcbiAgICB9XG4gICAgaWYgKFxuICAgICAgYWN0aW9uVHlwZS5pbmRleE9mKGAke1NlcXVlbmNlLkFQSV9TRVBBUkFURV9JT19UWVBFX1NUQVJUfSR7U2VxdWVuY2UuQVBJX1JFU1BPTlNFX1RZUEVfRU1JVH0ke1NlcXVlbmNlLkFQSV9TRVBBUkFURV9JT19UWVBFX0VORH1gKSA+PVxuICAgICAgMFxuICAgICkge1xuICAgICAgcmV0dXJuIFNlcXVlbmNlLkFQSV9SRVNQT05TRV9UWVBFX0VNSVQ7XG4gICAgfVxuICAgIHJldHVybiBTZXF1ZW5jZS5BUElfU0VUVVA7XG4gIH1cblxuICBzdGF0aWMgY29udmVydEV4dFRvQ2xpZW50QWN0aW9uVHlwZShpRnJhbWVJZCwgYWN0aW9uVHlwZSkge1xuICAgIGFjdGlvblR5cGUgPSBTZXF1ZW5jZS5jb252ZXJ0QXBpVG9DbGllbnRBY3Rpb25UeXBlKGFjdGlvblR5cGUpO1xuICAgIHJldHVybiBhY3Rpb25UeXBlO1xuICB9XG5cbiAgc3RhdGljIGNvbnZlcnRBcGlUb0NsaWVudEFjdGlvblR5cGUoYWN0aW9uVHlwZSkge1xuICAgIGlmIChhY3Rpb25UeXBlLmluZGV4T2YoU2VxdWVuY2UuQVBJX1RPX1NFUlZFUl9SRVFVRVNUKSA9PT0gMCkge1xuICAgICAgcmV0dXJuIGFjdGlvblR5cGUucmVwbGFjZShTZXF1ZW5jZS5BUElfVE9fU0VSVkVSX1JFUVVFU1QsIFNlcXVlbmNlLkFQSV9UT19DTElFTlRfUkVRVUVTVCk7XG4gICAgfVxuICAgIGlmIChhY3Rpb25UeXBlLmluZGV4T2YoU2VxdWVuY2UuU0VSVkVSX1RPX0FQSV9FTUlUKSA9PT0gMCkge1xuICAgICAgcmV0dXJuIGFjdGlvblR5cGUucmVwbGFjZShTZXF1ZW5jZS5TRVJWRVJfVE9fQVBJX0VNSVQsIFNlcXVlbmNlLkFQSV9UT19DTElFTlRfRU1JVCk7XG4gICAgfVxuICAgIGlmIChhY3Rpb25UeXBlLmluZGV4T2YoU2VxdWVuY2UuU0VSVkVSX1RPX0FQSV9CUk9BRENBU1QpID09PSAwKSB7XG4gICAgICByZXR1cm4gYWN0aW9uVHlwZS5yZXBsYWNlKFNlcXVlbmNlLlNFUlZFUl9UT19BUElfQlJPQURDQVNULCBTZXF1ZW5jZS5BUElfVE9fQ0xJRU5UX0JST0FEQ0FTVCk7XG4gICAgfVxuICAgIHJldHVybiBhY3Rpb25UeXBlO1xuICB9XG5cbiAgc3RhdGljIGdldFJlcXVlc3RTdGF0ZShhY3Rpb25OYW1lLCByZWR1eFN0YXRlLCByZXF1ZXN0UGFyYW1zKSB7XG4gICAgY29uc3QgZW5kcG9pbnRLZXkgPSBhY3Rpb25OYW1lLnJlcGxhY2UoU2VxdWVuY2UuQVBJX1RPX1NFUlZFUl9SRVFVRVNULCAnJyk7XG4gICAgY29uc3QgeyByZXF1ZXN0UHVibGljU3RhdGUsIHJlcXVlc3RQcml2YXRlU3RhdGUgfSA9IFNlcXVlbmNlLm1hcFtlbmRwb2ludEtleV07XG4gICAgbGV0IHJlcXVlc3RTdGF0ZSA9IHsgW1NlcXVlbmNlLlJFRFVYX0FDVElPTl9LRVldOiBlbmRwb2ludEtleSB9O1xuXG4gICAgT2JqZWN0LmtleXMocmVxdWVzdFByaXZhdGVTdGF0ZSkuZm9yRWFjaCgoc3RhdGVLZXkpID0+IHtcbiAgICAgIGlmICghcmVxdWVzdFN0YXRlW3N0YXRlS2V5XSkgcmVxdWVzdFN0YXRlW3N0YXRlS2V5XSA9IHt9O1xuICAgICAgcmVxdWVzdFByaXZhdGVTdGF0ZVtzdGF0ZUtleV0uZm9yRWFjaCgoY29sdW1uTmFtZSkgPT4ge1xuICAgICAgICBpZiAoIXJlcXVlc3RTdGF0ZVtzdGF0ZUtleV1bY29sdW1uTmFtZV0pIHtcbiAgICAgICAgICBsZXQgdmFsdWUgPSByZWR1eFN0YXRlW3N0YXRlS2V5XVtjb2x1bW5OYW1lXTtcbiAgICAgICAgICBpZiAocmVxdWVzdFBhcmFtcyAmJiByZXF1ZXN0UGFyYW1zW3N0YXRlS2V5XSAmJiBTY2hlbWEuaXNTZXQocmVxdWVzdFBhcmFtc1tzdGF0ZUtleV1bY29sdW1uTmFtZV0pKSB7XG4gICAgICAgICAgICB2YWx1ZSA9IHJlcXVlc3RQYXJhbXNbc3RhdGVLZXldW2NvbHVtbk5hbWVdO1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXF1ZXN0U3RhdGVbc3RhdGVLZXldW2NvbHVtbk5hbWVdID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgT2JqZWN0LmtleXMocmVxdWVzdFB1YmxpY1N0YXRlKS5mb3JFYWNoKChzdGF0ZUtleSkgPT4ge1xuICAgICAgaWYgKCFyZXF1ZXN0U3RhdGVbc3RhdGVLZXldKSByZXF1ZXN0U3RhdGVbc3RhdGVLZXldID0ge307XG5cbiAgICAgIHJlcXVlc3RQdWJsaWNTdGF0ZVtzdGF0ZUtleV0uZm9yRWFjaCgoY29sdW1uTmFtZSkgPT4ge1xuICAgICAgICBpZiAoIXJlcXVlc3RTdGF0ZVtzdGF0ZUtleV1bY29sdW1uTmFtZV0pIHtcbiAgICAgICAgICByZXF1ZXN0U3RhdGVbc3RhdGVLZXldW2NvbHVtbk5hbWVdID0gcmVxdWVzdFBhcmFtcztcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlcXVlc3RTdGF0ZTtcbiAgfVxuXG4gIHN0YXRpYyBnZXRSZXNwb25zZVN0YXRlKHJlc3BvbnNlVHlwZSwgcmVxdWVzdFN0YXRlLCB1cGRhdGVTdGF0ZSkge1xuICAgIGNvbnN0IGVuZHBvaW50S2V5ID0gcmVxdWVzdFN0YXRlLnR5cGU7XG4gICAgY29uc3QgcmVzcG9uc2VTY2hlbWEgPSBTZXF1ZW5jZS5tYXBbZW5kcG9pbnRLZXldW2ByZXNwb25zZSR7cmVzcG9uc2VUeXBlfVN0YXRlYF07XG4gICAgbGV0IHJlc3BvbnNlU3RhdGUgPSB7IFtTZXF1ZW5jZS5SRURVWF9BQ1RJT05fS0VZXTogZW5kcG9pbnRLZXkgfTtcbiAgICBPYmplY3Qua2V5cyhyZXNwb25zZVNjaGVtYSkuZm9yRWFjaCgodXBkYXRlU3RhdGVLZXkpID0+IHtcbiAgICAgIGlmICh1cGRhdGVTdGF0ZVt1cGRhdGVTdGF0ZUtleV0pIHtcbiAgICAgICAgY29uc3QgY29sdW1uTmFtZXMgPSByZXNwb25zZVNjaGVtYVt1cGRhdGVTdGF0ZUtleV07XG4gICAgICAgIGxldCB1cGRhdGVTdGF0ZVZhbHVlID0gdXBkYXRlU3RhdGVbdXBkYXRlU3RhdGVLZXldO1xuXG4gICAgICAgIHN3aXRjaCAodXBkYXRlU3RhdGVWYWx1ZS5jb25zdHJ1Y3Rvci5uYW1lKSB7XG4gICAgICAgICAgY2FzZSAnbW9kZWwnOlxuICAgICAgICAgICAgdXBkYXRlU3RhdGVWYWx1ZSA9IHVwZGF0ZVN0YXRlVmFsdWUudG9KU09OKCk7XG4gICAgICAgICAgICBkZWxldGUgdXBkYXRlU3RhdGVWYWx1ZS5faWQ7XG4gICAgICAgICAgICBkZWxldGUgdXBkYXRlU3RhdGVWYWx1ZS5fX3Y7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjb2x1bW5OYW1lcyA9PT0gJyonKSB7XG4gICAgICAgICAgcmVzcG9uc2VTdGF0ZSA9IHtcbiAgICAgICAgICAgIC4uLnJlc3BvbnNlU3RhdGUsXG4gICAgICAgICAgICBbdXBkYXRlU3RhdGVLZXldOiB1cGRhdGVTdGF0ZVZhbHVlLFxuICAgICAgICAgIH07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29sdW1uTmFtZXMuZm9yRWFjaCgoY29sdW1uTmFtZSkgPT4ge1xuICAgICAgICAgICAgaWYgKHVwZGF0ZVN0YXRlW3VwZGF0ZVN0YXRlS2V5XVtjb2x1bW5OYW1lXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgIHJlc3BvbnNlU3RhdGUgPSB7XG4gICAgICAgICAgICAgICAgLi4ucmVzcG9uc2VTdGF0ZSxcbiAgICAgICAgICAgICAgICBbdXBkYXRlU3RhdGVLZXldOiB7XG4gICAgICAgICAgICAgICAgICAuLi5yZXNwb25zZVN0YXRlW3VwZGF0ZVN0YXRlS2V5XSxcbiAgICAgICAgICAgICAgICAgIFtjb2x1bW5OYW1lXTogdXBkYXRlU3RhdGVbdXBkYXRlU3RhdGVLZXldW2NvbHVtbk5hbWVdLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB0aHJvdyBgU0VRVUVOQ0UgRVJST1I6IE5PX1VQREFURV9TVEFURV9DT0xVTU5fTkFNRTogJHtyZXF1ZXN0U3RhdGUudHlwZX06ICR7dXBkYXRlU3RhdGVLZXl9LiR7Y29sdW1uTmFtZX1gO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aHJvdyBgU0VRVUVOQ0UgRVJST1I6IE5PX1VQREFURV9TVEFURV9LRVk6ICR7cmVxdWVzdFN0YXRlLnR5cGV9OiAke3VwZGF0ZVN0YXRlS2V5fWA7XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlU3RhdGU7XG4gIH1cblxuICBzdGF0aWMgZ2V0UmVxdWVzdEFjdGlvblN0YXRlKGFjdGlvbk5hbWUsIHJlcXVlc3RQYXJhbXMxID0gbnVsbCwgcmVxdWVzdFBhcmFtczIgPSBudWxsKSB7XG4gICAgaWYgKHR5cGVvZiByZXF1ZXN0UGFyYW1zMSA9PT0gJ3N0cmluZycgJiYgcmVxdWVzdFBhcmFtczIgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiB7IHR5cGU6IGFjdGlvbk5hbWUgfTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiByZXF1ZXN0UGFyYW1zMSA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIHJlcXVlc3RQYXJhbXMyID09PSAnb2JqZWN0Jykge1xuICAgICAgcmV0dXJuIHsgLi4ucmVxdWVzdFBhcmFtczEsIC4uLnJlcXVlc3RQYXJhbXMyLCB0eXBlOiBhY3Rpb25OYW1lIH07XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcmVxdWVzdFBhcmFtczEgPT09ICdzdHJpbmcnICYmIHR5cGVvZiByZXF1ZXN0UGFyYW1zMiA9PT0gJ29iamVjdCcpIHtcbiAgICAgIHJldHVybiB7IC4uLnJlcXVlc3RQYXJhbXMyLCB0eXBlOiBhY3Rpb25OYW1lIH07XG4gICAgfVxuICAgIHJldHVybiB7IC4uLnJlcXVlc3RQYXJhbXMxLCB0eXBlOiBhY3Rpb25OYW1lIH07XG4gIH1cbn1cbiIsImltcG9ydCBvcyBmcm9tICdvcyc7XG5pbXBvcnQgcHJvY2VzcyBmcm9tICdwcm9jZXNzJztcblxuaW1wb3J0IGRlZmluZSBmcm9tICcuL2RlZmluZSc7XG5cbmNvbnN0IHsgUFJPRFVDVElPTiwgREVWRUxPUE1FTlQsIFBST0RVQ1RJT05fRE9NQUlOLCBERVZFTE9QTUVOVF9ET01BSU4sIFNVQl9ET01BSU5TLCBQT1JUUyB9ID0gZGVmaW5lO1xuY29uc3QgYXBpVmVyID0gMTtcbmNvbnN0IGhvc3ROYW1lID0gb3MuaGFzT3duUHJvcGVydHkoJ2hvc3RuYW1lJykgPyBvcy5ob3N0bmFtZSgpIDogREVWRUxPUE1FTlRfRE9NQUlOO1xuY29uc3QgZW52ID0gZ2V0RW52KGhvc3ROYW1lKTtcbmNvbnN0IGZpbGVzID0ge1xuICBjbGllbnQ6ICd0YWxrbi5jbGllbnQuanMnLFxuICBhcGk6ICd0YWxrbi5hcGkuanMnLFxuICB3c1dvcmtlcjogJ3dzLmFwaS53b3JrZXIuanMnLFxuICBleHQ6ICd0YWxrbi5leHQuanMnLFxuICBjb3ZlcjogJ3RhbGtuLmNvdmVyLmpzJyxcbiAgdHVuZTogJ3RhbGtuLnR1bmUuanMnLFxuICBjb21wb25lbnRzOiAndGFsa24uY29tcG9uZW50cy5qcycsXG59O1xuY29uc3QgaXNEZXYgPSBlbnYgPT09IERFVkVMT1BNRU5UO1xuY29uc3QgZG9tYWluID0gZW52ID09PSBQUk9EVUNUSU9OID8gUFJPRFVDVElPTl9ET01BSU4gOiBERVZFTE9QTUVOVF9ET01BSU47XG5jb25zdCB3d3dVUkwgPSBgJHtTVUJfRE9NQUlOUy5XV1d9LiR7ZG9tYWlufWA7XG5jb25zdCBjb3ZlclVSTCA9IGAke1NVQl9ET01BSU5TLkNPVkVSfS4ke2RvbWFpbn1gO1xuY29uc3QgYXBpVVJMID0gYCR7U1VCX0RPTUFJTlMuQVBJfS4ke2RvbWFpbn1gO1xuY29uc3QgYXBpQWNjZXNzVVJMID0gaXNEZXYgPyBgJHtkb21haW59OiR7UE9SVFMuREVWRUxPUE1FTlRfQVBJfS8ke2ZpbGVzLmFwaX1gIDogYCR7YXBpVVJMfS92JHthcGlWZXJ9YDtcbmNvbnN0IGNsaWVudFVSTCA9IGlzRGV2ID8gYCR7ZG9tYWlufToke1BPUlRTLkRFVkVMT1BNRU5UX0NMSUVOVH0vJHtmaWxlcy5jbGllbnR9YCA6IGAke1NVQl9ET01BSU5TLkNMSUVOVH0uJHtkb21haW59YDtcbmNvbnN0IGRlc2NVUkwgPSBgJHtTVUJfRE9NQUlOUy5ERVNDfS4ke2RvbWFpbn1gO1xuY29uc3QgcG9ydGFsVVJMID0gYCR7U1VCX0RPTUFJTlMuUE9SVEFMfS4ke2RvbWFpbn1gO1xuY29uc3QgYXNzZXRzVVJMID0gYCR7U1VCX0RPTUFJTlMuQVNTRVRTfS4ke2RvbWFpbn1gO1xuY29uc3QgYXV0b1VSTCA9IGAke1NVQl9ET01BSU5TLkFVVE99LiR7ZG9tYWlufWA7XG5jb25zdCBleHRVUkwgPSBgJHtTVUJfRE9NQUlOUy5FWFR9LiR7ZG9tYWlufWA7XG5jb25zdCBjb21wVVJMID0gYCR7U1VCX0RPTUFJTlMuQ09NUH0uJHtkb21haW59YDtcbmNvbnN0IG93blVSTCA9IGAke1NVQl9ET01BSU5TLk9XTn0uJHtkb21haW59YDtcbmNvbnN0IG5ld3NVUkwgPSBgJHtTVUJfRE9NQUlOUy5ORVdTfS4ke2RvbWFpbn1gO1xuY29uc3QgdHVuZVVSTCA9IGAke1NVQl9ET01BSU5TLlRVTkV9LiR7ZG9tYWlufWA7XG5jb25zdCBjb21wb25lbnRzVVJMID0gYCR7U1VCX0RPTUFJTlMuQ09NUE9ORU5UU30uJHtkb21haW59YDtcbmNvbnN0IGJhbm5lclVSTCA9IGAke1NVQl9ET01BSU5TLkJBTk5FUn0uJHtkb21haW59YDtcbmNvbnN0IHRyYW5zYWN0aW9uVVJMID0gYCR7U1VCX0RPTUFJTlMuVFJBTlNBQ1RJT059LiR7ZG9tYWlufWA7XG5jb25zdCBhc3NldHNJbWdQYXRoID0gYCR7YXNzZXRzVVJMfS9pbWcvYDtcbmNvbnN0IGFzc2V0c0NvdmVyUGF0aCA9IGAke2Fzc2V0c1VSTH0vY292ZXIvYDtcbmNvbnN0IGFzc2V0c0ljb25QYXRoID0gYCR7YXNzZXRzVVJMfS9pY29uL2A7XG5jb25zdCBhc3NldHNKc1BhdGggPSBgJHthc3NldHNVUkx9L2pzL2A7XG5jb25zdCBzZXNzaW9uVVJMID0gYCR7U1VCX0RPTUFJTlMuU0VTU0lPTn0uJHtkb21haW59YDtcbmNvbnN0IGRlc2NyaXB0aW9uID0gJ3RhbGtuIGNhbiBzaGFyZSBjb21tZW50cyB3aXRoIHVzZXJzIHdhdGNoaW5nIHRoZSBzYW1lIFdFQiBwYWdlLiBQbGVhc2UgZW5qb3kgdGhlIHdvcmxkIG9mIHRhbGtuLic7XG5jb25zdCBscExhbmd1YWdlcyA9IFtcbiAgJ2VuJyxcbiAgJ3poJyxcbiAgJ2phJyxcbiAgJ2RlJyxcbiAgJ2ZyJyxcbiAgJ2hpJyxcbiAgJ3B0JyxcbiAgJ2l0JyxcbiAgJ3J1JyxcbiAgJ2tvJyxcbiAgJ2VzJyxcbiAgJ2lkJyxcbiAgJ3RyJyxcbiAgJ25sJyxcbiAgJ2FyJyxcbiAgJ3poLVRXJyxcbiAgJ3BsJyxcbiAgJ3N2JyxcbiAgJ3RoJyxcbiAgJ2ZhJyxcbiAgJ25uJyxcbiAgJ2dhJyxcbiAgJ2hlJyxcbiAgJ21yJyxcbl07XG5cbmNvbnN0IGRlZmF1bHRCaXJ0aGRheVVuaXh0aW1lID0gMTAwMDAwMDAwMDAwMDtcbmNvbnN0IGZpbmRPbmVUaHJlYWRBY3RpdmVIb3VyID0gMTtcbmNvbnN0IGZpbmRPbmVQb3N0Q250ID0gMzA7XG5jb25zdCBmaW5kT25lTGltaXRDbnQgPSAzMDA7XG5jb25zdCBvZ3BJbWFnZXMgPSB7XG4gIEh0bWw6IGAvLyR7YXNzZXRzSW1nUGF0aH10YWxrbl9sb2dvX2h0bWwucG5nYCxcbiAgTXVzaWM6IGAvLyR7YXNzZXRzSW1nUGF0aH10YWxrbl9sb2dvX211c2ljLnBuZ2AsXG4gIFZpZGVvOiBgLy8ke2Fzc2V0c0ltZ1BhdGh9dGFsa25fbG9nb192aWRlby5wbmdgLFxufTtcbmNvbnN0IGRlZmF1bHRGYXZpY29uID0gYC8vJHtTVUJfRE9NQUlOUy5BU1NFVFN9LiR7ZG9tYWlufS9mYXZpY29uLmljb2A7XG5cbmNvbnN0IGNvbmY6IGFueSA9IHtcbiAgZG9tYWluLFxuICBpc0RldixcbiAgZW52LFxuICBmaWxlcyxcbiAgaG9zdE5hbWUsXG4gIGFwaVVSTCxcbiAgYXBpQWNjZXNzVVJMLFxuICBjb3ZlclVSTCxcbiAgd3d3VVJMLFxuICBkZXNjVVJMLFxuICBwb3J0YWxVUkwsXG4gIGNsaWVudFVSTCxcbiAgYXNzZXRzVVJMLFxuICBhdXRvVVJMLFxuICBleHRVUkwsXG4gIGNvbXBVUkwsXG4gIG93blVSTCxcbiAgbmV3c1VSTCxcbiAgdHVuZVVSTCxcbiAgYmFubmVyVVJMLFxuICBjb21wb25lbnRzVVJMLFxuICB0cmFuc2FjdGlvblVSTCxcbiAgYXNzZXRzSW1nUGF0aCxcbiAgYXNzZXRzQ292ZXJQYXRoLFxuICBhc3NldHNJY29uUGF0aCxcbiAgYXNzZXRzSnNQYXRoLFxuICBzZXNzaW9uVVJMLFxuICBkZXNjcmlwdGlvbixcbiAgYXBpVmVyLFxuICBscExhbmd1YWdlcyxcbiAgZGVmYXVsdEJpcnRoZGF5VW5peHRpbWUsXG4gIGZpbmRPbmVUaHJlYWRBY3RpdmVIb3VyLFxuICBmaW5kT25lUG9zdENudCxcbiAgZmluZE9uZUxpbWl0Q250LFxuICBvZ3BJbWFnZXMsXG4gIGRlZmF1bHRGYXZpY29uLFxufTtcbmV4cG9ydCBkZWZhdWx0IHsgLi4uY29uZiB9O1xuXG4vLyBUT0RPOiBNb3ZlIHRvIHNlcnZlciBjb25mKCBub3QgdXNlIGZyb20gY2xpZW50ICkuXG5mdW5jdGlvbiBnZXRFbnYoaG9zdE5hbWUpIHtcbiAgLy8gZnJvbSBjbGllbnQuXG4gIGlmIChwcm9jZXNzLnRpdGxlID09PSAnYnJvd3NlcicpIHtcbiAgICBpZiAobG9jYXRpb24uaHJlZi5pbmRleE9mKGRlZmluZS5ERVZFTE9QTUVOVF9ET01BSU4pID49IDApIHtcbiAgICAgIGNvbnN0IHBvcnQgPSBOdW1iZXIobG9jYXRpb24ucG9ydCk7XG4gICAgICByZXR1cm4gcG9ydCA9PT0gZGVmaW5lLlBPUlRTLkRFVkVMT1BNRU5UX0NMSUVOVCB8fFxuICAgICAgICBwb3J0ID09PSBkZWZpbmUuUE9SVFMuREVWRUxPUE1FTlRfQVBJIHx8XG4gICAgICAgIHBvcnQgPT09IGRlZmluZS5QT1JUUy5ERVZFTE9QTUVOVF9DT1ZFUiB8fFxuICAgICAgICBwb3J0ID09PSBkZWZpbmUuUE9SVFMuREVWRUxPUE1FTlRfQ09NUE9ORU5UUyB8fFxuICAgICAgICBwb3J0ID09PSBkZWZpbmUuUE9SVFMuREVWRUxPUE1FTlRfVFVORVxuICAgICAgICA/IGRlZmluZS5ERVZFTE9QTUVOVFxuICAgICAgICA6IGRlZmluZS5MT0NBTEhPU1Q7XG4gICAgfVxuICAgIHJldHVybiBkZWZpbmUuUFJPRFVDVElPTjtcbiAgICAvLyBmcm9tIHNlcnZlci5cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gaG9zdE5hbWUuaW5kZXhPZihkZWZpbmUuQVdTX0hPU1RfS0VZKSA+PSAwID8gZGVmaW5lLlBST0RVQ1RJT04gOiBkZWZpbmUuREVWRUxPUE1FTlQ7XG4gIH1cbn1cbiIsImltcG9ydCBwcm9jZXNzIGZyb20gJ3Byb2Nlc3MnO1xuXG5jb25zdCBob3N0TmFtZSA9IHByb2Nlc3MuZW52LkhPU1ROQU1FID8gcHJvY2Vzcy5lbnYuSE9TVE5BTUUgOiAnbG9jYWxob3N0JztcbmNvbnN0IGRlZmluZTogYW55ID0ge1xuICBBUFBfTkFNRTogJ3RhbGtuJyxcbiAgUFJPRFVDVElPTjogJ1BST0RVQ1RJT04nLFxuICBMT0NBTEhPU1Q6ICdMT0NBTEhPU1QnLFxuICBERVZFTE9QTUVOVDogJ0RFVkVMT1BNRU5UJyxcbiAgUFJPRFVDVElPTl9JUDogaG9zdE5hbWUsXG4gIFBST0RVQ1RJT05fRE9NQUlOOiAndGFsa24uaW8nLFxuICBERVZFTE9QTUVOVF9ET01BSU46ICdsb2NhbGhvc3QnLFxuICBBV1NfSE9TVF9LRVk6ICdlYzIuaW50ZXJuYWwnLFxuICBQT1JUUzoge1xuICAgIEhUVFA6IDgwLFxuICAgIEhUVFBTOiA0NDMsXG4gICAgREVWRUxPUE1FTlRfQ09WRVI6IDgwMDAsXG4gICAgREVWRUxPUE1FTlRfQVBJOiA4MDAxLFxuICAgIERFVkVMT1BNRU5UX0NPTVBPTkVOVFM6IDgwMDIsXG4gICAgREVWRUxPUE1FTlRfVFVORTogODAwMyxcbiAgICBERVZFTE9QTUVOVF9DTElFTlQ6IDgwODAsXG4gICAgUkVESVM6IDYzNzksXG4gICAgTU9OR086IDI3MDE3LFxuICAgIFNPQ0tFVF9JTzogMTA0NDMsXG4gIH0sXG4gIFNVQl9ET01BSU5TOiB7XG4gICAgV1dXOiAnd3d3JyxcbiAgICBBUEk6ICdhcGknLFxuICAgIERFU0M6ICdkZXNjJyxcbiAgICBQT1JUQUw6ICdwb3J0YWwnLFxuICAgIENMSUVOVDogJ2NsaWVudCcsXG4gICAgQVNTRVRTOiAnYXNzZXRzJyxcbiAgICBTRVNTSU9OOiAnc2Vzc2lvbicsXG4gICAgQVVUTzogJ2F1dG8nLFxuICAgIE9XTjogJ293bicsXG4gICAgTkVXUzogJ25ld3MnLFxuICAgIEJBTk5FUjogJ2Jhbm5lcicsXG4gICAgQ09WRVI6ICdjb3ZlcicsXG4gICAgUkFOSzogJ3JhbmsnLFxuICAgIEVYVDogJ2V4dCcsXG4gICAgQ09NUE9ORU5UUzogJ2NvbXBvbmVudHMnLFxuICAgIFRVTkU6ICd0dW5lJyxcbiAgICBUUkFOU0FDVElPTjogJ3RyYW5zYWN0aW9uJyxcbiAgfSxcbiAgQVBQX1RZUEVTOiB7XG4gICAgQ0xJRU5UOiAnQ0xJRU5UJyxcbiAgICBQT1JUQUw6ICdQT1JUQUwnLFxuICAgIEVYVEVOU0lPTjogJ0VYVEVOU0lPTicsXG4gICAgQVBJOiAnQVBJJyxcbiAgICBDT1ZFUjogJ0NPVkVSJyxcbiAgICBDT01QT05FTlRTOiAnQ09NUE9ORU5UUycsXG4gICAgVFVORTogJ1RVTkUnLFxuICB9LFxuICBVUkw6IHtcbiAgICB0d2l0dGVyOiAnaHR0cHM6Ly90d2l0dGVyLmNvbS8nLFxuICAgIGZhY2Vib29rOiAnaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tLycsXG4gICAgYXBwc3RvcmU6ICdodHRwczovL2l0dW5lcy5hcHBsZS5jb20vYXBwL2lkJyxcbiAgICBwbGF5c3RvcmU6ICdodHRwczovL3BsYXkuZ29vZ2xlLmNvbS9zdG9yZS9hcHBzL2RldGFpbHM/aWQ9JyxcbiAgICBjaHJvbWVFeHRlbnNpb246ICdodHRwczovL2Nocm9tZS5nb29nbGUuY29tL3dlYnN0b3JlL2RldGFpbC90YWxrbi1mb3ItY2hyb21lL2RrbmdubWRsY29mYW1icGZhY2NlcGJuamdmaG9sZ2JvP2hsPWVuJyxcbiAgfSxcbiAgdGFsa25DbGllbnRKczogJ3RhbGtuLmNsaWVudC5qcycsXG4gIHRhbGtuQXBpSnM6ICd0YWxrbi5hcGkuanMnLFxuICB0YWxrblJhbmtKczogJ3RhbGtuLnJhbmsuanMnLFxuICBub0lubmVyTm90aWY6ICdTb3JyeSwgTm8gRnVuY3Rpb24uJyxcbiAgYmFubmVyQ2xhc3M6ICd0YWxrbl9iYW5uZXInLFxuICBzdG9yYWdlS2V5OiB7XG4gICAgYmFzZUtleTogJ0B0YWxrbkAnLFxuICAgIHBvc3RzVGltZWxpbmVaZXJvOiAncG9zdHNUaW1lbGluZVplcm8nLFxuICAgIHBvc3RzVGltZWxpbmU6ICdwb3N0c1RpbWVsaW5lJyxcbiAgICBwb3N0c1NpbmdsZTogJ3Bvc3RzU2luZ2xlJyxcbiAgICBwb3N0c011bHRpOiAncG9zdHNNdWx0aScsXG4gICAgcG9zdHNDaGlsZDogJ3Bvc3RzQ2hpbGQnLFxuICAgIHBvc3RzTG9nczogJ3Bvc3RzTG9ncycsXG4gICAgdGhyZWFkczogJ3RocmVhZHMnLFxuICB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgZGVmaW5lO1xuIiwiY29uc3QgbWVkaWFUeXBlcyA9IHtcbiAgbmV3czoge1xuICAgIGVuZHBvaW50SG9zdDogJ21pY3Jvc29mdC1henVyZS1iaW5nLW5ld3Mtc2VhcmNoLXYxLnAucmFwaWRhcGkuY29tJyxcbiAgICBlbmRwb2ludFNlYXJjaEhvc3Q6ICdtaWNyb3NvZnQtYXp1cmUtYmluZy1uZXdzLXNlYXJjaC12MS5wLnJhcGlkYXBpLmNvbS9zZWFyY2g/cT0nLFxuICAgIGVuZHBvaW50S2V5OiAnMmNhMjU4MTNjMG1zaDlkYjQ4M2MzNTMwYzE0M3AxMDA5YmRqc25kZTUwYjY1NzVjZjEnLFxuICB9LFxuICBtdXNpYzoge1xuICAgIGVuZHBvaW50SG9zdDogJ2h0dHBzOi8vcnNzLml0dW5lcy5hcHBsZS5jb20vYXBpL3YxLyR7Y291bnRyeX0vJHttZWRpYX0vJHtnZW5yZX0vYWxsLyR7bGltaXR9L2V4cGxpY2l0Lmpzb24nLFxuICAgIGVuZHBvaW50U2VhcmNoSG9zdDogJycsXG4gICAgZW5kcG9pbnRLZXk6ICcnLFxuICB9LFxufTtcblxuZXhwb3J0IGRlZmF1bHQgbWVkaWFUeXBlcztcbiIsImV4cG9ydCBjb25zdCBjb25maWdVc2VyQ2F0ZWdvcnlDaExpbWl0ID0gMTA7XG5leHBvcnQgY29uc3QgY29uZmlnU3Rvcmllc0xpbWl0ID0gMTA7XG5leHBvcnQgdHlwZSBTdG9yaWVzSW5kZXhUeXBlID0ge1xuICB0aXRsZTogc3RyaW5nO1xuICBleWVDYXRjaDogc3RyaW5nO1xuICBpbnRlcnZpZXc6IHN0cmluZztcbiAgY2g/OiBzdHJpbmc7XG4gIG5vPzogbnVtYmVyO1xufTtcblxuZXhwb3J0IHR5cGUgQ29uZmlnVHlwZSA9IHtcbiAgdmVyc2lvbjogc3RyaW5nO1xuICBzdG9yaWVzSW5kZXg6IFN0b3JpZXNJbmRleFR5cGVbXTtcbiAgdXNlckNhdGVnb3J5Q2hzOiBzdHJpbmdbXTtcbiAgZmF2aWNvbjogc3RyaW5nO1xuICBvZ3BJbWFnZTogc3RyaW5nO1xuICBpYW1UYWdzOiBzdHJpbmdbXTtcbiAgcmVsYXRpb25UYWdzOiBzdHJpbmdbXTtcbn07XG5cbmV4cG9ydCBjb25zdCBjb25maWdJbml0OiBDb25maWdUeXBlID0ge1xuICB2ZXJzaW9uOiAnMS4wLjAnLFxuICBzdG9yaWVzSW5kZXg6IFtdLFxuICB1c2VyQ2F0ZWdvcnlDaHM6IFtdLFxuICBmYXZpY29uOiAnJyxcbiAgb2dwSW1hZ2U6ICcnLFxuICBpYW1UYWdzOiBbXSxcbiAgcmVsYXRpb25UYWdzOiBbXSxcbn07XG5cbmV4cG9ydCBjb25zdCBzdG9yaWVzSW5kZXhJbml0OiBTdG9yaWVzSW5kZXhUeXBlID0ge1xuICB0aXRsZTogJycsXG4gIGV5ZUNhdGNoOiAnJyxcbiAgaW50ZXJ2aWV3OiAnJyxcbn07XG4iLCJpbXBvcnQgYXRvYiBmcm9tICdhdG9iJztcblxuaW1wb3J0IFVpIGZyb20gJ2NsaWVudC9zdG9yZS9VaSc7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgaXNVcmw6IChzdHIpID0+IHtcbiAgICBjb25zdCBwYXR0ZXJuID0gbmV3IFJlZ0V4cChcbiAgICAgICdeKGh0dHBzPzpcXFxcL1xcXFwvKT8nICsgLy8gcHJvdG9jb2xcbiAgICAgICAgJygoKFthLXpcXFxcZF0oW2EtelxcXFxkLV0qW2EtelxcXFxkXSkqKVxcXFwuKStbYS16XXsyLH18JyArIC8vIGRvbWFpbiBuYW1lXG4gICAgICAgICcoKFxcXFxkezEsM31cXFxcLil7M31cXFxcZHsxLDN9KSknICsgLy8gT1IgaXAgKHY0KSBhZGRyZXNzXG4gICAgICAgICcoXFxcXDpcXFxcZCspPyhcXFxcL1stYS16XFxcXGQlXy5+K10qKSonICsgLy8gcG9ydCBhbmQgcGF0aFxuICAgICAgICAnKFxcXFw/WzsmYS16XFxcXGQlXy5+Kz0tXSopPycgKyAvLyBxdWVyeSBzdHJpbmdcbiAgICAgICAgJyhcXFxcI1stYS16XFxcXGRfXSp8XFxcXC8pPyQnLCAvLyBmcmFnbWVudCBsb2NhdG9yXG4gICAgICAnaSdcbiAgICApOyAvLyBmcmFnbWVudCBsb2PDpWF0b3JcblxuICAgIHJldHVybiAhcGF0dGVybi50ZXN0KHN0cikgPyBmYWxzZSA6IHRydWU7XG4gIH0sXG4gIGdldFNhdmVGYXZpY29uTmFtZTogKGZpbGVOYW1lKSA9PiB7XG4gICAgaWYgKGZpbGVOYW1lKSB7XG4gICAgICBjb25zdCBfZmlsZU5hbWUgPSBmaWxlTmFtZS5yZXBsYWNlKC9cXHUwMDJmL2csICdfJyk7XG4gICAgICByZXR1cm4gX2ZpbGVOYW1lLmluZGV4T2YoJy5wbmcnKSA+IDAgPyBfZmlsZU5hbWUgOiBfZmlsZU5hbWUgKyAnLnBuZyc7XG4gICAgfVxuICB9LFxuICB0cmltUHg6ICh2YWx1ZSkgPT4ge1xuICAgIHJldHVybiB2YWx1ZS50b1N0cmluZygpLnJlcGxhY2UoJ3B4JywgJycpO1xuICB9LFxuICBnZXRVcHBlclByZWZpeDogKHN0cikgPT4ge1xuICAgIGxldCB0ZXh0ID0gc3RyLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgc3RyLnNsaWNlKDEpO1xuICAgIHJldHVybiB0ZXh0LnN1YnN0cmluZygwLCAxKS50b1VwcGVyQ2FzZSgpICsgdGV4dC5zdWJzdHJpbmcoMSk7XG4gIH0sXG4gIHRpbWVBZ29Gb3JtYXR0ZXI6ICh2YWx1ZSwgdW5pdCwgc3VmZml4LCBleHRlbnNpb25Nb2RlID0gVWkuZXh0ZW5zaW9uTW9kZU5vbmUpID0+IHtcbiAgICBsZXQgc2hvcnRVbml0ID0gU3RyaW5nKHVuaXQpO1xuICAgIHN3aXRjaCAoU3RyaW5nKHVuaXQpKSB7XG4gICAgICBjYXNlICd5ZWFyJzpcbiAgICAgICAgc2hvcnRVbml0ID0gJ1lSJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlICdtb250aCc6XG4gICAgICAgIHNob3J0VW5pdCA9ICdtbyc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnd2Vlayc6XG4gICAgICAgIHNob3J0VW5pdCA9ICd3ayc7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnaG91cic6XG4gICAgICAgIHNob3J0VW5pdCA9ICdocic7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnbWludXRlJzpcbiAgICAgICAgc2hvcnRVbml0ID0gJ21pbic7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSAnc2Vjb25kJzpcbiAgICAgICAgc2hvcnRVbml0ID0gJ3NlYyc7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgICBjb25zdCBkaXNwU3VmZml4ID0gZXh0ZW5zaW9uTW9kZSA9PT0gVWkuZXh0ZW5zaW9uTW9kZU5vbmUgPyBzdWZmaXggOiBzdWZmaXgucmVwbGFjZSgnYWdvJywgJycpO1xuICAgIHJldHVybiBgJHt2YWx1ZX0gJHtzaG9ydFVuaXR9ICR7ZGlzcFN1ZmZpeH1gO1xuICB9LFxuICBwYXJzZUp3dDogKHRva2VuKSA9PiB7XG4gICAgaWYgKHRva2VuID09PSBudWxsKSByZXR1cm4gbnVsbDtcbiAgICBjb25zdCBiYXNlNjRVcmwgPSB0b2tlbi5zcGxpdCgnLicpWzFdO1xuICAgIGNvbnN0IGJhc2U2NCA9IGJhc2U2NFVybC5yZXBsYWNlKC8tL2csICcrJykucmVwbGFjZSgvXy9nLCAnLycpO1xuICAgIGNvbnN0IGpzb25QYXlsb2FkID0gZGVjb2RlVVJJQ29tcG9uZW50KFxuICAgICAgYXRvYihiYXNlNjQpXG4gICAgICAgIC5zcGxpdCgnJylcbiAgICAgICAgLm1hcCgoYykgPT4ge1xuICAgICAgICAgIHJldHVybiAnJScgKyAoJzAwJyArIGMuY2hhckNvZGVBdCgwKS50b1N0cmluZygxNikpLnNsaWNlKC0yKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmpvaW4oJycpXG4gICAgKTtcbiAgICByZXR1cm4gSlNPTi5wYXJzZShqc29uUGF5bG9hZCk7XG4gIH0sXG4gIGRlZXBDb3B5OiAob2JqKSA9PiB7XG4gICAgcmV0dXJuIEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkob2JqKSk7XG4gIH0sXG4gIGRlZXBFcXVhbHM6IChvYmoxLCBvYmoyKSA9PiB7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KG9iajEpID09PSBKU09OLnN0cmluZ2lmeShvYmoyKTtcbiAgfSxcbiAgZ2V0QWdlQnlCaXJ0aGRheTogKGJpcnRoZGF5OiBudW1iZXIpOiBudW1iZXIgfCAnLScgPT4ge1xuICAgIGxldCByZXR1cm5BZ2UgPSB1bmRlZmluZWQ7XG4gICAgaWYgKGJpcnRoZGF5ICE9PSAwKSB7XG4gICAgICBjb25zdCBiaXJ0aERhdGUgPSBuZXcgRGF0ZShiaXJ0aGRheSk7XG4gICAgICBjb25zdCBub3dEYXRlID0gbmV3IERhdGUoKTtcbiAgICAgIGNvbnN0IGFnZSA9IG5vd0RhdGUuZ2V0RnVsbFllYXIoKSAtIGJpcnRoRGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgICAgY29uc3QgdGhpc1llYXJzQmlydGhkYXkgPSBuZXcgRGF0ZShub3dEYXRlLmdldEZ1bGxZZWFyKCksIGJpcnRoRGF0ZS5nZXRNb250aCgpLCBiaXJ0aERhdGUuZ2V0RGF0ZSgpKTtcbiAgICAgIHJldHVybkFnZSA9IGFnZSArICh0aGlzWWVhcnNCaXJ0aGRheS5nZXRUaW1lKCkgPiBub3dEYXRlLmdldFRpbWUoKSA/IC0xIDogMCk7XG4gICAgfVxuICAgIHJldHVybiByZXR1cm5BZ2UgPyByZXR1cm5BZ2UgOiAnLSc7XG4gIH0sXG59O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuXG5pbXBvcnQgQ29udGFpbmVyIGZyb20gJ2NvdmVyL2NvbnRhaW5lcic7XG5cbmNvbnN0IFJlbmRlciA9ICgpID0+IHtcbiAgUmVhY3RET00ucmVuZGVyKDxDb250YWluZXIgLz4sIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2RpdiN0YWxrbicpKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFJlbmRlcjtcbiIsImltcG9ydCBjb25mIGZyb20gJ2NvbW1vbi9jb25mJztcblxuY29uc3QgbWV0aG9kID0gJ1BPU1QnO1xuY29uc3QgbW9kZSA9ICdjb3JzJztcblxuZXhwb3J0IGNvbnN0IGpzb24gPSBhc3luYyAoYWN0aW9uLCBfYm9keSkgPT4ge1xuICBjb25zdCBib2R5ID0gSlNPTi5zdHJpbmdpZnkoX2JvZHkpO1xuICBpZiAoSlNPTi5wYXJzZShib2R5KSkge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYGh0dHBzOi8vJHtjb25mLmNvdmVyVVJMfS9hcGkvJHthY3Rpb259YCwge1xuICAgICAgbWV0aG9kLFxuICAgICAgbW9kZSxcbiAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgJ0FjY2VwdCc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQ7IGNoYXJzZXQ9dXRmLTgnLFxuICAgICAgfSxcbiAgICAgIGNhY2hlOiAnbm8tY2FjaGUnLFxuICAgICAgYm9keSxcbiAgICB9KTtcbiAgICByZXR1cm4gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICB9XG59O1xuXG5leHBvcnQgY29uc3QgZm9ybURhdGEgPSBhc3luYyAoYWN0aW9uLCBlbWFpbCwgYm9keSkgPT4ge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwczovLyR7Y29uZi5jb3ZlclVSTH0vYXBpLyR7YWN0aW9ufWAsIHtcbiAgICBtZXRob2QsXG4gICAgbW9kZSxcbiAgICBjYWNoZTogJ25vLWNhY2hlJyxcbiAgICBib2R5LFxuICB9KTtcbiAgaWYgKHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwKSB7XG4gICAgY29uc29sZS53YXJuKHJlc3BvbnNlKTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBqc29uLFxuICBmb3JtRGF0YSxcbn07XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgeyBGbGV4TGF5b3V0UHJvcHNUeXBlLCBmbGV4TGF5b3V0Q2VudGVyUHJvcHNJbml0IH0gZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9GbGV4JztcbmltcG9ydCAqIGFzIExheW91dCBmcm9tICdjb3Zlci9ub2Rlcy9MYXlvdXQnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG5leHBvcnQgY29uc3QgYnV0dG9uVGhlbWVIb3QgPSBzdHlsZXMuaG90Q29sb3I7XG5leHBvcnQgY29uc3QgYnV0dG9uVGhlbWVGbGF0ID0gc3R5bGVzLmZsYXRDb2xvcjtcbmV4cG9ydCBjb25zdCBidXR0b25UaGVtZUNvbGQgPSBzdHlsZXMuY29sZENvbG9yO1xuZXhwb3J0IGNvbnN0IGJ1dHRvblRoZW1lQnJpZ2h0ID0gc3R5bGVzLmJyaWdodENvbG9yO1xuZXhwb3J0IGNvbnN0IGJ1dHRvblRoZW1lQmFzZSA9IHN0eWxlcy5iYXNlQ29sb3I7XG5leHBvcnQgY29uc3QgYnV0dG9uVGhlbWVEZWZhdWx0ID0gc3R5bGVzLnRoZW1lQ29sb3I7XG5leHBvcnQgdHlwZSBCdXR0b25UaGVtZVR5cGUgPVxuICB8IHR5cGVvZiBidXR0b25UaGVtZURlZmF1bHRcbiAgfCB0eXBlb2YgYnV0dG9uVGhlbWVIb3RcbiAgfCB0eXBlb2YgYnV0dG9uVGhlbWVGbGF0XG4gIHwgdHlwZW9mIGJ1dHRvblRoZW1lQ29sZFxuICB8IHR5cGVvZiBidXR0b25UaGVtZUJhc2VcbiAgfCB0eXBlb2YgYnV0dG9uVGhlbWVCcmlnaHQ7XG5cbnR5cGUgQnV0dG9uUHJvcHNUeXBlID0ge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xuICBvbkNsaWNrPzogKCkgPT4gdm9pZDtcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xuICB0aGVtZT86IEJ1dHRvblRoZW1lVHlwZTtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICBhbmltYXRpb24/OiBib29sZWFuO1xufTtcblxuZXhwb3J0IHR5cGUgUHJvcHMgPSBGbGV4TGF5b3V0UHJvcHNUeXBlICYgTGF5b3V0LkxheW91dFByb3BzVHlwZSAmIEJ1dHRvblByb3BzVHlwZTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAocHJvcHM6IFByb3BzKSA9PiB7XG4gIGNvbnN0IFtkaWRNb3VudCwgc2V0RGlkTW91bnRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBwOiBQcm9wcyA9IHtcbiAgICAuLi5mbGV4TGF5b3V0Q2VudGVyUHJvcHNJbml0LFxuICAgIC4uLkxheW91dC5sYXlvdXRQcm9wc0luaXQsXG4gICAgdGhlbWU6IGJ1dHRvblRoZW1lRGVmYXVsdCxcbiAgICBhbmltYXRpb246IHRydWUsXG4gICAgY2xhc3NOYW1lOiAnQnV0dG9uJyxcbiAgICB3aWR0aDogJ2F1dG8nLFxuICAgIC4uLnByb3BzLFxuICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0RGlkTW91bnQodHJ1ZSk7XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxCdXR0b24gey4uLnB9IGRpZE1vdW50PXtkaWRNb3VudH0+XG4gICAgICB7cC5jaGlsZHJlbn1cbiAgICA8L0J1dHRvbj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxudHlwZSBCdXR0b25TdHlsZWRQcm9wc1R5cGUgPSB7XG4gIGRpZE1vdW50OiBib29sZWFuO1xufSAmIFByb3BzO1xuXG5leHBvcnQgY29uc3QgQnV0dG9uID0gc3R5bGVkLmJ1dHRvbjxCdXR0b25TdHlsZWRQcm9wc1R5cGU+YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtaW4taGVpZ2h0OiAke3N0eWxlcy5iYXNlSGVpZ2h0fXB4O1xuICAke0xheW91dC5MYXlvdXRDc3N9O1xuICBwYWRkaW5nOiAke3N0eWxlcy5kb3VibGVQYWRkaW5nfXB4ICR7c3R5bGVzLmRvdWJsZVBhZGRpbmcgKiAyfXB4O1xuICBjb2xvcjogJHsocHJvcHMpID0+IGdldENvbG9yKHByb3BzKX07XG4gIG91dGxpbmU6IG5vbmU7XG4gIGN1cnNvcjogJHsocHJvcHMpID0+IChwcm9wcy5kaXNhYmxlZCB8fCBwcm9wcy5vbkNsaWNrID09PSB1bmRlZmluZWQgPyAnbm9ybWFsJyA6ICdwb2ludGVyJyl9O1xuICBiYWNrZ3JvdW5kOiAkeyhwcm9wcykgPT4gZ2V0QmFja2dyb3VuZChwcm9wcyl9O1xuICBib3JkZXI6ICR7KHByb3BzKSA9PiAocHJvcHMuZGlzYWJsZWQgPyAxIDogMCl9cHggc29saWQgJHtzdHlsZXMuYm9yZGVyQ29sb3J9O1xuICBib3JkZXItcmFkaXVzOiA3cHg7XG4gIHRyYW5zaXRpb246ICR7KHByb3BzKSA9PiAocHJvcHMuZGlkTW91bnQgJiYgcHJvcHMuYW5pbWF0aW9uID8gc3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbiA6IDApfW1zO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgOmhvdmVyIHtcbiAgICBib3gtc2hhZG93OiAkeyhwcm9wcykgPT4gKHByb3BzLmRpc2FibGVkIHx8IHByb3BzLm9uQ2xpY2sgPT09IHVuZGVmaW5lZCA/IDAgOiBzdHlsZXMuc2hhZG93SG9yaXpvbkJyaWdodCl9O1xuICB9XG5gO1xuXG5jb25zdCBnZXRDb2xvciA9IChwcm9wcykgPT4ge1xuICBpZiAocHJvcHMuZGlzYWJsZWQpIHtcbiAgICByZXR1cm4gc3R5bGVzLmJyaWdodENvbG9yO1xuICB9IGVsc2Uge1xuICAgIHN3aXRjaCAocHJvcHMudGhlbWUpIHtcbiAgICAgIGNhc2UgYnV0dG9uVGhlbWVEZWZhdWx0OlxuICAgICAgY2FzZSBidXR0b25UaGVtZUhvdDpcbiAgICAgIGNhc2UgYnV0dG9uVGhlbWVCcmlnaHQ6XG4gICAgICAgIHJldHVybiBzdHlsZXMud2hpdGVDb2xvcjtcbiAgICB9XG4gIH1cbn07XG5cbmNvbnN0IGdldEJhY2tncm91bmQgPSAocHJvcHMpID0+IHtcbiAgaWYgKHByb3BzLmRpc2FibGVkKSB7XG4gICAgcmV0dXJuICdub25lJztcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gcHJvcHMudGhlbWU7XG4gIH1cbn07XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBQIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvUCc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGNoOiBzdHJpbmc7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgY2ggfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXI+XG4gICAgICA8UD57YFVwZGF0ZSB5b3VyIHNpdGUgdGhhdGB9PC9QPlxuICAgICAgPFA+e2AvJHtjaH10YWxrbi5jb25maWcuanNvbmB9PC9QPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgaGVpZ2h0OiAzNDBweDtcbmA7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCwgeyBjc3MgfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCAqIGFzIExheW91dCBmcm9tICdjb3Zlci9ub2Rlcy9MYXlvdXQnO1xuXG5jb25zdCBmbGV4VGFnVHlwZURpdiA9ICdkaXYnO1xuY29uc3QgZmxleFRhZ1R5cGVTcGFuID0gJ3NwYW4nO1xuY29uc3QgZmxleFRhZ0RlZmF1bHRUeXBlID0gZmxleFRhZ1R5cGVEaXY7XG50eXBlIEZsZXhUYWdUeXBlID0gdHlwZW9mIGZsZXhUYWdUeXBlRGl2IHwgdHlwZW9mIGZsZXhUYWdUeXBlU3BhbjtcblxuZXhwb3J0IHR5cGUgRmxleExheW91dFByb3BzVHlwZSA9IHtcbiAgZmxvdz86IHN0cmluZztcbiAgYWxpZ25JdGVtcz86IHN0cmluZztcbiAganVzdGlmeUNvbnRlbnQ/OiBzdHJpbmc7XG4gIGlubGluZT86IGJvb2xlYW47XG59O1xuXG5leHBvcnQgdHlwZSBQcm9wcyA9IHtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbiAgdGFnVHlwZT86IEZsZXhUYWdUeXBlO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIG9uQ2xpY2s/OiAoZTogYW55KSA9PiB2b2lkO1xufSAmIExheW91dC5MYXlvdXRQcm9wc1R5cGUgJlxuICBGbGV4TGF5b3V0UHJvcHNUeXBlO1xuXG5leHBvcnQgY29uc3QgZmxleExheW91dFByb3BzSW5pdCA9IHtcbiAgZmxvdzogJ3JvdyBub3dyYXAnLFxuICBhbGlnbkl0ZW1zOiAnZmxleC1zdGFydCcsXG4gIGp1c3RpZnlDb250ZW50OiAnZmxleC1zdGFydCcsXG4gIGlubGluZTogZmFsc2UsXG59O1xuXG5leHBvcnQgY29uc3QgZmxleExheW91dENlbnRlclByb3BzSW5pdCA9IHtcbiAgZmxvdzogJ3JvdyBub3dyYXAnLFxuICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICBpbmxpbmU6IGZhbHNlLFxufTtcblxuZXhwb3J0IGNvbnN0IGZsZXhQcm9wc0luaXQ6IFByb3BzID0ge1xuICBjaGlsZHJlbjogPD48Lz4sXG4gIHRhZ1R5cGU6IGZsZXhUYWdEZWZhdWx0VHlwZSxcbiAgLi4uTGF5b3V0LmxheW91dFByb3BzSW5pdCxcbiAgLi4uZmxleExheW91dFByb3BzSW5pdCxcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCBwOiBQcm9wcyA9IHtcbiAgICAuLi5mbGV4UHJvcHNJbml0LFxuICAgIC4uLnByb3BzLFxuICAgIGNsYXNzTmFtZTogcHJvcHMuY2xhc3NOYW1lID8gYEZsZXggJHtwcm9wcy5jbGFzc05hbWV9YCA6ICdGbGV4JyxcbiAgfTtcbiAgc3dpdGNoIChwLnRhZ1R5cGUpIHtcbiAgICBkZWZhdWx0OlxuICAgIGNhc2UgZmxleFRhZ1R5cGVEaXY6XG4gICAgICByZXR1cm4gPERpdiB7Li4ucH0+e3AuY2hpbGRyZW59PC9EaXY+O1xuICAgIGNhc2UgZmxleFRhZ1R5cGVTcGFuOlxuICAgICAgcmV0dXJuIDxTcGFuIHsuLi5wfT57cC5jaGlsZHJlbn08L1NwYW4+O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbnR5cGUgQ29tcG9uZW50UHJvcHNUeXBlID0gYW55OyAvL0xheW91dC5MYXlvdXRQcm9wc1R5cGUgJiBGbGV4TGF5b3V0UHJvcHNUeXBlO1xuXG5leHBvcnQgY29uc3QgRmxleENzcyA9IGNzczxGbGV4TGF5b3V0UHJvcHNUeXBlPmBcbiAgZGlzcGxheTogJHsocHJvcHMpID0+IChwcm9wcy5pbmxpbmUgPyAnaW5saW5lLWZsZXgnIDogJ2ZsZXgnKX07XG4gIGZsZXgtZmxvdzogJHsocHJvcHMpID0+IHByb3BzLmZsb3d9O1xuICBhbGlnbi1pdGVtczogJHsocHJvcHMpID0+IHByb3BzLmFsaWduSXRlbXN9O1xuICBqdXN0aWZ5LWNvbnRlbnQ6ICR7KHByb3BzKSA9PiBwcm9wcy5qdXN0aWZ5Q29udGVudH07XG5gO1xuXG5jb25zdCBDb250YWluZXJDc3MgPSBjc3M8Q29tcG9uZW50UHJvcHNUeXBlPmBcbiAgJHtGbGV4Q3NzfTtcbiAgJHtMYXlvdXQuTGF5b3V0Q3NzfTtcbmA7XG5cbmNvbnN0IERpdiA9IHN0eWxlZC5kaXZgXG4gICR7Q29udGFpbmVyQ3NzfVxuYDtcblxuY29uc3QgU3BhbiA9IHN0eWxlZC5zcGFuYFxuICAke0NvbnRhaW5lckNzc31cbmA7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCwgeyBjc3MgfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCB7IEZsZXhDc3MsIEZsZXhMYXlvdXRQcm9wc1R5cGUsIGZsZXhMYXlvdXRQcm9wc0luaXQgfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0ZsZXgnO1xuaW1wb3J0IHsgQ29udGVudFByb3BzIH0gZnJvbSAnY292ZXIvbm9kZXMvQ29udGVudCc7XG5pbXBvcnQgKiBhcyBMYXlvdXQgZnJvbSAnY292ZXIvbm9kZXMvTGF5b3V0JztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBIUHJvcHMgPSB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG4gIGlkPzogc3RyaW5nO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIG9uQ2xpY2s/OiAoKSA9PiB2b2lkO1xufSAmIENvbnRlbnRQcm9wcztcblxuZXhwb3J0IHR5cGUgUHJvcHMgPSBIUHJvcHMgJiBGbGV4TGF5b3V0UHJvcHNUeXBlICYgTGF5b3V0LkxheW91dFByb3BzVHlwZTtcblxuY29uc3QgZ2V0Tm9kZSA9IChudW06IG51bWJlciwgcHJvcHM6IFByb3BzKSA9PiB7XG4gIGNvbnN0IENvbnRhaW5lciA9IENvbnRhaW5lcnNbbnVtXTtcbiAgY29uc3QgcDogUHJvcHMgPSB7XG4gICAgLi4uTGF5b3V0LmxheW91dFByb3BzSW5pdCxcbiAgICAuLi5mbGV4TGF5b3V0UHJvcHNJbml0LFxuICAgIC4uLnByb3BzLFxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lciBjbGFzc05hbWU9e2BIJHtudW19YH0gey4uLnB9PlxuICAgICAge3AuY2hpbGRyZW59XG4gICAgPC9Db250YWluZXI+XG4gICk7XG59O1xuXG5jb25zdCBIMTogUmVhY3QuRkM8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4gZ2V0Tm9kZSgxLCBwcm9wcyk7XG5jb25zdCBIMjogUmVhY3QuRkM8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4gZ2V0Tm9kZSgyLCBwcm9wcyk7XG5jb25zdCBIMzogUmVhY3QuRkM8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4gZ2V0Tm9kZSgzLCBwcm9wcyk7XG5jb25zdCBINDogUmVhY3QuRkM8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4gZ2V0Tm9kZSg0LCBwcm9wcyk7XG5jb25zdCBINTogUmVhY3QuRkM8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4gZ2V0Tm9kZSg1LCBwcm9wcyk7XG5jb25zdCBINjogUmVhY3QuRkM8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4gZ2V0Tm9kZSg2LCBwcm9wcyk7XG5cbmNvbnN0IEhDc3MgPSBjc3NgXG4gICR7RmxleENzc307XG4gICR7TGF5b3V0LkxheW91dENzc307XG5gO1xuXG5jb25zdCBDb250YWluZXJzID0ge1xuICAxOiBzdHlsZWQuaDE8UHJvcHM+YFxuICAgIG1hcmdpbjogMDtcbiAgICAke0hDc3N9XG4gICAgZm9udC1zaXplOiAkeyhwcm9wcykgPT4gKHByb3BzLmZvbnRTaXplID8gcHJvcHMuZm9udFNpemUgOiAnMjRweCcpfTtcbiAgICBmb250LXdlaWdodDogJHsocHJvcHMpID0+IChwcm9wcy5mb250V2VpZ2h0ID8gcHJvcHMuZm9udFdlaWdodCA6ICcyMDAnKX07XG4gICAgbGluZS1oZWlnaHQ6ICR7KHByb3BzKSA9PiAocHJvcHMubGluZUhlaWdodCA/IHByb3BzLmxpbmVIZWlnaHQgOiAnMjRweCcpfTtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IChwcm9wcy5jb2xvciA/IHByb3BzLmNvbG9yIDogc3R5bGVzLmZvbnRDb2xvcil9O1xuICBgLFxuICAyOiBzdHlsZWQuaDI8UHJvcHM+YFxuICAgIG1hcmdpbjogMDtcbiAgICAke0hDc3N9XG4gICAgZm9udC1zaXplOiAkeyhwcm9wcykgPT4gKHByb3BzLmZvbnRTaXplID8gcHJvcHMuZm9udFNpemUgOiAnMjBweCcpfTtcbiAgICBmb250LXdlaWdodDogJHsocHJvcHMpID0+IChwcm9wcy5mb250V2VpZ2h0ID8gcHJvcHMuZm9udFdlaWdodCA6ICcyMDAnKX07XG4gICAgbGluZS1oZWlnaHQ6ICR7KHByb3BzKSA9PiAocHJvcHMubGluZUhlaWdodCA/IHByb3BzLmxpbmVIZWlnaHQgOiAnMjRweCcpfTtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IChwcm9wcy5jb2xvciA/IHByb3BzLmNvbG9yIDogc3R5bGVzLmZvbnRDb2xvcil9O1xuICBgLFxuICAzOiBzdHlsZWQuaDM8UHJvcHM+YFxuICAgIG1hcmdpbjogMDtcbiAgICAke0hDc3N9XG4gICAgZm9udC1zaXplOiAkeyhwcm9wcykgPT4gKHByb3BzLmZvbnRTaXplID8gcHJvcHMuZm9udFNpemUgOiAnMjRweCcpfTtcbiAgICBmb250LXdlaWdodDogJHsocHJvcHMpID0+IChwcm9wcy5mb250V2VpZ2h0ID8gcHJvcHMuZm9udFdlaWdodCA6ICcyMDAnKX07XG4gICAgbGluZS1oZWlnaHQ6ICR7KHByb3BzKSA9PiAocHJvcHMubGluZUhlaWdodCA/IHByb3BzLmxpbmVIZWlnaHQgOiAnMjRweCcpfTtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IChwcm9wcy5jb2xvciA/IHByb3BzLmNvbG9yIDogc3R5bGVzLmZvbnRDb2xvcil9O1xuICBgLFxuICA0OiBzdHlsZWQuaDQ8UHJvcHM+YFxuICAgIG1hcmdpbjogMDtcbiAgICAke0hDc3N9XG4gICAgZm9udC1zaXplOiAkeyhwcm9wcykgPT4gKHByb3BzLmZvbnRTaXplID8gcHJvcHMuZm9udFNpemUgOiAnMjRweCcpfTtcbiAgICBmb250LXdlaWdodDogJHsocHJvcHMpID0+IChwcm9wcy5mb250V2VpZ2h0ID8gcHJvcHMuZm9udFdlaWdodCA6ICcyMDAnKX07XG4gICAgbGluZS1oZWlnaHQ6ICR7KHByb3BzKSA9PiAocHJvcHMubGluZUhlaWdodCA/IHByb3BzLmxpbmVIZWlnaHQgOiAnMjRweCcpfTtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IChwcm9wcy5jb2xvciA/IHByb3BzLmNvbG9yIDogc3R5bGVzLmZvbnRDb2xvcil9O1xuICBgLFxuICA1OiBzdHlsZWQuaDU8UHJvcHM+YFxuICAgIG1hcmdpbjogMDtcbiAgICAke0hDc3N9XG4gICAgZm9udC1zaXplOiAkeyhwcm9wcykgPT4gKHByb3BzLmZvbnRTaXplID8gcHJvcHMuZm9udFNpemUgOiAnMjRweCcpfTtcbiAgICBmb250LXdlaWdodDogJHsocHJvcHMpID0+IChwcm9wcy5mb250V2VpZ2h0ID8gcHJvcHMuZm9udFdlaWdodCA6ICcyMDAnKX07XG4gICAgbGluZS1oZWlnaHQ6ICR7KHByb3BzKSA9PiAocHJvcHMubGluZUhlaWdodCA/IHByb3BzLmxpbmVIZWlnaHQgOiAnMjRweCcpfTtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IChwcm9wcy5jb2xvciA/IHByb3BzLmNvbG9yIDogc3R5bGVzLmZvbnRDb2xvcil9O1xuICBgLFxuICA2OiBzdHlsZWQuaDY8UHJvcHM+YFxuICAgIG1hcmdpbjogMDtcbiAgICAke0hDc3N9XG4gICAgZm9udC1zaXplOiAkeyhwcm9wcykgPT4gKHByb3BzLmZvbnRTaXplID8gcHJvcHMuZm9udFNpemUgOiAnMjRweCcpfTtcbiAgICBmb250LXdlaWdodDogJHsocHJvcHMpID0+IChwcm9wcy5mb250V2VpZ2h0ID8gcHJvcHMuZm9udFdlaWdodCA6ICcyMDAnKX07XG4gICAgbGluZS1oZWlnaHQ6ICR7KHByb3BzKSA9PiAocHJvcHMubGluZUhlaWdodCA/IHByb3BzLmxpbmVIZWlnaHQgOiAnMjRweCcpfTtcbiAgICBjb2xvcjogJHsocHJvcHMpID0+IChwcm9wcy5jb2xvciA/IHByb3BzLmNvbG9yIDogc3R5bGVzLmZvbnRDb2xvcil9O1xuICBgLFxufTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBPbmU6IEgxLFxuICBUd286IEgyLFxuICBUaHJlZTogSDMsXG4gIEZvdXI6IEg0LFxuICBGaXZlOiBINSxcbiAgU2l4OiBINixcbn07XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCB7IEZsZXhDc3MsIEZsZXhMYXlvdXRQcm9wc1R5cGUsIGZsZXhMYXlvdXRQcm9wc0luaXQgfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0ZsZXgnO1xuaW1wb3J0ICogYXMgTGF5b3V0IGZyb20gJ2NvdmVyL25vZGVzL0xheW91dCc7XG5cbmV4cG9ydCB0eXBlIFByb3BzID0ge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xuICBodG1sRm9yPzogc3RyaW5nO1xuICBvbkNsaWNrPzogKGU6IGFueSkgPT4gdm9pZDtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xuICBicj86IGJvb2xlYW47XG59ICYgTGF5b3V0LkxheW91dFByb3BzVHlwZSAmXG4gIEZsZXhMYXlvdXRQcm9wc1R5cGU7XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCBwOiBQcm9wcyA9IHsgLi4uTGF5b3V0LmxheW91dFByb3BzSW5pdCwgLi4uZmxleExheW91dFByb3BzSW5pdCwgLi4ucHJvcHMgfTtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPENvbnRhaW5lciB7Li4ucH0+e3AuY2hpbGRyZW59PC9Db250YWluZXI+XG4gICAgICB7cC5iciAmJiA8YnIgLz59XG4gICAgPC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbnR5cGUgQ29tcG9uZW50UHJvcHNUeXBlID0gTGF5b3V0LkxheW91dFByb3BzVHlwZSAmIEZsZXhMYXlvdXRQcm9wc1R5cGU7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5sYWJlbDxDb21wb25lbnRQcm9wc1R5cGU+YFxuICAke0ZsZXhDc3N9O1xuICAke0xheW91dC5MYXlvdXRDc3N9O1xuICBmb250LXdlaWdodDogMjAwO1xuYDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IHsgRmxleENzcywgRmxleExheW91dFByb3BzVHlwZSwgZmxleExheW91dFByb3BzSW5pdCB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvRmxleCc7XG5pbXBvcnQgKiBhcyBDb250ZW50IGZyb20gJ2NvdmVyL25vZGVzL0NvbnRlbnQnO1xuaW1wb3J0ICogYXMgTGF5b3V0IGZyb20gJ2NvdmVyL25vZGVzL0xheW91dCc7XG5cbmV4cG9ydCB0eXBlIFByb3BzID0ge1xuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xuICBvbkNsaWNrPzogKCkgPT4gdm9pZDtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xufSAmIExheW91dC5MYXlvdXRQcm9wc1R5cGUgJlxuICBGbGV4TGF5b3V0UHJvcHNUeXBlICZcbiAgQ29udGVudC5Db250ZW50UHJvcHM7XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCBwOiBQcm9wcyA9IHsgLi4uTGF5b3V0LmxheW91dFByb3BzSW5pdCwgLi4uZmxleExheW91dFByb3BzSW5pdCwgLi4uQ29udGVudC5jb250ZW50UHJvcHNJbml0LCAuLi5wcm9wcyB9O1xuICByZXR1cm4gPENvbnRhaW5lciB7Li4ucH0+e3AuY2hpbGRyZW59PC9Db250YWluZXI+O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG50eXBlIENvbXBvbmVudFByb3BzVHlwZSA9IExheW91dC5MYXlvdXRQcm9wc1R5cGUgJiBGbGV4TGF5b3V0UHJvcHNUeXBlICYgQ29udGVudC5Db250ZW50UHJvcHM7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5saTxDb21wb25lbnRQcm9wc1R5cGU+YFxuICAke0ZsZXhDc3N9O1xuICAke0xheW91dC5MYXlvdXRDc3N9O1xuICAke0NvbnRlbnQuQ29udGVudENzc31cbmA7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgTm9kZSBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL05vZGUnO1xuXG5leHBvcnQgdHlwZSBQcm9wcyA9IHtcbiAgdHlwZTogc3RyaW5nO1xuICBwcm9wcz86IChSZWFjdC5JbnB1dEhUTUxBdHRyaWJ1dGVzPEhUTUxJbnB1dEVsZW1lbnQ+ICYgUmVhY3QuQ2xhc3NBdHRyaWJ1dGVzPEhUTUxJbnB1dEVsZW1lbnQ+KSB8IG51bGw7XG4gIG5vZGVzPzogc3RyaW5nIHwgUHJvcHNbXTtcbn07XG5cbmNvbnN0IGlzR2FuZ2Vyb3VzVGFnID0gKG5vZGVzKSA9PiB7XG4gIGlmIChub2Rlcy5pbmRleE9mKCcmbHQ7JykgPj0gMCAmJiBub2Rlcy5pbmRleE9mKCcmZ3Q7JykgPj0gMCkgcmV0dXJuIDE7XG4gIGlmIChub2Rlcy5pbmRleE9mKCc8JykgPj0gMCAmJiBub2Rlcy5pbmRleE9mKCc8LycpID49IDApIHJldHVybiAyO1xuICBpZiAobm9kZXMuaW5kZXhPZignPCcpID49IDAgJiYgbm9kZXMuaW5kZXhPZignLz4nKSA+PSAwKSByZXR1cm4gMztcbiAgcmV0dXJuIDA7XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9IChwYXJhbXMpID0+IHtcbiAgY29uc3QgeyB0eXBlLCBub2RlcyB9ID0gcGFyYW1zO1xuICBsZXQgeyBwcm9wcyB9ID0gcGFyYW1zO1xuICBpZiAodHlwZW9mIG5vZGVzID09PSAnc3RyaW5nJyAmJiBpc0dhbmdlcm91c1RhZyhub2RlcykpIHtcbiAgICBpZiAocHJvcHMgPT09IHVuZGVmaW5lZCkgcHJvcHMgPSB7fTtcbiAgICBjb25zdCBodG1sID0gbm9kZXMucmVwbGFjZSgvJmx0Oy9nLCAnPCcpLnJlcGxhY2UoLyZndDsvZywgJz4nKTtcbiAgICBwcm9wcy5kYW5nZXJvdXNseVNldElubmVySFRNTCA9IHsgX19odG1sOiBodG1sIH07XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQodHlwZSwgcHJvcHMpO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBub2RlcyA9PT0gJ29iamVjdCcgJiYgbm9kZXMuY29uc3RydWN0b3IubmFtZSA9PT0gJ0FycmF5JyAmJiBub2Rlcy5sZW5ndGggPiAwKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICB0eXBlLFxuICAgICAgcHJvcHMsXG4gICAgICBub2Rlcy5tYXAoKHRhZywgaW5kZXgpID0+IDxOb2RlIGtleT17YCR7dGFnLnR5cGV9JHtpbmRleH1gfSB0eXBlPXt0YWcudHlwZX0gcHJvcHM9e3RhZy5wcm9wc30gbm9kZXM9e3RhZy5ub2Rlc30gLz4pXG4gICAgKTtcbiAgfVxuXG4gIGlmIChub2RlcyAmJiBub2Rlcy5sZW5ndGggPiAwKSB7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQodHlwZSwgcHJvcHMsIG5vZGVzKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudCh0eXBlLCBwcm9wcyk7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG50eXBlIFByb3BzID0ge1xuICBsdj86IG51bWJlcjtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoeyBsdiA9IDEsIGNsYXNzTmFtZSA9ICdQJywgY2hpbGRyZW4gfSkgPT4ge1xuICBzd2l0Y2ggKGx2KSB7XG4gICAgY2FzZSAxOlxuICAgICAgcmV0dXJuIDxQMSBjbGFzc05hbWU9e2NsYXNzTmFtZX0+e2NoaWxkcmVufTwvUDE+O1xuICAgIGNhc2UgMjpcbiAgICAgIHJldHVybiA8UDIgY2xhc3NOYW1lPXtjbGFzc05hbWV9PntjaGlsZHJlbn08L1AyPjtcbiAgICBjYXNlIDM6XG4gICAgICByZXR1cm4gPFAzIGNsYXNzTmFtZT17Y2xhc3NOYW1lfT57Y2hpbGRyZW59PC9QMz47XG4gICAgY2FzZSA0OlxuICAgICAgcmV0dXJuIDxQNCBjbGFzc05hbWU9e2NsYXNzTmFtZX0+e2NoaWxkcmVufTwvUDQ+O1xuICAgIGNhc2UgNTpcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIDxQNSBjbGFzc05hbWU9e2NsYXNzTmFtZX0+e2NoaWxkcmVufTwvUDU+O1xuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbmNvbnN0IFAxID0gc3R5bGVkLnBgXG4gIG1hcmdpbjogMCBhdXRvO1xuICBmb250LXNpemU6IDIwcHg7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG4gIGxpbmUtaGVpZ2h0OiAzMnB4O1xuICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgY29sb3I6ICR7c3R5bGVzLmZvbnRDb2xvcn07XG5gO1xuXG5jb25zdCBQMiA9IHN0eWxlZC5wYFxuICBtYXJnaW46IDAgYXV0bztcbiAgbGluZS1oZWlnaHQ6IDMwcHg7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGNvbG9yOiAke3N0eWxlcy5mb250Q29sb3J9O1xuYDtcblxuY29uc3QgUDMgPSBzdHlsZWQucGBcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGNvbG9yOiAke3N0eWxlcy5mb250Q29sb3J9O1xuYDtcblxuY29uc3QgUDQgPSBzdHlsZWQucGBcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGNvbG9yOiAke3N0eWxlcy5mb250Q29sb3J9O1xuYDtcblxuY29uc3QgUDUgPSBzdHlsZWQucGBcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gIGNvbG9yOiAke3N0eWxlcy5mb250Q29sb3J9O1xuYDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IHsgRmxleENzcywgRmxleExheW91dFByb3BzVHlwZSwgZmxleExheW91dFByb3BzSW5pdCB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvRmxleCc7XG5pbXBvcnQgKiBhcyBMYXlvdXQgZnJvbSAnY292ZXIvbm9kZXMvTGF5b3V0JztcblxuZXhwb3J0IHR5cGUgUHJvcHMgPSB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGU7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbn0gJiBMYXlvdXQuTGF5b3V0UHJvcHNUeXBlICZcbiAgRmxleExheW91dFByb3BzVHlwZTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAocHJvcHM6IFByb3BzKSA9PiB7XG4gIGNvbnN0IHA6IFByb3BzID0geyAuLi5MYXlvdXQubGF5b3V0UHJvcHNJbml0LCAuLi5mbGV4TGF5b3V0UHJvcHNJbml0LCAuLi5wcm9wcyB9O1xuICByZXR1cm4gPENvbnRhaW5lciB7Li4ucH0+e3AuY2hpbGRyZW59PC9Db250YWluZXI+O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG50eXBlIENvbXBvbmVudFByb3BzVHlwZSA9IExheW91dC5MYXlvdXRQcm9wc1R5cGUgJiBGbGV4TGF5b3V0UHJvcHNUeXBlO1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQuc2VjdGlvbjxDb21wb25lbnRQcm9wc1R5cGU+YFxuICAke0ZsZXhDc3N9O1xuICAke0xheW91dC5MYXlvdXRDc3N9O1xuYDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgc2l6ZT86IHN0cmluZztcbn07XG5cbmNvbnN0IFNwaW5uZXJJY29uOiBSZWFjdC5GQzxQcm9wcz4gPSAoeyBzaXplID0gJzYwJyB9KSA9PiB7XG4gIHJldHVybiA8SWNvbiBzaXplPXtzaXplfSAvPjtcbn07XG5cbmNvbnN0IEljb24gPSBzdHlsZWQuZGl2PFByb3BzPmBcbiAgd2lkdGg6ICR7KHByb3BzKSA9PiBwcm9wcy5zaXplfXB4O1xuICBoZWlnaHQ6ICR7KHByb3BzKSA9PiBwcm9wcy5zaXplfXB4O1xuICBib3JkZXItdG9wOiAwLjNlbSBzb2xpZCByZ2JhKDc5LCAxNzQsIDE1OSwgMC43KTtcbiAgYm9yZGVyLXJpZ2h0OiAwLjNlbSBzb2xpZCByZ2JhKDAsIDAsIDAsIDApO1xuICBib3JkZXItYm90dG9tOiAwLjNlbSBzb2xpZCByZ2JhKDAsIDAsIDAsIDApO1xuICBib3JkZXItbGVmdDogMC4zZW0gc29saWQgcmdiYSgwLCAwLCAwLCAwKTtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBhbmltYXRpb246IGxvYWQ4IDFzIGluZmluaXRlIGN1YmljLWJlemllcigwLjM5LCAwLjU4LCAwLjU3LCAxKTtcbiAgQGtleWZyYW1lcyBsb2FkOCB7XG4gICAgMCUge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7XG4gICAgfVxuICAgIDEwMCUge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgICB9XG4gIH1cbmA7XG5cbmV4cG9ydCBkZWZhdWx0IFNwaW5uZXJJY29uO1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEZsZXggZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9GbGV4JztcbmltcG9ydCBMYWJlbCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0xhYmVsJztcblxuaW1wb3J0IHsgSW5wdXRDc3MgfSBmcm9tICcuL2NvbW1vbic7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIG5hbWU6IHN0cmluZztcbiAgdmFsdWU6IG51bWJlcjtcbiAgbGFiZWw/OiBzdHJpbmc7XG4gIGRpc2FibGVkPzogYm9vbGVhbjtcbiAgd2lkdGg/OiBzdHJpbmc7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbiAgb25DaGFuZ2U/OiAodmFsdWU6IG51bWJlcikgPT4gdm9pZDtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHtcbiAgbmFtZSxcbiAgdmFsdWU6IF91bml4dGluZSA9IDAsXG4gIGxhYmVsLFxuICBkaXNhYmxlZCA9IGZhbHNlLFxuICB3aWR0aCA9ICdhdXRvJyxcbiAgY2xhc3NOYW1lID0gJ0lucHV0RGF0ZScsXG4gIG9uQ2hhbmdlLFxufSkgPT4ge1xuICBjb25zdCByZWxhdGlvbklkID0gYElucHV0RGF0ZSR7bmFtZX1gO1xuICBjb25zdCBbdmFsdWUsIHNldFZhbHVlXSA9IHVzZVN0YXRlKGdldFVuaXR0aW1lVG9ZbWQoX3VuaXh0aW5lKSk7XG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlID0gKGUpID0+IHtcbiAgICBjb25zdCB5bWQgPSBlLnRhcmdldC52YWx1ZTtcbiAgICBjb25zdCB1bml4dGltZSA9IG5ldyBEYXRlKHltZCkuZ2V0VGltZSgpO1xuICAgIHNldFZhbHVlKHltZCk7XG4gICAgb25DaGFuZ2UgJiYgb25DaGFuZ2UodW5peHRpbWUpO1xuICB9O1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHltZCA9IGdldFVuaXR0aW1lVG9ZbWQoX3VuaXh0aW5lKTtcbiAgICBzZXRWYWx1ZSh5bWQpO1xuICB9LCBbX3VuaXh0aW5lXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8RmxleEN1c3RvbSBjbGFzc05hbWU9e2NsYXNzTmFtZSA/IGNsYXNzTmFtZSA6IG5hbWV9IHdpZHRoPXt3aWR0aH0gZmxvdz1cInJvdyB3cmFwXCIgYWxpZ25JdGVtcz1cImNlbnRlclwiIGp1c3RpZnlDb250ZW50PVwiZmxleC1zdGFydFwiPlxuICAgICAge2xhYmVsICYmIChcbiAgICAgICAgPExhYmVsIGh0bWxGb3I9e3JlbGF0aW9uSWR9IGlubGluZSBzaWRlTWFyZ2luPlxuICAgICAgICAgIHtsYWJlbH1cbiAgICAgICAgPC9MYWJlbD5cbiAgICAgICl9XG4gICAgICA8SW5wdXQgdHlwZT1cImRhdGVcIiBpZD17cmVsYXRpb25JZH0gbmFtZT17bmFtZX0gY2xhc3NOYW1lPXtjbGFzc05hbWV9IHZhbHVlPXt2YWx1ZX0gb25DaGFuZ2U9e2hhbmRsZU9uQ2hhbmdlfSBkaXNhYmxlZD17ZGlzYWJsZWR9IC8+XG4gICAgPC9GbGV4Q3VzdG9tPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBGbGV4Q3VzdG9tID0gc3R5bGVkKEZsZXgpYFxuICBsYWJlbCB7XG4gICAgZmxleDogMSAxIGF1dG87XG4gIH1cbiAgaW5wdXQge1xuICAgIGZsZXg6IDEgMSBhdXRvO1xuICB9XG5gO1xuXG5jb25zdCBJbnB1dCA9IHN0eWxlZC5pbnB1dGBcbiAgJHtJbnB1dENzc307XG5gO1xuXG5jb25zdCBnZXRVbml0dGltZVRvWW1kID0gKHVuaXh0aW1lOiBudW1iZXIpID0+IHtcbiAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKHVuaXh0aW1lKTtcbiAgdmFyIHkgPSBkYXRlLmdldEZ1bGxZZWFyKCk7XG4gIHZhciBtID0gKCcwMCcgKyAoZGF0ZS5nZXRNb250aCgpICsgMSkpLnNsaWNlKC0yKTtcbiAgdmFyIGQgPSAoJzAwJyArIGRhdGUuZ2V0RGF0ZSgpKS5zbGljZSgtMik7XG4gIHJldHVybiB5ICsgJy0nICsgbSArICctJyArIGQ7XG59O1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQsIHsgY3NzIH0gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgY29uZiBmcm9tICdjb21tb24vY29uZic7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxuY29uc3QgZHJhZ1N0YXR1c0RyYWdvdmVyID0gJ2RyYWdvdmVyJztcbmNvbnN0IGRyYWdTdGF0dXNEcmFnbGVhdmUgPSAnZHJhZ2xlYXZlJztcbmNvbnN0IGRyYWdTdGF0dXNEcmFnZWQgPSAnZHJhZ2VkJztcbmNvbnN0IGRyYWdTdGF0dXNEZWZhdWx0ID0gZHJhZ1N0YXR1c0RyYWdsZWF2ZTtcbnR5cGUgRHJhZ1N0YXR1c1R5cGUgPSB0eXBlb2YgZHJhZ1N0YXR1c0RyYWdvdmVyIHwgdHlwZW9mIGRyYWdTdGF0dXNEcmFnbGVhdmUgfCB0eXBlb2YgZHJhZ1N0YXR1c0RyYWdlZDtcblxuZXhwb3J0IGNvbnN0IGltYWdlQmcgPSAnYmcnO1xuZXhwb3J0IGNvbnN0IGltYWdlSWNvbiA9ICdpY29uJztcbmV4cG9ydCBjb25zdCBpbWFnZURlZmF1bHQgPSBpbWFnZUJnO1xuZXhwb3J0IHR5cGUgSW1hZ2VUeXBlID0gdHlwZW9mIGltYWdlQmcgfCB0eXBlb2YgaW1hZ2VJY29uO1xuXG50eXBlIFByb3BzID0ge1xuICBvbkNoYW5nZTogKGZvcm1EYXRhOiBGb3JtRGF0YSwgZmlsZU5hbWU6IHN0cmluZykgPT4gdm9pZDtcbiAgZW1haWw6IHN0cmluZztcbiAgdmFsdWU/OiBzdHJpbmc7XG4gIHR5cGU/OiBJbWFnZVR5cGU7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbn07XG5cbmNvbnN0IFdpZGU6IFJlYWN0LkZDPFByb3BzPiA9ICh7IHR5cGUgPSBpbWFnZURlZmF1bHQsIGVtYWlsLCB2YWx1ZSA9ICcnLCBjbGFzc05hbWUsIG9uQ2hhbmdlIH0pID0+IHtcbiAgY29uc3QgY29udGFpbmVyUmVmID0gdXNlUmVmKDxkaXYgLz4pO1xuICBjb25zdCBkcmFnRHJvcElucHV0UmVmID0gdXNlUmVmKDxpbnB1dCAvPik7XG4gIGNvbnN0IFtkcmFnU3RhdHVzLCBzZXREcmFnU3RhdHVzXSA9IHVzZVN0YXRlPERyYWdTdGF0dXNUeXBlPihkcmFnU3RhdHVzRGVmYXVsdCk7XG5cbiAgY29uc3QgcHJldmlldyA9IChmaWxlOiBGaWxlKSA9PiB7XG4gICAgaWYgKGRyYWdEcm9wSW5wdXRSZWYuY3VycmVudCkge1xuICAgICAgY29uc3QgY29udGFpbmVyRWxtID0gY29udGFpbmVyUmVmLmN1cnJlbnQgYXMgdW5rbm93biBhcyBIVE1MRWxlbWVudDtcblxuICAgICAgbGV0IHJlYWRlcjogRmlsZVJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG5cbiAgICAgIHJlYWRlci5vbmxvYWQgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgICAgIGNvbnN0IGJhc2U2NFN0cmluZyA9IFN0cmluZyhyZWFkZXIucmVzdWx0KTtcbiAgICAgICAgY29uc3QgY3JlYXRlZEZpbGUgPSBuZXcgRmlsZShbYmFzZTY0U3RyaW5nXSwgZW1haWwsIHsgdHlwZTogZmlsZS50eXBlLCBsYXN0TW9kaWZpZWQ6IG5ldyBEYXRlKCkuZ2V0VGltZSgpIH0pO1xuICAgICAgICBsZXQgZXh0VHlwZSA9IGZpbGUudHlwZS5zcGxpdCgnLycpWzFdO1xuICAgICAgICBleHRUeXBlID0gZXh0VHlwZSA9PT0gJ2pwZWcnID8gJ2pwZycgOiBleHRUeXBlO1xuICAgICAgICBjb25zdCBmaWxlTmFtZSA9IGAke3R5cGV9LiR7ZXh0VHlwZX1gO1xuICAgICAgICBjb250YWluZXJFbG0uc3R5bGUuYmFja2dyb3VuZEltYWdlID0gYHVybCgke2Jhc2U2NFN0cmluZ30pYDtcbiAgICAgICAgZm9ybURhdGEuYXBwZW5kKHR5cGUsIGNyZWF0ZWRGaWxlKTtcblxuICAgICAgICBvbkNoYW5nZShmb3JtRGF0YSwgZmlsZU5hbWUpO1xuICAgICAgfTtcblxuICAgICAgaWYgKGZpbGUpIHtcbiAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGRyYWdEcm9wSW5wdXRSZWYuY3VycmVudCkge1xuICAgICAgY29uc3QgZHJhZ0Ryb3BBcmVhSW5wdXQgPSBkcmFnRHJvcElucHV0UmVmLmN1cnJlbnQgYXMgdW5rbm93biBhcyBIVE1MSW5wdXRFbGVtZW50O1xuICAgICAgZHJhZ0Ryb3BBcmVhSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ292ZXInLCAoZSkgPT4ge1xuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIHNldERyYWdTdGF0dXMoZHJhZ1N0YXR1c0RyYWdvdmVyKTtcbiAgICAgIH0pO1xuICAgICAgZHJhZ0Ryb3BBcmVhSW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignZHJhZ2xlYXZlJywgKGUpID0+IHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBzZXREcmFnU3RhdHVzKGRyYWdTdGF0dXNEcmFnbGVhdmUpO1xuICAgICAgfSk7XG4gICAgICBkcmFnRHJvcEFyZWFJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdkcm9wJywgKGUpID0+IHtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICBzZXREcmFnU3RhdHVzKGRyYWdTdGF0dXNEcmFnZWQpO1xuICAgICAgICBsZXQgZmlsZXMgPSBlLmRhdGFUcmFuc2Zlci5maWxlcztcbiAgICAgICAgcHJldmlldyhmaWxlc1swXSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIFtdKTtcblxuICByZXR1cm4gKFxuICAgIDxDb250YWluZXIgcmVmPXtjb250YWluZXJSZWZ9IGVtYWlsPXtlbWFpbH0gdHlwZT17dHlwZX0gZHJhZ1N0YXR1cz17ZHJhZ1N0YXR1c30gY2xhc3NOYW1lPXtjbGFzc05hbWV9IHZhbHVlPXt2YWx1ZX0+XG4gICAgICA8RHJhZ0Ryb3BJbnB1dFxuICAgICAgICByZWY9e2RyYWdEcm9wSW5wdXRSZWZ9XG4gICAgICAgIHR5cGU9XCJmaWxlXCJcbiAgICAgICAgY2xhc3NOYW1lPXt0eXBlfVxuICAgICAgICBhY2NlcHQ9XCJpbWFnZS8qXCJcbiAgICAgICAgbmFtZT1cInBob3RvXCJcbiAgICAgICAgZHJhZ1N0YXR1cz17ZHJhZ1N0YXR1c31cbiAgICAgICAgb25DaGFuZ2U9eyhlOiBSZWFjdC5DaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgICAgICAgIGNvbnN0IGZpbGUgPSBlLnRhcmdldC5maWxlc1swXTtcbiAgICAgICAgICBwcmV2aWV3KGZpbGUpO1xuICAgICAgICB9fVxuICAgICAgLz5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFdpZGU7XG5cbnR5cGUgQ29udGFpbmVyUHJvcHNUeXBlID0ge1xuICByZWY6IGFueTtcbiAgZW1haWw6IHN0cmluZztcbiAgdmFsdWU6IHN0cmluZztcbiAgdHlwZTogSW1hZ2VUeXBlO1xuICBkcmFnU3RhdHVzOiBEcmFnU3RhdHVzVHlwZTtcbn07XG5cbmNvbnN0IGJnQ3NzID0gY3NzPENvbnRhaW5lclByb3BzVHlwZT5gXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDIzMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAke3N0eWxlcy5icmlnaHRDb2xvcn07XG4gIGJvcmRlcjogJHsocHJvcHMpID0+IChwcm9wcy5kcmFnU3RhdHVzID09PSBkcmFnU3RhdHVzRHJhZ292ZXIgPyAzIDogMCl9cHggZGFzaGVkICR7c3R5bGVzLnRoZW1lQ29sb3J9O1xuICA6aG92ZXIge1xuICAgIGJveC1zaGFkb3c6ICR7c3R5bGVzLnNoYWRvd0hvcml6b25CcmlnaHR9O1xuICB9XG5gO1xuXG5jb25zdCBpY29uQ3NzID0gY3NzPENvbnRhaW5lclByb3BzVHlwZT5gXG4gIHdpZHRoOiA5MHB4O1xuICBoZWlnaHQ6IDkwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE5MCwgMTkwLCAxOTAsIDAuOSk7XG4gIGJvcmRlcjogJHsocHJvcHMpID0+IChwcm9wcy5kcmFnU3RhdHVzID09PSBkcmFnU3RhdHVzRHJhZ292ZXIgPyAzIDogMCl9cHggZGFzaGVkICR7c3R5bGVzLnRoZW1lQ29sb3J9O1xuICA6aG92ZXIge1xuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMTVweCByZ2IoMTUwIDE1MCAxNTApO1xuICB9XG5gO1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2PENvbnRhaW5lclByb3BzVHlwZT5gXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAkeyhwcm9wcykgPT4gKHByb3BzLnR5cGUgPT09IGltYWdlQmcgPyBiZ0NzcyA6IGljb25Dc3MpfVxuICAke3N0eWxlcy5icmlnaHRDb2xvcn07XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCR7KHByb3BzKSA9PiBnZXRCYWNrZ3JvdW5kSW1hZ2UoeyBlbWFpbDogcHJvcHMuZW1haWwsIGltYWdlOiBwcm9wcy52YWx1ZSB9KX0pO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gIHRyYW5zaXRpb246ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbmA7XG5cbmNvbnN0IERyYWdEcm9wSW5wdXQgPSBzdHlsZWQuaW5wdXQ8eyByZWY6IGFueTsgZHJhZ1N0YXR1czogRHJhZ1N0YXR1c1R5cGUgfT5gXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogaW5oZXJpdDtcbiAgaGVpZ2h0OiBpbmhlcml0O1xuICBvcGFjaXR5OiAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG5gO1xuXG5jb25zdCBnZXRCYWNrZ3JvdW5kSW1hZ2UgPSAoeyBlbWFpbCwgaW1hZ2UgfSkgPT4ge1xuICBpZiAoaW1hZ2UgJiYgaW1hZ2UgIT09ICcnKSB7XG4gICAgcmV0dXJuIGBodHRwczovLyR7Y29uZi5hc3NldHNDb3ZlclBhdGh9JHtlbWFpbH0vJHtpbWFnZX1gO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiAnbm9uZSc7XG4gIH1cbn07XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEZsZXggZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9GbGV4JztcbmltcG9ydCBMYWJlbCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0xhYmVsJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxuaW1wb3J0IHsgSW5wdXRDc3MgfSBmcm9tICcuL2NvbW1vbic7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIG5hbWU6IHN0cmluZztcbiAgdmFsdWU6IHN0cmluZztcbiAgbGFiZWw/OiBzdHJpbmc7XG4gIHdpZHRoPzogc3RyaW5nO1xuICBvbkNoYW5nZT86ICh2YWx1ZTogc3RyaW5nKSA9PiB2b2lkO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7IG5hbWUsIHZhbHVlOiBfdmFsdWUgPSAnJywgbGFiZWwsIHdpZHRoID0gJ2F1dG8nLCBjbGFzc05hbWUgPSAnSW5wdXRUZXh0Jywgb25DaGFuZ2UgfSkgPT4ge1xuICBjb25zdCByZWxhdGlvbklkID0gYElucHV0VGV4dCR7bmFtZX1gO1xuICBjb25zdCBbdmFsdWUsIHNldFZhbHVlXSA9IHVzZVN0YXRlKF92YWx1ZSk7XG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlID0gKGUpID0+IHtcbiAgICBzZXRWYWx1ZShlLnRhcmdldC52YWx1ZSk7XG4gICAgb25DaGFuZ2UgJiYgb25DaGFuZ2UoZS50YXJnZXQudmFsdWUpO1xuICB9O1xuICByZXR1cm4gKFxuICAgIDxGbGV4Q3VzdG9tIGNsYXNzTmFtZT17Y2xhc3NOYW1lID8gY2xhc3NOYW1lIDogbmFtZX0gd2lkdGg9e3dpZHRofSBmbG93PVwicm93IHdyYXBcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCIganVzdGlmeUNvbnRlbnQ9XCJmbGV4LXN0YXJ0XCI+XG4gICAgICB7bGFiZWwgJiYgKFxuICAgICAgICA8TGFiZWwgaHRtbEZvcj17cmVsYXRpb25JZH0gc2lkZU1hcmdpbj5cbiAgICAgICAgICB7bGFiZWx9XG4gICAgICAgIDwvTGFiZWw+XG4gICAgICApfVxuICAgICAgPElucHV0IHR5cGU9XCJ0ZXh0XCIgaWQ9e3JlbGF0aW9uSWR9IG5hbWU9e25hbWV9IGNsYXNzTmFtZT17Y2xhc3NOYW1lfSB2YWx1ZT17dmFsdWV9IG9uQ2hhbmdlPXtoYW5kbGVPbkNoYW5nZX0gLz5cbiAgICA8L0ZsZXhDdXN0b20+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbmNvbnN0IEZsZXhDdXN0b20gPSBzdHlsZWQoRmxleClgXG4gIGxhYmVsIHtcbiAgICBmbGV4OiAxIDEgYXV0bztcbiAgfVxuICBpbnB1dCB7XG4gICAgZmxleDogMSAxIGF1dG87XG4gIH1cbmA7XG5cbmNvbnN0IElucHV0ID0gc3R5bGVkLmlucHV0YFxuICAke0lucHV0Q3NzfTtcbiAgYXBwZWFyYW5jZTogbm9uZTtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xuICBtYXJnaW46ICR7c3R5bGVzLmJhc2VNYXJnaW59cHggMDtcbmA7XG4iLCJpbXBvcnQgeyBjc3MgfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcbmltcG9ydCB7IGdldFJnYmFDb2xvciB9IGZyb20gJ2NvdmVyL3N0eWxlcy9jb2xvcnMnO1xuXG50eXBlIElucHV0Q3NzVHlwZSA9IHtcbiAgZGlzYWJsZWQ/OiBib29sZWFuO1xufTtcblxuZXhwb3J0IGNvbnN0IElucHV0Q3NzID0gY3NzPElucHV0Q3NzVHlwZT5gXG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtaW4td2lkdGg6IGZpdC1jb250ZW50O1xuICBtYXgtd2lkdGg6IGNhbGMoMTAwJSAtICR7c3R5bGVzLnF1YWRNYXJnaW59cHgpO1xuICBwYWRkaW5nOiAke3N0eWxlcy5kb3VibGVQYWRkaW5nfXB4O1xuICBtYXJnaW4tbGVmdDogJHtzdHlsZXMucXVhZE1hcmdpbn1weDtcbiAgbWFyZ2luLXJpZ2h0OiAke3N0eWxlcy5xdWFkTWFyZ2lufXB4O1xuICBvdXRsaW5lLWNvbG9yOiAke2dldFJnYmFDb2xvcihzdHlsZXMudGhlbWVSZ2IpfTtcbiAgY29sb3I6ICR7c3R5bGVzLmZvbnRDb2xvcn07XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgYm9yZGVyOiAxcHggc29saWQgJHtzdHlsZXMuYm9yZGVyQ29sb3J9O1xuICBiYWNrZ3JvdW5kOiByZ2IoMjUwLCAyNTAsIDI1MCwgMC40KTtcbiAgY3Vyc29yOiAkeyhwcm9wcykgPT4gKHByb3BzLmRpc2FibGVkID09PSB0cnVlICYmIHByb3BzLmRpc2FibGVkICE9PSB1bmRlZmluZWQgPyAnbm9ybWFsJyA6ICdwb2ludGVyJyl9O1xuICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIGFwcGVhcmFuY2U6IG5vbmU7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgbWFyZ2luOiAke3N0eWxlcy5iYXNlTWFyZ2lufXB4IDA7XG4gIDpmb2N1cyB7XG4gICAgJHsocHJvcHMpID0+IChwcm9wcy5kaXNhYmxlZCA9PT0gdHJ1ZSAmJiBwcm9wcy5kaXNhYmxlZCAhPT0gdW5kZWZpbmVkID8gJycgOiAnYmFja2dyb3VuZDogcmdiYSgxMjksIDIyNCwgMjA5LCAwLjEpJyl9O1xuICB9XG4gIDpob3ZlciB7XG4gICAgJHsocHJvcHMpID0+IChwcm9wcy5kaXNhYmxlZCA9PT0gdHJ1ZSAmJiBwcm9wcy5kaXNhYmxlZCAhPT0gdW5kZWZpbmVkID8gJycgOiAnYmFja2dyb3VuZDogcmdiYSgxMjksIDIyNCwgMjA5LCAwLjEpJyl9O1xuICB9XG5gO1xuIiwiaW1wb3J0IERhdGUgZnJvbSAnLi9EYXRlJztcbmltcG9ydCBEcm9wSW1hZ2UgZnJvbSAnLi9Ecm9wSW1hZ2UnO1xuaW1wb3J0IFRleHQgZnJvbSAnLi9UZXh0JztcblxuZXhwb3J0IGRlZmF1bHQge1xuICBEcm9wSW1hZ2UsXG4gIFRleHQsXG4gIERhdGUsXG59O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxudHlwZSBQcm9wcyA9IHtcbiAgdmFsdWU6IHN0cmluZztcbiAgY2hpbGRyZW46IHN0cmluZztcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgdmFsdWUsIGNoaWxkcmVuIH0pID0+IHtcbiAgcmV0dXJuIDxvcHRpb24gdmFsdWU9e3ZhbHVlfT57Y2hpbGRyZW59PC9vcHRpb24+O1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgeyBnZXROb1NlbGVjdE9wdGlvbiwgbm9TZWxlY3RPcHRpb25MYWJlbCB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvc2VsZWN0JztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxuaW1wb3J0IHsgSW5wdXRDc3MgfSBmcm9tICcuL2NvbW1vbic7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIG5hbWU6IHN0cmluZztcbiAgdmFsdWU6IHN0cmluZztcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZVtdO1xuICBkaXNhYmxlZD86IGJvb2xlYW47XG4gIGxhYmVsPzogc3RyaW5nO1xuICB3aWR0aD86IHN0cmluZztcbiAgbm9TZWxlY3RPcHRpb24/OiBib29sZWFuO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIG9uQ2hhbmdlPzogKHZhbHVlOiBzdHJpbmcpID0+IHZvaWQ7XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7XG4gIG5hbWUsXG4gIHZhbHVlLFxuICBjbGFzc05hbWUgPSAnU2VsZWN0JyxcbiAgZGlzYWJsZWQgPSBmYWxzZSxcbiAgbm9TZWxlY3RPcHRpb24gPSBmYWxzZSxcbiAgd2lkdGggPSAnYXV0bycsXG4gIG9uQ2hhbmdlLFxuICBjaGlsZHJlbixcbn0pID0+IHtcbiAgY29uc3QgaGFuZGxlT25DaGFuZ2UgPSAoZSkgPT4ge1xuICAgIGNvbnN0IHZhbHVlID0gZS50YXJnZXQudmFsdWUgPT09IG5vU2VsZWN0T3B0aW9uTGFiZWwgPyAnJyA6IFN0cmluZyhlLnRhcmdldC52YWx1ZSk7XG4gICAgb25DaGFuZ2UgJiYgb25DaGFuZ2UodmFsdWUpO1xuICB9O1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXIgY2xhc3NOYW1lPXtjbGFzc05hbWV9IG5hbWU9e25hbWV9IG9uQ2hhbmdlPXtoYW5kbGVPbkNoYW5nZX0gZGlzYWJsZWQ9e2Rpc2FibGVkfSB2YWx1ZT17dmFsdWV9IHdpZHRoPXt3aWR0aH0+XG4gICAgICB7bm9TZWxlY3RPcHRpb24gJiYgZ2V0Tm9TZWxlY3RPcHRpb24oKX1cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxudHlwZSBDb250YWluZXJUeXBlID0ge1xuICB3aWR0aDogc3RyaW5nO1xufTtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLnNlbGVjdDxDb250YWluZXJUeXBlPmBcbiAgJHtJbnB1dENzc307XG4gIHdpZHRoOiAkeyhwcm9wcykgPT4gcHJvcHMud2lkdGh9O1xuICBtYXJnaW46IDAgJHtzdHlsZXMuYmFzZU1hcmdpbn1weCAke3N0eWxlcy5iYXNlTWFyZ2lufXB4IDA7XG5gO1xuIiwiaW1wb3J0IHsgY3NzIH0gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5pbXBvcnQgeyBnZXRSZ2JhQ29sb3IgfSBmcm9tICdjb3Zlci9zdHlsZXMvY29sb3JzJztcblxudHlwZSBJbnB1dENzc1R5cGUgPSB7XG4gIGRpc2FibGVkPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IGRpc2FibGVkQmFzZVRlbnNpb24gPSBzdHlsZXMuYmFzZVRlbnNpb24gLyAzO1xuY29uc3QgZGlzYWJlbGRDb2xvciA9IGByZ2IoJHtkaXNhYmxlZEJhc2VUZW5zaW9ufSAke2Rpc2FibGVkQmFzZVRlbnNpb259ICR7ZGlzYWJsZWRCYXNlVGVuc2lvbn0pYDtcbmV4cG9ydCBjb25zdCBJbnB1dENzcyA9IGNzczxJbnB1dENzc1R5cGU+YFxuICBkaXNwbGF5OiBibG9jaztcbiAgbWluLXdpZHRoOiBmaXQtY29udGVudDtcbiAgbWF4LXdpZHRoOiBjYWxjKDEwMCUgLSAke3N0eWxlcy5xdWFkTWFyZ2lufXB4KTtcbiAgcGFkZGluZzogJHtzdHlsZXMuZG91YmxlUGFkZGluZ31weDtcbiAgbWFyZ2luLWxlZnQ6ICR7c3R5bGVzLnF1YWRNYXJnaW59cHg7XG4gIG1hcmdpbi1yaWdodDogJHtzdHlsZXMucXVhZE1hcmdpbn1weDtcbiAgb3V0bGluZS1jb2xvcjogJHtnZXRSZ2JhQ29sb3Ioc3R5bGVzLnRoZW1lUmdiKX07XG4gIGNvbG9yOiAke3N0eWxlcy5mb250Q29sb3J9O1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7c3R5bGVzLmJvcmRlckNvbG9yfTtcbiAgYmFja2dyb3VuZDogcmdiKDI1MCwgMjUwLCAyNTAsIDAuNCk7XG4gIGN1cnNvcjogJHsocHJvcHMpID0+IChwcm9wcy5kaXNhYmxlZCA9PT0gdHJ1ZSAmJiBwcm9wcy5kaXNhYmxlZCAhPT0gdW5kZWZpbmVkID8gJ25vcm1hbCcgOiAncG9pbnRlcicpfTtcbiAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICBhcHBlYXJhbmNlOiBub25lO1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XG4gIG1hcmdpbjogJHtzdHlsZXMuYmFzZU1hcmdpbn1weCAwO1xuICA6Zm9jdXMge1xuICAgICR7KHByb3BzKSA9PiAocHJvcHMuZGlzYWJsZWQgPT09IHRydWUgJiYgcHJvcHMuZGlzYWJsZWQgIT09IHVuZGVmaW5lZCA/ICcnIDogJ2JhY2tncm91bmQ6IHJnYmEoMTI5LCAyMjQsIDIwOSwgMC4xKScpfTtcbiAgfVxuICA6aG92ZXIge1xuICAgICR7KHByb3BzKSA9PiAocHJvcHMuZGlzYWJsZWQgPT09IHRydWUgJiYgcHJvcHMuZGlzYWJsZWQgIT09IHVuZGVmaW5lZCA/ICcnIDogJ2JhY2tncm91bmQ6IHJnYmEoMTI5LCAyMjQsIDIwOSwgMC4xKScpfTtcbiAgfVxuICA6ZGlzYWJsZWQge1xuICAgIGNvbG9yOiAke2Rpc2FiZWxkQ29sb3J9O1xuICB9XG5gO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IE9wdGlvbiBmcm9tICcuL09wdGlvbic7XG5pbXBvcnQgU2luZ2xlIGZyb20gJy4vU2luZ2xlJztcblxuZXhwb3J0IGNvbnN0IG5vU2VsZWN0T3B0aW9uTGFiZWwgPSAnLSc7XG5cbmV4cG9ydCBjb25zdCBnZXROb1NlbGVjdE9wdGlvbiA9ICgpOiBSZWFjdC5SZWFjdE5vZGUgPT4ge1xuICByZXR1cm4gPG9wdGlvbiB2YWx1ZT17dW5kZWZpbmVkfT57bm9TZWxlY3RPcHRpb25MYWJlbH08L29wdGlvbj47XG59O1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIFNpbmdsZSxcbiAgT3B0aW9uLFxufTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEZsZXggZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9GbGV4JztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQyA9ICgpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cImNoZWNrd3JhcHBlclwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIiBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiPlxuICAgICAgPHN2ZyB2ZXJzaW9uPVwiMS4xXCIgaWQ9XCJMYXllcl8xXCIgeD1cIjBweFwiIHk9XCIwcHhcIiB2aWV3Qm94PVwiMCAwIDk4LjUgOTguNVwiIGVuYWJsZUJhY2tncm91bmQ9XCJuZXcgMCAwIDk4LjUgOTguNVwiPlxuICAgICAgICA8cGF0aFxuICAgICAgICAgIGNsYXNzTmFtZT1cImNoZWNrbWFya1wiXG4gICAgICAgICAgZmlsbD1cIm5vbmVcIlxuICAgICAgICAgIHN0cm9rZVdpZHRoPVwiNFwiXG4gICAgICAgICAgc3Ryb2tlTWl0ZXJsaW1pdD1cIjUwXCJcbiAgICAgICAgICBkPVwiTTgxLjcsMTcuOEM3My41LDkuMyw2Miw0LDQ5LjIsNFxuXHRDMjQuMyw0LDQsMjQuMyw0LDQ5LjJzMjAuMyw0NS4yLDQ1LjIsNDUuMnM0NS4yLTIwLjMsNDUuMi00NS4yYzAtOC42LTIuNC0xNi42LTYuNS0yMy40bDAsMEw0NS42LDY4LjJMMjQuNyw0Ny4zXCJcbiAgICAgICAgLz5cbiAgICAgIDwvc3ZnPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQoRmxleClgXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcblxuICBzdmcge1xuICAgIHdpZHRoOiAxMDBweDtcbiAgICBoZWlnaHQ6IDEwMHB4O1xuICB9XG5cbiAgLmNoZWNrbWFyayB7XG4gICAgc3Ryb2tlOiAke3N0eWxlcy5zYXZlQ2hlY2tDb2xvcn07XG4gICAgc3Ryb2tlLWRhc2hvZmZzZXQ6IDc0NS43NDg1MzUxNTYyNTtcbiAgICBzdHJva2UtZGFzaGFycmF5OiA3NDUuNzQ4NTM1MTU2MjU7XG4gICAgYW5pbWF0aW9uOiBkYXNoIDJzIGVhc2Utb3V0IGZvcndhcmRzO1xuICB9XG5cbiAgQGtleWZyYW1lcyBkYXNoIHtcbiAgICAwJSB7XG4gICAgICBzdHJva2UtZGFzaG9mZnNldDogNzQ1Ljc0ODUzNTE1NjI1O1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgIHN0cm9rZS1kYXNob2Zmc2V0OiAwO1xuICAgIH1cbiAgfVxuYDtcblxuLypcbiAgICBib3JkZXI6IDVweCBzb2xpZCAke3N0eWxlcy5zYXZlQ2lyY2xlQm9yZGVyQ29sb3J9O1xuICAgIGJhY2tncm91bmQ6ICR7c3R5bGVzLnNhdmVDaXJjbGVCZ0NvbG9yfTtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4qL1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgRmxleCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0ZsZXgnO1xuaW1wb3J0IHsgTGF5b3V0UHJvcHNUeXBlLCBsYXlvdXRQcm9wc0luaXQgfSBmcm9tICdjb3Zlci9ub2Rlcy9MYXlvdXQnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG5leHBvcnQgdHlwZSBQcm9wcyA9IHtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xufSAmIExheW91dFByb3BzVHlwZTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAocHJvcHM6IFByb3BzKSA9PiB7XG4gIGNvbnN0IHA6IFByb3BzID0ge1xuICAgIC4uLmxheW91dFByb3BzSW5pdCxcbiAgICAuLi5wcm9wcyxcbiAgfTtcbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyIHsuLi5wfT5cbiAgICAgIDxzdmcgdmVyc2lvbj1cIjEuMVwiIGlkPVwiX3gzMl9cIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgeD1cIjBweFwiIHk9XCIwcHhcIiB2aWV3Qm94PVwiMCAwIDUxMiA1MTJcIiB4bWxTcGFjZT1cInByZXNlcnZlXCI+XG4gICAgICAgIDxnPlxuICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICBkPVwiTTE2NS42MjgsNDYxLjEyN2MwLDAsMC44MjctMC44MjgsMS44MzgtMS44MzlsMTk0Ljc0Mi0xOTQuNzQyYzEuMDEyLTEuMDExLDEuOTItMS45MiwyLjAxOS0yLjAxOVxuXHRcdGMwLjA5OS0wLjA5OSwxLjAwOC0xLjAwOCwyLjAxOS0yLjAxOWwxMDMuMTgyLTEwMy4xODJjMC4wMTgtMC4wMTgsMC4wMTgtMC4wNDgsMC0wLjA2N0wzNTQuMjU5LDQyLjA5MlxuXHRcdGMtMC4wMTgtMC4wMTgtMC4wNDgtMC4wMTgtMC4wNjcsMEwyNTEuMDEsMTQ1LjI3NGMtMS4wMTEsMS4wMTEtMS45MiwxLjkyLTIuMDE5LDIuMDE5Yy0wLjA5OSwwLjA5OS0xLjAwOCwxLjAwOC0yLjAxOSwyLjAxOVxuXHRcdEw1MC40MDEsMzQ1Ljg4NGMtMC4wMDYsMC4wMDYtMC4wMSwwLjAxMi0wLjAxMiwwLjAyTDAuMDAyLDUxMS40NTljLTAuMDExLDAuMDM2LDAuMDIzLDAuMDcsMC4wNTksMC4wNTlsMTYzLjA3OS00OS42MzNcblx0XHRDMTY0LjUwOCw0NjEuNDY4LDE2NS42MjgsNDYxLjEyNywxNjUuNjI4LDQ2MS4xMjd6IE0zNi43MzQsNDc0LjcyN2wyNS4xNTktODIuNjY2YzAuMDEtMC4wMzQsMC4wNTMtMC4wNDUsMC4wNzgtMC4wMlxuXHRcdGw1Ny41MDcsNTcuNTA3YzAuMDI1LDAuMDI1LDAuMDE0LDAuMDY4LTAuMDIsMC4wNzhsLTgyLjY2NiwyNS4xNkMzNi43NTYsNDc0Ljc5NywzNi43MjIsNDc0Ljc2NCwzNi43MzQsNDc0LjcyN3pcIj48L3BhdGg+XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIGQ9XCJNNTAyLjM5OCwxMDQuNDMyYzEyLjgwMy0xMi44MDQsMTIuODAzLTMzLjc1NCwwLTQ2LjU1OGwtNDcuNzkxLTQ3Ljc5MmMtMTIuODA0LTEyLjgwMy0zMy43NTQtMTIuODAzLTQ2LjU1OCwwXG5cdFx0bC0yMy44NjIsMjMuODYyYy0wLjAxOCwwLjAxOC0wLjAxOCwwLjA0OCwwLDAuMDY3bDk0LjI4Miw5NC4yODJjMC4wMTgsMC4wMTgsMC4wNDgsMC4wMTgsMC4wNjcsMEw1MDIuMzk4LDEwNC40MzJ6XCI+PC9wYXRoPlxuICAgICAgICA8L2c+XG4gICAgICA8L3N2Zz5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKEZsZXgpYFxuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuYDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEZsZXggZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9GbGV4JztcbmltcG9ydCB7IExheW91dFByb3BzVHlwZSwgbGF5b3V0UHJvcHNJbml0IH0gZnJvbSAnY292ZXIvbm9kZXMvTGF5b3V0JztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxuZXhwb3J0IHR5cGUgUHJvcHMgPSB7XG4gIGNsYXNzTmFtZT86IHN0cmluZztcbn0gJiBMYXlvdXRQcm9wc1R5cGU7XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCBwOiBQcm9wcyA9IHtcbiAgICAuLi5sYXlvdXRQcm9wc0luaXQsXG4gICAgLi4ucHJvcHMsXG4gIH07XG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lciB7Li4ucH0+XG4gICAgICA8c3ZnIHZlcnNpb249XCIxLjFcIiBpZD1cIl94MzJfXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHg9XCIwcHhcIiB5PVwiMHB4XCIgdmlld0JveD1cIjAgMCA1MTIgNTEyXCIgeG1sU3BhY2U9XCJwcmVzZXJ2ZVwiPlxuICAgICAgICA8Zz5cbiAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgZD1cIk00NDYuMDI1LDkyLjIwNmMtNDAuNzYyLTQyLjM5NC05Ny40ODctNjkuNjQyLTE2MC4zODMtNzIuMTgyYy0xNS43OTEtMC42MzgtMjkuMTE0LDExLjY0OC0yOS43NTIsMjcuNDMzXG5cdFx0Yy0wLjYzOCwxNS43OTEsMTEuNjQ4LDI5LjExNCwyNy40MjYsMjkuNzZjNDcuNzE1LDEuOTQzLDkwLjQ1LDIyLjQ4MSwxMjEuNDc5LDU0LjY4MWMzMC45ODcsMzIuMjM1LDQ5Ljk1Niw3NS43NjUsNDkuOTcxLDEyNC4wMTFcblx0XHRjLTAuMDE1LDQ5LjQ4MS0xOS45NzcsOTQuMDExLTUyLjM4MywxMjYuNDc0Yy0zMi40NjIsMzIuNDEzLTc2Ljk5OSw1Mi4zNjgtMTI2LjQ3Miw1Mi4zODJcblx0XHRjLTQ5LjQ3NC0wLjAxNS05NC4wMjUtMTkuOTctMTI2LjQ3NC01Mi4zODJjLTMyLjQwNS0zMi40NjMtNTIuMzY4LTc2Ljk5Mi01Mi4zODItMTI2LjQ3NGMwLTMuNDgzLDAuMTA2LTYuOTM4LDAuMzAyLTEwLjM2NFxuXHRcdGwzNC4wOTEsMTYuODI3YzMuNzAyLDEuODI0LDguMDAyLDEuODUyLDExLjM1LDAuMDg2YzMuMzYyLTEuNzg4LDUuMzQ5LTUuMTM3LDUuMjY0LTguODk2bC0zLjM2Mi0xNDkuODM0XG5cdFx0Yy0wLjExNC00LjI4NS0yLjg4LTguMzU3LTcuMDk0LTEwLjQ2NGMtNC4yNDItMi4wNzEtOS4xNjYtMS44MDktMTIuNjEzLDAuNzM4TDQuMDA4LDE4Mi40NWMtMy4wNSwyLjIyMS00LjQ5OCw1LjgzMS0zLjg2LDkuNTc3XG5cdFx0YzAuNjEsMy43NTksMy4yNDksNy4xNDMsNi45NjYsOC45NzRsMzUuNzIyLDE3LjYyOWMtMS45MzcsMTIuMTY2LTMuMDE4LDI0LjYwMi0zLjAxOCwzNy4yNzlcblx0XHRjLTAuMDE0LDY1LjEwMiwyNi40NzUsMTI0LjMxLDY5LjE1MywxNjYuOTQ0QzE1MS42MDcsNDY1LjUyNSwyMTAuOCw0OTIuMDEzLDI3NS45MSw0OTJcblx0XHRjNjUuMDk1LDAuMDE0LDEyNC4zMDItMjYuNDc1LDE2Ni45MzctNjkuMTQ2YzQyLjY3OC00Mi42MzUsNjkuMTY3LTEwMS44NDIsNjkuMTU0LTE2Ni45NDRcblx0XHRDNTEyLjAxNCwxOTIuNDQ2LDQ4Ni44NDQsMTM0LjU2NSw0NDYuMDI1LDkyLjIwNnpcIj48L3BhdGg+XG4gICAgICAgIDwvZz5cbiAgICAgIDwvc3ZnPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQoRmxleClgXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG5gO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgRmxleCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0ZsZXgnO1xuaW1wb3J0IHsgTGF5b3V0UHJvcHNUeXBlLCBsYXlvdXRQcm9wc0luaXQgfSBmcm9tICdjb3Zlci9ub2Rlcy9MYXlvdXQnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG5leHBvcnQgdHlwZSBQcm9wcyA9IHtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xufSAmIExheW91dFByb3BzVHlwZTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAocHJvcHM6IFByb3BzKSA9PiB7XG4gIGNvbnN0IHA6IFByb3BzID0ge1xuICAgIC4uLmxheW91dFByb3BzSW5pdCxcbiAgICAuLi5wcm9wcyxcbiAgfTtcbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyIHsuLi5wfT5cbiAgICAgIDxzdmcgdmVyc2lvbj1cIjEuMFwiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB2aWV3Qm94PVwiMCAwIDY0LjAwMDAwMCA2NC4wMDAwMDBcIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPVwieE1pZFlNaWQgbWVldFwiPlxuICAgICAgICA8ZyB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoMC4wMDAwMDAsNjQuMDAwMDAwKSBzY2FsZSgwLjEwMDAwMCwtMC4xMDAwMDApXCIgc3Ryb2tlPVwibm9uZVwiPlxuICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICBkPVwiTTc3IDU0NSBjLTQgLTkgLTcgLTkwIC03IC0xODAgMCAtMTgyIDQgLTE5NSA2NCAtMTk1IDQxIDAgMTIxIC0yN1xuMTM3IC00NiA2IC04IDE1IC0xNCAyMCAtMTQgNSAwIDkgODIgOSAxODMgMCAxNzggLTEgMTg0IC0yMiAyMDMgLTQ1IDQwIC04MlxuNTYgLTEzOCA2MSAtNDcgNSAtNTggMyAtNjMgLTEyelwiXG4gICAgICAgICAgLz5cbiAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgZD1cIk00NTUgNTUzIGMtMjMgLTYgLTYyIC0zMCAtOTIgLTU3IC0yMiAtMTkgLTIzIC0yNSAtMjMgLTIwMyAwIC0xMDEgNFxuLTE4MyA5IC0xODMgNSAwIDE0IDYgMjAgMTQgMTYgMTkgOTYgNDYgMTM3IDQ2IDYwIDAgNjQgMTMgNjQgMTk1IDAgOTAgLTMgMTcwXG4tNiAxNzkgLTYgMTYgLTYzIDIwIC0xMDkgOXpcIlxuICAgICAgICAgIC8+XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIGQ9XCJNMTEgNDc2IGMtOCAtOSAtMTEgLTcyIC05IC0yMDIgbDMgLTE4OSAxMjcgMCBjMTAwIDAgMTI0IDMgMTE2IDEyXG4tMTMgMTYgLTEwMSA0MyAtMTM4IDQzIC0xNCAwIC0zNiA3IC00OCAxNiAtMjEgMTUgLTIyIDIxIC0yMiAxNjkgMCAxNTAgLTZcbjE3OSAtMjkgMTUxelwiXG4gICAgICAgICAgLz5cbiAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgZD1cIk02MDcgNDgzIGMtNCAtMyAtNyAtNzUgLTcgLTE1OSAwIC0xNDcgLTEgLTE1NCAtMjIgLTE2OCAtMTIgLTkgLTM0XG4tMTYgLTQ4IC0xNiAtMzcgMCAtMTI1IC0yNyAtMTM4IC00MyAtOCAtOSAxNiAtMTIgMTE2IC0xMiBsMTI3IDAgMyAxOTEgYzJcbjE1MiAwIDE5NCAtMTEgMjAzIC04IDYgLTE3IDggLTIwIDR6XCJcbiAgICAgICAgICAvPlxuICAgICAgICA8L2c+XG4gICAgICA8L3N2Zz5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKEZsZXgpYFxuICB3aWR0aDogMzJweDtcbiAgaGVpZ2h0OiAzMnB4O1xuICBzdmcge1xuICAgIHdpZHRoOiBpbmhlcml0O1xuICAgIGhlaWdodDogaW5oZXJpdDtcbiAgfVxuICBwYXRoIHtcbiAgICBmaWxsOiAke3N0eWxlcy5iYXNlQ29sb3J9O1xuICB9XG5gO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgRmxleCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0ZsZXgnO1xuaW1wb3J0IHsgTGF5b3V0UHJvcHNUeXBlLCBsYXlvdXRQcm9wc0luaXQgfSBmcm9tICdjb3Zlci9ub2Rlcy9MYXlvdXQnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG5leHBvcnQgdHlwZSBQcm9wcyA9IHtcbiAgY2xhc3NOYW1lPzogc3RyaW5nO1xufSAmIExheW91dFByb3BzVHlwZTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAocHJvcHM6IFByb3BzKSA9PiB7XG4gIGNvbnN0IHA6IFByb3BzID0ge1xuICAgIC4uLmxheW91dFByb3BzSW5pdCxcbiAgICAuLi5wcm9wcyxcbiAgfTtcbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyIHsuLi5wfT5cbiAgICAgIDxzdmcgdmVyc2lvbj1cIjEuMVwiIGlkPVwiX3gzMl9cIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgeD1cIjBweFwiIHk9XCIwcHhcIiB2aWV3Qm94PVwiMCAwIDUxMiA1MTJcIiB4bWxTcGFjZT1cInByZXNlcnZlXCI+XG4gICAgICAgIDxnPlxuICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICBkPVwiTTQ5MC4yNDksMzA4LjA4N3YtMC4wMUwzNDguODksNDQ5LjQzNmMtMTcuNTI1LDE3LjUyNS00MC40MTYsMjYuMjM3LTYzLjQ1OSwyNi4yNTZcblx0XHRjLTIzLjA0Mi0wLjAyLTQ1LjkzNS04LjczMi02My40NTgtMjYuMjU2TDIxLjc1MSwyNDkuMjE1TDAsMjcwLjk4NGwyMDAuMjIyLDIwMC4yMTFjMjMuNDcyLDIzLjQ3NCw1NC40MTYsMzUuMjcsODUuMjA5LDM1LjI2XG5cdFx0YzMwLjc5NCwwLjAxLDYxLjczNy0xMS43NzYsODUuMjEtMzUuMjZMNTEyLDMyOS44MzhMNDkwLjI0OSwzMDguMDg3elwiPjwvcGF0aD5cbiAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgZD1cIk01NC4zNzYsMjI4LjkxNmwyMDAuMjIxLDIwMC4yMjJjMTcuMDI0LDE3LjAyNCw0NC42NDMsMTcuMDI0LDYxLjY2NywwbDE0MS4zNTgtMTQxLjM2OVxuXHRcdGMxNy4wNDQtMTcuMDM0LDE3LjAyNC00NC42NDMsMC02MS42NTZMMjU3LjQyMiwyNS44OTFjLTcuNjUxLTcuNjMxLTE3Ljg0Ni0xMi4xNjgtMjguNjItMTIuNzA4TDc5Ljg1Miw1LjYwMVxuXHRcdEM2Ny41MzUsNC45NzEsNTUuNTM4LDkuNTk3LDQ2LjgwNSwxOC4zMmMtOC43MTIsOC43MjItMTMuMzM5LDIwLjczLTEyLjY5OCwzMy4wNDZsNy41NzEsMTQ4LjkzOVxuXHRcdEM0Mi4yMiwyMTEuMDksNDYuNzQ2LDIyMS4yODUsNTQuMzc2LDIyOC45MTZ6IE0xMTUuMDQxLDg2LjUzNWMxNC4wMi0xNC4wMiwzNi43MzItMTQuMDIsNTAuNzUxLDBcblx0XHRjMTQuMDIsMTQuMDIsMTQuMDIsMzYuNzQyLDAsNTAuNzYxYy0xNC4wMiwxNC4wMi0zNi43MzEsMTQuMDItNTAuNzUxLDBDMTAxLjAyMiwxMjMuMjc3LDEwMS4wMjIsMTAwLjU1NSwxMTUuMDQxLDg2LjUzNXpcIj48L3BhdGg+XG4gICAgICAgIDwvZz5cbiAgICAgIDwvc3ZnPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQoRmxleClgXG4gIHdpZHRoOiAyNHB4O1xuICBoZWlnaHQ6IDI0cHg7XG4gIHN2ZyB7XG4gICAgd2lkdGg6IGluaGVyaXQ7XG4gICAgaGVpZ2h0OiBpbmhlcml0O1xuICB9XG4gIHBhdGgge1xuICAgIGZpbGw6ICR7c3R5bGVzLmJhc2VDb2xvcn07XG4gIH1cbmA7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBGbGV4LCB7IEZsZXhMYXlvdXRQcm9wc1R5cGUsIGZsZXhMYXlvdXRDZW50ZXJQcm9wc0luaXQgfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0ZsZXgnO1xuXG5leHBvcnQgdHlwZSBQcm9wcyA9IEZsZXhMYXlvdXRQcm9wc1R5cGU7XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCBwOiBQcm9wcyA9IHtcbiAgICAuLi5mbGV4TGF5b3V0Q2VudGVyUHJvcHNJbml0LFxuICAgIC4uLnByb3BzLFxuICB9O1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXIgey4uLnB9PlxuICAgICAgPHN2ZyB2ZXJzaW9uPVwiMS4xXCIgaWQ9XCJfeDMyX1wiIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiB4PVwiMHB4XCIgeT1cIjBweFwiIHZpZXdCb3g9XCIwIDAgNTEyIDUxMlwiIHhtbFNwYWNlPVwicHJlc2VydmVcIj5cbiAgICAgICAgPGc+XG4gICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgIGQ9XCJNMjU2LDI2NS4zMDhjNzMuMjUyLDAsMTMyLjY0NC01OS4zOTEsMTMyLjY0NC0xMzIuNjU0QzM4OC42NDQsNTkuNDEyLDMyOS4yNTIsMCwyNTYsMFxuXHRcdGMtNzMuMjYyLDAtMTMyLjY0Myw1OS40MTItMTMyLjY0MywxMzIuNjU0QzEyMy4zNTcsMjA1LjkxNywxODIuNzM4LDI2NS4zMDgsMjU2LDI2NS4zMDh6XCI+PC9wYXRoPlxuICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICBkPVwiTTQyNS44NzQsMzkzLjEwNGMtNS45MjItMzUuNDc0LTM2LTg0LjUwOS01Ny41NTItMTA3LjQ2NWMtNS44MjktNi4yMTItMTUuOTQ4LTMuNjI4LTE5LjUwNC0xLjQyN1xuXHRcdGMtMjcuMDQsMTYuNjcyLTU4Ljc4MiwyNi4zOTktOTIuODE5LDI2LjM5OWMtMzQuMDM2LDAtNjUuNzc4LTkuNzI3LTkyLjgxOC0yNi4zOTljLTMuNTU1LTIuMjAxLTEzLjY3NS00Ljc4NS0xOS41MDUsMS40Mjdcblx0XHRjLTIxLjU1LDIyLjk1Ni01MS42MjgsNzEuOTkxLTU3LjU1MSwxMDcuNDY1QzcxLjU3Myw0ODAuNDQ0LDE2NC44NzcsNTEyLDI1Niw1MTJDMzQ3LjEyMyw1MTIsNDQwLjQyNyw0ODAuNDQ0LDQyNS44NzQsMzkzLjEwNHpcIj48L3BhdGg+XG4gICAgICAgIDwvZz5cbiAgICAgIDwvc3ZnPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQoRmxleClgXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG5gO1xuIiwiaW1wb3J0IHsgY3NzIH0gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgQ2hlY2ttYXJrIGZyb20gJy4vQ2hlY2ttYXJrJztcbmltcG9ydCBFZGl0IGZyb20gJy4vRWRpdCc7XG5pbXBvcnQgUmVzZXQgZnJvbSAnLi9SZXNldCc7XG5pbXBvcnQgU3RvcnkgZnJvbSAnLi9TdG9yeSc7XG5pbXBvcnQgVGFnIGZyb20gJy4vVGFnJztcbmltcG9ydCBVc2VyIGZyb20gJy4vVXNlcic7XG5cbmV4cG9ydCB0eXBlIEljb25UeXBlID0gJ0NoZWNrbWFyaycgfCAnRWRpdCcgfCAnUmVzZXQnIHwgJ1RhZycgfCAnVXNlcicgfCAnU3RvcnknO1xuXG5leHBvcnQgY29uc3Qgc3ZnQ3NzID0gY3NzYFxuICB3aWR0aDogMzJweDtcbiAgaGVpZ2h0OiAzMnB4O1xuYDtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBDaGVja21hcmssXG4gIEVkaXQsXG4gIFJlc2V0LFxuICBUYWcsXG4gIFVzZXIsXG4gIFN0b3J5LFxufTtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBjb25mIGZyb20gJ2NvbW1vbi9jb25mJztcbmltcG9ydCBjb21tb25VdGlsIGZyb20gJ2NvbW1vbi91dGlsJztcblxuaW1wb3J0IGFwaSBmcm9tICdjb3Zlci9hcGknO1xuaW1wb3J0IEZsZXggZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9GbGV4JztcbmltcG9ydCBGbG9hdE1lbnUsIHsgTWVudXNUeXBlIH0gZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvRmxvYXRNZW51JztcbmltcG9ydCB7IEdvb2dsZVNlc3Npb25UeXBlIH0gZnJvbSAnY292ZXIvdGFsa24uY292ZXInO1xuXG5jb25zdCBBY2NvdW50TWVudXNNeU1lbnUgPSAnbXlNZW51JztcbmNvbnN0IEFjY291bnRNZW51c1NlbGVjdEFjY291bnQgPSAnc2VsZWN0QWNjb3VudCc7XG5jb25zdCBBY2NvdW50TWVudXNMb2dvdXQgPSAnbG9nb3V0JztcbmNvbnN0IEFjY291bnRNZW51czogTWVudXNUeXBlW10gPSBbXG4gIHsga2V5OiBBY2NvdW50TWVudXNNeU1lbnUsIGxhYmVsOiAnTVkgUEFHRScgfSxcbiAgeyBrZXk6IEFjY291bnRNZW51c1NlbGVjdEFjY291bnQsIGxhYmVsOiAnQUNDT1VOVFMnIH0sXG4gIHsga2V5OiBBY2NvdW50TWVudXNMb2dvdXQsIGxhYmVsOiAnTE9HT1VUJyB9LFxuXTtcblxudHlwZSBQcm9wcyA9IHtcbiAgc2Vzc2lvbjogR29vZ2xlU2Vzc2lvblR5cGU7XG4gIHNldFNlc3Npb246IFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPEdvb2dsZVNlc3Npb25UeXBlPj47XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7IHNlc3Npb24sIHNldFNlc3Npb24gfTogUHJvcHMpID0+IHtcbiAgY29uc3QgW3Nob3dNZW51LCBzZXRTaG93TWVudV0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IGhhbmRsZU9uQ2xpY2tMb2dpbiA9ICgpID0+IHtcbiAgICBkb2N1bWVudC5jb29raWUgPSBcImdfc3RhdGU9JydcIjtcbiAgICBjb25zdCBzZXNzaW9uU3RyID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3RhbGtuQ292ZXJTZXNzaW9uJyk7XG4gICAgaWYgKHNlc3Npb25TdHIgPT09IG51bGwpIHtcbiAgICAgIHdpbmRvdy5nb29nbGUuYWNjb3VudHMuaWQucHJvbXB0KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldFNob3dNZW51KHRydWUpO1xuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVHb29sZ2VDcmVkZW50aWFsUmVzcG9uc2UgPSBhc3luYyAoZ29vbGdlQ3JlZGVudGlhbFJlc3BvbnNlKSA9PiB7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3RhbGtuQ292ZXJTZXNzaW9uJywgZ29vbGdlQ3JlZGVudGlhbFJlc3BvbnNlLmNyZWRlbnRpYWwpO1xuICAgIGNvbnN0IHNlc3Npb24gPSBjb21tb25VdGlsLnBhcnNlSnd0KGdvb2xnZUNyZWRlbnRpYWxSZXNwb25zZS5jcmVkZW50aWFsKTtcbiAgICBzZXRTZXNzaW9uKHNlc3Npb24pO1xuXG4gICAgY29uc3QgcmVxdWVzdCA9IGNvbW1vblV0aWwuZGVlcENvcHkoc2Vzc2lvbik7XG4gICAgZGVsZXRlIHJlcXVlc3QuaXNzO1xuICAgIGRlbGV0ZSByZXF1ZXN0Lm5iZjtcbiAgICBkZWxldGUgcmVxdWVzdC5hdWQ7XG4gICAgZGVsZXRlIHJlcXVlc3Quc3ViO1xuICAgIGRlbGV0ZSByZXF1ZXN0LmF6cDtcbiAgICBkZWxldGUgcmVxdWVzdC5waWN0dXJlOyAvLyDlgKTjgas644GM5ZCr44G+44KM44GmSlNPTi5wYXJzZeOBjOWkseaVl+OBmeOCi1xuICAgIGRlbGV0ZSByZXF1ZXN0LmlhdDtcbiAgICBkZWxldGUgcmVxdWVzdC5leHA7XG4gICAgZGVsZXRlIHJlcXVlc3QuanRpO1xuICAgIGRlbGV0ZSByZXF1ZXN0LmdpdmVuX25hbWU7XG4gICAgZGVsZXRlIHJlcXVlc3QuZmFtaWx5X25hbWU7XG4gICAgaWYgKHJlcXVlc3QuZW1haWxfdmVyaWZpZWQpIHtcbiAgICAgIGRlbGV0ZSByZXF1ZXN0LmVtYWlsX3ZlcmlmaWVkO1xuICAgICAgYXBpLmpzb24oJ2xvZ2luZWQnLCByZXF1ZXN0KTtcbiAgICB9XG4gICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3Qgc2Vzc2lvblN0ciA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0YWxrbkNvdmVyU2Vzc2lvbicpO1xuICAgIGxldCBwYXJzZWRTZXNzaW9uID0gbnVsbDtcbiAgICBpZiAoc2Vzc2lvblN0cikge1xuICAgICAgcGFyc2VkU2Vzc2lvbiA9IGNvbW1vblV0aWwucGFyc2VKd3Qoc2Vzc2lvblN0cik7XG4gICAgICBzZXRTZXNzaW9uKHBhcnNlZFNlc3Npb24pO1xuICAgIH1cbiAgICBpZiAod2luZG93Lmdvb2dsZSkge1xuICAgICAgd2luZG93Lmdvb2dsZS5hY2NvdW50cy5pZC5pbml0aWFsaXplKHtcbiAgICAgICAgY2xpZW50X2lkOiAnNDI5ODczNjgzNzYwLXYyaGsxOG51YTV2Z2YzN2FlMG92dWhmYmRybWFoNDJkLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tJyxcbiAgICAgICAgY2FuY2VsX29uX3RhcF9vdXRzaWRlOiB0cnVlLFxuICAgICAgICBjYWxsYmFjazogaGFuZGxlR29vbGdlQ3JlZGVudGlhbFJlc3BvbnNlLFxuICAgICAgfSk7XG5cbiAgICAgIGlmIChwYXJzZWRTZXNzaW9uID09PSBudWxsICYmIHNlc3Npb25TdHIgPT09IG51bGwpIHtcbiAgICAgICAgd2luZG93Lmdvb2dsZS5hY2NvdW50cy5pZC5wcm9tcHQoKG5vdGlmaWNhdGlvbikgPT4ge1xuICAgICAgICAgIGlmIChub3RpZmljYXRpb24uaXNOb3REaXNwbGF5ZWQoKSB8fCBub3RpZmljYXRpb24uaXNTa2lwcGVkTW9tZW50KCkpIHtcbiAgICAgICAgICAgIC8vIGNvbnRpbnVlIHdpdGggYW5vdGhlciBpZGVudGl0eSBwcm92aWRlci5cbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxDb250YWluZXIgY2xhc3NOYW1lPVwiQWNjb3VudFwiIG9uQ2xpY2s9e2hhbmRsZU9uQ2xpY2tMb2dpbn0+XG4gICAgICAgIHtzZXNzaW9uICYmIHNlc3Npb24ucGljdHVyZSA9PT0gJycgJiYgKFxuICAgICAgICAgIDxMb2dpbiBhbGlnbkl0ZW1zPVwiY2VudGVyXCIganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIiB3aWR0aD1cIjQ4cHhcIiBoZWlnaHQ9XCI0OHB4XCIgYm9yZGVyIGJvcmRlclJhZGl1cz1cImNpcmNsZVwiPlxuICAgICAgICAgICAgPHN2ZyB2ZXJzaW9uPVwiMS4xXCIgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHZpZXdCb3g9XCIwIDAgNDggNDhcIj5cbiAgICAgICAgICAgICAgPGc+XG4gICAgICAgICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgICAgICAgIGZpbGw9XCIjRUE0MzM1XCJcbiAgICAgICAgICAgICAgICAgIGQ9XCJNMjQgOS41YzMuNTQgMCA2LjcxIDEuMjIgOS4yMSAzLjZsNi44NS02Ljg1QzM1LjkgMi4zOCAzMC40NyAwIDI0IDAgMTQuNjIgMCA2LjUxIDUuMzggMi41NiAxMy4yMmw3Ljk4IDYuMTlDMTIuNDMgMTMuNzIgMTcuNzQgOS41IDI0IDkuNXpcIj48L3BhdGg+XG4gICAgICAgICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgICAgICAgIGZpbGw9XCIjNDI4NUY0XCJcbiAgICAgICAgICAgICAgICAgIGQ9XCJNNDYuOTggMjQuNTVjMC0xLjU3LS4xNS0zLjA5LS4zOC00LjU1SDI0djkuMDJoMTIuOTRjLS41OCAyLjk2LTIuMjYgNS40OC00Ljc4IDcuMThsNy43MyA2YzQuNTEtNC4xOCA3LjA5LTEwLjM2IDcuMDktMTcuNjV6XCI+PC9wYXRoPlxuICAgICAgICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICAgICAgICBmaWxsPVwiI0ZCQkMwNVwiXG4gICAgICAgICAgICAgICAgICBkPVwiTTEwLjUzIDI4LjU5Yy0uNDgtMS40NS0uNzYtMi45OS0uNzYtNC41OXMuMjctMy4xNC43Ni00LjU5bC03Ljk4LTYuMTlDLjkyIDE2LjQ2IDAgMjAuMTIgMCAyNGMwIDMuODguOTIgNy41NCAyLjU2IDEwLjc4bDcuOTctNi4xOXpcIj48L3BhdGg+XG4gICAgICAgICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgICAgICAgIGZpbGw9XCIjMzRBODUzXCJcbiAgICAgICAgICAgICAgICAgIGQ9XCJNMjQgNDhjNi40OCAwIDExLjkzLTIuMTMgMTUuODktNS44MWwtNy43My02Yy0yLjE1IDEuNDUtNC45MiAyLjMtOC4xNiAyLjMtNi4yNiAwLTExLjU3LTQuMjItMTMuNDctOS45MWwtNy45OCA2LjE5QzYuNTEgNDIuNjIgMTQuNjIgNDggMjQgNDh6XCI+PC9wYXRoPlxuICAgICAgICAgICAgICAgIDxwYXRoIGZpbGw9XCJub25lXCIgZD1cIk0wIDBoNDh2NDhIMHpcIj48L3BhdGg+XG4gICAgICAgICAgICAgIDwvZz5cbiAgICAgICAgICAgIDwvc3ZnPlxuICAgICAgICAgIDwvTG9naW4+XG4gICAgICAgICl9XG5cbiAgICAgICAge3Nlc3Npb24gJiYgc2Vzc2lvbi5waWN0dXJlICE9PSAnJyAmJiA8TXlBY2NvdW50IGJhY2tncm91bmRJbWFnZT17c2Vzc2lvbi5waWN0dXJlfSAvPn1cbiAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgPEZsb2F0TWVudVxuICAgICAgICBzaG93PXtzaG93TWVudX1cbiAgICAgICAgc2V0U2hvdz17c2V0U2hvd01lbnV9XG4gICAgICAgIG1lbnVzPXtBY2NvdW50TWVudXN9XG4gICAgICAgIG9uQ2xpY2s9eyhtZW51KSA9PiB7XG4gICAgICAgICAgY29uc3QgcGFnZSA9IGxvY2F0aW9uLnBhdGhuYW1lLnNwbGl0KCcvJylbMl07XG4gICAgICAgICAgc3dpdGNoIChtZW51KSB7XG4gICAgICAgICAgICBjYXNlIEFjY291bnRNZW51c015TWVudTpcbiAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlcGxhY2UoYC8vJHtjb25mLmNvdmVyVVJMfS8ke3Nlc3Npb24uZW1haWx9LyR7cGFnZX1gKTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEFjY291bnRNZW51c1NlbGVjdEFjY291bnQ6XG4gICAgICAgICAgICAgIHdpbmRvdy5nb29nbGUuYWNjb3VudHMuaWQucHJvbXB0KCk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBBY2NvdW50TWVudXNMb2dvdXQ6XG4gICAgICAgICAgICAgIHdpbmRvdy5nb29nbGUuYWNjb3VudHMuaWQuZGlzYWJsZUF1dG9TZWxlY3QoKTtcbiAgICAgICAgICAgICAgZG9jdW1lbnQuY29va2llID0gXCJnX3N0YXRlPScnXCI7XG4gICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCd0YWxrbkNvdmVyU2Vzc2lvbicpO1xuICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgICBzZXRTaG93TWVudShmYWxzZSk7XG4gICAgICAgIH19XG4gICAgICAgIGZpdFJpZ2h0XG4gICAgICAvPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQoRmxleClgXG4gIHdpZHRoOiAzOHB4O1xuICBoZWlnaHQ6IDM4cHg7XG4gIG1pbi13aWR0aDogMzhweDtcbiAgbWluLWhlaWdodDogMzhweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuYDtcblxuY29uc3QgTG9naW4gPSBzdHlsZWQoRmxleClgXG4gIHdpZHRoOiBpbmhlcml0O1xuICBoZWlnaHQ6IGluaGVyaXQ7XG4gIG1pbi13aWR0aDogaW5oZXJpdDtcbiAgbWluLWhlaWdodDogaW5oZXJpdDtcbiAgc3ZnIHtcbiAgICB3aWR0aDogMjRweDtcbiAgICBoZWlnaHQ6IDI0cHg7XG4gIH1cbmA7XG5cbnR5cGUgTXlBY2NvdW50VHlwZSA9IHtcbiAgYmFja2dyb3VuZEltYWdlOiBzdHJpbmc7XG59O1xuXG5jb25zdCBNeUFjY291bnQgPSBzdHlsZWQuZGl2PE15QWNjb3VudFR5cGU+YFxuICB3aWR0aDogMzhweDtcbiAgaGVpZ2h0OiAzOHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHsocHJvcHMpID0+IHByb3BzLmJhY2tncm91bmRJbWFnZX0pO1xuICBiYWNrZ3JvdW5kLXNpemU6IDM4cHg7XG4gIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbmA7XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxuY29uc3QgVGhlbWVHcmVlbiA9ICdncmVlbic7XG5jb25zdCBUaGVtZURhcmsgPSAnZGFyayc7XG50eXBlIFRoZW1lVHlwZXMgPSB0eXBlb2YgVGhlbWVHcmVlbiB8IHR5cGVvZiBUaGVtZURhcms7XG50eXBlIFByb3BzID0ge1xuICBsYWJlbDogc3RyaW5nO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIGFjdGl2ZT86IGJvb2xlYW47XG4gIG9uQ2xpY2s/OiAoZTogUmVhY3QuTW91c2VFdmVudDxIVE1MRWxlbWVudCwgTW91c2VFdmVudD4pID0+IHZvaWQ7XG4gIGhyZWY/OiBzdHJpbmc7XG4gIHRoZW1lPzogVGhlbWVUeXBlcztcbn07XG5cbmNvbnN0IExhYmVsczogRnVuY3Rpb25Db21wb25lbnQ8eyBsYWJlbDogc3RyaW5nIH0+ID0gKHByb3BzKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxsYWJlbD57cHJvcHMubGFiZWx9PC9sYWJlbD5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwibGFtcFwiPiZuYnNwOzwvZGl2PlxuICAgIDwvPlxuICApO1xufTtcblxuY29uc3QgQnV0dG9uOiBGdW5jdGlvbkNvbXBvbmVudDxQcm9wcz4gPSAocHJvcHMpID0+IHtcbiAgcmV0dXJuIChcbiAgICA8YnV0dG9uIG9uQ2xpY2s9eyhlKSA9PiBwcm9wcy5vbkNsaWNrICYmIHByb3BzLm9uQ2xpY2soZSl9PlxuICAgICAgPExhYmVscyBsYWJlbD17cHJvcHMubGFiZWx9IC8+XG4gICAgPC9idXR0b24+XG4gICk7XG59O1xuXG5jb25zdCBBbmNob3I6IEZ1bmN0aW9uQ29tcG9uZW50PFByb3BzPiA9IChwcm9wcykgPT4ge1xuICByZXR1cm4gKFxuICAgIDxhIGhyZWY9e3Byb3BzLmhyZWZ9PlxuICAgICAgPExhYmVscyBsYWJlbD17cHJvcHMubGFiZWx9IC8+XG4gICAgPC9hPlxuICApO1xufTtcblxuY29uc3QgQ29udGVudDogRnVuY3Rpb25Db21wb25lbnQ8UHJvcHM+ID0gKHByb3BzKSA9PiB7XG4gIHJldHVybiBwcm9wcy5ocmVmID8gPEFuY2hvciB7Li4ucHJvcHN9IC8+IDogPEJ1dHRvbiB7Li4ucHJvcHN9IC8+O1xufTtcblxuY29uc3QgQm94TGlzdDogRnVuY3Rpb25Db21wb25lbnQ8UHJvcHM+ID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IGFkZENsYXNzTmFtZSA9IHByb3BzLmNsYXNzTmFtZSA/IHByb3BzLmNsYXNzTmFtZSA6ICcnO1xuICBjb25zdCBjbGFzc05hbWUgPSBwcm9wcy5hY3RpdmUgPyBgJHthZGRDbGFzc05hbWV9IGFjdGl2ZWAgOiBhZGRDbGFzc05hbWU7XG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lciBrZXk9e3Byb3BzLmxhYmVsfSB0aGVtZT17cHJvcHMudGhlbWV9IGNsYXNzTmFtZT17Y2xhc3NOYW1lfT5cbiAgICAgIDxDb250ZW50IHsuLi5wcm9wc30gLz5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbkJveExpc3QuZGVmYXVsdFByb3BzID0ge1xuICBhY3RpdmU6IGZhbHNlLFxuICB0aGVtZTogVGhlbWVHcmVlbixcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEJveExpc3Q7XG5cbnR5cGUgQ29udGFpbmVyUHJvcFR5cGUgPSB7XG4gIHRoZW1lOiBUaGVtZVR5cGVzO1xufTtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmxpPENvbnRhaW5lclByb3BUeXBlPmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiBhdXRvO1xuICBtaW4td2lkdGg6IDE4MHB4O1xuICBoZWlnaHQ6IDcwcHg7XG4gIHBhZGRpbmc6ICR7c3R5bGVzLmJhc2VQYWRkaW5nfXB4O1xuICBtYXJnaW46ICR7c3R5bGVzLmJhc2VNYXJnaW59cHg7XG4gIGJ1dHRvbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgIGNvbG9yOiAkeyhwcm9wcykgPT4gKHByb3BzLnRoZW1lID09PSBUaGVtZUdyZWVuID8gJ3JnYmEoMCwgMCwgMCwgMSknIDogJ3JnYmEoMjU1LCAyNTUsIDI1NSwgMSknKX07XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGJhY2tncm91bmQ6ICR7KHByb3BzKSA9PiAocHJvcHMudGhlbWUgPT09IFRoZW1lR3JlZW4gPyAncmdiYSgyNTUsIDI1NSwgMjU1LCAxKScgOiAncmdiYSg2OCwgNjgsIDY4LCAxKScpfTtcbiAgICBib3JkZXI6IDA7XG4gICAgb3V0bGluZTogMDtcbiAgICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIH1cbiAgYSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgcGFkZGluZzogMTVweDtcbiAgICBjb2xvcjogI2RkZDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICAgIGJhY2tncm91bmQ6ICR7KHByb3BzKSA9PiAocHJvcHMudGhlbWUgPT09IFRoZW1lR3JlZW4gPyAncmdiYSgyNTUsIDI1NSwgMjU1LCAxKScgOiAncmdiYSg2OCwgNjgsIDY4LCAxKScpfTtcbiAgfVxuICBhOmhvdmVyLFxuICBidXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICR7KHByb3BzKSA9PiAocHJvcHMudGhlbWUgPT09IFRoZW1lR3JlZW4gPyAncmdiYSgyNDUsIDI0NSwgMjQ1LCAxKScgOiAncmdiYSg5OCwgOTgsIDk4LCAxKScpfTtcbiAgfVxuICAubGFtcCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHdpZHRoOiA1MCU7XG4gICAgbWF4LXdpZHRoOiA1MHB4O1xuICAgIGhlaWdodDogMTBweDtcbiAgICBtYXgtaGVpZ2h0OiAxMHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBiYWNrZ3JvdW5kOiAkeyhwcm9wcykgPT4gKHByb3BzLnRoZW1lID09PSBUaGVtZUdyZWVuID8gc3R5bGVzLm1hcmt1cENvbG9yIDogJ3JnYmEoMTU1LCAxNTUsIDE1NSwgMSknKX07XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIH1cbiAgbGFiZWwge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuXG4gICYuYWN0aXZlIGRpdi5sYW1wIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYmFja2dyb3VuZDogJHsocHJvcHMpID0+IChwcm9wcy50aGVtZSA9PT0gVGhlbWVHcmVlbiA/ICdyZ2JhKDc5LCAxNzQsIDE1OSwgMSknIDogJ3JnYmEoNzksIDE3NCwgMTU5LCAxKScpfTtcbiAgfVxuYDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEZsZXggZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9GbGV4JztcbmltcG9ydCBIIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvSCc7XG5pbXBvcnQgU2VjdGlvbiBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL1NlY3Rpb24nO1xuaW1wb3J0IFN2ZywgeyBJY29uVHlwZSB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvc3ZnJztcbmltcG9ydCBDaGVja21hcmsgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9zdmcvQ2hlY2ttYXJrJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgdGl0bGU6IHN0cmluZztcbiAgY29udGVudDogUmVhY3QuUmVhY3ROb2RlO1xuICBoZWFkZXJNZW51PzogUmVhY3QuUmVhY3ROb2RlO1xuICBpY29uVHlwZT86IEljb25UeXBlO1xuICBjaGVja0FuaW1hdGlvbj86IGJvb2xlYW47XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7IHRpdGxlLCBoZWFkZXJNZW51LCBjb250ZW50LCBpY29uVHlwZSA9ICdUYWcnLCBjaGVja0FuaW1hdGlvbiB9KSA9PiB7XG4gIGNvbnN0IFN2Z0ljb24gPSBTdmdbaWNvblR5cGVdO1xuICByZXR1cm4gKFxuICAgIDxTZWN0aW9uQ3VzdG9tXG4gICAgICBjbGFzc05hbWU9XCJQcm9maWxlU2VjdGlvblwiXG4gICAgICBmbG93PVwiY29sdW1uIG5vd3JhcFwiXG4gICAgICByZXNldE9yaWdpblxuICAgICAgYm9yZGVyXG4gICAgICBib3JkZXJSYWRpdXNcbiAgICAgIHVwcGVyTWFyZ2luXG4gICAgICBzaWRlTWFyZ2luXG4gICAgICBzaWRlUGFkZGluZ1xuICAgICAgYm90dG9tUGFkZGluZ1xuICAgICAgYm90dG9tTWFyZ2luPlxuICAgICAgPEhlYWRlclxuICAgICAgICBjbGFzc05hbWU9eydQcm9maWxlU2VjdGlvbkhlYWRlcid9XG4gICAgICAgIHdpZHRoPVwiMTAwJVwiXG4gICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICBqdXN0aWZ5Q29udGVudD1cInNwYWNlLWJldHdlZW5cIlxuICAgICAgICBib3JkZXI9XCJ1bmRlcmxpbmVcIlxuICAgICAgICB1cHBlclBhZGRpbmdcbiAgICAgICAgc2lkZVBhZGRpbmdcbiAgICAgICAgYm90dG9tUGFkZGluZz5cbiAgICAgICAgPEguRml2ZSBjbGFzc05hbWU9e3RpdGxlfSB1cHBlck1hcmdpbiBib3R0b21NYXJnaW4+XG4gICAgICAgICAgPFN2Z0ljb24gY2xhc3NOYW1lPVwiUHJvZmlsZVNlY3Rpb25TdmdJY29uXCIgLz5cbiAgICAgICAgICB7dGl0bGV9XG4gICAgICAgIDwvSC5GaXZlPlxuICAgICAgICB7aGVhZGVyTWVudSAmJiAoXG4gICAgICAgICAgPEZsZXggY2xhc3NOYW1lPXsnUHJvZmlsZVNlY3Rpb25NZW51J30gZmxvdz1cImNvbHVtbiBub3dyYXBcIj5cbiAgICAgICAgICAgIHtoZWFkZXJNZW51fVxuICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgKX1cbiAgICAgIDwvSGVhZGVyPlxuICAgICAgPEZsZXggd2lkdGg9XCIxMDAlXCIgY2xhc3NOYW1lPXsnUHJvZmlsZVNlY3Rpb25Db250ZW50J30gZmxvdz1cImNvbHVtbiBub3dyYXBcIiB1cHBlclBhZGRpbmcgc2lkZVBhZGRpbmcgc2lkZU1hcmdpbiBib3R0b21QYWRkaW5nPlxuICAgICAgICB7Y29udGVudH1cbiAgICAgIDwvRmxleD5cbiAgICAgIHtjaGVja0FuaW1hdGlvbiAmJiA8Q2hlY2ttYXJrIC8+fVxuICAgIDwvU2VjdGlvbkN1c3RvbT5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgU2VjdGlvbkN1c3RvbSA9IHN0eWxlZChTZWN0aW9uKWBcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGh9cHgpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgcGFkZGluZy1yaWdodDogMDtcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG4gICAgYm9yZGVyLXJpZ2h0OiAwO1xuICAgIGJvcmRlci1sZWZ0OiAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gIH1cbmA7XG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZChGbGV4KWBcbiAgLlByb2ZpbGVTZWN0aW9uU3ZnSWNvbiB7XG4gICAgbWFyZ2luOiAwICR7c3R5bGVzLmJhc2VNYXJnaW59cHggMCAwO1xuICB9XG5gO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgSCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0gnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG50eXBlIFByb3BzID0ge1xuICBudW1iZXI6IG51bWJlcjtcbiAgdGl0bGU6IHN0cmluZztcbiAgZmxvdz86IHN0cmluZztcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbn07XG5cbmNvbnN0IGFzc2lnblplcm8gPSAobnVtYmVyOiBudW1iZXIpOiBzdHJpbmcgPT4gKFN0cmluZyhudW1iZXIpLmxlbmd0aCA9PT0gMSA/IGAwJHtudW1iZXJ9YCA6IFN0cmluZyhudW1iZXIpKTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoeyBudW1iZXIsIHRpdGxlLCBmbG93ID0gJ2NvbHVtbiB3cmFwJywgY2hpbGRyZW4gfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXIgY2xhc3NOYW1lPVwiU2VjdGlvblwiPlxuICAgICAgPFVwcGVyTGVmdCBjbGFzc05hbWU9XCJ1cHBlckxlZnRcIj5cbiAgICAgICAgPFE+e2Fzc2lnblplcm8obnVtYmVyKX08L1E+XG4gICAgICA8L1VwcGVyTGVmdD5cbiAgICAgIDxVcHBlclJpZ2h0IGNsYXNzTmFtZT1cInVwcGVyUmlnaHRcIj5cbiAgICAgICAgPEguVGhyZWU+e3RpdGxlfTwvSC5UaHJlZT5cbiAgICAgIDwvVXBwZXJSaWdodD5cbiAgICAgIDxCb3R0b21MZWZ0IGNsYXNzTmFtZT1cImJvdHRvbUxlZnRcIj48L0JvdHRvbUxlZnQ+XG4gICAgICA8Qm90dG9tUmlnaHQgY2xhc3NOYW1lPVwiYm90dG9tUmlnaHRcIiBmbG93PXtmbG93fT5cbiAgICAgICAge2NoaWxkcmVufVxuICAgICAgPC9Cb3R0b21SaWdodD5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgQ2hhcHRlckxlZnRXaWR0aCA9IHN0eWxlcy5zZXBTaXplO1xuY29uc3QgQ2hhcHRlck1hcmdpbiA9IHN0eWxlcy5zZWN0aW9uTWFyZ2luQ29sdW1uO1xuY29uc3QgSW5uZXJQYWRkaW5nID0gc3R5bGVzLnNlY3Rpb25QYWRkaW5nO1xuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLnNlY3Rpb25gXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICBwYWRkaW5nOiAke0lubmVyUGFkZGluZyAqIDJ9cHggJHtJbm5lclBhZGRpbmd9cHg7XG4gIG1hcmdpbjogJHtDaGFwdGVyTWFyZ2lufXB4IDA7XG4gIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2VlZTtcbiAgYm9yZGVyLXJhZGl1czogJHtzdHlsZXMuYmFzZVNpemV9cHg7XG4gID4gKiB7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWNvbnRlbnQ7XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGh9cHgpIHtcbiAgICBwYWRkaW5nOiAke0lubmVyUGFkZGluZ31weCAke0lubmVyUGFkZGluZyAvIDJ9cHg7XG4gICAgbWFyZ2luOiAke0NoYXB0ZXJNYXJnaW59cHggMDtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICB9XG5gO1xuY29uc3QgVXBwZXJMZWZ0ID0gc3R5bGVkLnNwYW5gXG4gIGZsZXg6IDEgMSAke0NoYXB0ZXJMZWZ0V2lkdGh9cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgd2lkdGg6ICR7Q2hhcHRlckxlZnRXaWR0aH1weDtcbiAgcGFkZGluZy1yaWdodDogJHtJbm5lclBhZGRpbmd9cHg7XG4gIHBhZGRpbmctYm90dG9tOiAke0lubmVyUGFkZGluZ31weDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICR7c3R5bGVzLmZvbnRDb2xvcn07XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFN0cmljdFdpZHRofXB4KSB7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtYXgtd2lkdGg6IDgwcHg7XG4gICAgcGFkZGluZy1yaWdodDogMDtcbiAgfVxuYDtcbmNvbnN0IFVwcGVyUmlnaHQgPSBzdHlsZWQuc3BhbmBcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtZW5kO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGZsZXg6IDEgMSBjYWxjKDEwMCUgLSAke0NoYXB0ZXJMZWZ0V2lkdGggKyBJbm5lclBhZGRpbmcgKiAyfXB4KTtcbiAgcGFkZGluZzogJHtJbm5lclBhZGRpbmd9cHg7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgIzY2NjtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICR7c3R5bGVzLmZvbnRDb2xvcn07XG5gO1xuY29uc3QgQm90dG9tTGVmdCA9IHN0eWxlZC5zcGFuYFxuICBmbGV4OiAxIDEgJHtDaGFwdGVyTGVmdFdpZHRofXB4O1xuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRXaWR0aH1weCkge1xuICB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFN0cmljdFdpZHRofXB4KSB7XG4gICAgZGlzcGxheTogY29udGVudHM7XG4gIH1cbmA7XG5cbnR5cGUgQm90dG9tUmlnaHRQcm9wc1R5cGUgPSB7XG4gIGZsb3c6IHN0cmluZztcbn07XG5cbmNvbnN0IEJvdHRvbVJpZ2h0ID0gc3R5bGVkLnNwYW48Qm90dG9tUmlnaHRQcm9wc1R5cGU+YFxuICBmbGV4OiAxIDEgY2FsYygxMDAlIC0gJHtDaGFwdGVyTGVmdFdpZHRoICsgSW5uZXJQYWRkaW5nICogMn1weCk7XG4gIGZsZXgtZmxvdzogJHsocHJvcHMpID0+IHByb3BzLmZsb3d9O1xuICBwYWRkaW5nOiAke0lubmVyUGFkZGluZ31weCAke0lubmVyUGFkZGluZ31weCAwO1xuICBib3JkZXItbGVmdCAxcHggc29saWQgJHtzdHlsZXMuZm9udENvbG9yfTtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgfVxuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRTdHJpY3RXaWR0aH1weCkge1xuICAgIHBhZGRpbmc6ICR7SW5uZXJQYWRkaW5nfXB4IDA7XG4gICAgYm9yZGVyLWxlZnQgMDtcbiAgfVxuYDtcblxuY29uc3QgUSA9IHN0eWxlZC5zcGFuYFxuICBmb250LXNpemU6IDcwcHg7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbiAgbGluZS1oZWlnaHQ6IDcwcHg7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFN0cmljdFdpZHRofXB4KSB7XG4gICAgZm9udC1zaXplOiA1MHB4O1xuICAgIGxpbmUtaGVpZ2h0OiA1MHB4O1xuICB9XG5gO1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQsIHsgY3NzIH0gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbnR5cGUgQ29tbW9uUHJvcHMgPSB7XG4gIHNob3dBZHZlcnQ6IGJvb2xlYW47XG59O1xuXG50eXBlIEhlYWRlclByb3BzID0gQ29tbW9uUHJvcHMgJiB7XG4gIGhhbmRsZU9uQ2xpY2tDb250cm9sQWR2ZXJ0OiAoKSA9PiB2b2lkO1xufTtcblxuZXhwb3J0IGNvbnN0IEhlYWRlcjogRnVuY3Rpb25Db21wb25lbnQ8SGVhZGVyUHJvcHM+ID0gKHsgc2hvd0FkdmVydCwgaGFuZGxlT25DbGlja0NvbnRyb2xBZHZlcnQgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxBZHZlcnRIZWFkZXIgc2hvd0FkdmVydD17c2hvd0FkdmVydH0+XG4gICAgICA8QWR2ZXJ0QXR0YWNoIHNob3dBZHZlcnQ9e3Nob3dBZHZlcnR9IG9uQ2xpY2s9e2hhbmRsZU9uQ2xpY2tDb250cm9sQWR2ZXJ0fT5cbiAgICAgICAgQURcbiAgICAgICAgPGJyIC8+XG4gICAgICAgIHtzaG93QWR2ZXJ0ID8gJ09GRicgOiAnT04nfVxuICAgICAgPC9BZHZlcnRBdHRhY2g+XG4gICAgPC9BZHZlcnRIZWFkZXI+XG4gICk7XG59O1xuXG5jb25zdCBDb250ZW50ID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICDjgrnjg53jg7PjgrXjg7xcbiAgICAgIDxiciAvPlxuICAgICAg5Yuf6ZuG5LitXG4gICAgICA8YnIgLz5cbiAgICAgIDxiciAvPlxuICAgICAgwqUwflxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGNvbnN0IFJpZ2h0OiBGdW5jdGlvbkNvbXBvbmVudDxDb21tb25Qcm9wcz4gPSAoeyBzaG93QWR2ZXJ0IH0pID0+IHtcbiAgcmV0dXJuIChcbiAgICA8QWR2ZXJ0UmlnaHQgc2hvd0FkdmVydD17c2hvd0FkdmVydH0+XG4gICAgICA8Q29udGVudCAvPlxuICAgIDwvQWR2ZXJ0UmlnaHQ+XG4gICk7XG59O1xuXG5leHBvcnQgY29uc3QgTGVmdDogRnVuY3Rpb25Db21wb25lbnQ8Q29tbW9uUHJvcHM+ID0gKHsgc2hvd0FkdmVydCB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPEFkdmVydExlZnQgc2hvd0FkdmVydD17c2hvd0FkdmVydH0+XG4gICAgICA8Q29udGVudCAvPlxuICAgIDwvQWR2ZXJ0TGVmdD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgSGVhZGVyLFxuICBSaWdodCxcbiAgTGVmdCxcbn07XG5cbmNvbnN0IEFkdmVydENzcyA9IGNzczxDb21tb25Qcm9wcz5gXG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogJHtzdHlsZXMuYmFzZUhlaWdodCAqIDIgKyBzdHlsZXMuYmFzZU1hcmdpbn1weDtcbiAgZmxleDogMSAxICR7c3R5bGVzLmFkdmVydFdpZHRofXB4O1xuICBkaXNwbGF5OiAkeyhwcm9wcykgPT4gKHByb3BzLnNob3dBZHZlcnQgPyAnZmxleCcgOiAnbm9uZScpfTtcbiAgb3BhY2l0eTogJHsocHJvcHMpID0+IChwcm9wcy5zaG93QWR2ZXJ0ID8gMSA6IDApfTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAke3N0eWxlcy5hZHZlcnRXaWR0aH1weDtcbiAgbWluLXdpZHRoOiAke3N0eWxlcy5hZHZlcnRXaWR0aH1weDtcbiAgbWF4LXdpZHRoOiAke3N0eWxlcy5hZHZlcnRXaWR0aH1weDtcbiAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gJHtzdHlsZXMuYmFzZUhlaWdodCAqIDIgKyBzdHlsZXMuYmFzZU1hcmdpbiAqIDJ9cHgpO1xuICBtYXJnaW46ICR7c3R5bGVzLmJhc2VIZWlnaHQgKyBzdHlsZXMuYmFzZU1hcmdpbn1weCAke3N0eWxlcy5iYXNlTWFyZ2lufXB4O1xuICBiYWNrZ3JvdW5kOiAke3N0eWxlcy5hZHZlcnRDb2xvcn07XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHRyYW5zaXRpb24tcHJvcGVydHk6IGJhY2tncm91bmQsIHRyYW5zZm9ybTtcbiAgdHJhbnNpdGlvbi1kdXJhdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zLCAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIDpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogJHtzdHlsZXMuYWR2ZXJ0SG92ZXJDb2xvcn07XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IDA7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAtICR7c3R5bGVzLmRvdWJsZU1hcmdpbn1weCk7XG4gICAgbWF4LXdpZHRoOiBjYWxjKDEwMCUgLSAke3N0eWxlcy5kb3VibGVNYXJnaW59cHgpO1xuICAgIG1hcmdpbjogMCAke3N0eWxlcy5iYXNlTWFyZ2lufXB4O1xuICB9XG5gO1xuXG5jb25zdCBBZHZlcnRIZWFkZXIgPSBzdHlsZWQuZGl2PENvbW1vblByb3BzPmBcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctcmlnaHQ6ICR7c3R5bGVzLmRvdWJsZVBhZGRpbmd9cHg7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5kb3VibGVBZHZlcnRXaWR0aH1weCkge1xuICAgIHBhZGRpbmctcmlnaHQ6ICR7c3R5bGVzLmJhc2VQYWRkaW5nfXB4O1xuICB9XG5gO1xuXG5jb25zdCBBZHZlcnRBdHRhY2ggPSBzdHlsZWQuZGl2PENvbW1vblByb3BzPmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6IDUwcHg7XG4gIGhlaWdodDogNTBweDtcbiAgYmFja2dyb3VuZDogJHtzdHlsZXMuYWR2ZXJ0Q29sb3J9O1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC1zaXplOiAxMHB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiAxNHB4O1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICA6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICR7c3R5bGVzLmFkdmVydEhvdmVyQ29sb3J9O1xuICB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFdpZHRofXB4KSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IEFkdmVydFJpZ2h0ID0gc3R5bGVkLmRpdjxDb21tb25Qcm9wcz5gXG4gICR7QWR2ZXJ0Q3NzfTtcbmA7XG5cbmV4cG9ydCBjb25zdCBBZHZlcnRMZWZ0ID0gc3R5bGVkLmRpdjxDb21tb25Qcm9wcz5gXG4gICR7QWR2ZXJ0Q3NzfTtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLmRvdWJsZUFkdmVydFdpZHRofXB4KSB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRXaWR0aH1weCkge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWFyZ2luLWJvdHRvbTogJHtzdHlsZXMuYmFzZU1hcmdpbn1weDtcbiAgfVxuYDtcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgRnVuY3Rpb25Db21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IENvbW1pbmdTb29uIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvQ29tbWluZ1Nvb24nO1xuaW1wb3J0IFNwaW5uZXIgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9TcGlubmVyJztcblxudHlwZSBQcm9wcyA9IHtcbiAgY2g6IHN0cmluZztcbiAgdXNlckNhdGVnb3J5Q2hzOiBzdHJpbmdbXTtcbiAgdGFsa25GcmFtZVJlZjogUmVhY3QuTXV0YWJsZVJlZk9iamVjdDxIVE1MRWxlbWVudD47XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IEZ1bmN0aW9uQ29tcG9uZW50PFByb3BzPiA9ICh7IGNoLCB1c2VyQ2F0ZWdvcnlDaHMsIHRhbGtuRnJhbWVSZWYgfSkgPT4ge1xuICByZXR1cm4gdXNlckNhdGVnb3J5Q2hzLmxlbmd0aCA+IDAgPyAoXG4gICAgPENvbnRhaW5lcj5cbiAgICAgIHt1c2VyQ2F0ZWdvcnlDaHMubWFwKChjYXRlZ29yeUNoOiBhbnksIGluZGV4KSA9PiB7XG4gICAgICAgIGlmIChjYXRlZ29yeUNoICYmIGNhdGVnb3J5Q2ggIT09ICcnKSB7XG4gICAgICAgICAgLypcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFRhbGtuRnJhbWUga2V5PXtgJHtjYXRlZ29yeUNofToke2luZGV4fWB9IHJlZj17dGFsa25GcmFtZVJlZn0gY2xhc3NOYW1lPVwidGFsa25GcmFtZVwiIGRhdGEtY2g9e2NhdGVnb3J5Q2h9PlxuICAgICAgICAgICAgICA8U3Bpbm5lciBzaXplPVwiNTBcIiAvPlxuICAgICAgICAgICAgPC9UYWxrbkZyYW1lPlxuICAgICAgICAgICk7XG4gICAgICAgICAgKi9cbiAgICAgICAgICByZXR1cm4gPD48Lz47XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgIH0pfVxuICAgIDwvQ29udGFpbmVyPlxuICApIDogKFxuICAgIDxDb21taW5nU29vbiBjaD17Y2h9IC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcblxudHlwZSBUYWxrbkZyYW1lUHJvcHNUeXBlID0ge1xuICAnZGF0YS1jaCc6IHN0cmluZztcbiAgJ3JlZic6IGFueTtcbn07XG5cbmNvbnN0IFRhbGtuRnJhbWUgPSBzdHlsZWQuZGl2PFRhbGtuRnJhbWVQcm9wc1R5cGU+YFxuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgaGVpZ2h0OiAzNDBweDtcbmA7XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IGNvbmYgZnJvbSAnY29tbW9uL2NvbmYnO1xuXG5pbXBvcnQgSCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0gnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuaW1wb3J0IHtcbiAgU2VsZWN0Q29udGVudE1lbnVUeXBlLCAvLyAgc2VsZWN0Q29udGVudE1lbnVMaXZlUGFnZXMsXG4gIHNlbGVjdENvbnRlbnRNZW51QnVzaW5lc3MsXG4gIHNlbGVjdENvbnRlbnRNZW51U3RvcnksXG4gIHNlbGVjdENvbnRlbnRNZW51UHJvZmlsZSxcbn0gZnJvbSAnY292ZXIvdGFsa24uY292ZXInO1xuXG50eXBlIFByb3BzID0ge1xuICBjaDogc3RyaW5nO1xuICBzZWxlY3RDb250ZW50TWVudTogU2VsZWN0Q29udGVudE1lbnVUeXBlO1xuICBjb250ZW50TWVudVJlZjogUmVhY3QuTXV0YWJsZVJlZk9iamVjdDxIVE1MRWxlbWVudD47XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7IGNoLCBzZWxlY3RDb250ZW50TWVudSwgY29udGVudE1lbnVSZWYgfSkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXIgcmVmPXtjb250ZW50TWVudVJlZn0+XG4gICAgICA8Q29udGVudE1lbnVPcmRlcj5cbiAgICAgICAgey8qXG4gICAgICAgIDxDb250ZW50TWVudUxpc3QgY2xhc3NOYW1lPXtzZWxlY3RDb250ZW50TWVudSA9PT0gc2VsZWN0Q29udGVudE1lbnVMaXZlUGFnZXMgJiYgJ2FjdGl2ZSd9PlxuICAgICAgICAgIDxhIGhyZWY9e2AvLyR7Y29uZi5jb3ZlclVSTH0ke2NofWxpdmVQYWdlc2B9PlxuICAgICAgICAgICAgPEguVHdvPkxJVkUgUEFHRVM8L0guVHdvPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1bmRlckJhclwiIC8+XG4gICAgICAgICAgPC9hPlxuICAgICAgICA8L0NvbnRlbnRNZW51TGlzdD5cbiAgKi99XG4gICAgICAgIDxDb250ZW50TWVudUxpc3QgY2xhc3NOYW1lPXtzZWxlY3RDb250ZW50TWVudSA9PT0gc2VsZWN0Q29udGVudE1lbnVQcm9maWxlICYmICdhY3RpdmUnfT5cbiAgICAgICAgICA8YSBocmVmPXtgLy8ke2NvbmYuY292ZXJVUkx9JHtjaH1wcm9maWxlYH0+XG4gICAgICAgICAgICA8SC5Ud28+UFJPRklMRTwvSC5Ud28+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInVuZGVyQmFyXCIgLz5cbiAgICAgICAgICA8L2E+XG4gICAgICAgIDwvQ29udGVudE1lbnVMaXN0PlxuICAgICAgICA8Q29udGVudE1lbnVMaXN0IGNsYXNzTmFtZT17c2VsZWN0Q29udGVudE1lbnUgPT09IHNlbGVjdENvbnRlbnRNZW51QnVzaW5lc3MgJiYgJ2FjdGl2ZSd9PlxuICAgICAgICAgIDxhIGhyZWY9e2AvLyR7Y29uZi5jb3ZlclVSTH0ke2NofWJ1c2luZXNzYH0+XG4gICAgICAgICAgICA8SC5Ud28+QlVTSU5FU1M8L0guVHdvPlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ1bmRlckJhclwiIC8+XG4gICAgICAgICAgPC9hPlxuICAgICAgICA8L0NvbnRlbnRNZW51TGlzdD5cbiAgICAgICAgPENvbnRlbnRNZW51TGlzdCBjbGFzc05hbWU9e3NlbGVjdENvbnRlbnRNZW51ID09PSBzZWxlY3RDb250ZW50TWVudVN0b3J5ICYmICdhY3RpdmUnfT5cbiAgICAgICAgICA8YSBocmVmPXtgLy8ke2NvbmYuY292ZXJVUkx9JHtjaH1zdG9yeWB9PlxuICAgICAgICAgICAgPEguVHdvPlNUT1JZPC9ILlR3bz5cbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidW5kZXJCYXJcIiAvPlxuICAgICAgICAgIDwvYT5cbiAgICAgICAgPC9Db250ZW50TWVudUxpc3Q+XG4gICAgICA8L0NvbnRlbnRNZW51T3JkZXI+XG4gICAgPC9Db250YWluZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbnR5cGUgQ29udGFpbmVyUHJvcHNUeXBlID0ge1xuICByZWY6IGFueTtcbn07XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5vbDxDb250YWluZXJQcm9wc1R5cGU+YFxuICBwb3NpdGlvbjogc3RpY2t5O1xuICB0b3A6ICR7c3R5bGVzLmJhc2VIZWlnaHR9cHg7XG4gIHotaW5kZXg6ICR7c3R5bGVzLnpJbmRleC5jb250ZW50c01lbnV9O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogJHtzdHlsZXMuYmFzZUhlaWdodH1weDtcbiAgbWFyZ2luLXRvcDogJHtzdHlsZXMuZG91YmxlTWFyZ2lufXB4O1xuICBtYXJnaW4tcmlnaHQ6IDA7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuICBtYXJnaW4tYm90dG9tOiAke3N0eWxlcy5kb3VibGVNYXJnaW59cHg7XG4gIHBhZGRpbmctcmlnaHQ6IDA7XG4gIHBhZGRpbmctbGVmdDogMDtcbiAgJHtzdHlsZXMuYWxwaGFCZ1NldH07XG4gIGJveC1zaGFkb3c6IDAgMCAwIDFweCAke3N0eWxlcy5ib3JkZXJDb2xvcn07XG5gO1xuY29uc3QgQ29udGVudE1lbnVPcmRlciA9IHN0eWxlZC51bGBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogaW5oZXJpdDtcbiAgbWF4LXdpZHRoOiAke3N0eWxlcy5hcHBXaWR0aH1weDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBjb2xvcjogJHtzdHlsZXMuZm9udENvbG9yfTtcbiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAke3N0eWxlcy5ib3JkZXJDb2xvcn07XG4gIGZvbnQtc2l6ZTogMTlweDtcbiAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgbGV0dGVyLXNwYWNpbmc6IDVweDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbmA7XG5cbmNvbnN0IENvbnRlbnRNZW51TGlzdCA9IHN0eWxlZC5saWBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICBmbGV4OiAxIDEgYXV0bztcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAyNSU7XG4gIGhlaWdodDogaW5oZXJpdDtcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJHtzdHlsZXMuYm9yZGVyQ29sb3J9O1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC51bmRlckJhciB7XG4gICAgd2lkdGg6IDMwJTtcbiAgICBtaW4td2lkdGg6IDYwcHg7XG4gICAgaGVpZ2h0OiA4cHg7XG4gICAgbWFyZ2luLXRvcDogOHB4O1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4yNSk7XG4gICAgYm9yZGVyLXJhZGl1czogJHtzdHlsZXMuYmFzZVNpemV9cHg7XG4gICAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9uICogMn1tcztcbiAgfVxuXG4gIDpob3ZlciB7XG4gICAgLnVuZGVyQmFyIHtcbiAgICAgIGJhY2tncm91bmQ6ICR7c3R5bGVzLmRhcmtDb2xvcn07XG4gICAgfVxuICB9XG4gICYuYWN0aXZlIHtcbiAgICAudW5kZXJCYXIge1xuICAgICAgYmFja2dyb3VuZDogJHtzdHlsZXMudGhlbWVDb2xvcn07XG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICB9XG4gIH1cbiAgYSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgY29sb3I6ICM2NjY7XG4gIH1cbmA7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgeyBTdG9yaWVzSW5kZXhUeXBlIH0gZnJvbSAnY29tbW9uL3RhbGtuQ29uZmlnJztcblxuaW1wb3J0IEZsZXggZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9GbGV4JztcbmltcG9ydCBIIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvSCc7XG5pbXBvcnQgU2VjdGlvbiBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL1NlY3Rpb24nO1xuaW1wb3J0IEhlYWRlclNlY3Rpb24gZnJvbSAnY292ZXIvY29tcG9uZW50cy9tb2xlY3VsZXMvSGVhZGVyU2VjdGlvbic7XG5pbXBvcnQge1xuICBUYWdQYXJlbnRUeXBlLFxuICB0YWdQYXJlbnRQcm9maWxlLFxuICBUYWdUeXBlLFxuICB0YWdJbnZlc3RvcixcbiAgdGFnRm91bmRlcixcbiAgdGFnTWVtYmVyLFxuICB0YWdQYXJlbnRTdG9yeSxcbiAgdGFnVHlwZXMsXG4gIHRhZ1N0b3J5LFxufSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlJztcbmltcG9ydCBDb250cm9sQnV0dG9uIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvYnV0dG9uL0NvbnRyb2xCdXR0b24nO1xuaW1wb3J0IFJlc2V0QnV0dG9uIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvYnV0dG9uL1Jlc2V0QnV0dG9uJztcbmltcG9ydCBBZGRUYWcgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS90aXAvQWRkJztcbmltcG9ydCBUYWdDb21wbGV4aXR5IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvdGlwL0NvbXBsZXhpdHknO1xuaW1wb3J0IFRhZ1NpbXBseSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL3RpcC9TaW1wbHknO1xuaW1wb3J0IHsgR29vZ2xlU2Vzc2lvblR5cGUgfSBmcm9tICdjb3Zlci90YWxrbi5jb3Zlcic7XG5cbmltcG9ydCB7IFRhZ1ZhbHVlVHlwZSB9IGZyb20gJy4vY29tbW9uJztcblxudHlwZSBQcm9wcyA9IHtcbiAgc2Vzc2lvbjogR29vZ2xlU2Vzc2lvblR5cGU7XG4gIGlzTXlQYWdlOiBib29sZWFuO1xuICB0YWdQYXJlbnQ6IFRhZ1BhcmVudFR5cGU7XG4gIHNvbWVUYWdzOiBUYWdWYWx1ZVR5cGVbXTtcbiAgaXNFZGl0YWJsZXM6IHt9O1xuICBpc0NoYW5nZVVzZXJUYWc6IGJvb2xlYW47XG4gIGlzU2F2ZWRBbmltYXRpb25zOiBib29sZWFuO1xuICBzZXRJc0VkaXRhYmxlczogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248e30+PjtcbiAgaGFuZGxlT25DbGlja1Jlc2V0OiAodGFnUGFyZW50OiBUYWdQYXJlbnRUeXBlKSA9PiBQcm9taXNlPHZvaWQ+O1xuICBoYW5kbGVPbkNsaWNrVGFnOiAoaXNFZGl0YWJsZTogYm9vbGVhbiwgdGFnUGFyZW50OiBUYWdQYXJlbnRUeXBlLCB0YWdUeXBlPzogVGFnVHlwZSwgaW5kZXg/OiBudW1iZXIsIHRhZ1N0cnVjdHVyZT86IGFueSkgPT4gdm9pZDtcbiAgaGFuZGxlT25DbGlja1JlbW92ZTogKHRhZ1BhcmVudDogVGFnUGFyZW50VHlwZSwgdGFnVHlwZTogVGFnVHlwZSwgaW5kZXg6IG51bWJlcikgPT4gdm9pZDtcbiAgaGFuZGxlT25DbGlja1NhdmU6ICh0YWdQYXJlbnQ6IFRhZ1BhcmVudFR5cGUpID0+IHZvaWQ7XG59O1xuXG50eXBlIFRhZ0xhYmVsVHlwZSA9IHtcbiAgaW5kdXN0b3J5OiBzdHJpbmc7XG4gIGluZHVzdG9yeVBhcmVudDogc3RyaW5nO1xuICBzdGFydHVwU2VyaWVzOiBzdHJpbmc7XG4gIGpvYlBhcmVudDogc3RyaW5nO1xuICBqb2I6IHN0cmluZztcbiAgc3Rvcnk6IHN0cmluZztcbn07XG5cbmNvbnN0IHRhZ0xhYmVsSW5pdDogVGFnTGFiZWxUeXBlID0ge1xuICBpbmR1c3Rvcnk6ICcnLFxuICBpbmR1c3RvcnlQYXJlbnQ6ICcnLFxuICBzdGFydHVwU2VyaWVzOiAnJyxcbiAgam9iUGFyZW50OiAnJyxcbiAgam9iOiAnJyxcbiAgc3Rvcnk6ICcnLFxufTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoe1xuICBzZXNzaW9uLFxuICBpc015UGFnZSA9IGZhbHNlLFxuICB0YWdQYXJlbnQsXG4gIHNvbWVUYWdzLFxuICBpc0VkaXRhYmxlcyxcbiAgaXNDaGFuZ2VVc2VyVGFnLFxuICBpc1NhdmVkQW5pbWF0aW9ucyxcbiAgc2V0SXNFZGl0YWJsZXMsXG4gIGhhbmRsZU9uQ2xpY2tSZXNldCxcbiAgaGFuZGxlT25DbGlja1RhZyxcbiAgaGFuZGxlT25DbGlja1JlbW92ZSxcbiAgaGFuZGxlT25DbGlja1NhdmUsXG59OiBQcm9wcykgPT4ge1xuICBjb25zdCBnZXRUYWdOb2RlID0gKHRhZ1BhcmVudDogVGFnUGFyZW50VHlwZSwgdGFnVHlwZTogVGFnVHlwZSwgaW5kZXg6IG51bWJlciwgdGFnU3RydWN0dXJlLCBsYWJlbHM6IFRhZ0xhYmVsVHlwZSk6IFJlYWN0LlJlYWN0Tm9kZSA9PiB7XG4gICAgc3dpdGNoICh0YWdUeXBlKSB7XG4gICAgICBjYXNlIHRhZ0ludmVzdG9yOlxuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxUYWdDb21wbGV4aXR5XG4gICAgICAgICAgICBrZXk9e2Ake3RhZ1BhcmVudH1fJHt0YWdUeXBlfV8ke2luZGV4fWB9XG4gICAgICAgICAgICBpc0VkaXRhYmxlPXtpc0VkaXRhYmxlc1t0YWdQYXJlbnRdfVxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGFuZGxlT25DbGlja1RhZyhpc0VkaXRhYmxlc1t0YWdQYXJlbnRdLCB0YWdQYXJlbnQsIHRhZ1R5cGUsIGluZGV4LCB0YWdTdHJ1Y3R1cmUpfVxuICAgICAgICAgICAgb25DbGlja1JlbW92ZT17KCkgPT4gaGFuZGxlT25DbGlja1JlbW92ZSh0YWdQYXJlbnQsIHRhZ1R5cGUsIGluZGV4KX1cbiAgICAgICAgICAgIHVwcGVyTGVmdD17bGFiZWxzLmluZHVzdG9yeVBhcmVudH1cbiAgICAgICAgICAgIHVwcGVyUmlnaHQ9e2xhYmVscy5pbmR1c3Rvcnl9XG4gICAgICAgICAgICBib3R0b21MZWZ0PXtsYWJlbHMuc3RhcnR1cFNlcmllc31cbiAgICAgICAgICAgIGJvdHRvbVJpZ2h0PXtgKCR7dGFnU3RydWN0dXJlLnllYXJ9KWB9XG4gICAgICAgICAgLz5cbiAgICAgICAgKTtcbiAgICAgIGNhc2UgdGFnRm91bmRlcjpcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8VGFnQ29tcGxleGl0eVxuICAgICAgICAgICAga2V5PXtgJHt0YWdQYXJlbnR9XyR7dGFnVHlwZX1fJHtpbmRleH1gfVxuICAgICAgICAgICAgaXNFZGl0YWJsZT17aXNFZGl0YWJsZXNbdGFnUGFyZW50XX1cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IGhhbmRsZU9uQ2xpY2tUYWcoaXNFZGl0YWJsZXNbdGFnUGFyZW50XSwgdGFnUGFyZW50LCB0YWdUeXBlLCBpbmRleCwgdGFnU3RydWN0dXJlKX1cbiAgICAgICAgICAgIG9uQ2xpY2tSZW1vdmU9eygpID0+IGhhbmRsZU9uQ2xpY2tSZW1vdmUodGFnUGFyZW50LCB0YWdUeXBlLCBpbmRleCl9XG4gICAgICAgICAgICB1cHBlckxlZnQ9e2xhYmVscy5pbmR1c3RvcnlQYXJlbnR9XG4gICAgICAgICAgICB1cHBlclJpZ2h0PXtsYWJlbHMuaW5kdXN0b3J5fVxuICAgICAgICAgICAgYm90dG9tTGVmdD17bGFiZWxzLnN0YXJ0dXBTZXJpZXN9XG4gICAgICAgICAgICBib3R0b21SaWdodD17YCgke3RhZ1N0cnVjdHVyZS55ZWFyfSlgfVxuICAgICAgICAgIC8+XG4gICAgICAgICk7XG4gICAgICBjYXNlIHRhZ01lbWJlcjpcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8VGFnQ29tcGxleGl0eVxuICAgICAgICAgICAga2V5PXtgJHt0YWdQYXJlbnR9XyR7dGFnVHlwZX1fJHtpbmRleH1gfVxuICAgICAgICAgICAgaXNFZGl0YWJsZT17aXNFZGl0YWJsZXNbdGFnUGFyZW50XX1cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IGhhbmRsZU9uQ2xpY2tUYWcoaXNFZGl0YWJsZXNbdGFnUGFyZW50XSwgdGFnUGFyZW50LCB0YWdUeXBlLCBpbmRleCwgdGFnU3RydWN0dXJlKX1cbiAgICAgICAgICAgIG9uQ2xpY2tSZW1vdmU9eygpID0+IGhhbmRsZU9uQ2xpY2tSZW1vdmUodGFnUGFyZW50LCB0YWdUeXBlLCBpbmRleCl9XG4gICAgICAgICAgICB1cHBlckxlZnQ9e2xhYmVscy5pbmR1c3RvcnlQYXJlbnR9XG4gICAgICAgICAgICB1cHBlclJpZ2h0PXtsYWJlbHMuaW5kdXN0b3J5fVxuICAgICAgICAgICAgYm90dG9tTGVmdD17bGFiZWxzLmpvYn1cbiAgICAgICAgICAgIGJvdHRvbVJpZ2h0PXtgKCR7dGFnU3RydWN0dXJlLnllYXJ9KWB9XG4gICAgICAgICAgLz5cbiAgICAgICAgKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgZ2V0Q29udGVudCA9ICgpID0+IHtcbiAgICBpZiAodGFnUGFyZW50ID09PSB0YWdQYXJlbnRQcm9maWxlKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8U2VjdGlvbiBrZXk9e2Ake3RhZ1BhcmVudFN0b3J5fWB9IGZsb3c9XCJjb2x1bW4gbm93cmFwXCIgdXBwZXJQYWRkaW5nIHNpZGVNYXJnaW4gc2lkZVBhZGRpbmc+XG4gICAgICAgICAge3Nlc3Npb24ubmFtZX1cbiAgICAgICAgPC9TZWN0aW9uPlxuICAgICAgKTtcbiAgICB9IGVsc2UgaWYgKHRhZ1BhcmVudCA9PT0gdGFnUGFyZW50U3RvcnkpIHtcbiAgICAgIGNvbnN0IHRhZ1R5cGVMb3dlciA9IHRhZ1BhcmVudFN0b3J5LnRvTG9jYWxlTG93ZXJDYXNlKCk7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8U2VjdGlvbiBrZXk9e2Ake3RhZ1BhcmVudFN0b3J5fWB9IGZsb3c9XCJjb2x1bW4gbm93cmFwXCIgdXBwZXJQYWRkaW5nIHNpZGVNYXJnaW4gc2lkZVBhZGRpbmc+XG4gICAgICAgICAgPEguRml2ZT57dGFnUGFyZW50U3Rvcnl9PC9ILkZpdmU+XG4gICAgICAgICAgPEZsZXggZmxvdz1cInJvdyB3cmFwXCIgYWxpZ25JdGVtcz1cImNlbnRlclwiIHdpZHRoPVwiMTAwJVwiIHVwcGVyTWFyZ2luPlxuICAgICAgICAgICAge3NvbWVUYWdzICYmXG4gICAgICAgICAgICAgIHNvbWVUYWdzW3RhZ1R5cGVMb3dlcl0gJiZcbiAgICAgICAgICAgICAgc29tZVRhZ3NbdGFnVHlwZUxvd2VyXS5tYXAoKHRhZ1N0cnVjdHVyZSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBsYWJlbHMgPSBnZXRDb252ZXJ0VGFnSWRUb0xhYmVsKHRhZ1N0b3J5LCB0YWdTdHJ1Y3R1cmUpO1xuICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICA8VGFnU2ltcGx5XG4gICAgICAgICAgICAgICAgICAgIGtleT17YHN0b3J5XyR7dGFnU3RydWN0dXJlLnN0b3J5SWR9YH1cbiAgICAgICAgICAgICAgICAgICAgaXNFZGl0YWJsZT17aXNFZGl0YWJsZXNbdGFnUGFyZW50XX1cbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGFuZGxlT25DbGlja1RhZyhpc0VkaXRhYmxlc1t0YWdQYXJlbnRdLCB0YWdTdG9yeSwgdGFnU3RvcnksIGluZGV4LCB0YWdTdHJ1Y3R1cmUpfVxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrUmVtb3ZlPXsoKSA9PiBoYW5kbGVPbkNsaWNrUmVtb3ZlKHRhZ1BhcmVudCwgdGFnU3RvcnksIGluZGV4KX1cbiAgICAgICAgICAgICAgICAgICAgbGFiZWw9e2xhYmVscy5zdG9yeX1cbiAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICB7aXNNeVBhZ2UgJiYgKFxuICAgICAgICAgICAgICA8QWRkVGFnXG4gICAgICAgICAgICAgICAgc2hvdz17aXNFZGl0YWJsZXNbdGFnUGFyZW50XX1cbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PlxuICAgICAgICAgICAgICAgICAgaGFuZGxlT25DbGlja1RhZyh0cnVlLCB0YWdTdG9yeSwgdGFnU3RvcnksIHNvbWVUYWdzICYmIHNvbWVUYWdzW3RhZ1R5cGVMb3dlcl0gPyBzb21lVGFnc1t0YWdUeXBlTG93ZXJdLmxlbmd0aCA6IDApXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgKX1cbiAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgIDwvU2VjdGlvbj5cbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiB0YWdUeXBlcy5tYXAoKHRhZ1R5cGU6IFRhZ1R5cGUsIGluZGV4KSA9PiB7XG4gICAgICAgIGlmICh0YWdUeXBlICE9PSB0YWdTdG9yeSkge1xuICAgICAgICAgIGNvbnN0IHRhZ1R5cGVMb3dlciA9IHRhZ1R5cGUudG9Mb2NhbGVMb3dlckNhc2UoKTtcbiAgICAgICAgICBjb25zdCB0YWdDbnQgPSBzb21lVGFncyAmJiBzb21lVGFnc1t0YWdUeXBlTG93ZXJdID8gc29tZVRhZ3NbdGFnVHlwZUxvd2VyXS5sZW5ndGggOiAwO1xuICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8U2VjdGlvbiBrZXk9e2Ake3RhZ1R5cGV9XyR7aW5kZXh9YH0gY2xhc3NOYW1lPXtgJHt0YWdUeXBlfV8ke2luZGV4fWB9IGZsb3c9XCJjb2x1bW4gbm93cmFwXCI+XG4gICAgICAgICAgICAgIDxILkZpdmU+e3RhZ1R5cGV9PC9ILkZpdmU+XG4gICAgICAgICAgICAgIDxGbGV4IGZsb3c9XCJyb3cgd3JhcFwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIiB3aWR0aD1cIjEwMCVcIiB1cHBlck1hcmdpbj5cbiAgICAgICAgICAgICAgICB7c29tZVRhZ3MgJiZcbiAgICAgICAgICAgICAgICAgIHNvbWVUYWdzW3RhZ1R5cGVMb3dlcl0gJiZcbiAgICAgICAgICAgICAgICAgIHNvbWVUYWdzW3RhZ1R5cGVMb3dlcl0ubWFwKCh0YWdTdHJ1Y3R1cmUsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGxhYmVscyA9IGdldENvbnZlcnRUYWdJZFRvTGFiZWwodGFnVHlwZSwgdGFnU3RydWN0dXJlKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGdldFRhZ05vZGUodGFnUGFyZW50LCB0YWdUeXBlLCBpbmRleCwgdGFnU3RydWN0dXJlLCBsYWJlbHMpO1xuICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAge2lzTXlQYWdlICYmIDxBZGRUYWcgc2hvdz17aXNFZGl0YWJsZXNbdGFnUGFyZW50XX0gb25DbGljaz17KCkgPT4gaGFuZGxlT25DbGlja1RhZyh0cnVlLCB0YWdQYXJlbnQsIHRhZ1R5cGUsIHRhZ0NudCl9IC8+fVxuICAgICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgICA8L1NlY3Rpb24+XG4gICAgICAgICAgKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DbGlja0NvbnRyb2xCdXR0b24gPSAoKSA9PiB7XG4gICAgaWYgKGlzRWRpdGFibGVzW3RhZ1BhcmVudF0pIHtcbiAgICAgIGlmIChpc0NoYW5nZVVzZXJUYWcpIHtcbiAgICAgICAgaGFuZGxlT25DbGlja1NhdmUodGFnUGFyZW50KTtcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKGlzTXlQYWdlKSB7XG4gICAgICBzZXRJc0VkaXRhYmxlcyh7IC4uLmlzRWRpdGFibGVzLCBbdGFnUGFyZW50XTogIWlzRWRpdGFibGVzW3RhZ1BhcmVudF0gfSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPEhlYWRlclNlY3Rpb25cbiAgICAgIGtleT17YCR7dGFnUGFyZW50fSBUYWdzYH1cbiAgICAgIHRpdGxlPXtgJHt0YWdQYXJlbnR9IFRhZ3NgfVxuICAgICAgaGVhZGVyTWVudT17XG4gICAgICAgIGlzTXlQYWdlICYmIChcbiAgICAgICAgICA8RmxleCBmbG93PVwicm93IG5vd3JhcFwiPlxuICAgICAgICAgICAgPENvbnRyb2xCdXR0b24gb25DbGljaz17aGFuZGxlT25DbGlja0NvbnRyb2xCdXR0b259IGlzRWRpdGFibGU9e2lzRWRpdGFibGVzW3RhZ1BhcmVudF19IGlzQ2hhbmdlVXNlclRhZz17aXNDaGFuZ2VVc2VyVGFnfSAvPlxuICAgICAgICAgICAgPFJlc2V0QnV0dG9uIG9uQ2xpY2s9eygpID0+IGhhbmRsZU9uQ2xpY2tSZXNldCh0YWdQYXJlbnQpfSBkaXNhYmxlZD17IWlzQ2hhbmdlVXNlclRhZ30gLz5cbiAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgIClcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQ9e2dldENvbnRlbnQoKX1cbiAgICAgIGNoZWNrQW5pbWF0aW9uPXtpc1NhdmVkQW5pbWF0aW9uc31cbiAgICAvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBnZXRDb252ZXJ0VGFnSWRUb0xhYmVsID0gKHRhZ1R5cGU6IFRhZ1R5cGUsIHRhZ1N0cnVjdHVyZSk6IFRhZ0xhYmVsVHlwZSA9PiB7XG4gIGxldCBpbmR1c3RvcnlJZCA9ICcnO1xuICBsZXQgaW5kdXN0b3J5UGFyZW50SWQgPSAnJztcbiAgbGV0IHN0YXJ0dXBTZXJpZXNJZCA9ICcnO1xuICBsZXQgam9iSWQgPSAnJztcbiAgbGV0IGpvYlBhcmVudElkID0gJyc7XG4gIGxldCBzdG9yeUlkID0gJyc7XG4gIGxldCB0YWdMYWJlbHMgPSB7IC4uLnRhZ0xhYmVsSW5pdCB9O1xuXG4gIHN3aXRjaCAodGFnVHlwZSkge1xuICAgIGNhc2UgdGFnSW52ZXN0b3I6XG4gICAgICBpbmR1c3RvcnlJZCA9IHRhZ1N0cnVjdHVyZS5pbmR1c3RvcnlJZDtcbiAgICAgIGluZHVzdG9yeVBhcmVudElkID0gaW5kdXN0b3J5SWQuc3BsaXQoJy0nKVswXTtcbiAgICAgIHN0YXJ0dXBTZXJpZXNJZCA9IHRhZ1N0cnVjdHVyZS5zdGFydHVwU2VyaWVzSWQ7XG4gICAgICB0YWdMYWJlbHMuaW5kdXN0b3J5ID0gd2luZG93LnRhbGtuU3RhdGljVGFnc0J5SWQuaW5kdXN0b3J5W2luZHVzdG9yeUlkXS5qYTtcbiAgICAgIHRhZ0xhYmVscy5pbmR1c3RvcnlQYXJlbnQgPSB3aW5kb3cudGFsa25TdGF0aWNUYWdzQnlJZC5pbmR1c3RvcnlQYXJlbnRbaW5kdXN0b3J5UGFyZW50SWRdLmphO1xuICAgICAgdGFnTGFiZWxzLnN0YXJ0dXBTZXJpZXMgPSB3aW5kb3cudGFsa25TdGF0aWNUYWdzQnlJZC5zdGFydHVwU2VyaWVzW3N0YXJ0dXBTZXJpZXNJZF0uamE7XG4gICAgICBicmVhaztcbiAgICBjYXNlIHRhZ0ZvdW5kZXI6XG4gICAgICBpbmR1c3RvcnlJZCA9IHRhZ1N0cnVjdHVyZS5pbmR1c3RvcnlJZDtcbiAgICAgIGluZHVzdG9yeVBhcmVudElkID0gaW5kdXN0b3J5SWQuc3BsaXQoJy0nKVswXTtcbiAgICAgIHN0YXJ0dXBTZXJpZXNJZCA9IHRhZ1N0cnVjdHVyZS5zdGFydHVwU2VyaWVzSWQ7XG4gICAgICB0YWdMYWJlbHMuaW5kdXN0b3J5ID0gd2luZG93LnRhbGtuU3RhdGljVGFnc0J5SWQuaW5kdXN0b3J5W2luZHVzdG9yeUlkXS5qYTtcbiAgICAgIHRhZ0xhYmVscy5pbmR1c3RvcnlQYXJlbnQgPSB3aW5kb3cudGFsa25TdGF0aWNUYWdzQnlJZC5pbmR1c3RvcnlQYXJlbnRbaW5kdXN0b3J5UGFyZW50SWRdLmphO1xuICAgICAgdGFnTGFiZWxzLnN0YXJ0dXBTZXJpZXMgPSB3aW5kb3cudGFsa25TdGF0aWNUYWdzQnlJZC5zdGFydHVwU2VyaWVzW3N0YXJ0dXBTZXJpZXNJZF0uamE7XG4gICAgICBicmVhaztcbiAgICBjYXNlIHRhZ01lbWJlcjpcbiAgICAgIGluZHVzdG9yeUlkID0gdGFnU3RydWN0dXJlLmluZHVzdG9yeUlkO1xuICAgICAgaW5kdXN0b3J5UGFyZW50SWQgPSBpbmR1c3RvcnlJZC5zcGxpdCgnLScpWzBdO1xuICAgICAgam9iSWQgPSB0YWdTdHJ1Y3R1cmUuam9iSWQ7XG4gICAgICBqb2JQYXJlbnRJZCA9IGpvYklkLnNwbGl0KCctJylbMF07XG4gICAgICB0YWdMYWJlbHMuaW5kdXN0b3J5ID0gd2luZG93LnRhbGtuU3RhdGljVGFnc0J5SWQuaW5kdXN0b3J5W2luZHVzdG9yeUlkXS5qYTtcbiAgICAgIHRhZ0xhYmVscy5pbmR1c3RvcnlQYXJlbnQgPSB3aW5kb3cudGFsa25TdGF0aWNUYWdzQnlJZC5pbmR1c3RvcnlQYXJlbnRbaW5kdXN0b3J5UGFyZW50SWRdLmphO1xuICAgICAgdGFnTGFiZWxzLmpvYiA9IHdpbmRvdy50YWxrblN0YXRpY1RhZ3NCeUlkLmpvYnNbam9iSWRdLmphO1xuICAgICAgdGFnTGFiZWxzLmpvYlBhcmVudCA9IHdpbmRvdy50YWxrblN0YXRpY1RhZ3NCeUlkLmpvYlBhcmVudHNbam9iUGFyZW50SWRdLmphO1xuICAgICAgYnJlYWs7XG4gICAgY2FzZSB0YWdTdG9yeTpcbiAgICAgIHN0b3J5SWQgPSB0YWdTdHJ1Y3R1cmUuc3RvcnlJZDtcbiAgICAgIHRhZ0xhYmVscy5zdG9yeSA9IHdpbmRvdy50YWxrblN0YXRpY1RhZ3NCeUlkLnN0b3J5W3N0b3J5SWRdLmphO1xuICAgICAgYnJlYWs7XG4gIH1cbiAgcmV0dXJuIHRhZ0xhYmVscztcbn07XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBGbGV4IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvRmxleCc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIG9uQ2xpY2s6ICgpID0+IHZvaWQ7XG4gIGlzRWRpdGFibGU6IGJvb2xlYW47XG4gIGlzQ2hhbmdlVXNlclRhZzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgb25DbGljaywgaXNFZGl0YWJsZSwgaXNDaGFuZ2VVc2VyVGFnIH0pID0+IHtcbiAgbGV0IGxhYmVsID0gJ0VESVQnO1xuICBpZiAoaXNDaGFuZ2VVc2VyVGFnICYmIGlzRWRpdGFibGUpIHtcbiAgICBsYWJlbCA9ICdTQVZFJztcbiAgfSBlbHNlIGlmIChpc0VkaXRhYmxlKSB7XG4gICAgbGFiZWwgPSAnVklFVyc7XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxDb250YWluZXIgb25DbGljaz17b25DbGlja30gaXNFZGl0YWJsZT17aXNFZGl0YWJsZX0gaXNDaGFuZ2VVc2VyVGFnPXtpc0NoYW5nZVVzZXJUYWd9IHNpZGVNYXJnaW49XCJzbWFsbFwiPlxuICAgICAge2xhYmVsfVxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG50eXBlIENvbnRhaW5lclByb3BzVHlwZSA9IHtcbiAgaXNFZGl0YWJsZTogYm9vbGVhbjtcbiAgaXNDaGFuZ2VVc2VyVGFnOiBib29sZWFuO1xufTtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKEZsZXgpPENvbnRhaW5lclByb3BzVHlwZT5gXG4gIHBhZGRpbmc6ICR7c3R5bGVzLmRvdWJsZVBhZGRpbmd9cHg7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gICR7KHByb3BzKSA9PiBnZXREZXNpZ24ocHJvcHMpfTtcbmA7XG5cbmNvbnN0IGdldERlc2lnbiA9IChwcm9wczogQ29udGFpbmVyUHJvcHNUeXBlKSA9PiB7XG4gIGlmIChwcm9wcy5pc0NoYW5nZVVzZXJUYWcgJiYgcHJvcHMuaXNFZGl0YWJsZSkge1xuICAgIHJldHVybiBgXG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIGJhY2tncm91bmQ6ICR7c3R5bGVzLnNhdmVDb2xvcn07XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAke3N0eWxlcy5zYXZlQ29sb3J9O1xuICAgICAgOmhvdmVyIHtcbiAgICAgICAgYm94LXNoYWRvdzogJHtzdHlsZXMuc2hhZG93SG9yaXpvbkJyaWdodH07XG4gICAgICB9XG4gICAgYDtcbiAgfSBlbHNlIGlmIChwcm9wcy5pc0VkaXRhYmxlKSB7XG4gICAgcmV0dXJuIGBcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgYmFja2dyb3VuZDogICR7c3R5bGVzLnRhZ0JnQ29sb3J9O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtzdHlsZXMudGFnQmdDb2xvcn07XG4gICAgICA6aG92ZXIge1xuICAgICAgICBjb2xvcjogI2ZmZjtcbiAgICAgICAgYmFja2dyb3VuZDogICR7c3R5bGVzLnRhZ0JnQ29sb3J9O1xuICAgICAgICBib3gtc2hhZG93OiAke3N0eWxlcy5zaGFkb3dIb3Jpem9uQnJpZ2h0fTtcbiAgICAgIH1cbiAgICBgO1xuICB9XG4gIHJldHVybiBgXG4gICAgICBjb2xvcjogI2ZmZjtcbiAgICAgIGJhY2tncm91bmQ6ICR7c3R5bGVzLnRoZW1lQ29sb3J9O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgJHtzdHlsZXMudGhlbWVDb2xvcn07XG4gICAgICA6aG92ZXIge1xuICAgICAgICBiYWNrZ3JvdW5kOiAke3N0eWxlcy50aGVtZUNvbG9yfTtcbiAgICAgICAgY29sb3I6ICNmZmY7XG4gICAgICAgIGJveC1zaGFkb3c6ICR7c3R5bGVzLnNoYWRvd0hvcml6b25CcmlnaHR9O1xuICAgICAgfVxuICAgIGA7XG59O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgRmxleCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0ZsZXgnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG50eXBlIFByb3BzID0ge1xuICBvbkNsaWNrOiAoKSA9PiB2b2lkO1xuICBkaXNhYmxlZDogYm9vbGVhbjtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgb25DbGljaywgZGlzYWJsZWQgPSBmYWxzZSB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lciBvbkNsaWNrPXtvbkNsaWNrfSBkaXNhYmxlZD17ZGlzYWJsZWR9PlxuICAgICAgUkVTRVRcbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxudHlwZSBDb250YWluZXJQcm9wc1R5cGUgPSB7XG4gIGRpc2FibGVkOiBib29sZWFuO1xufTtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKEZsZXgpPENvbnRhaW5lclByb3BzVHlwZT5gXG4gIHBhZGRpbmc6ICR7c3R5bGVzLmRvdWJsZVBhZGRpbmd9cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7c3R5bGVzLmJyaWdodENvbG9yfTtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBjdXJzb3I6ICR7KHByb3BzKSA9PiAocHJvcHMuZGlzYWJsZWQgPyAnZGVmYXVsdCcgOiAncG9pbnRlcicpfTtcbiAgYmFja2dyb3VuZDogJHsocHJvcHMpID0+IChwcm9wcy5kaXNhYmxlZCA/ICdub25lJyA6IHN0eWxlcy5icmlnaHRDb2xvcil9O1xuICBjb2xvcjogJHsocHJvcHMpID0+IChwcm9wcy5kaXNhYmxlZCA/IHN0eWxlcy5icmlnaHRDb2xvciA6ICcjZmZmJyl9O1xuICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gICR7KHByb3BzKSA9PiBnZXRIb3Zlcihwcm9wcy5kaXNhYmxlZCl9O1xuYDtcblxuY29uc3QgZ2V0SG92ZXIgPSAoZGlzYWJsZWQpID0+IHtcbiAgaWYgKGRpc2FibGVkKSB7XG4gICAgcmV0dXJuICcnO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBgXG4gICAgOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICR7KHByb3BzKSA9PiAocHJvcHMuZGlzYWJsZWQgPyBzdHlsZXMuYnJpZ2h0Q29sb3IgOiBzdHlsZXMuYnJpZ2h0Q29sb3IpfTtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgYm94LXNoYWRvdzogJHtzdHlsZXMuc2hhZG93SG9yaXpvbkJyaWdodH07XG4gICAgfVxuICBgO1xuICB9XG59O1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgdXRpbCBmcm9tICdjb21tb24vdXRpbCc7XG5cbmltcG9ydCBhcGkgZnJvbSAnY292ZXIvYXBpJztcbmltcG9ydCBCdXR0b24sIHsgYnV0dG9uVGhlbWVCcmlnaHQgfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0J1dHRvbic7XG5pbXBvcnQgRmxleCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0ZsZXgnO1xuaW1wb3J0IHsgVXNlck1vZGFsT3B0aW9uVHlwZSB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUnO1xuaW1wb3J0IFNlbGVjdEJpcnRoZGF5IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvbW9kYWwvY2hpbGRyZW4vU2VsZWN0QmlydGhkYXknO1xuaW1wb3J0IFNlbGVjdExhbmd1YWdlcyBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL21vZGFsL2NoaWxkcmVuL1NlbGVjdExhbmd1YWdlcyc7XG5pbXBvcnQgU2VsZWN0U2V4ZXMgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RTZXhlcyc7XG5cbmV4cG9ydCB0eXBlIFRhZ1ZhbHVlVHlwZSA9IHtcbiAgaWQ6IHN0cmluZztcbiAgbGFiZWw6IHN0cmluZztcbn07XG5leHBvcnQgY29uc3Qgbm9TZWxlY3RPcHRpb25MYWJlbCA9ICctJztcblxuZXhwb3J0IGNvbnN0IE5vU2V0Q29tcG9uZW5zOiBSZWFjdC5GQyA9ICgpID0+IChcbiAgPEJ1dHRvbiBjbGFzc05hbWU9XCJOb1NldEJ1dHRvblwiIGRpc2FibGVkIGJvdHRvbU1hcmdpbj5cbiAgICBOTyBTRVRcbiAgPC9CdXR0b24+XG4pO1xuZXhwb3J0IGNvbnN0IGdldE5vU2VsZWN0T3B0aW9uID0gKCk6IFJlYWN0LlJlYWN0Tm9kZSA9PiB7XG4gIHJldHVybiA8b3B0aW9uIHZhbHVlPXt1bmRlZmluZWR9Pntub1NlbGVjdE9wdGlvbkxhYmVsfTwvb3B0aW9uPjtcbn07XG5cbmV4cG9ydCBjb25zdCBUYWdJZCA9IHN0eWxlZC5kaXZgXG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbmA7XG5cbnR5cGUgUHJvZmlsZXNQcm9wc1R5cGUgPSB7XG4gIHR5cGU6IHN0cmluZztcbiAgdXNlck1vZGFsT3B0aW9uczogVXNlck1vZGFsT3B0aW9uVHlwZTtcbiAgaGFuZGxlT25DaGFuZ2VMYW5ndWFnZXM6IChsYW5ndWFnZXM6IHN0cmluZ1tdKSA9PiB2b2lkO1xuICBoYW5kbGVPbkNoYW5nZVNleGVzOiAoc2V4ZXM6IHN0cmluZ1tdKSA9PiB2b2lkO1xuICBoYW5kbGVPbkNoYW5nZUJpcnRoZGF5OiAoYmlydGhkYXk6IHN0cmluZykgPT4gdm9pZDtcbiAgdW5kZXJsaW5lPzogYm9vbGVhbjtcbn07XG5cbmV4cG9ydCBjb25zdCBQcm9maWxlczogUmVhY3QuRkM8UHJvZmlsZXNQcm9wc1R5cGU+ID0gKHtcbiAgdHlwZSA9ICdQcm9maWxlcycsXG4gIHVzZXJNb2RhbE9wdGlvbnMsXG4gIGhhbmRsZU9uQ2hhbmdlTGFuZ3VhZ2VzLFxuICBoYW5kbGVPbkNoYW5nZVNleGVzLFxuICBoYW5kbGVPbkNoYW5nZUJpcnRoZGF5LFxuICB1bmRlcmxpbmUgPSBmYWxzZSxcbn06IFByb2ZpbGVzUHJvcHNUeXBlKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPEZsZXggZmxvdz1cImNvbHVtbiBub3dyYXBcIiB3aWR0aD1cIjEwMCVcIiBib3JkZXI9e3VuZGVybGluZSA/ICd1bmRlcmxpbmUnIDogdW5kZWZpbmVkfSBib3R0b21QYWRkaW5nIGJvdHRvbU1hcmdpbj5cbiAgICAgIDxTZWxlY3RTZXhlcyB0eXBlPXt0eXBlfSBpc0VkaXRhYmxlPXt1c2VyTW9kYWxPcHRpb25zLmlzRWRpdGFibGV9IHNleGVzPXt1c2VyTW9kYWxPcHRpb25zLnNleGVzfSBvbkNoYW5nZT17aGFuZGxlT25DaGFuZ2VTZXhlc30gLz5cbiAgICAgIDxTZWxlY3RMYW5ndWFnZXNcbiAgICAgICAgdHlwZT17dHlwZX1cbiAgICAgICAgaXNFZGl0YWJsZT17dXNlck1vZGFsT3B0aW9ucy5pc0VkaXRhYmxlfVxuICAgICAgICBsYW5ndWFnZXM9e3VzZXJNb2RhbE9wdGlvbnMubGFuZ3VhZ2VzfVxuICAgICAgICBvbkNoYW5nZT17aGFuZGxlT25DaGFuZ2VMYW5ndWFnZXN9XG4gICAgICAvPlxuICAgICAgPFNlbGVjdEJpcnRoZGF5XG4gICAgICAgIHR5cGU9e3R5cGV9XG4gICAgICAgIGlzRWRpdGFibGU9e3VzZXJNb2RhbE9wdGlvbnMuaXNFZGl0YWJsZX1cbiAgICAgICAgYmlydGhkYXk9e3VzZXJNb2RhbE9wdGlvbnMuYmlydGhkYXl9XG4gICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVPbkNoYW5nZUJpcnRoZGF5fVxuICAgICAgLz5cbiAgICA8L0ZsZXg+XG4gICk7XG59O1xuXG50eXBlIE1vZGFsRm9vdGVyVHlwZSA9IHtcbiAgdXNlck1vZGFsT3B0aW9uczogVXNlck1vZGFsT3B0aW9uVHlwZTtcbiAgaGFuZGxlT25DbG9zZTogKCkgPT4gdm9pZDtcbiAgcG9zaXRpdmVEaXNhYmVsZD86IGJvb2xlYW47XG4gIG9uQ2xpY2tQb3NpdGl2ZT86ICgpID0+IHZvaWQ7XG4gIHNob3dQb3NpdGl2ZT86IGJvb2xlYW47XG59O1xuXG5leHBvcnQgY29uc3QgTW9kYWxGb290ZXI6IFJlYWN0LkZDPE1vZGFsRm9vdGVyVHlwZT4gPSAoe1xuICB1c2VyTW9kYWxPcHRpb25zLFxuICBvbkNsaWNrUG9zaXRpdmUsXG4gIGhhbmRsZU9uQ2xvc2UsXG4gIHBvc2l0aXZlRGlzYWJlbGQgPSBmYWxzZSxcbiAgc2hvd1Bvc2l0aXZlID0gdHJ1ZSxcbn0pID0+IHtcbiAgY29uc3QgaXNFZGl0YWJsZSA9IHVzZXJNb2RhbE9wdGlvbnMuaXNFZGl0YWJsZTtcbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEJ1dHRvbiBkaXNhYmxlZD17ZmFsc2V9IHRoZW1lPXtidXR0b25UaGVtZUJyaWdodH0gb25DbGljaz17aGFuZGxlT25DbG9zZX0gc2lkZU1hcmdpbj5cbiAgICAgICAge2lzRWRpdGFibGUgPyAnQ0FOQ0VMJyA6ICdDTE9TRSd9XG4gICAgICA8L0J1dHRvbj5cbiAgICAgIHtzaG93UG9zaXRpdmUgJiYgKFxuICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgZGlzYWJsZWQ9e3Bvc2l0aXZlRGlzYWJlbGR9XG4gICAgICAgICAgb25DbGljaz17KCkgPT4ge1xuICAgICAgICAgICAgb25DbGlja1Bvc2l0aXZlICYmIG9uQ2xpY2tQb3NpdGl2ZSgpO1xuICAgICAgICAgICAgaGFuZGxlT25DbG9zZSgpO1xuICAgICAgICAgIH19XG4gICAgICAgICAgc2lkZU1hcmdpbj5cbiAgICAgICAgICB7aXNFZGl0YWJsZSA/ICdPSycgOiAnU0VBUkNIJ31cbiAgICAgICAgPC9CdXR0b24+XG4gICAgICApfVxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGNvbnN0IGhhbmRsZU9uU2VhcmNoID0gKHVzZXJNb2RhbE9wdGlvbnMpID0+IHtcbiAgY29uc3QgcmVxdWVzdEpzb24gPSB1dGlsLmRlZXBDb3B5KHVzZXJNb2RhbE9wdGlvbnMpO1xuICBkZWxldGUgcmVxdWVzdEpzb24uaXNFZGl0YWJsZTtcbiAgZGVsZXRlIHJlcXVlc3RKc29uLmluZGV4O1xuICBhcGkuanNvbignc2VhcmNoJywgcmVxdWVzdEpzb24pO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldElzRGlzYWJsZWQgPSAoZml4VmFsdWVzKSA9PiB7XG4gIHJldHVybiBCb29sZWFuKFxuICAgIE9iamVjdC5rZXlzKGZpeFZhbHVlcykuZmluZCgoa2V5KSA9PiB7XG4gICAgICBzd2l0Y2ggKHR5cGVvZiBmaXhWYWx1ZXNba2V5XSkge1xuICAgICAgICBjYXNlICdvYmplY3QnOlxuICAgICAgICAgIHJldHVybiBmaXhWYWx1ZXNba2V5XS5sZW5ndGggPT09IDA7XG4gICAgICAgIGNhc2UgJ3N0cmluZyc6XG4gICAgICAgICAgcmV0dXJuIGZpeFZhbHVlc1trZXldID09PSAnJyB8fCBmaXhWYWx1ZXNba2V5XSA9PT0gJy0nO1xuICAgICAgICBjYXNlICdudW1iZXInOlxuICAgICAgICAgIHJldHVybiBmaXhWYWx1ZXNba2V5XSA9PT0gMCB8fCBpc05hTihmaXhWYWx1ZXNba2V5XSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgY29uc29sZS53YXJuKGBDb25maXJtIHR5cGUgJHtrZXl9ICR7Zml4VmFsdWVzW2tleV19ICR7dHlwZW9mIGZpeFZhbHVlc1trZXldfWApO1xuICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH0pXG4gICk7XG59O1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBjb25mIGZyb20gJ2NvbW1vbi9jb25mJztcbmltcG9ydCB7IFN0b3JpZXNJbmRleFR5cGUgfSBmcm9tICdjb21tb24vdGFsa25Db25maWcnO1xuaW1wb3J0IHV0aWwgZnJvbSAnY29tbW9uL3V0aWwnO1xuXG5pbXBvcnQgYXBpIGZyb20gJ2NvdmVyL2FwaSc7XG5pbXBvcnQgRmxleCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0ZsZXgnO1xuaW1wb3J0IEggZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9IJztcbmltcG9ydCBTdmcgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9zdmcnO1xuaW1wb3J0IEV5ZUNhdGNoT3JkZXIgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvRXllQ2F0Y2gvT3JkZXInO1xuaW1wb3J0IHsgR29vZ2xlU2Vzc2lvblR5cGUsIFVzZXJUeXBlLCBVc2VyVGFnc1R5cGUsIHVzZXJIYXNTZWxmVGFnc0luaXQgfSBmcm9tICdjb3Zlci90YWxrbi5jb3Zlcic7XG5cbmltcG9ydCBUYWdTZWN0aW9ucyBmcm9tICcuL1RhZ1NlY3Rpb25zJztcbmltcG9ydCBTZWxlY3RGb3VuZGVyTW9kYWwgZnJvbSAnLi9tb2RhbC9TZWxlY3RGb3VuZGVyTW9kYWwnO1xuaW1wb3J0IFNlbGVjdEludmVzdG9yTW9kYWwgZnJvbSAnLi9tb2RhbC9TZWxlY3RJbnZlc3Rvck1vZGFsJztcbmltcG9ydCBTZWxlY3RNZW1iZXJNb2RhbCBmcm9tICcuL21vZGFsL1NlbGVjdE1lbWJlck1vZGFsJztcbmltcG9ydCBTZWxlY3RTdG9yeU1vZGFsIGZyb20gJy4vbW9kYWwvU2VsZWN0U3RvcnlNb2RhbCc7XG5cbmV4cG9ydCBjb25zdCB0YWdQYXJlbnRQcm9maWxlID0gJ1Byb2ZpbGUnO1xuZXhwb3J0IGNvbnN0IHRhZ1BhcmVudFNlbGYgPSAnU2VsZic7XG5leHBvcnQgY29uc3QgdGFnUGFyZW50U2VhcmNoID0gJ1NlYXJjaCc7XG5leHBvcnQgY29uc3QgdGFnUGFyZW50U3RvcnkgPSAnU3RvcnknO1xuZXhwb3J0IHR5cGUgVGFnUGFyZW50VHlwZSA9IHR5cGVvZiB0YWdQYXJlbnRQcm9maWxlIHwgdHlwZW9mIHRhZ1BhcmVudFNlbGYgfCB0eXBlb2YgdGFnUGFyZW50U2VhcmNoIHwgdHlwZW9mIHRhZ1BhcmVudFN0b3J5O1xuZXhwb3J0IGNvbnN0IHRhZ1BhcmVudFR5cGVzOiBUYWdQYXJlbnRUeXBlW10gPSBbdGFnUGFyZW50U2VsZiwgdGFnUGFyZW50U2VhcmNoLCB0YWdQYXJlbnRTdG9yeV07XG5leHBvcnQgdHlwZSBUYWdQYXJlbnRTYXZlQnV0dG9uRGlzYWJsZWRUeXBlID0ge307XG5cbmV4cG9ydCBjb25zdCB0YWdNb2RlVmlldyA9ICd2aWV3JztcbmV4cG9ydCBjb25zdCB0YWdNb2RlRWRpdCA9ICdlZGl0JztcbmV4cG9ydCB0eXBlIFRhZ01vZGVUeXBlID0gdHlwZW9mIHRhZ01vZGVWaWV3IHwgdHlwZW9mIHRhZ01vZGVFZGl0O1xuXG5sZXQgaXNFZGl0YWJsZXNJbml0ID0ge307XG5sZXQgaXNDaGFuZ2VVc2VyVGFnc0luaXQgPSB7fTtcbmxldCBpc1NhdmluZ0FuaW1hdGlvbnNJbml0ID0ge307XG50YWdQYXJlbnRUeXBlcy5mb3JFYWNoKCh0YWdQYXJlbnRUeXBlKSA9PiB7XG4gIGlzRWRpdGFibGVzSW5pdFt0YWdQYXJlbnRUeXBlXSA9IGZhbHNlO1xuICBpc0NoYW5nZVVzZXJUYWdzSW5pdFt0YWdQYXJlbnRUeXBlXSA9IGZhbHNlO1xuICBpc1NhdmluZ0FuaW1hdGlvbnNJbml0W3RhZ1BhcmVudFR5cGVdID0gZmFsc2U7XG59KTtcblxuZXhwb3J0IGNvbnN0IHRhZ0ludmVzdG9yID0gJ0ludmVzdG9yJztcbmV4cG9ydCBjb25zdCB0YWdGb3VuZGVyID0gJ0ZvdW5kZXInO1xuZXhwb3J0IGNvbnN0IHRhZ01lbWJlciA9ICdNZW1iZXInO1xuZXhwb3J0IGNvbnN0IHRhZ1N0b3J5ID0gJ1N0b3J5JztcbmV4cG9ydCB0eXBlIFRhZ1R5cGUgPSB0eXBlb2YgdGFnSW52ZXN0b3IgfCB0eXBlb2YgdGFnRm91bmRlciB8IHR5cGVvZiB0YWdNZW1iZXIgfCB0eXBlb2YgdGFnU3Rvcnk7XG5leHBvcnQgY29uc3QgdGFnVHlwZXMgPSBbdGFnSW52ZXN0b3IsIHRhZ0ZvdW5kZXIsIHRhZ01lbWJlciwgdGFnU3RvcnldO1xuXG5leHBvcnQgdHlwZSBVc2VyTW9kYWxPcHRpb25UeXBlID0ge1xuICBfaWQ6IHN0cmluZztcbiAgZW1haWw6IHN0cmluZztcbiAgaXNFZGl0YWJsZTogYm9vbGVhbjtcbiAgdGFnUGFyZW50VHlwZTogVGFnUGFyZW50VHlwZSB8ICcnO1xuICB0YWdUeXBlOiBUYWdUeXBlIHwgJyc7XG4gIGluZHVzdG9yeVBhcmVudElkOiBzdHJpbmc7XG4gIGluZHVzdG9yeUlkOiBzdHJpbmc7XG4gIGpvYlBhcmVudElkOiBzdHJpbmc7XG4gIGpvYkNhdGVnb3J5SWQ6IHN0cmluZztcbiAgam9iSWQ6IHN0cmluZztcbiAgc3RhcnR1cFNlcmllc0lkOiBzdHJpbmc7XG4gIHN0b3J5SWQ6IHN0cmluZztcbiAgeWVhcjogbnVtYmVyO1xuICBiZzogc3RyaW5nO1xuICBpY29uOiBzdHJpbmc7XG4gIGxhbmd1YWdlczogc3RyaW5nW107XG4gIHNleGVzOiBzdHJpbmdbXTtcbiAgYmlydGhkYXk6IG51bWJlcjtcbiAgaW5kZXg/OiBudW1iZXI7XG59O1xuXG5leHBvcnQgY29uc3QgdXNlck1vZGFsT3B0aW9uSW5pdDogVXNlck1vZGFsT3B0aW9uVHlwZSA9IHtcbiAgX2lkOiAnJyxcbiAgZW1haWw6ICcnLFxuICBpc0VkaXRhYmxlOiBmYWxzZSxcbiAgdGFnUGFyZW50VHlwZTogJycsXG4gIHRhZ1R5cGU6ICcnLFxuICBpbmRleDogdW5kZWZpbmVkLFxuICBiZzogJycsXG4gIGljb246ICcnLFxuICBsYW5ndWFnZXM6IFtdLFxuICBzZXhlczogW10sXG4gIGJpcnRoZGF5OiBjb25mLmRlZmF1bHRCaXJ0aGRheVVuaXh0aW1lLFxuICBpbmR1c3RvcnlQYXJlbnRJZDogJycsXG4gIGluZHVzdG9yeUlkOiAnJyxcbiAgam9iUGFyZW50SWQ6ICcnLFxuICBqb2JDYXRlZ29yeUlkOiAnJyxcbiAgam9iSWQ6ICcnLFxuICBzdGFydHVwU2VyaWVzSWQ6ICcnLFxuICBzdG9yeUlkOiAnJyxcbiAgeWVhcjogMCxcbn07XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGlzTXlQYWdlOiBib29sZWFuO1xuICBzZXNzaW9uOiBHb29nbGVTZXNzaW9uVHlwZTtcbiAgdXNlcjogVXNlclR5cGU7XG4gIHVzZXJUYWdzOiBVc2VyVGFnc1R5cGU7XG4gIHVzZXJUYWdzSW5pdDogVXNlclRhZ3NUeXBlO1xuICBzZXRTaG93U2VhcmNoTW9kYWxPcHRpb246IFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPFVzZXJNb2RhbE9wdGlvblR5cGU+PjtcbiAgc2V0VXNlcjogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248VXNlclR5cGU+PjtcbiAgc2V0VXNlclRhZ3M6IFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPFVzZXJUYWdzVHlwZT4+O1xuICBzZXRVc2VyVGFnc0luaXQ6IFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPFVzZXJUYWdzVHlwZT4+O1xuICBzZWxlY3RQcm9maWxlTW9kYWxPcHRpb246IFVzZXJNb2RhbE9wdGlvblR5cGU7XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7XG4gIGlzTXlQYWdlLFxuICBzZXNzaW9uLFxuICB1c2VyLFxuICB1c2VyVGFncyxcbiAgdXNlclRhZ3NJbml0LFxuICBzZXRVc2VyLFxuICBzZXRVc2VyVGFncyxcbiAgc2V0VXNlclRhZ3NJbml0LFxuICBzZXRTaG93U2VhcmNoTW9kYWxPcHRpb24sXG59OiBQcm9wcykgPT4ge1xuICBjb25zdCBbaXNFZGl0YWJsZXMsIHNldElzRWRpdGFibGVzXSA9IHVzZVN0YXRlKGlzRWRpdGFibGVzSW5pdCk7XG4gIGNvbnN0IFtpc0NoYW5nZVVzZXJUYWdzLCBzZXRJc0NoYW5nZVVzZXJUYWdzXSA9IHVzZVN0YXRlKGlzQ2hhbmdlVXNlclRhZ3NJbml0KTtcbiAgY29uc3QgW3NlbGVjdEludmVzdG9yTW9kYWxPcHRpb24sIHNldFNlbGVjdEludmVzdG9yTW9kYWxPcHRpb25dID0gdXNlU3RhdGU8VXNlck1vZGFsT3B0aW9uVHlwZT4oeyAuLi51c2VyTW9kYWxPcHRpb25Jbml0IH0pO1xuICBjb25zdCBbc2VsZWN0Rm91bmRlck1vZGFsT3B0aW9uLCBzZXRTZWxlY3RGb3VuZGVyTW9kYWxPcHRpb25dID0gdXNlU3RhdGU8VXNlck1vZGFsT3B0aW9uVHlwZT4oeyAuLi51c2VyTW9kYWxPcHRpb25Jbml0IH0pO1xuICBjb25zdCBbc2VsZWN0TWVtYmVyTW9kYWxPcHRpb24sIHNldFNlbGVjdE1lbWJlck1vZGFsT3B0aW9uXSA9IHVzZVN0YXRlPFVzZXJNb2RhbE9wdGlvblR5cGU+KHsgLi4udXNlck1vZGFsT3B0aW9uSW5pdCB9KTtcbiAgY29uc3QgW3NlbGVjdFN0b3J5TW9kYWxPcHRpb24sIHNldFNlbGVjdFN0b3J5TW9kYWxPcHRpb25dID0gdXNlU3RhdGU8VXNlck1vZGFsT3B0aW9uVHlwZT4oeyAuLi51c2VyTW9kYWxPcHRpb25Jbml0IH0pO1xuICBjb25zdCBbaXNTYXZlZEFuaW1hdGlvbnMsIHNldElzU2F2ZWRBbmltYXRpb25zXSA9IHVzZVN0YXRlKGlzU2F2aW5nQW5pbWF0aW9uc0luaXQpO1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2xpY2tUYWcgPSAoXG4gICAgaXNFZGl0YWJsZSxcbiAgICB0YWdQYXJlbnRUeXBlOiBUYWdQYXJlbnRUeXBlLFxuICAgIHRhZ1R5cGU/OiBUYWdUeXBlLFxuICAgIGluZGV4PzogbnVtYmVyLFxuICAgIHVzZXJNb2RhbE9wdGlvbnM/OiBVc2VyTW9kYWxPcHRpb25UeXBlXG4gICkgPT4ge1xuICAgIGxldCBfaWQgPSAnJztcbiAgICBsZXQgbGFuZ3VhZ2VzID0gW107XG4gICAgbGV0IHNleGVzID0gW107XG4gICAgbGV0IGJpcnRoZGF5ID0gY29uZi5kZWZhdWx0QmlydGhkYXlVbml4dGltZTtcbiAgICBsZXQgaW5kdXN0b3J5UGFyZW50SWQgPSAnJztcbiAgICBsZXQgaW5kdXN0b3J5SWQgPSAnJztcbiAgICBsZXQgc3RhcnR1cFNlcmllc0lkID0gJyc7XG4gICAgbGV0IHllYXIgPSAwO1xuICAgIGxldCBqb2JQYXJlbnRJZCA9ICcnO1xuICAgIGxldCBqb2JJZCA9ICcnO1xuICAgIGxldCBzdG9yeUlkID0gJyc7XG5cbiAgICBzd2l0Y2ggKHRhZ1BhcmVudFR5cGUpIHtcbiAgICAgIGNhc2UgdGFnUGFyZW50U2VsZjpcbiAgICAgICAgbGFuZ3VhZ2VzID0gdXNlci5sYW5ndWFnZXMgPyB1c2VyLmxhbmd1YWdlcyA6IFtdO1xuICAgICAgICBzZXhlcyA9IHVzZXIuc2V4ZXMgPyB1c2VyLnNleGVzIDogW107XG4gICAgICAgIGJpcnRoZGF5ID0gdXNlci5iaXJ0aGRheSA/IHVzZXIuYmlydGhkYXkgOiAnJztcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIHRhZ1BhcmVudFNlYXJjaDpcbiAgICAgICAgaWYgKHVzZXJNb2RhbE9wdGlvbnMpIHtcbiAgICAgICAgICBsYW5ndWFnZXMgPSB1c2VyTW9kYWxPcHRpb25zLmxhbmd1YWdlcyA/IHVzZXJNb2RhbE9wdGlvbnMubGFuZ3VhZ2VzIDogW107XG4gICAgICAgICAgc2V4ZXMgPSB1c2VyTW9kYWxPcHRpb25zLnNleGVzID8gdXNlck1vZGFsT3B0aW9ucy5zZXhlcyA6IFtdO1xuICAgICAgICAgIGJpcnRoZGF5ID0gdXNlck1vZGFsT3B0aW9ucy5iaXJ0aGRheSA/IHVzZXJNb2RhbE9wdGlvbnMuYmlydGhkYXkgOiAnJztcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgdGFnUGFyZW50U3Rvcnk6XG4gICAgICBkZWZhdWx0OlxuICAgICAgICBsYW5ndWFnZXMgPSB1c2VyTW9kYWxPcHRpb25zLmxhbmd1YWdlcyA/IHVzZXJNb2RhbE9wdGlvbnMubGFuZ3VhZ2VzIDogW107XG4gICAgICAgIHNleGVzID0gdXNlck1vZGFsT3B0aW9ucy5zZXhlcyA/IHVzZXJNb2RhbE9wdGlvbnMuc2V4ZXMgOiBbXTtcbiAgICAgICAgYmlydGhkYXkgPSB1c2VyTW9kYWxPcHRpb25zLmJpcnRoZGF5ID8gdXNlck1vZGFsT3B0aW9ucy5iaXJ0aGRheSA6ICcnO1xuICAgICAgICBzdG9yeUlkID0gdXNlck1vZGFsT3B0aW9ucyAmJiB1c2VyTW9kYWxPcHRpb25zLnN0b3J5SWQgPyB1c2VyTW9kYWxPcHRpb25zLnN0b3J5SWQgOiAnJztcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgaWYgKHVzZXJNb2RhbE9wdGlvbnMpIHtcbiAgICAgIF9pZCA9IHVzZXJNb2RhbE9wdGlvbnMuX2lkID8gdXNlck1vZGFsT3B0aW9ucy5faWQgOiAnJztcbiAgICAgIGluZHVzdG9yeVBhcmVudElkID0gdXNlck1vZGFsT3B0aW9ucy5pbmR1c3RvcnlJZCA/IHVzZXJNb2RhbE9wdGlvbnMuaW5kdXN0b3J5SWQuc3BsaXQoJy0nKVswXSA6ICcnO1xuICAgICAgaW5kdXN0b3J5SWQgPSB1c2VyTW9kYWxPcHRpb25zLmluZHVzdG9yeUlkID8gdXNlck1vZGFsT3B0aW9ucy5pbmR1c3RvcnlJZCA6ICcnO1xuICAgICAgc3RhcnR1cFNlcmllc0lkID0gdXNlck1vZGFsT3B0aW9ucy5zdGFydHVwU2VyaWVzSWQgPyB1c2VyTW9kYWxPcHRpb25zLnN0YXJ0dXBTZXJpZXNJZCA6ICcnO1xuICAgICAgeWVhciA9IHVzZXJNb2RhbE9wdGlvbnMueWVhciA/IHVzZXJNb2RhbE9wdGlvbnMueWVhciA6IDA7XG4gICAgICBqb2JQYXJlbnRJZCA9IHVzZXJNb2RhbE9wdGlvbnMuam9iSWQgPyB1c2VyTW9kYWxPcHRpb25zLmpvYklkLnNwbGl0KCctJylbMF0gOiAnJztcbiAgICAgIGpvYklkID0gdXNlck1vZGFsT3B0aW9ucy5qb2JJZCA/IHVzZXJNb2RhbE9wdGlvbnMuam9iSWQgOiAnJztcbiAgICAgIHN0b3J5SWQgPSB1c2VyTW9kYWxPcHRpb25zLnN0b3J5SWQgPyB1c2VyTW9kYWxPcHRpb25zLnN0b3J5SWQgOiAnJztcbiAgICB9XG5cbiAgICBzd2l0Y2ggKHRhZ1R5cGUpIHtcbiAgICAgIGNhc2UgdGFnSW52ZXN0b3I6XG4gICAgICAgIHNldFNlbGVjdEludmVzdG9yTW9kYWxPcHRpb24oe1xuICAgICAgICAgIC4uLnVzZXJNb2RhbE9wdGlvbkluaXQsXG4gICAgICAgICAgX2lkLFxuICAgICAgICAgIGlzRWRpdGFibGUsXG4gICAgICAgICAgbGFuZ3VhZ2VzLFxuICAgICAgICAgIHNleGVzLFxuICAgICAgICAgIGJpcnRoZGF5LFxuICAgICAgICAgIHRhZ1BhcmVudFR5cGUsXG4gICAgICAgICAgdGFnVHlwZSxcbiAgICAgICAgICBpbmR1c3RvcnlQYXJlbnRJZCxcbiAgICAgICAgICBpbmR1c3RvcnlJZCxcbiAgICAgICAgICBzdGFydHVwU2VyaWVzSWQsXG4gICAgICAgICAgeWVhcixcbiAgICAgICAgICBpbmRleCxcbiAgICAgICAgfSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSB0YWdGb3VuZGVyOlxuICAgICAgICBzZXRTZWxlY3RGb3VuZGVyTW9kYWxPcHRpb24oe1xuICAgICAgICAgIC4uLnVzZXJNb2RhbE9wdGlvbkluaXQsXG4gICAgICAgICAgX2lkLFxuICAgICAgICAgIGlzRWRpdGFibGUsXG4gICAgICAgICAgbGFuZ3VhZ2VzLFxuICAgICAgICAgIHNleGVzLFxuICAgICAgICAgIGJpcnRoZGF5LFxuICAgICAgICAgIHRhZ1BhcmVudFR5cGUsXG4gICAgICAgICAgdGFnVHlwZSxcbiAgICAgICAgICBpbmR1c3RvcnlQYXJlbnRJZCxcbiAgICAgICAgICBpbmR1c3RvcnlJZCxcbiAgICAgICAgICBzdGFydHVwU2VyaWVzSWQsXG4gICAgICAgICAgeWVhcixcbiAgICAgICAgICBpbmRleCxcbiAgICAgICAgfSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSB0YWdNZW1iZXI6XG4gICAgICAgIHNldFNlbGVjdE1lbWJlck1vZGFsT3B0aW9uKHtcbiAgICAgICAgICAuLi51c2VyTW9kYWxPcHRpb25Jbml0LFxuICAgICAgICAgIF9pZCxcbiAgICAgICAgICBpc0VkaXRhYmxlLFxuICAgICAgICAgIGxhbmd1YWdlcyxcbiAgICAgICAgICBzZXhlcyxcbiAgICAgICAgICBiaXJ0aGRheSxcbiAgICAgICAgICB0YWdQYXJlbnRUeXBlLFxuICAgICAgICAgIHRhZ1R5cGUsXG4gICAgICAgICAgaW5kdXN0b3J5UGFyZW50SWQsXG4gICAgICAgICAgaW5kdXN0b3J5SWQsXG4gICAgICAgICAgam9iUGFyZW50SWQsXG4gICAgICAgICAgam9iSWQsXG4gICAgICAgICAgeWVhcixcbiAgICAgICAgICBpbmRleCxcbiAgICAgICAgfSk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgY2FzZSB0YWdTdG9yeTpcbiAgICAgICAgc2V0U2VsZWN0U3RvcnlNb2RhbE9wdGlvbih7XG4gICAgICAgICAgLi4udXNlck1vZGFsT3B0aW9uSW5pdCxcbiAgICAgICAgICBfaWQsXG4gICAgICAgICAgaXNFZGl0YWJsZSxcbiAgICAgICAgICB0YWdQYXJlbnRUeXBlLFxuICAgICAgICAgIHRhZ1R5cGUsXG4gICAgICAgICAgbGFuZ3VhZ2VzLFxuICAgICAgICAgIHNleGVzLFxuICAgICAgICAgIGJpcnRoZGF5LFxuICAgICAgICAgIHN0b3J5SWQsXG4gICAgICAgICAgaW5kZXgsXG4gICAgICAgIH0pO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DbGlja1JlbW92ZSA9ICh0YWdQYXJlbnRUeXBlOiBUYWdQYXJlbnRUeXBlLCB0YWdUeXBlOiBUYWdUeXBlLCBpbmRleDogbnVtYmVyKSA9PiB7XG4gICAgY29uc3QgdGFnUGFyZW50VHlwZUxvd2VyID0gdGFnUGFyZW50VHlwZS50b0xvY2FsZUxvd2VyQ2FzZSgpO1xuICAgIGNvbnN0IHRhZ1R5cGVMb3dlciA9IHRhZ1R5cGUudG9Mb2NhbGVMb3dlckNhc2UoKTtcblxuICAgIGlmICh1c2VyVGFnc1t0YWdQYXJlbnRUeXBlTG93ZXJdW3RhZ1R5cGVMb3dlcl1baW5kZXhdKSB7XG4gICAgICB1c2VyVGFnc1t0YWdQYXJlbnRUeXBlTG93ZXJdW3RhZ1R5cGVMb3dlcl0uc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIHNldFVzZXJUYWdzKHtcbiAgICAgICAgLi4udXNlclRhZ3MsXG4gICAgICAgIFt0YWdQYXJlbnRUeXBlTG93ZXJdOiB7XG4gICAgICAgICAgLi4udXNlclRhZ3NbdGFnUGFyZW50VHlwZUxvd2VyXSxcbiAgICAgICAgICBbdGFnVHlwZUxvd2VyXTogWy4uLnVzZXJUYWdzW3RhZ1BhcmVudFR5cGVMb3dlcl1bdGFnVHlwZUxvd2VyXV0sXG4gICAgICAgIH0sXG4gICAgICB9KTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DbGlja1Bvc2l0aXZlID0gKHVzZXJNb2RhbE9wdGlvbnM6IFVzZXJNb2RhbE9wdGlvblR5cGUsIGZpeFZhbHVlKSA9PiB7XG4gICAgaWYgKHVzZXJNb2RhbE9wdGlvbnMuaXNFZGl0YWJsZSkge1xuICAgICAgaGFuZGxlT25Payh7IC4uLnVzZXJNb2RhbE9wdGlvbnMsIC4uLmZpeFZhbHVlIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZXRTaG93U2VhcmNoTW9kYWxPcHRpb24odXNlck1vZGFsT3B0aW9ucyk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uT2sgPSAodXNlck1vZGFsT3B0aW9uczogVXNlck1vZGFsT3B0aW9uVHlwZSkgPT4ge1xuICAgIGNvbnN0IHRhZ1BhcmVudFR5cGVMb3dlciA9IHVzZXJNb2RhbE9wdGlvbnMudGFnUGFyZW50VHlwZS50b0xvY2FsZUxvd2VyQ2FzZSgpO1xuICAgIGNvbnN0IHRhZ1R5cGVMb3dlciA9IHVzZXJNb2RhbE9wdGlvbnMudGFnVHlwZS50b0xvY2FsZUxvd2VyQ2FzZSgpO1xuICAgIGNvbnN0IGluZGV4ID0gdXNlck1vZGFsT3B0aW9ucy5pbmRleDtcbiAgICBsZXQgY29sdW1uVHlwZSA9IHVzZXJNb2RhbE9wdGlvbnMudGFnVHlwZSA9PT0gdGFnTWVtYmVyID8gJ2pvYklkJyA6ICdzdGFydHVwU2VyaWVzSWQnO1xuICAgIGxldCB1cGRhdGVJbmRleERhdGEgPSB1c2VyVGFnc1t0YWdQYXJlbnRUeXBlTG93ZXJdW3RhZ1R5cGVMb3dlcl07XG4gICAgLy8gZm9ybeOBq+ODrOODs+ODgOODquODs+OCsOOBmeOCi+OBqOaWh+Wtl+WIl+OBq+OBquOCi+OBn+OCgeWkieaPm1xuICAgIHVzZXJNb2RhbE9wdGlvbnMueWVhciA9IE51bWJlcih1c2VyTW9kYWxPcHRpb25zLnllYXIpO1xuXG4gICAgc3dpdGNoICh1c2VyTW9kYWxPcHRpb25zLnRhZ1BhcmVudFR5cGUpIHtcbiAgICAgIGNhc2UgdGFnUGFyZW50U2VsZjpcbiAgICAgICAgaWYgKHVzZXJUYWdzW3RhZ1BhcmVudFR5cGVMb3dlcl1bdGFnVHlwZUxvd2VyXVtpbmRleF0pIHtcbiAgICAgICAgICB1cGRhdGVJbmRleERhdGEgPSB1c2VyVGFnc1t0YWdQYXJlbnRUeXBlTG93ZXJdW3RhZ1R5cGVMb3dlcl0ubWFwKChvcHRpb24sIGkpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBpbmRleCA9PT0gaVxuICAgICAgICAgICAgICA/IHtcbiAgICAgICAgICAgICAgICAgIC4uLm9wdGlvbixcbiAgICAgICAgICAgICAgICAgIGluZHVzdG9yeUlkOiB1c2VyTW9kYWxPcHRpb25zLmluZHVzdG9yeUlkLFxuICAgICAgICAgICAgICAgICAgW2NvbHVtblR5cGVdOiB1c2VyTW9kYWxPcHRpb25zW2NvbHVtblR5cGVdLFxuICAgICAgICAgICAgICAgICAgZW1haWw6IHVzZXIuZW1haWwsXG4gICAgICAgICAgICAgICAgICBzZXhlczogdXNlck1vZGFsT3B0aW9ucy5zZXhlcyxcbiAgICAgICAgICAgICAgICAgIGxhbmd1YWdlczogdXNlck1vZGFsT3B0aW9ucy5sYW5ndWFnZXMsXG4gICAgICAgICAgICAgICAgICBiaXJ0aGRheTogdXNlck1vZGFsT3B0aW9ucy5iaXJ0aGRheSxcbiAgICAgICAgICAgICAgICAgIHllYXI6IHVzZXJNb2RhbE9wdGlvbnMueWVhcixcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIDogb3B0aW9uO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHVwZGF0ZUluZGV4RGF0YS5wdXNoKHtcbiAgICAgICAgICAgIHRhZ1BhcmVudFR5cGU6IHRhZ1BhcmVudFR5cGVMb3dlcixcbiAgICAgICAgICAgIHRhZ1R5cGU6IHRhZ1R5cGVMb3dlcixcbiAgICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLFxuICAgICAgICAgICAgc2V4ZXM6IHVzZXJNb2RhbE9wdGlvbnMuc2V4ZXMsXG4gICAgICAgICAgICBsYW5ndWFnZXM6IHVzZXJNb2RhbE9wdGlvbnMubGFuZ3VhZ2VzLFxuICAgICAgICAgICAgYmlydGhkYXk6IHVzZXJNb2RhbE9wdGlvbnMuYmlydGhkYXksXG4gICAgICAgICAgICBpbmR1c3RvcnlJZDogdXNlck1vZGFsT3B0aW9ucy5pbmR1c3RvcnlJZCxcbiAgICAgICAgICAgIFtjb2x1bW5UeXBlXTogdXNlck1vZGFsT3B0aW9uc1tjb2x1bW5UeXBlXSxcbiAgICAgICAgICAgIHllYXI6IHVzZXJNb2RhbE9wdGlvbnMueWVhcixcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgdGFnUGFyZW50U2VhcmNoOlxuICAgICAgICBpZiAodXNlclRhZ3NbdGFnUGFyZW50VHlwZUxvd2VyXVt0YWdUeXBlTG93ZXJdW2luZGV4XSkge1xuICAgICAgICAgIHVwZGF0ZUluZGV4RGF0YSA9IHVzZXJUYWdzW3RhZ1BhcmVudFR5cGVMb3dlcl1bdGFnVHlwZUxvd2VyXS5tYXAoKG9wdGlvbiwgaSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGluZGV4ID09PSBpXG4gICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgLi4ub3B0aW9uLFxuICAgICAgICAgICAgICAgICAgc2V4ZXM6IHVzZXJNb2RhbE9wdGlvbnMuc2V4ZXMsXG4gICAgICAgICAgICAgICAgICBsYW5ndWFnZXM6IHVzZXJNb2RhbE9wdGlvbnMubGFuZ3VhZ2VzLFxuICAgICAgICAgICAgICAgICAgYmlydGhkYXk6IHVzZXJNb2RhbE9wdGlvbnMuYmlydGhkYXksXG4gICAgICAgICAgICAgICAgICBpbmR1c3RvcnlJZDogdXNlck1vZGFsT3B0aW9ucy5pbmR1c3RvcnlJZCxcbiAgICAgICAgICAgICAgICAgIFtjb2x1bW5UeXBlXTogdXNlck1vZGFsT3B0aW9uc1tjb2x1bW5UeXBlXSxcbiAgICAgICAgICAgICAgICAgIHllYXI6IHVzZXJNb2RhbE9wdGlvbnMueWVhcixcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIDogb3B0aW9uO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHVwZGF0ZUluZGV4RGF0YS5wdXNoKHtcbiAgICAgICAgICAgIHRhZ1BhcmVudFR5cGU6IHRhZ1BhcmVudFR5cGVMb3dlcixcbiAgICAgICAgICAgIHRhZ1R5cGU6IHRhZ1R5cGVMb3dlcixcbiAgICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLFxuICAgICAgICAgICAgc2V4ZXM6IHVzZXJNb2RhbE9wdGlvbnMuc2V4ZXMsXG4gICAgICAgICAgICBsYW5ndWFnZXM6IHVzZXJNb2RhbE9wdGlvbnMubGFuZ3VhZ2VzLFxuICAgICAgICAgICAgYmlydGhkYXk6IHVzZXJNb2RhbE9wdGlvbnMuYmlydGhkYXksXG4gICAgICAgICAgICBpbmR1c3RvcnlJZDogdXNlck1vZGFsT3B0aW9ucy5pbmR1c3RvcnlJZCxcbiAgICAgICAgICAgIFtjb2x1bW5UeXBlXTogdXNlck1vZGFsT3B0aW9uc1tjb2x1bW5UeXBlXSxcbiAgICAgICAgICAgIHllYXI6IHVzZXJNb2RhbE9wdGlvbnMueWVhcixcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgdGFnU3Rvcnk6XG4gICAgICAgIGlmICh1c2VyVGFnc1t0YWdQYXJlbnRUeXBlTG93ZXJdW3RhZ1R5cGVMb3dlcl1baW5kZXhdKSB7XG4gICAgICAgICAgdXBkYXRlSW5kZXhEYXRhID0gdXNlclRhZ3NbdGFnUGFyZW50VHlwZUxvd2VyXVt0YWdUeXBlTG93ZXJdLm1hcCgob3B0aW9uLCBpKSA9PlxuICAgICAgICAgICAgaW5kZXggPT09IGlcbiAgICAgICAgICAgICAgPyB7XG4gICAgICAgICAgICAgICAgICAuLi5vcHRpb24sXG4gICAgICAgICAgICAgICAgICBlbWFpbDogdXNlci5lbWFpbCxcbiAgICAgICAgICAgICAgICAgIHNleGVzOiB1c2VyLnNleGVzLFxuICAgICAgICAgICAgICAgICAgbGFuZ3VhZ2VzOiB1c2VyLmxhbmd1YWdlcyxcbiAgICAgICAgICAgICAgICAgIGJpcnRoZGF5OiB1c2VyLmJpcnRoZGF5LFxuICAgICAgICAgICAgICAgICAgc3RvcnlJZDogdXNlck1vZGFsT3B0aW9ucy5zdG9yeUlkLFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgOiBvcHRpb25cbiAgICAgICAgICApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHVwZGF0ZUluZGV4RGF0YS5wdXNoKHtcbiAgICAgICAgICAgIHRhZ1BhcmVudFR5cGU6IHRhZ1BhcmVudFR5cGVMb3dlcixcbiAgICAgICAgICAgIHRhZ1R5cGU6IHRhZ1R5cGVMb3dlcixcbiAgICAgICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLFxuICAgICAgICAgICAgc2V4ZXM6IHVzZXIuc2V4ZXMsXG4gICAgICAgICAgICBsYW5ndWFnZXM6IHVzZXIubGFuZ3VhZ2VzLFxuICAgICAgICAgICAgYmlydGhkYXk6IHVzZXIuYmlydGhkYXksXG4gICAgICAgICAgICBzdG9yeUlkOiB1c2VyTW9kYWxPcHRpb25zLnN0b3J5SWQsXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgc2V0VXNlclRhZ3Moe1xuICAgICAgLi4udXNlclRhZ3MsXG4gICAgICBbdGFnUGFyZW50VHlwZUxvd2VyXToge1xuICAgICAgICAuLi51c2VyVGFnc1t0YWdQYXJlbnRUeXBlTG93ZXJdLFxuICAgICAgICBbdGFnVHlwZUxvd2VyXTogdXBkYXRlSW5kZXhEYXRhLFxuICAgICAgfSxcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNsaWNrUmVzZXQgPSBhc3luYyAodGFnUGFyZW50VHlwZTogVGFnUGFyZW50VHlwZSkgPT4ge1xuICAgIGNvbnN0IGtleSA9IHRhZ1BhcmVudFR5cGUudG9Mb2NhbGVMb3dlckNhc2UoKTtcbiAgICBpZiAodGFnUGFyZW50VHlwZSA9PT0gdGFnUGFyZW50U2VsZikge1xuICAgICAgY29uc3QgcHJvZmlsZUtleSA9IHRhZ1BhcmVudFByb2ZpbGUudG9Mb2NhbGVMb3dlckNhc2UoKTtcbiAgICAgIHNldFVzZXJUYWdzKHV0aWwuZGVlcENvcHkoeyAuLi51c2VyVGFncywgW3Byb2ZpbGVLZXldOiB1c2VyVGFnc0luaXRbcHJvZmlsZUtleV0sIFtrZXldOiB1c2VyVGFnc0luaXRba2V5XSB9KSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldFVzZXJUYWdzKHV0aWwuZGVlcENvcHkoeyAuLi51c2VyVGFncywgW2tleV06IHVzZXJUYWdzSW5pdFtrZXldIH0pKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DbGlja1NhdmUgPSBhc3luYyAodGFnUGFyZW50VHlwZTogVGFnUGFyZW50VHlwZSkgPT4ge1xuICAgIGNvbnN0IHRhZ1BhcmVudEtleSA9IHRhZ1BhcmVudFR5cGUudG9Mb2NhbGVMb3dlckNhc2UoKTtcbiAgICBjb25zdCBpc1NlbGZUYWdzID0gdGFnUGFyZW50VHlwZSA9PT0gdGFnUGFyZW50U2VsZjtcbiAgICBsZXQgaGFzU2VsZlRhZ3MgPSB7IC4uLnVzZXJIYXNTZWxmVGFnc0luaXQgfTtcbiAgICBsZXQgcmVxdWVzdFVzZXJUYWdzID0gW107XG5cbiAgICBPYmplY3Qua2V5cyh1c2VyVGFnc1t0YWdQYXJlbnRLZXldKS5mb3JFYWNoKCh0YWdUeXBlKSA9PiB7XG4gICAgICBpZiAoaXNTZWxmVGFncykge1xuICAgICAgICBjb25zdCB0YWdUeXBlS2V5ID0gdGFnVHlwZS50b0xvY2FsZUxvd2VyQ2FzZSgpO1xuICAgICAgICBoYXNTZWxmVGFnc1t0YWdUeXBlS2V5XSA9IHVzZXJUYWdzW3RhZ1BhcmVudEtleV1bdGFnVHlwZUtleV0ubGVuZ3RoID4gMDtcbiAgICAgIH1cbiAgICAgIHJlcXVlc3RVc2VyVGFncyA9IHJlcXVlc3RVc2VyVGFncy5jb25jYXQodXNlclRhZ3NbdGFnUGFyZW50S2V5XVt0YWdUeXBlXSk7XG4gICAgfSk7XG5cbiAgICBhcGkuanNvbignc2F2ZVVzZXJUYWdzJywgeyBlbWFpbDogdXNlci5lbWFpbCwgdGFnUGFyZW50VHlwZTogdGFnUGFyZW50S2V5LCB1c2VyVGFnczogcmVxdWVzdFVzZXJUYWdzIH0pO1xuXG4gICAgaWYgKGlzU2VsZlRhZ3MpIHtcbiAgICAgIGNvbnNvbGUubG9nKHsgLi4udXNlciwgaGFzU2VsZlRhZ3MgfS5oYXNTZWxmVGFncyk7XG4gICAgICBzZXRVc2VyKHsgLi4udXNlciwgaGFzU2VsZlRhZ3MgfSk7XG4gICAgfVxuXG4gICAgc2V0VXNlclRhZ3NJbml0KHV0aWwuZGVlcENvcHkoeyAuLi51c2VyVGFnc0luaXQsIFt0YWdQYXJlbnRLZXldOiB1c2VyVGFnc1t0YWdQYXJlbnRLZXldIH0pKTtcbiAgICBzZXRJc0NoYW5nZVVzZXJUYWdzKHsgLi4uaXNDaGFuZ2VVc2VyVGFncywgW3RhZ1BhcmVudEtleV06IGZhbHNlIH0pO1xuXG4gICAgc2V0SXNTYXZlZEFuaW1hdGlvbnMoeyAuLi5pc1NhdmVkQW5pbWF0aW9ucywgW3RhZ1BhcmVudEtleV06IHRydWUgfSk7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBzZXRJc1NhdmVkQW5pbWF0aW9ucyh7IC4uLmlzU2F2ZWRBbmltYXRpb25zLCBbdGFnUGFyZW50S2V5XTogZmFsc2UgfSk7XG4gICAgfSwgMjAwMCk7XG4gIH07XG5cbiAgLy8gVE9PRDogUHJvZmlsZeODouODvOODgOODq+OCkuabtOaWsOOBl+OBn+mam+OBq3VzZXJUYWdz44GMaG9va+OBleOCjOOBpuOAgeOBk+OBruODoeOCveODg+ODieOBjOWun+ihjOOBleOCjOOCi+OAglxuICAvLyDjgZ3jga7pmpvjgatzZXRJc0NoYW5nZVVzZXJUYWdz44GM5pu05paw44GV44KMc2F2ZeODnOOCv+ODs+OBjHZpZXfjgavjgarjgaPjgabjgZfjgb7jgYbkuI3lhbflkIjjgYzlrZjlnKjjgZnjgotcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoaXNFeGlzdEFjY291bnRUYWdzKHVzZXJUYWdzKSkge1xuICAgICAgaWYgKHVzZXJUYWdzSW5pdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHNldFVzZXJUYWdzSW5pdCh1dGlsLmRlZXBDb3B5KHVzZXJUYWdzKSk7XG4gICAgICB9XG4gICAgICBpZiAoaXNFeGlzdEFjY291bnRUYWdzKHVzZXJUYWdzSW5pdCkpIHtcbiAgICAgICAgY29uc3QgdXBkYXRlSXNDaGFuZ2VVc2VyVGFncyA9IHsgLi4uaXNDaGFuZ2VVc2VyVGFncyB9O1xuICAgICAgICBPYmplY3Qua2V5cyhpc0NoYW5nZVVzZXJUYWdzKS5mb3JFYWNoKChrZXkpID0+IHtcbiAgICAgICAgICBjb25zdCB0YWdQYXJlbnRUeXBlTG93ZXIgPSBrZXkudG9Mb2NhbGVMb3dlckNhc2UoKTtcbiAgICAgICAgICB1cGRhdGVJc0NoYW5nZVVzZXJUYWdzW2tleV0gPSAhdXRpbC5kZWVwRXF1YWxzKHVzZXJUYWdzW3RhZ1BhcmVudFR5cGVMb3dlcl0sIHVzZXJUYWdzSW5pdFt0YWdQYXJlbnRUeXBlTG93ZXJdKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgc2V0SXNDaGFuZ2VVc2VyVGFncyh7IC4uLnVwZGF0ZUlzQ2hhbmdlVXNlclRhZ3MgfSk7XG4gICAgICB9XG4gICAgfVxuICB9LCBbdXNlclRhZ3NdKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8RmxleCBmbG93PVwiY29sdW1uIG5vd3JhcFwiIGFsaWduSXRlbXM9XCJmbGV4LXN0YXJ0XCIganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIiBzaWRlTWFyZ2luIHNpZGVQYWRkaW5nPlxuICAgICAgICA8SC5GaXZlIGFsaWduSXRlbXM9XCJjZW50ZXJcIj5cbiAgICAgICAgICA8U3ZnLlN0b3J5IHNpZGVNYXJnaW4gY2xhc3NOYW1lPVwiTXlTdG9yeVwiIC8+XG4gICAgICAgICAgTXkgU3RvcnlcbiAgICAgICAgPC9ILkZpdmU+XG4gICAgICAgIDxiciAvPlxuICAgICAgICA8RXllQ2F0Y2hPcmRlciBzbGlkZSAvPlxuICAgICAgPC9GbGV4PlxuXG4gICAgICB7LyogVGFncyAqL31cbiAgICAgIHt0YWdQYXJlbnRUeXBlcy5tYXAoKHRhZ1BhcmVudFR5cGU6IFRhZ1BhcmVudFR5cGUpID0+IHtcbiAgICAgICAgY29uc3QgdGFnUGFyZW50VHlwZUxvd2VyID0gdGFnUGFyZW50VHlwZS50b0xvY2FsZUxvd2VyQ2FzZSgpO1xuICAgICAgICBjb25zdCBzb21lVGFncyA9IHVzZXJUYWdzID8gdXNlclRhZ3NbdGFnUGFyZW50VHlwZUxvd2VyXSA6IFtdO1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxUYWdTZWN0aW9uc1xuICAgICAgICAgICAgc2Vzc2lvbj17c2Vzc2lvbn1cbiAgICAgICAgICAgIGlzTXlQYWdlPXtpc015UGFnZX1cbiAgICAgICAgICAgIGtleT17dGFnUGFyZW50VHlwZX1cbiAgICAgICAgICAgIHRhZ1BhcmVudD17dGFnUGFyZW50VHlwZX1cbiAgICAgICAgICAgIHNvbWVUYWdzPXtzb21lVGFnc31cbiAgICAgICAgICAgIGlzRWRpdGFibGVzPXtpc0VkaXRhYmxlc31cbiAgICAgICAgICAgIGlzQ2hhbmdlVXNlclRhZz17aXNDaGFuZ2VVc2VyVGFnc1t0YWdQYXJlbnRUeXBlXX1cbiAgICAgICAgICAgIGlzU2F2ZWRBbmltYXRpb25zPXtpc1NhdmVkQW5pbWF0aW9uc1t0YWdQYXJlbnRUeXBlTG93ZXJdfVxuICAgICAgICAgICAgc2V0SXNFZGl0YWJsZXM9e3NldElzRWRpdGFibGVzfVxuICAgICAgICAgICAgaGFuZGxlT25DbGlja1Jlc2V0PXtoYW5kbGVPbkNsaWNrUmVzZXR9XG4gICAgICAgICAgICBoYW5kbGVPbkNsaWNrVGFnPXtoYW5kbGVPbkNsaWNrVGFnfVxuICAgICAgICAgICAgaGFuZGxlT25DbGlja1JlbW92ZT17aGFuZGxlT25DbGlja1JlbW92ZX1cbiAgICAgICAgICAgIGhhbmRsZU9uQ2xpY2tTYXZlPXtoYW5kbGVPbkNsaWNrU2F2ZX1cbiAgICAgICAgICAvPlxuICAgICAgICApO1xuICAgICAgfSl9XG5cbiAgICAgIDxTZWxlY3RJbnZlc3Rvck1vZGFsXG4gICAgICAgIHNob3c9e3NlbGVjdEludmVzdG9yTW9kYWxPcHRpb24uaW5kZXggIT09IHVuZGVmaW5lZH1cbiAgICAgICAgdXNlcj17dXNlcn1cbiAgICAgICAgdXNlclRhZ3M9e3VzZXJUYWdzfVxuICAgICAgICB1c2VyTW9kYWxPcHRpb25zPXtzZWxlY3RJbnZlc3Rvck1vZGFsT3B0aW9ufVxuICAgICAgICBvbkNsaWNrUG9zaXRpdmU9e2hhbmRsZU9uQ2xpY2tQb3NpdGl2ZX1cbiAgICAgICAgb25DYW5jZWw9eygpID0+IHNldFNlbGVjdEludmVzdG9yTW9kYWxPcHRpb24oeyAuLi51c2VyTW9kYWxPcHRpb25Jbml0IH0pfVxuICAgICAgLz5cbiAgICAgIDxTZWxlY3RGb3VuZGVyTW9kYWxcbiAgICAgICAgc2hvdz17c2VsZWN0Rm91bmRlck1vZGFsT3B0aW9uLmluZGV4ICE9PSB1bmRlZmluZWR9XG4gICAgICAgIHVzZXI9e3VzZXJ9XG4gICAgICAgIHVzZXJUYWdzPXt1c2VyVGFnc31cbiAgICAgICAgdXNlck1vZGFsT3B0aW9ucz17c2VsZWN0Rm91bmRlck1vZGFsT3B0aW9ufVxuICAgICAgICBvbkNsaWNrUG9zaXRpdmU9e2hhbmRsZU9uQ2xpY2tQb3NpdGl2ZX1cbiAgICAgICAgb25DYW5jZWw9eygpID0+IHNldFNlbGVjdEZvdW5kZXJNb2RhbE9wdGlvbih7IC4uLnVzZXJNb2RhbE9wdGlvbkluaXQgfSl9XG4gICAgICAvPlxuICAgICAgPFNlbGVjdE1lbWJlck1vZGFsXG4gICAgICAgIHNob3c9e3NlbGVjdE1lbWJlck1vZGFsT3B0aW9uLmluZGV4ICE9PSB1bmRlZmluZWR9XG4gICAgICAgIHVzZXI9e3VzZXJ9XG4gICAgICAgIHVzZXJUYWdzPXt1c2VyVGFnc31cbiAgICAgICAgdXNlck1vZGFsT3B0aW9ucz17c2VsZWN0TWVtYmVyTW9kYWxPcHRpb259XG4gICAgICAgIG9uQ2xpY2tQb3NpdGl2ZT17aGFuZGxlT25DbGlja1Bvc2l0aXZlfVxuICAgICAgICBvbkNhbmNlbD17KCkgPT4gc2V0U2VsZWN0TWVtYmVyTW9kYWxPcHRpb24oeyAuLi51c2VyTW9kYWxPcHRpb25Jbml0IH0pfVxuICAgICAgLz5cbiAgICAgIDxTZWxlY3RTdG9yeU1vZGFsXG4gICAgICAgIHNob3c9e3NlbGVjdFN0b3J5TW9kYWxPcHRpb24uaW5kZXggIT09IHVuZGVmaW5lZH1cbiAgICAgICAgdXNlcj17dXNlcn1cbiAgICAgICAgdXNlclRhZ3M9e3VzZXJUYWdzfVxuICAgICAgICB1c2VyTW9kYWxPcHRpb25zPXtzZWxlY3RTdG9yeU1vZGFsT3B0aW9ufVxuICAgICAgICBvbkNsaWNrUG9zaXRpdmU9e2hhbmRsZU9uQ2xpY2tQb3NpdGl2ZX1cbiAgICAgICAgb25DYW5jZWw9eygpID0+IHNldFNlbGVjdFN0b3J5TW9kYWxPcHRpb24oeyAuLi51c2VyTW9kYWxPcHRpb25Jbml0IH0pfVxuICAgICAgLz5cbiAgICA8Lz5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgaXNFeGlzdEFjY291bnRUYWdzID0gKHVzZXJUYWdzKSA9PiB7XG4gIGxldCBpc0V4aXN0ID0gZmFsc2U7XG4gIGlmICh1c2VyVGFncykge1xuICAgIHJldHVybiBCb29sZWFuKFxuICAgICAgdGFnUGFyZW50VHlwZXMuZmluZCgodGFnUGFyZW50VHlwZSkgPT4ge1xuICAgICAgICBjb25zdCB0YWdQYXJlbnRUeXBlTG93ZXIgPSB0YWdQYXJlbnRUeXBlLnRvTG9jYWxlTG93ZXJDYXNlKCk7XG4gICAgICAgIHJldHVybiB1c2VyVGFnc1t0YWdQYXJlbnRUeXBlTG93ZXJdO1xuICAgICAgfSlcbiAgICApO1xuICB9XG4gIHJldHVybiBpc0V4aXN0O1xufTtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGNvbmYgZnJvbSAnY29tbW9uL2NvbmYnO1xuXG5pbXBvcnQgSCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0gnO1xuaW1wb3J0IHsgdGFnUGFyZW50U2VsZiB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUnO1xuaW1wb3J0IHsgUHJvZmlsZXMsIE1vZGFsRm9vdGVyLCBnZXRJc0Rpc2FibGVkLCBUYWdJZCB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvY29tbW9uJztcbmltcG9ydCB7IFVzZXJNb2RhbE9wdGlvblR5cGUgfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL2luZGV4JztcbmltcG9ydCBTZWxlY3RJbmR1c3RvcnkgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RJbmR1c3RvcnknO1xuaW1wb3J0IFNlbGVjdFN0YXJ0dXBTZXJpZXMgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RTdGFydHVwU2VyaWVzJztcbmltcG9ydCBNb2RhbCBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Nb2RhbCc7XG5pbXBvcnQgeyBVc2VyVHlwZSwgVXNlclRhZ3NUeXBlIH0gZnJvbSAnY292ZXIvdGFsa24uY292ZXInO1xuXG5leHBvcnQgdHlwZSBGaXhWYWx1ZXNUeXBlID0ge1xuICBzZXhlczogc3RyaW5nW107XG4gIGxhbmd1YWdlczogc3RyaW5nW107XG4gIGJpcnRoZGF5OiBudW1iZXI7XG4gIGluZHVzdG9yeVBhcmVudElkOiBzdHJpbmc7XG4gIGluZHVzdG9yeUlkOiBzdHJpbmc7XG4gIHN0YXJ0dXBTZXJpZXNJZDogc3RyaW5nO1xuICB5ZWFyOiBudW1iZXI7XG59O1xuXG5leHBvcnQgY29uc3QgZml4VmFsdWVzSW5pdDogRml4VmFsdWVzVHlwZSA9IHtcbiAgc2V4ZXM6IFtdLFxuICBsYW5ndWFnZXM6IFtdLFxuICBiaXJ0aGRheTogY29uZi5kZWZhdWx0QmlydGhkYXlVbml4dGltZSxcbiAgaW5kdXN0b3J5UGFyZW50SWQ6ICcnLFxuICBpbmR1c3RvcnlJZDogJycsXG4gIHN0YXJ0dXBTZXJpZXNJZDogJycsXG4gIHllYXI6IDAsXG59O1xuXG50eXBlIFByb3BzID0ge1xuICBzaG93OiBib29sZWFuO1xuICB1c2VyOiBVc2VyVHlwZTtcbiAgdXNlclRhZ3M6IFVzZXJUYWdzVHlwZTtcbiAgdXNlck1vZGFsT3B0aW9uczogVXNlck1vZGFsT3B0aW9uVHlwZTtcbiAgb25DYW5jZWw6ICgpID0+IHZvaWQ7XG4gIG9uQ2xpY2tQb3NpdGl2ZTogKHVzZXJNb2RhbE9wdGlvbnM6IFVzZXJNb2RhbE9wdGlvblR5cGUsIGZpeFZhbHVlczogRml4VmFsdWVzVHlwZSkgPT4gdm9pZDtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogRnVuY3Rpb25Db21wb25lbnQ8UHJvcHM+ID0gKHsgc2hvdywgdXNlciwgdXNlck1vZGFsT3B0aW9ucywgb25DbGlja1Bvc2l0aXZlLCBvbkNhbmNlbCB9OiBQcm9wcykgPT4ge1xuICBjb25zdCBbZGlkTW91bnQsIHNldERpZE1vdW50XSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2Rpc2FibGVCdXR0b25Paywgc2V0RGlzYWJsZUJ1dHRvbk9rXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2luaXRWYWx1ZXMsIHNldEluaXRWYWx1ZXNdID0gdXNlU3RhdGU8Rml4VmFsdWVzVHlwZT4oZml4VmFsdWVzSW5pdCk7XG4gIGNvbnN0IFtmaXhWYWx1ZXMsIHNldEZpeFZhbHVlc10gPSB1c2VTdGF0ZTxGaXhWYWx1ZXNUeXBlPihmaXhWYWx1ZXNJbml0KTtcbiAgY29uc3QgaXNFZGl0YWJsZSA9IHVzZXJNb2RhbE9wdGlvbnMuaXNFZGl0YWJsZTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZUJpcnRoZGF5ID0gKGJpcnRoZGF5KSA9PiB7XG4gICAgc2V0Rml4VmFsdWVzKHsgLi4uZml4VmFsdWVzLCBiaXJ0aGRheSB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZUxhbmd1YWdlcyA9IChsYW5ndWFnZXMpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIGxhbmd1YWdlcyB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZVNleGVzID0gKHNleGVzKSA9PiB7XG4gICAgc2V0Rml4VmFsdWVzKHsgLi4uZml4VmFsdWVzLCBzZXhlcyB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZUluZHVzdG9yeSA9IChpbmR1c3RvcnlQYXJlbnRJZCwgaW5kdXN0b3J5SWQpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIGluZHVzdG9yeVBhcmVudElkLCBpbmR1c3RvcnlJZCB9KTtcbiAgfTtcbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VTdGFydHVwU2VyaWVzID0gKHN0YXJ0dXBTZXJpZXNJZCkgPT4ge1xuICAgIHNldEZpeFZhbHVlcyh7IC4uLmZpeFZhbHVlcywgc3RhcnR1cFNlcmllc0lkIH0pO1xuICB9O1xuICBjb25zdCBoYW5kbGVPbkNoYW5nZVllYXIgPSAoeWVhcikgPT4ge1xuICAgIHNldEZpeFZhbHVlcyh7IC4uLmZpeFZhbHVlcywgeWVhciB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNsb3NlID0gKCkgPT4ge1xuICAgIHNldEZpeFZhbHVlcyh7IC4uLmluaXRWYWx1ZXMgfSk7XG4gICAgb25DYW5jZWwoKTtcbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChzaG93KSB7XG4gICAgICBpZiAoZGlkTW91bnQpIHtcbiAgICAgICAgc2V0RGlzYWJsZUJ1dHRvbk9rKGdldElzRGlzYWJsZWQoZml4VmFsdWVzKSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXREaWRNb3VudCh0cnVlKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIFtzaG93LCBmaXhWYWx1ZXNdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHZhbHVlcyA9IHtcbiAgICAgIC4uLmZpeFZhbHVlcyxcbiAgICAgIGxhbmd1YWdlczogdXNlck1vZGFsT3B0aW9ucy5sYW5ndWFnZXMsXG4gICAgICBzZXhlczogdXNlck1vZGFsT3B0aW9ucy5zZXhlcyxcbiAgICAgIGJpcnRoZGF5OiB1c2VyTW9kYWxPcHRpb25zLmJpcnRoZGF5LFxuICAgICAgaW5kdXN0b3J5UGFyZW50SWQ6IHVzZXJNb2RhbE9wdGlvbnMuaW5kdXN0b3J5UGFyZW50SWQsXG4gICAgICBpbmR1c3RvcnlJZDogdXNlck1vZGFsT3B0aW9ucy5pbmR1c3RvcnlJZCxcbiAgICAgIHN0YXJ0dXBTZXJpZXNJZDogdXNlck1vZGFsT3B0aW9ucy5zdGFydHVwU2VyaWVzSWQsXG4gICAgICB5ZWFyOiB1c2VyTW9kYWxPcHRpb25zLnllYXIsXG4gICAgfTtcbiAgICBzZXRGaXhWYWx1ZXModmFsdWVzKTtcbiAgICBzZXRJbml0VmFsdWVzKHZhbHVlcyk7XG4gIH0sIFt1c2VyTW9kYWxPcHRpb25zXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8TW9kYWwuU3RydWN0dXJlXG4gICAgICBzaG93PXtzaG93fVxuICAgICAgY2xvc2VNb2RhbD17aGFuZGxlT25DbG9zZX1cbiAgICAgIGZsb3c9XCJjb2x1bW4gbm93cmFwXCJcbiAgICAgIGhlYWRlcj17XG4gICAgICAgIDxILkZpdmU+XG4gICAgICAgICAge3VzZXJNb2RhbE9wdGlvbnMudGFnUGFyZW50VHlwZX0gLSB7dXNlck1vZGFsT3B0aW9ucy50YWdUeXBlfVxuICAgICAgICAgIHtpc0VkaXRhYmxlICYmICcoRWRpdCknfVxuICAgICAgICA8L0guRml2ZT5cbiAgICAgIH1cbiAgICAgIGNvbnRlbnQ9e1xuICAgICAgICA8PlxuICAgICAgICAgIDxQcm9maWxlc1xuICAgICAgICAgICAgdHlwZT17YCR7dXNlck1vZGFsT3B0aW9ucy50YWdQYXJlbnRUeXBlfV8ke3VzZXJNb2RhbE9wdGlvbnMudGFnVHlwZX1gfVxuICAgICAgICAgICAgdXNlck1vZGFsT3B0aW9ucz17XG4gICAgICAgICAgICAgIHVzZXJNb2RhbE9wdGlvbnMudGFnUGFyZW50VHlwZSA9PT0gdGFnUGFyZW50U2VsZiA/IHsgLi4udXNlck1vZGFsT3B0aW9ucywgaXNFZGl0YWJsZTogZmFsc2UgfSA6IHVzZXJNb2RhbE9wdGlvbnNcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGhhbmRsZU9uQ2hhbmdlTGFuZ3VhZ2VzPXtoYW5kbGVPbkNoYW5nZUxhbmd1YWdlc31cbiAgICAgICAgICAgIGhhbmRsZU9uQ2hhbmdlU2V4ZXM9e2hhbmRsZU9uQ2hhbmdlU2V4ZXN9XG4gICAgICAgICAgICBoYW5kbGVPbkNoYW5nZUJpcnRoZGF5PXtoYW5kbGVPbkNoYW5nZUJpcnRoZGF5fVxuICAgICAgICAgICAgdW5kZXJsaW5lXG4gICAgICAgICAgLz5cbiAgICAgICAgICA8U2VsZWN0SW5kdXN0b3J5XG4gICAgICAgICAgICB0eXBlPXtgJHt1c2VyTW9kYWxPcHRpb25zLnRhZ1BhcmVudFR5cGV9XyR7dXNlck1vZGFsT3B0aW9ucy50YWdUeXBlfWB9XG4gICAgICAgICAgICBpc0VkaXRhYmxlPXtpc0VkaXRhYmxlfVxuICAgICAgICAgICAgaW5kdXN0b3J5UGFyZW50SWQ9e2ZpeFZhbHVlcy5pbmR1c3RvcnlQYXJlbnRJZH1cbiAgICAgICAgICAgIGluZHVzdG9yeUlkPXtmaXhWYWx1ZXMuaW5kdXN0b3J5SWR9XG4gICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlT25DaGFuZ2VJbmR1c3Rvcnl9XG4gICAgICAgICAgLz5cbiAgICAgICAgICA8U2VsZWN0U3RhcnR1cFNlcmllc1xuICAgICAgICAgICAgdHlwZT17YCR7dXNlck1vZGFsT3B0aW9ucy50YWdQYXJlbnRUeXBlfV8ke3VzZXJNb2RhbE9wdGlvbnMudGFnVHlwZX1gfVxuICAgICAgICAgICAgaXNFZGl0YWJsZT17aXNFZGl0YWJsZX1cbiAgICAgICAgICAgIHN0YXJ0dXBTZXJpZXNJZD17Zml4VmFsdWVzLnN0YXJ0dXBTZXJpZXNJZH1cbiAgICAgICAgICAgIHllYXI9e2ZpeFZhbHVlcy55ZWFyfVxuICAgICAgICAgICAgb25DaGFuZ2VTdGFydHVwU2VyaWVzSWQ9e2hhbmRsZU9uQ2hhbmdlU3RhcnR1cFNlcmllc31cbiAgICAgICAgICAgIG9uQ2hhbmdlWWVhcj17aGFuZGxlT25DaGFuZ2VZZWFyfVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPGJyIC8+XG4gICAgICAgICAgPFRhZ0lkPklEOiB7dXNlck1vZGFsT3B0aW9ucy5faWQgJiYgdXNlck1vZGFsT3B0aW9ucy5faWQgIT09ICcnID8gdXNlck1vZGFsT3B0aW9ucy5faWQgOiAnLSd9PC9UYWdJZD5cbiAgICAgICAgPC8+XG4gICAgICB9XG4gICAgICBmb290ZXI9e1xuICAgICAgICA8TW9kYWxGb290ZXJcbiAgICAgICAgICB1c2VyTW9kYWxPcHRpb25zPXt1c2VyTW9kYWxPcHRpb25zfVxuICAgICAgICAgIHBvc2l0aXZlRGlzYWJlbGQ9e2Rpc2FibGVCdXR0b25Pa31cbiAgICAgICAgICBvbkNsaWNrUG9zaXRpdmU9eygpID0+IG9uQ2xpY2tQb3NpdGl2ZSh1c2VyTW9kYWxPcHRpb25zLCBmaXhWYWx1ZXMpfVxuICAgICAgICAgIGhhbmRsZU9uQ2xvc2U9e2hhbmRsZU9uQ2xvc2V9XG4gICAgICAgIC8+XG4gICAgICB9XG4gICAgICB1cHBlclBhZGRpbmdcbiAgICAgIHNpZGVQYWRkaW5nXG4gICAgICBib3R0b21QYWRkaW5nXG4gICAgLz5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IGNvbmYgZnJvbSAnY29tbW9uL2NvbmYnO1xuXG5pbXBvcnQgSCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0gnO1xuaW1wb3J0IHsgdGFnUGFyZW50U2VsZiB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUnO1xuaW1wb3J0IHsgUHJvZmlsZXMsIE1vZGFsRm9vdGVyLCBnZXRJc0Rpc2FibGVkLCBUYWdJZCB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvY29tbW9uJztcbmltcG9ydCB7IFVzZXJNb2RhbE9wdGlvblR5cGUgfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL2luZGV4JztcbmltcG9ydCBTZWxlY3RJbmR1c3RvcnkgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RJbmR1c3RvcnknO1xuaW1wb3J0IFNlbGVjdFN0YXJ0dXBTZXJpZXMgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RTdGFydHVwU2VyaWVzJztcbmltcG9ydCBNb2RhbCBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Nb2RhbCc7XG5pbXBvcnQgeyBVc2VyVHlwZSwgVXNlclRhZ3NUeXBlIH0gZnJvbSAnY292ZXIvdGFsa24uY292ZXInO1xuXG5leHBvcnQgdHlwZSBGaXhWYWx1ZXNUeXBlID0ge1xuICBzZXhlczogc3RyaW5nW107XG4gIGxhbmd1YWdlczogc3RyaW5nW107XG4gIGJpcnRoZGF5OiBudW1iZXI7XG4gIGluZHVzdG9yeVBhcmVudElkOiBzdHJpbmc7XG4gIGluZHVzdG9yeUlkOiBzdHJpbmc7XG4gIHN0YXJ0dXBTZXJpZXNJZDogc3RyaW5nO1xuICB5ZWFyOiBudW1iZXI7XG59O1xuXG5leHBvcnQgY29uc3QgZml4VmFsdWVzSW5pdDogRml4VmFsdWVzVHlwZSA9IHtcbiAgc2V4ZXM6IFtdLFxuICBsYW5ndWFnZXM6IFtdLFxuICBiaXJ0aGRheTogY29uZi5kZWZhdWx0QmlydGhkYXlVbml4dGltZSxcbiAgaW5kdXN0b3J5UGFyZW50SWQ6ICcnLFxuICBpbmR1c3RvcnlJZDogJycsXG4gIHN0YXJ0dXBTZXJpZXNJZDogJycsXG4gIHllYXI6IDAsXG59O1xuXG50eXBlIFByb3BzID0ge1xuICBzaG93OiBib29sZWFuO1xuICB1c2VyOiBVc2VyVHlwZTtcbiAgdXNlclRhZ3M6IFVzZXJUYWdzVHlwZTtcbiAgdXNlck1vZGFsT3B0aW9uczogVXNlck1vZGFsT3B0aW9uVHlwZTtcbiAgb25DbGlja1Bvc2l0aXZlOiAodXNlck1vZGFsT3B0aW9uczogVXNlck1vZGFsT3B0aW9uVHlwZSwgZml4VmFsdWVzOiBGaXhWYWx1ZXNUeXBlKSA9PiB2b2lkO1xuICBvbkNhbmNlbDogKCkgPT4gdm9pZDtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogRnVuY3Rpb25Db21wb25lbnQ8UHJvcHM+ID0gKHsgc2hvdywgdXNlciwgdXNlck1vZGFsT3B0aW9ucywgb25DbGlja1Bvc2l0aXZlLCBvbkNhbmNlbCB9OiBQcm9wcykgPT4ge1xuICBjb25zdCBbZGlkTW91bnQsIHNldERpZE1vdW50XSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2Rpc2FibGVCdXR0b25Paywgc2V0RGlzYWJsZUJ1dHRvbk9rXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2luaXRWYWx1ZXMsIHNldEluaXRWYWx1ZXNdID0gdXNlU3RhdGU8Rml4VmFsdWVzVHlwZT4oZml4VmFsdWVzSW5pdCk7XG4gIGNvbnN0IFtmaXhWYWx1ZXMsIHNldEZpeFZhbHVlc10gPSB1c2VTdGF0ZTxGaXhWYWx1ZXNUeXBlPihmaXhWYWx1ZXNJbml0KTtcbiAgY29uc3QgaXNFZGl0YWJsZSA9IHVzZXJNb2RhbE9wdGlvbnMuaXNFZGl0YWJsZTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZUJpcnRoZGF5ID0gKGJpcnRoZGF5KSA9PiB7XG4gICAgY29uc29sZS5sb2coJ2hhbmRsZU9uQ2hhbmdlQmlydGhkYXknKTtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIGJpcnRoZGF5IH0pO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlTGFuZ3VhZ2VzID0gKGxhbmd1YWdlcykgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdoYW5kbGVPbkNoYW5nZUxhbmd1YWdlcycpO1xuICAgIHNldEZpeFZhbHVlcyh7IC4uLmZpeFZhbHVlcywgbGFuZ3VhZ2VzIH0pO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlU2V4ZXMgPSAoc2V4ZXMpID0+IHtcbiAgICBjb25zb2xlLmxvZygnaGFuZGxlT25DaGFuZ2VTZXhlcycpO1xuICAgIHNldEZpeFZhbHVlcyh7IC4uLmZpeFZhbHVlcywgc2V4ZXMgfSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VJbmR1c3RvcnkgPSAoaW5kdXN0b3J5UGFyZW50SWQsIGluZHVzdG9yeUlkKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ2hhbmRsZU9uQ2hhbmdlSW5kdXN0b3J5Jyk7XG4gICAgc2V0Rml4VmFsdWVzKHsgLi4uZml4VmFsdWVzLCBpbmR1c3RvcnlQYXJlbnRJZCwgaW5kdXN0b3J5SWQgfSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VTdGFydHVwU2VyaWVzID0gKHN0YXJ0dXBTZXJpZXNJZCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdoYW5kbGVPbkNoYW5nZVN0YXJ0dXBTZXJpZXMnKTtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIHN0YXJ0dXBTZXJpZXNJZCB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZVllYXIgPSAoeWVhcikgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdoYW5kbGVPbkNoYW5nZVllYXInKTtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIHllYXIgfSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DbG9zZSA9ICgpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5pbml0VmFsdWVzIH0pO1xuICAgIG9uQ2FuY2VsKCk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoc2hvdykge1xuICAgICAgaWYgKGRpZE1vdW50KSB7XG4gICAgICAgIHNldERpc2FibGVCdXR0b25PayhnZXRJc0Rpc2FibGVkKGZpeFZhbHVlcykpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0RGlkTW91bnQodHJ1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9LCBbc2hvdywgZml4VmFsdWVzXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCB2YWx1ZXMgPSB7XG4gICAgICAuLi5maXhWYWx1ZXMsXG4gICAgICBsYW5ndWFnZXM6IHVzZXJNb2RhbE9wdGlvbnMubGFuZ3VhZ2VzLFxuICAgICAgc2V4ZXM6IHVzZXJNb2RhbE9wdGlvbnMuc2V4ZXMsXG4gICAgICBiaXJ0aGRheTogdXNlck1vZGFsT3B0aW9ucy5iaXJ0aGRheSxcbiAgICAgIGluZHVzdG9yeVBhcmVudElkOiB1c2VyTW9kYWxPcHRpb25zLmluZHVzdG9yeVBhcmVudElkLFxuICAgICAgaW5kdXN0b3J5SWQ6IHVzZXJNb2RhbE9wdGlvbnMuaW5kdXN0b3J5SWQsXG4gICAgICBzdGFydHVwU2VyaWVzSWQ6IHVzZXJNb2RhbE9wdGlvbnMuc3RhcnR1cFNlcmllc0lkLFxuICAgICAgeWVhcjogdXNlck1vZGFsT3B0aW9ucy55ZWFyLFxuICAgIH07XG4gICAgc2V0Rml4VmFsdWVzKHZhbHVlcyk7XG4gICAgc2V0SW5pdFZhbHVlcyh2YWx1ZXMpO1xuICB9LCBbdXNlck1vZGFsT3B0aW9uc10pO1xuXG4gIHJldHVybiAoXG4gICAgPE1vZGFsLlN0cnVjdHVyZVxuICAgICAgc2hvdz17c2hvd31cbiAgICAgIGNsb3NlTW9kYWw9e2hhbmRsZU9uQ2xvc2V9XG4gICAgICBmbG93PVwiY29sdW1uIG5vd3JhcFwiXG4gICAgICBoZWFkZXI9e1xuICAgICAgICA8SC5GaXZlPlxuICAgICAgICAgIHt1c2VyTW9kYWxPcHRpb25zLnRhZ1BhcmVudFR5cGV9IC0ge3VzZXJNb2RhbE9wdGlvbnMudGFnVHlwZX1cbiAgICAgICAgICB7aXNFZGl0YWJsZSAmJiAnKEVkaXQpJ31cbiAgICAgICAgPC9ILkZpdmU+XG4gICAgICB9XG4gICAgICBjb250ZW50PXtcbiAgICAgICAgPD5cbiAgICAgICAgICA8UHJvZmlsZXNcbiAgICAgICAgICAgIHR5cGU9e2Ake3VzZXJNb2RhbE9wdGlvbnMudGFnUGFyZW50VHlwZX1fJHt1c2VyTW9kYWxPcHRpb25zLnRhZ1R5cGV9YH1cbiAgICAgICAgICAgIHVzZXJNb2RhbE9wdGlvbnM9e1xuICAgICAgICAgICAgICB1c2VyTW9kYWxPcHRpb25zLnRhZ1BhcmVudFR5cGUgPT09IHRhZ1BhcmVudFNlbGYgPyB7IC4uLnVzZXJNb2RhbE9wdGlvbnMsIGlzRWRpdGFibGU6IGZhbHNlIH0gOiB1c2VyTW9kYWxPcHRpb25zXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBoYW5kbGVPbkNoYW5nZUxhbmd1YWdlcz17aGFuZGxlT25DaGFuZ2VMYW5ndWFnZXN9XG4gICAgICAgICAgICBoYW5kbGVPbkNoYW5nZVNleGVzPXtoYW5kbGVPbkNoYW5nZVNleGVzfVxuICAgICAgICAgICAgaGFuZGxlT25DaGFuZ2VCaXJ0aGRheT17aGFuZGxlT25DaGFuZ2VCaXJ0aGRheX1cbiAgICAgICAgICAgIHVuZGVybGluZVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPFNlbGVjdEluZHVzdG9yeVxuICAgICAgICAgICAgdHlwZT17YCR7dXNlck1vZGFsT3B0aW9ucy50YWdQYXJlbnRUeXBlfV8ke3VzZXJNb2RhbE9wdGlvbnMudGFnVHlwZX1gfVxuICAgICAgICAgICAgaXNFZGl0YWJsZT17aXNFZGl0YWJsZX1cbiAgICAgICAgICAgIGluZHVzdG9yeVBhcmVudElkPXtmaXhWYWx1ZXMuaW5kdXN0b3J5UGFyZW50SWR9XG4gICAgICAgICAgICBpbmR1c3RvcnlJZD17Zml4VmFsdWVzLmluZHVzdG9yeUlkfVxuICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZU9uQ2hhbmdlSW5kdXN0b3J5fVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPFNlbGVjdFN0YXJ0dXBTZXJpZXNcbiAgICAgICAgICAgIHR5cGU9e2Ake3VzZXJNb2RhbE9wdGlvbnMudGFnUGFyZW50VHlwZX1fJHt1c2VyTW9kYWxPcHRpb25zLnRhZ1R5cGV9YH1cbiAgICAgICAgICAgIGlzRWRpdGFibGU9e2lzRWRpdGFibGV9XG4gICAgICAgICAgICBzdGFydHVwU2VyaWVzSWQ9e2ZpeFZhbHVlcy5zdGFydHVwU2VyaWVzSWR9XG4gICAgICAgICAgICB5ZWFyPXtmaXhWYWx1ZXMueWVhcn1cbiAgICAgICAgICAgIG9uQ2hhbmdlU3RhcnR1cFNlcmllc0lkPXtoYW5kbGVPbkNoYW5nZVN0YXJ0dXBTZXJpZXN9XG4gICAgICAgICAgICBvbkNoYW5nZVllYXI9e2hhbmRsZU9uQ2hhbmdlWWVhcn1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxiciAvPlxuICAgICAgICAgIDxUYWdJZD5JRDoge3VzZXJNb2RhbE9wdGlvbnMuX2lkICYmIHVzZXJNb2RhbE9wdGlvbnMuX2lkICE9PSAnJyA/IHVzZXJNb2RhbE9wdGlvbnMuX2lkIDogJy0nfTwvVGFnSWQ+XG4gICAgICAgIDwvPlxuICAgICAgfVxuICAgICAgZm9vdGVyPXtcbiAgICAgICAgPE1vZGFsRm9vdGVyXG4gICAgICAgICAgdXNlck1vZGFsT3B0aW9ucz17dXNlck1vZGFsT3B0aW9uc31cbiAgICAgICAgICBwb3NpdGl2ZURpc2FiZWxkPXtkaXNhYmxlQnV0dG9uT2t9XG4gICAgICAgICAgb25DbGlja1Bvc2l0aXZlPXsoKSA9PiBvbkNsaWNrUG9zaXRpdmUodXNlck1vZGFsT3B0aW9ucywgZml4VmFsdWVzKX1cbiAgICAgICAgICBoYW5kbGVPbkNsb3NlPXtoYW5kbGVPbkNsb3NlfVxuICAgICAgICAvPlxuICAgICAgfVxuICAgICAgdXBwZXJQYWRkaW5nXG4gICAgICBzaWRlUGFkZGluZ1xuICAgICAgYm90dG9tUGFkZGluZ1xuICAgIC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgRnVuY3Rpb25Db21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBjb25mIGZyb20gJ2NvbW1vbi9jb25mJztcblxuaW1wb3J0IEggZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9IJztcbmltcG9ydCB7IHRhZ1BhcmVudFNlbGYgfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlJztcbmltcG9ydCB7IFByb2ZpbGVzLCBNb2RhbEZvb3RlciwgZ2V0SXNEaXNhYmxlZCwgVGFnSWQgfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL2NvbW1vbic7XG5pbXBvcnQgeyBVc2VyTW9kYWxPcHRpb25UeXBlIH0gZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9pbmRleCc7XG5pbXBvcnQgU2VsZWN0SW5kdXN0b3J5IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvbW9kYWwvY2hpbGRyZW4vU2VsZWN0SW5kdXN0b3J5JztcbmltcG9ydCBTZWxlY3RKb2IgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RKb2InO1xuaW1wb3J0IE1vZGFsIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL01vZGFsJztcbmltcG9ydCB7IFVzZXJUeXBlLCBVc2VyVGFnc1R5cGUgfSBmcm9tICdjb3Zlci90YWxrbi5jb3Zlcic7XG5cbmV4cG9ydCB0eXBlIEZpeFZhbHVlc1R5cGUgPSB7XG4gIHNleGVzOiBzdHJpbmdbXTtcbiAgbGFuZ3VhZ2VzOiBzdHJpbmdbXTtcbiAgYmlydGhkYXk6IG51bWJlcjtcbiAgaW5kdXN0b3J5UGFyZW50SWQ6IHN0cmluZztcbiAgaW5kdXN0b3J5SWQ6IHN0cmluZztcbiAgam9iUGFyZW50SWQ6IHN0cmluZztcbiAgam9iSWQ6IHN0cmluZztcbiAgeWVhcjogbnVtYmVyO1xufTtcblxuZXhwb3J0IGNvbnN0IGZpeFZhbHVlc0luaXQ6IEZpeFZhbHVlc1R5cGUgPSB7XG4gIHNleGVzOiBbXSxcbiAgbGFuZ3VhZ2VzOiBbXSxcbiAgYmlydGhkYXk6IGNvbmYuZGVmYXVsdEJpcnRoZGF5VW5peHRpbWUsXG4gIGluZHVzdG9yeVBhcmVudElkOiAnJyxcbiAgaW5kdXN0b3J5SWQ6ICcnLFxuICBqb2JQYXJlbnRJZDogJycsXG4gIGpvYklkOiAnJyxcbiAgeWVhcjogMCxcbn07XG5cbnR5cGUgUHJvcHMgPSB7XG4gIHNob3c6IGJvb2xlYW47XG4gIHVzZXI6IFVzZXJUeXBlO1xuICB1c2VyVGFnczogVXNlclRhZ3NUeXBlO1xuICB1c2VyTW9kYWxPcHRpb25zOiBVc2VyTW9kYWxPcHRpb25UeXBlO1xuICBvbkNsaWNrUG9zaXRpdmU6ICh1c2VyTW9kYWxPcHRpb25zOiBVc2VyTW9kYWxPcHRpb25UeXBlLCBmaXhWYWx1ZXM6IEZpeFZhbHVlc1R5cGUpID0+IHZvaWQ7XG4gIG9uQ2FuY2VsOiAoKSA9PiB2b2lkO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBGdW5jdGlvbkNvbXBvbmVudDxQcm9wcz4gPSAoeyBzaG93LCB1c2VyLCB1c2VyTW9kYWxPcHRpb25zLCBvbkNsaWNrUG9zaXRpdmUsIG9uQ2FuY2VsIH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IFtkaWRNb3VudCwgc2V0RGlkTW91bnRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbZGlzYWJsZUJ1dHRvbk9rLCBzZXREaXNhYmxlQnV0dG9uT2tdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbaW5pdFZhbHVlcywgc2V0SW5pdFZhbHVlc10gPSB1c2VTdGF0ZTxGaXhWYWx1ZXNUeXBlPihmaXhWYWx1ZXNJbml0KTtcbiAgY29uc3QgW2ZpeFZhbHVlcywgc2V0Rml4VmFsdWVzXSA9IHVzZVN0YXRlPEZpeFZhbHVlc1R5cGU+KGZpeFZhbHVlc0luaXQpO1xuICBjb25zdCBpc0VkaXRhYmxlID0gdXNlck1vZGFsT3B0aW9ucy5pc0VkaXRhYmxlO1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlQmlydGhkYXkgPSAoYmlydGhkYXkpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIGJpcnRoZGF5IH0pO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlTGFuZ3VhZ2VzID0gKGxhbmd1YWdlcykgPT4ge1xuICAgIHNldEZpeFZhbHVlcyh7IC4uLmZpeFZhbHVlcywgbGFuZ3VhZ2VzIH0pO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlU2V4ZXMgPSAoc2V4ZXMpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIHNleGVzIH0pO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlSW5kdXN0b3J5ID0gKGluZHVzdG9yeVBhcmVudElkLCBpbmR1c3RvcnlJZCkgPT4ge1xuICAgIHNldEZpeFZhbHVlcyh7IC4uLmZpeFZhbHVlcywgaW5kdXN0b3J5UGFyZW50SWQsIGluZHVzdG9yeUlkIH0pO1xuICB9O1xuICBjb25zdCBoYW5kbGVPbkNoYW5nZUpvYiA9IChqb2JQYXJlbnRJZCwgam9iSWQpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIGpvYlBhcmVudElkLCBqb2JJZCB9KTtcbiAgfTtcbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VZZWFyID0gKHllYXIpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5maXhWYWx1ZXMsIHllYXIgfSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DbG9zZSA9ICgpID0+IHtcbiAgICBzZXRGaXhWYWx1ZXMoeyAuLi5pbml0VmFsdWVzIH0pO1xuICAgIG9uQ2FuY2VsKCk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoc2hvdykge1xuICAgICAgaWYgKGRpZE1vdW50KSB7XG4gICAgICAgIHNldERpc2FibGVCdXR0b25PayhnZXRJc0Rpc2FibGVkKGZpeFZhbHVlcykpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgc2V0RGlkTW91bnQodHJ1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9LCBbc2hvdywgZml4VmFsdWVzXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCB2YWx1ZXMgPSB7XG4gICAgICAuLi5maXhWYWx1ZXMsXG4gICAgICBsYW5ndWFnZXM6IHVzZXJNb2RhbE9wdGlvbnMubGFuZ3VhZ2VzLFxuICAgICAgc2V4ZXM6IHVzZXJNb2RhbE9wdGlvbnMuc2V4ZXMsXG4gICAgICBiaXJ0aGRheTogdXNlck1vZGFsT3B0aW9ucy5iaXJ0aGRheSxcbiAgICAgIGluZHVzdG9yeVBhcmVudElkOiB1c2VyTW9kYWxPcHRpb25zLmluZHVzdG9yeVBhcmVudElkLFxuICAgICAgaW5kdXN0b3J5SWQ6IHVzZXJNb2RhbE9wdGlvbnMuaW5kdXN0b3J5SWQsXG4gICAgICBqb2JQYXJlbnRJZDogdXNlck1vZGFsT3B0aW9ucy5qb2JQYXJlbnRJZCxcbiAgICAgIGpvYklkOiB1c2VyTW9kYWxPcHRpb25zLmpvYklkLFxuICAgICAgeWVhcjogdXNlck1vZGFsT3B0aW9ucy55ZWFyLFxuICAgIH07XG4gICAgc2V0Rml4VmFsdWVzKHZhbHVlcyk7XG4gICAgc2V0SW5pdFZhbHVlcyh2YWx1ZXMpO1xuICB9LCBbdXNlck1vZGFsT3B0aW9uc10pO1xuXG4gIHJldHVybiAoXG4gICAgPE1vZGFsLlN0cnVjdHVyZVxuICAgICAgc2hvdz17c2hvd31cbiAgICAgIGNsb3NlTW9kYWw9e2hhbmRsZU9uQ2xvc2V9XG4gICAgICBmbG93PVwiY29sdW1uIG5vd3JhcFwiXG4gICAgICBoZWFkZXI9e1xuICAgICAgICA8SC5GaXZlPlxuICAgICAgICAgIHt1c2VyTW9kYWxPcHRpb25zLnRhZ1BhcmVudFR5cGV9IC0ge3VzZXJNb2RhbE9wdGlvbnMudGFnVHlwZX1cbiAgICAgICAgICB7aXNFZGl0YWJsZSAmJiAnKEVkaXQpJ31cbiAgICAgICAgPC9ILkZpdmU+XG4gICAgICB9XG4gICAgICBjb250ZW50PXtcbiAgICAgICAgPD5cbiAgICAgICAgICA8UHJvZmlsZXNcbiAgICAgICAgICAgIHR5cGU9e2Ake3VzZXJNb2RhbE9wdGlvbnMudGFnUGFyZW50VHlwZX1fJHt1c2VyTW9kYWxPcHRpb25zLnRhZ1R5cGV9YH1cbiAgICAgICAgICAgIHVzZXJNb2RhbE9wdGlvbnM9e1xuICAgICAgICAgICAgICB1c2VyTW9kYWxPcHRpb25zLnRhZ1BhcmVudFR5cGUgPT09IHRhZ1BhcmVudFNlbGYgPyB7IC4uLnVzZXJNb2RhbE9wdGlvbnMsIGlzRWRpdGFibGU6IGZhbHNlIH0gOiB1c2VyTW9kYWxPcHRpb25zXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBoYW5kbGVPbkNoYW5nZUxhbmd1YWdlcz17aGFuZGxlT25DaGFuZ2VMYW5ndWFnZXN9XG4gICAgICAgICAgICBoYW5kbGVPbkNoYW5nZVNleGVzPXtoYW5kbGVPbkNoYW5nZVNleGVzfVxuICAgICAgICAgICAgaGFuZGxlT25DaGFuZ2VCaXJ0aGRheT17aGFuZGxlT25DaGFuZ2VCaXJ0aGRheX1cbiAgICAgICAgICAgIHVuZGVybGluZVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPFNlbGVjdEluZHVzdG9yeVxuICAgICAgICAgICAgdHlwZT17YCR7dXNlck1vZGFsT3B0aW9ucy50YWdQYXJlbnRUeXBlfV8ke3VzZXJNb2RhbE9wdGlvbnMudGFnVHlwZX1gfVxuICAgICAgICAgICAgaXNFZGl0YWJsZT17aXNFZGl0YWJsZX1cbiAgICAgICAgICAgIGluZHVzdG9yeVBhcmVudElkPXtmaXhWYWx1ZXMuaW5kdXN0b3J5UGFyZW50SWR9XG4gICAgICAgICAgICBpbmR1c3RvcnlJZD17Zml4VmFsdWVzLmluZHVzdG9yeUlkfVxuICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZU9uQ2hhbmdlSW5kdXN0b3J5fVxuICAgICAgICAgIC8+XG4gICAgICAgICAgPFNlbGVjdEpvYlxuICAgICAgICAgICAgdHlwZT17YCR7dXNlck1vZGFsT3B0aW9ucy50YWdQYXJlbnRUeXBlfV8ke3VzZXJNb2RhbE9wdGlvbnMudGFnVHlwZX1gfVxuICAgICAgICAgICAgaXNFZGl0YWJsZT17aXNFZGl0YWJsZX1cbiAgICAgICAgICAgIGpvYlBhcmVudElkPXtmaXhWYWx1ZXMuam9iUGFyZW50SWR9XG4gICAgICAgICAgICBqb2JJZD17Zml4VmFsdWVzLmpvYklkfVxuICAgICAgICAgICAgeWVhcj17Zml4VmFsdWVzLnllYXJ9XG4gICAgICAgICAgICBvbkNoYW5nZUpvYj17aGFuZGxlT25DaGFuZ2VKb2J9XG4gICAgICAgICAgICBvbkNoYW5nZVllYXI9e2hhbmRsZU9uQ2hhbmdlWWVhcn1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxiciAvPlxuICAgICAgICAgIDxUYWdJZD5JRDoge3VzZXJNb2RhbE9wdGlvbnMuX2lkICYmIHVzZXJNb2RhbE9wdGlvbnMuX2lkICE9PSAnJyA/IHVzZXJNb2RhbE9wdGlvbnMuX2lkIDogJy0nfTwvVGFnSWQ+XG4gICAgICAgIDwvPlxuICAgICAgfVxuICAgICAgZm9vdGVyPXtcbiAgICAgICAgPE1vZGFsRm9vdGVyXG4gICAgICAgICAgdXNlck1vZGFsT3B0aW9ucz17dXNlck1vZGFsT3B0aW9uc31cbiAgICAgICAgICBwb3NpdGl2ZURpc2FiZWxkPXtkaXNhYmxlQnV0dG9uT2t9XG4gICAgICAgICAgb25DbGlja1Bvc2l0aXZlPXsoKSA9PiBvbkNsaWNrUG9zaXRpdmUodXNlck1vZGFsT3B0aW9ucywgZml4VmFsdWVzKX1cbiAgICAgICAgICBoYW5kbGVPbkNsb3NlPXtoYW5kbGVPbkNsb3NlfVxuICAgICAgICAvPlxuICAgICAgfVxuICAgICAgdXBwZXJQYWRkaW5nXG4gICAgICBzaWRlUGFkZGluZ1xuICAgICAgYm90dG9tUGFkZGluZ1xuICAgIC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgRnVuY3Rpb25Db21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBIIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvSCc7XG5pbXBvcnQgeyBNb2RhbEZvb3RlciwgVGFnSWQgfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL2NvbW1vbic7XG5pbXBvcnQgeyBVc2VyTW9kYWxPcHRpb25UeXBlIH0gZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9pbmRleCc7XG5pbXBvcnQgU2VsZWN0U3RvcnkgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9tb2RhbC9jaGlsZHJlbi9TZWxlY3RTdG9yeSc7XG5pbXBvcnQgTW9kYWwgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvTW9kYWwnO1xuaW1wb3J0IHsgVXNlclR5cGUsIFVzZXJUYWdzVHlwZSB9IGZyb20gJ2NvdmVyL3RhbGtuLmNvdmVyJztcblxuZXhwb3J0IHR5cGUgRml4VmFsdWVzVHlwZSA9IHtcbiAgc3RvcnlJZDogc3RyaW5nO1xufTtcblxuZXhwb3J0IGNvbnN0IGZpeFZhbHVlc0luaXQ6IEZpeFZhbHVlc1R5cGUgPSB7XG4gIHN0b3J5SWQ6ICcnLFxufTtcblxudHlwZSBQcm9wcyA9IHtcbiAgc2hvdzogYm9vbGVhbjtcbiAgdXNlcjogVXNlclR5cGU7XG4gIHVzZXJUYWdzOiBVc2VyVGFnc1R5cGU7XG4gIHVzZXJNb2RhbE9wdGlvbnM6IFVzZXJNb2RhbE9wdGlvblR5cGU7XG4gIG9uQ2xpY2tQb3NpdGl2ZTogKHVzZXJNb2RhbE9wdGlvbnM6IFVzZXJNb2RhbE9wdGlvblR5cGUsIGZpeFZhbHVlczogRml4VmFsdWVzVHlwZSkgPT4gdm9pZDtcbiAgb25DYW5jZWw6ICgpID0+IHZvaWQ7XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IEZ1bmN0aW9uQ29tcG9uZW50PFByb3BzPiA9ICh7IHNob3csIHVzZXJUYWdzLCB1c2VyTW9kYWxPcHRpb25zLCBvbkNsaWNrUG9zaXRpdmUsIG9uQ2FuY2VsIH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IFtkaWRNb3VudCwgc2V0RGlkTW91bnRdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbZGlzYWJsZUJ1dHRvbk9rLCBzZXREaXNhYmxlQnV0dG9uT2tdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbaW5pdFZhbHVlcywgc2V0SW5pdFZhbHVlc10gPSB1c2VTdGF0ZTxGaXhWYWx1ZXNUeXBlPihmaXhWYWx1ZXNJbml0KTtcbiAgY29uc3QgW2ZpeFZhbHVlcywgc2V0Rml4VmFsdWVzXSA9IHVzZVN0YXRlPEZpeFZhbHVlc1R5cGU+KGZpeFZhbHVlc0luaXQpO1xuICBjb25zdCBpc0VkaXRhYmxlID0gdXNlck1vZGFsT3B0aW9ucy5pc0VkaXRhYmxlO1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlU3RvcnkgPSAoc3RvcnlJZCkgPT4ge1xuICAgIHNldEZpeFZhbHVlcyh7IC4uLmZpeFZhbHVlcywgc3RvcnlJZCB9KTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNsb3NlID0gKCkgPT4ge1xuICAgIHNldEZpeFZhbHVlcyh7IC4uLmluaXRWYWx1ZXMgfSk7XG4gICAgb25DYW5jZWwoKTtcbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmIChzaG93KSB7XG4gICAgICBpZiAoZGlkTW91bnQpIHtcbiAgICAgICAgc2V0RGlzYWJsZUJ1dHRvbk9rKEJvb2xlYW4oT2JqZWN0LmtleXMoZml4VmFsdWVzKS5maW5kKChrZXkpID0+IGZpeFZhbHVlc1trZXldID09PSAnJykpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNldERpZE1vdW50KHRydWUpO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW3Nob3csIGZpeFZhbHVlc10pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgdmFsdWVzID0ge1xuICAgICAgLi4uZml4VmFsdWVzLFxuICAgICAgc3RvcnlJZDogdXNlck1vZGFsT3B0aW9ucy5zdG9yeUlkLFxuICAgIH07XG4gICAgc2V0Rml4VmFsdWVzKHZhbHVlcyk7XG4gICAgc2V0SW5pdFZhbHVlcyh2YWx1ZXMpO1xuICB9LCBbdXNlck1vZGFsT3B0aW9uc10pO1xuXG4gIHJldHVybiAoXG4gICAgPE1vZGFsLlN0cnVjdHVyZVxuICAgICAgc2hvdz17c2hvd31cbiAgICAgIGNsb3NlTW9kYWw9e2hhbmRsZU9uQ2xvc2V9XG4gICAgICBmbG93PVwiY29sdW1uIG5vd3JhcFwiXG4gICAgICBoZWFkZXI9ezxILkZpdmU+e3VzZXJNb2RhbE9wdGlvbnMudGFnUGFyZW50VHlwZX08L0guRml2ZT59XG4gICAgICBjb250ZW50PXtcbiAgICAgICAgPD5cbiAgICAgICAgICA8U2VsZWN0U3RvcnlcbiAgICAgICAgICAgIGlzRWRpdGFibGU9e2lzRWRpdGFibGV9XG4gICAgICAgICAgICBjbGlja2VkU3RvcnlJZD17dXNlck1vZGFsT3B0aW9ucy5zdG9yeUlkfVxuICAgICAgICAgICAgc2VsZWN0ZWQ9e3VzZXJUYWdzID8gdXNlclRhZ3Muc3Rvcnkuc3RvcnkubWFwKChvYmopID0+IG9iai5zdG9yeUlkKSA6IFtdfVxuICAgICAgICAgICAgc3RvcnlJZD17Zml4VmFsdWVzLnN0b3J5SWR9XG4gICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlT25DaGFuZ2VTdG9yeX1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxiciAvPlxuICAgICAgICAgIDxUYWdJZD5JRDoge3VzZXJNb2RhbE9wdGlvbnMuX2lkICYmIHVzZXJNb2RhbE9wdGlvbnMuX2lkICE9PSAnJyA/IHVzZXJNb2RhbE9wdGlvbnMuX2lkIDogJy0nfTwvVGFnSWQ+XG4gICAgICAgIDwvPlxuICAgICAgfVxuICAgICAgZm9vdGVyPXtcbiAgICAgICAgPE1vZGFsRm9vdGVyXG4gICAgICAgICAgdXNlck1vZGFsT3B0aW9ucz17dXNlck1vZGFsT3B0aW9uc31cbiAgICAgICAgICBwb3NpdGl2ZURpc2FiZWxkPXtkaXNhYmxlQnV0dG9uT2t9XG4gICAgICAgICAgb25DbGlja1Bvc2l0aXZlPXsoKSA9PiBvbkNsaWNrUG9zaXRpdmUodXNlck1vZGFsT3B0aW9ucywgZml4VmFsdWVzKX1cbiAgICAgICAgICBoYW5kbGVPbkNsb3NlPXtoYW5kbGVPbkNsb3NlfVxuICAgICAgICAvPlxuICAgICAgfVxuICAgICAgdXBwZXJQYWRkaW5nXG4gICAgICBzaWRlUGFkZGluZ1xuICAgICAgYm90dG9tUGFkZGluZ1xuICAgIC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgdXRpbCBmcm9tICdjb21tb24vdXRpbCc7XG5cbmltcG9ydCBGbGV4IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvRmxleCc7XG5pbXBvcnQgTGFiZWwgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9MYWJlbCc7XG5pbXBvcnQgUCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL1AnO1xuaW1wb3J0IElucHV0IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvaW5wdXQnO1xuaW1wb3J0IHsgTm9TZXRDb21wb25lbnMgfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL2NvbW1vbic7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIHR5cGU6IHN0cmluZztcbiAgaXNFZGl0YWJsZTogYm9vbGVhbjtcbiAgYmlydGhkYXk6IG51bWJlcjtcbiAgb25DaGFuZ2U6IChiaXJ0aGRheTogc3RyaW5nKSA9PiB2b2lkO1xufTtcblxudHlwZSBBZ2VQcm9wc1R5cGUgPSB7XG4gIHZhbHVlOiBudW1iZXIgfCAnLSc7XG59O1xuXG5jb25zdCBBZ2U6IFJlYWN0LkZDPEFnZVByb3BzVHlwZT4gPSAoeyB2YWx1ZSB9OiBBZ2VQcm9wc1R5cGUpID0+IHtcbiAgcmV0dXJuIDxBZ2VQYXJhbXMgY2xhc3NOYW1lPVwiQWdlUGFyYW1cIj5BR0U6IHt2YWx1ZX08L0FnZVBhcmFtcz47XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7IHR5cGUsIGlzRWRpdGFibGUsIGJpcnRoZGF5OiBfYmlydGhkYXksIG9uQ2hhbmdlIH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IFtiaXJ0aGRheSwgc2V0QmlydGhkYXldID0gdXNlU3RhdGUoX2JpcnRoZGF5KTtcbiAgY29uc3QgW2FnZSwgc2V0QWdlXSA9IHVzZVN0YXRlKHV0aWwuZ2V0QWdlQnlCaXJ0aGRheShiaXJ0aGRheSkpO1xuICBjb25zdCBoYW5kbGVPbkNoYW5nZSA9ICh2YWx1ZSkgPT4ge1xuICAgIHNldEJpcnRoZGF5KHZhbHVlKTtcbiAgICBzZXRBZ2UodXRpbC5nZXRBZ2VCeUJpcnRoZGF5KHZhbHVlKSk7XG4gICAgb25DaGFuZ2UodmFsdWUpO1xuICB9O1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldEJpcnRoZGF5KF9iaXJ0aGRheSk7XG4gICAgc2V0QWdlKHV0aWwuZ2V0QWdlQnlCaXJ0aGRheShfYmlydGhkYXkpKTtcbiAgfSwgW19iaXJ0aGRheV0pO1xuXG4gIGlmIChpc0VkaXRhYmxlKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxGbGV4IGZsb3c9XCJjb2x1bW4gbm93cmFwXCI+XG4gICAgICAgIDxMYWJlbCBib3R0b21NYXJnaW4+QmlydGhkYXk8L0xhYmVsPlxuICAgICAgICA8RmxleCBmbG93PVwicm93IHdyYXBcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCI+XG4gICAgICAgICAgPElucHV0LkRhdGUgbmFtZT17dHlwZX0gb25DaGFuZ2U9e2hhbmRsZU9uQ2hhbmdlfSB2YWx1ZT17YmlydGhkYXl9IGRpc2FibGVkPXshaXNFZGl0YWJsZX0gLz5cbiAgICAgICAgICB7YmlydGhkYXkgIT09IDAgJiYgPEFnZSB2YWx1ZT17YWdlfSAvPn1cbiAgICAgICAgPC9GbGV4PlxuICAgICAgPC9GbGV4PlxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgaWYgKGJpcnRoZGF5ID09PSAwKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8RmxleCBmbG93PVwiY29sdW1uIG5vd3JhcFwiPlxuICAgICAgICAgIDxMYWJlbCBib3R0b21NYXJnaW4+QmlydGhkYXk8L0xhYmVsPlxuICAgICAgICAgIDxOb1NldENvbXBvbmVucyAvPlxuICAgICAgICA8L0ZsZXg+XG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8RmxleCBmbG93PVwiY29sdW1uIG5vd3JhcFwiPlxuICAgICAgICAgIDxMYWJlbCBib3R0b21NYXJnaW4+QmlydGhkYXk8L0xhYmVsPlxuICAgICAgICAgIDxGbGV4IGZsb3c9XCJyb3cgd3JhcFwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIj5cbiAgICAgICAgICAgIDxJbnB1dC5EYXRlIG5hbWU9e3R5cGV9IG9uQ2hhbmdlPXtoYW5kbGVPbkNoYW5nZX0gdmFsdWU9e2JpcnRoZGF5fSBkaXNhYmxlZD17IWlzRWRpdGFibGV9IC8+XG4gICAgICAgICAgICB7YmlydGhkYXkgIT09IDAgJiYgPEFnZSB2YWx1ZT17YWdlfSAvPn1cbiAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgIDwvRmxleD5cbiAgICAgICk7XG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbmNvbnN0IEFnZVBhcmFtcyA9IHN0eWxlZChQKWBcbiAgdGV4dC1pbmRlbnQ6ICR7c3R5bGVzLmRvdWJsZVNpemV9cHg7XG5gO1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCBGbGV4IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvRmxleCc7XG5pbXBvcnQgTGFiZWwgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9MYWJlbCc7XG5pbXBvcnQgU2VsZWN0IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvc2VsZWN0JztcblxudHlwZSBQcm9wcyA9IHtcbiAgdHlwZTogc3RyaW5nO1xuICBpc0VkaXRhYmxlOiBib29sZWFuO1xuICBpbmR1c3RvcnlQYXJlbnRJZDogYW55O1xuICBpbmR1c3RvcnlJZDogYW55O1xuICBvbkNoYW5nZTogKGluZHVzdG9yeVBhcmVudElkOiBzdHJpbmcsIGluZHVzdG9yeUlkOiBzdHJpbmcpID0+IHZvaWQ7XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7XG4gIHR5cGUsXG4gIGlzRWRpdGFibGUsXG4gIGluZHVzdG9yeVBhcmVudElkOiBfaW5kdXN0b3J5UGFyZW50SWQsXG4gIGluZHVzdG9yeUlkOiBfaW5kdXN0b3J5SWQsXG4gIG9uQ2hhbmdlLFxufTogUHJvcHMpID0+IHtcbiAgY29uc3QgW2luZHVzdG9yeVBhcmVudElkLCBzZXRJbmR1c3RvcnlQYXJlbnRJZF0gPSB1c2VTdGF0ZShfaW5kdXN0b3J5UGFyZW50SWQpO1xuICBjb25zdCBbaW5kdXN0b3J5SWQsIHNldEluZHVzdG9yeUlkXSA9IHVzZVN0YXRlKF9pbmR1c3RvcnlJZCk7XG4gIGNvbnN0IFtpbmR1c3RvcnlTdGF0aWNEYXRhLCBzZXRJbmR1c3RvcnlTdGF0aWNEYXRhXSA9IHVzZVN0YXRlKFtdKTtcbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VJbmR1c3RvcnlQYXJlbnQgPSAodmFsdWUpID0+IHtcbiAgICBzZXRJbmR1c3RvcnlQYXJlbnRJZCh2YWx1ZSk7XG4gICAgc2V0SW5kdXN0b3J5SWQoJycpO1xuICAgIG9uQ2hhbmdlKHZhbHVlLCAnJyk7XG4gIH07XG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlSW5kdXN0b3J5ID0gKHZhbHVlKSA9PiB7XG4gICAgc2V0SW5kdXN0b3J5SWQodmFsdWUpO1xuICAgIG9uQ2hhbmdlKGluZHVzdG9yeVBhcmVudElkLCB2YWx1ZSk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRJbmR1c3RvcnlQYXJlbnRJZChfaW5kdXN0b3J5UGFyZW50SWQpO1xuICB9LCBbX2luZHVzdG9yeVBhcmVudElkXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRJbmR1c3RvcnlJZChfaW5kdXN0b3J5SWQpO1xuICB9LCBbX2luZHVzdG9yeUlkXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBjb25zdCB1cGRhdGVJbmR1c3RvcnlTdGF0aWNEYXRhID0gd2luZG93LnRhbGtuU3RhdGljVGFncy5pbmR1c3RvcnkuZmlsdGVyKChpbmQpID0+IGluZC5wYXJlbnRJZCA9PT0gaW5kdXN0b3J5UGFyZW50SWQpO1xuICAgIHNldEluZHVzdG9yeVN0YXRpY0RhdGEodXBkYXRlSW5kdXN0b3J5U3RhdGljRGF0YSk7XG4gIH0sIFtpbmR1c3RvcnlQYXJlbnRJZF0pO1xuXG4gIHJldHVybiAoXG4gICAgPEZsZXggZmxvdz1cImNvbHVtbiBub3dyYXBcIj5cbiAgICAgIDxMYWJlbCBib3R0b21NYXJnaW4+SW5kdXN0b3J5PC9MYWJlbD5cbiAgICAgIDxGbGV4IGZsb3c9XCJyb3cgd3JhcFwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIj5cbiAgICAgICAgPFNlbGVjdC5TaW5nbGVcbiAgICAgICAgICBuYW1lPXtgJHt0eXBlfV9pbmR1c3RvcnlQYXJlbnR9YH1cbiAgICAgICAgICBkaXNhYmxlZD17IWlzRWRpdGFibGV9XG4gICAgICAgICAgbGFiZWw9eydJbmR1c3RvcnknfVxuICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVPbkNoYW5nZUluZHVzdG9yeVBhcmVudH1cbiAgICAgICAgICB2YWx1ZT17aW5kdXN0b3J5UGFyZW50SWR9XG4gICAgICAgICAgbm9TZWxlY3RPcHRpb24+XG4gICAgICAgICAge3dpbmRvdy50YWxrblN0YXRpY1RhZ3MuaW5kdXN0b3J5UGFyZW50Lm1hcCgodGFnKSA9PiAoXG4gICAgICAgICAgICA8U2VsZWN0Lk9wdGlvbiBrZXk9e2BJbmR1c3RvcnlQYXJlbnRJZF8ke3RhZy51bmlxdWVJZH1gfSB2YWx1ZT17dGFnLnVuaXF1ZUlkfT5cbiAgICAgICAgICAgICAge3RhZy5qYX1cbiAgICAgICAgICAgIDwvU2VsZWN0Lk9wdGlvbj5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9TZWxlY3QuU2luZ2xlPlxuXG4gICAgICAgIDxTZWxlY3QuU2luZ2xlIG5hbWU9eydpbmR1c3RvcnlbXSd9IGRpc2FibGVkPXshaXNFZGl0YWJsZX0gb25DaGFuZ2U9e2hhbmRsZU9uQ2hhbmdlSW5kdXN0b3J5fSB2YWx1ZT17aW5kdXN0b3J5SWR9IG5vU2VsZWN0T3B0aW9uPlxuICAgICAgICAgIHtpbmR1c3RvcnlTdGF0aWNEYXRhLm1hcCgodGFnKSA9PiAoXG4gICAgICAgICAgICA8U2VsZWN0Lk9wdGlvbiBrZXk9e2BJbmR1c3RvcnlJZF8ke3RhZy51bmlxdWVJZH1gfSB2YWx1ZT17dGFnLnVuaXF1ZUlkfT5cbiAgICAgICAgICAgICAge3RhZy5qYX1cbiAgICAgICAgICAgIDwvU2VsZWN0Lk9wdGlvbj5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9TZWxlY3QuU2luZ2xlPlxuICAgICAgPC9GbGV4PlxuICAgIDwvRmxleD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgRmxleCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0ZsZXgnO1xuaW1wb3J0IExhYmVsIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvTGFiZWwnO1xuaW1wb3J0IFNlbGVjdCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL3NlbGVjdCc7XG5pbXBvcnQgU2VsZWN0WWVhciBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL21vZGFsL2NoaWxkcmVuL1NlbGVjdFllYXInO1xuXG50eXBlIFByb3BzID0ge1xuICB0eXBlOiBzdHJpbmc7XG4gIGlzRWRpdGFibGU6IGJvb2xlYW47XG4gIGpvYlBhcmVudElkOiBzdHJpbmc7XG4gIGpvYklkOiBzdHJpbmc7XG4gIHllYXI6IG51bWJlcjtcbiAgb25DaGFuZ2VKb2I6IChqb2JQYXJlbnRJZDogc3RyaW5nLCBqb2JJZDogc3RyaW5nKSA9PiB2b2lkO1xuICBvbkNoYW5nZVllYXI6ICh5ZWFyOiBudW1iZXIpID0+IHZvaWQ7XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7XG4gIHR5cGUsXG4gIGlzRWRpdGFibGUsXG4gIGpvYlBhcmVudElkOiBfam9iUGFyZW50SWQsXG4gIGpvYklkOiBfam9iSWQsXG4gIHllYXI6IF95ZWFyLFxuICBvbkNoYW5nZUpvYixcbiAgb25DaGFuZ2VZZWFyLFxufTogUHJvcHMpID0+IHtcbiAgY29uc3QgW2pvYlBhcmVudElkLCBzZXRKb2JQYXJlbnRJZF0gPSB1c2VTdGF0ZShfam9iUGFyZW50SWQpO1xuICBjb25zdCBbam9iSWQsIHNldEpvYklkXSA9IHVzZVN0YXRlKF9qb2JJZCk7XG4gIGNvbnN0IFtqb2JTdGF0aWNEYXRhLCBzZXRKb2JTdGF0aWNEYXRhXSA9IHVzZVN0YXRlKFtdKTtcbiAgY29uc3QgW3llYXIsIHNldFllYXJdID0gdXNlU3RhdGUoX3llYXIpO1xuICBjb25zdCBoYW5kbGVPbkNoYW5nZUpvYlBhcmVudCA9ICh2YWx1ZSkgPT4ge1xuICAgIHNldEpvYlBhcmVudElkKHZhbHVlKTtcbiAgICBzZXRKb2JJZCgnJyk7XG4gICAgb25DaGFuZ2VKb2IodmFsdWUsICcnKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZUpvYiA9ICh2YWx1ZSkgPT4ge1xuICAgIHNldEpvYklkKHZhbHVlKTtcbiAgICBvbkNoYW5nZUpvYihqb2JQYXJlbnRJZCwgdmFsdWUpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlWWVhciA9ICh2YWx1ZSkgPT4ge1xuICAgIHNldFllYXIoeWVhcik7XG4gICAgb25DaGFuZ2VZZWFyKHZhbHVlKTtcbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldEpvYlBhcmVudElkKF9qb2JQYXJlbnRJZCk7XG4gIH0sIFtfam9iUGFyZW50SWRdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldEpvYklkKF9qb2JJZCk7XG4gIH0sIFtfam9iSWRdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldFllYXIoX3llYXIpO1xuICB9LCBbX3llYXJdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IHVwZGF0ZUpvYlN0YXRpY0RhdGEgPSB3aW5kb3cudGFsa25TdGF0aWNUYWdzLmpvYnMuZmlsdGVyKChpbmQpID0+IGluZC5wYXJlbnRJZCA9PT0gam9iUGFyZW50SWQpO1xuICAgIHNldEpvYlN0YXRpY0RhdGEodXBkYXRlSm9iU3RhdGljRGF0YSk7XG4gIH0sIFtqb2JQYXJlbnRJZF0pO1xuXG4gIHJldHVybiAoXG4gICAgPEZsZXggZmxvdz1cImNvbHVtbiBub3dyYXBcIj5cbiAgICAgIDxMYWJlbCBib3R0b21NYXJnaW4+Sm9iPC9MYWJlbD5cbiAgICAgIDxGbGV4IGZsb3c9XCJyb3cgd3JhcFwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIj5cbiAgICAgICAgPFNlbGVjdC5TaW5nbGVcbiAgICAgICAgICBuYW1lPXtgJHt0eXBlfV9qb2JQYXJlbnR9YH1cbiAgICAgICAgICBkaXNhYmxlZD17IWlzRWRpdGFibGV9XG4gICAgICAgICAgbGFiZWw9eydKb2InfVxuICAgICAgICAgIG9uQ2hhbmdlPXtoYW5kbGVPbkNoYW5nZUpvYlBhcmVudH1cbiAgICAgICAgICB2YWx1ZT17am9iUGFyZW50SWR9XG4gICAgICAgICAgbm9TZWxlY3RPcHRpb24+XG4gICAgICAgICAge3dpbmRvdy50YWxrblN0YXRpY1RhZ3Muam9iUGFyZW50cy5tYXAoKHRhZywgaW5kZXgpID0+IChcbiAgICAgICAgICAgIDxTZWxlY3QuT3B0aW9uIGtleT17YEpvYlBhcmVudHNfJHt0eXBlfV8ke3RhZy51bmlxdWVJZH1fJHtpbmRleH1gfSB2YWx1ZT17dGFnLnVuaXF1ZUlkfT5cbiAgICAgICAgICAgICAge3RhZy5qYX1cbiAgICAgICAgICAgIDwvU2VsZWN0Lk9wdGlvbj5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9TZWxlY3QuU2luZ2xlPlxuXG4gICAgICAgIDxTZWxlY3QuU2luZ2xlIG5hbWU9e2Bqb2JbXWB9IGRpc2FibGVkPXshaXNFZGl0YWJsZX0gb25DaGFuZ2U9e2hhbmRsZU9uQ2hhbmdlSm9ifSB2YWx1ZT17am9iSWR9IG5vU2VsZWN0T3B0aW9uPlxuICAgICAgICAgIHtqb2JTdGF0aWNEYXRhLm1hcCgodGFnLCBpbmRleCkgPT4gKFxuICAgICAgICAgICAgPFNlbGVjdC5PcHRpb24ga2V5PXtgSm9iXyR7dHlwZX1fJHt0YWcudW5pcXVlSWR9XyR7aW5kZXh9YH0gdmFsdWU9e3RhZy51bmlxdWVJZH0+XG4gICAgICAgICAgICAgIHt0YWcuamF9XG4gICAgICAgICAgICA8L1NlbGVjdC5PcHRpb24+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvU2VsZWN0LlNpbmdsZT5cblxuICAgICAgICA8U2VsZWN0WWVhciB0eXBlPXt0eXBlfSBpc0VkaXRhYmxlPXtpc0VkaXRhYmxlfSB5ZWFyPXt5ZWFyfSBvbkNoYW5nZT17aGFuZGxlT25DaGFuZ2VZZWFyfSAvPlxuICAgICAgPC9GbGV4PlxuICAgIDwvRmxleD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBCdXR0b24sIHsgYnV0dG9uVGhlbWVCcmlnaHQsIGJ1dHRvblRoZW1lRGVmYXVsdCB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvQnV0dG9uJztcbmltcG9ydCBGbGV4IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvRmxleCc7XG5pbXBvcnQgTGFiZWwgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9MYWJlbCc7XG5pbXBvcnQgeyBOb1NldENvbXBvbmVucyB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvY29tbW9uJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgdHlwZTogc3RyaW5nO1xuICBpc0VkaXRhYmxlOiBib29sZWFuO1xuICBsYW5ndWFnZXM6IHN0cmluZ1tdO1xuICBvbkNoYW5nZTogKGxhbmd1YWdlOiBzdHJpbmdbXSkgPT4gdm9pZDtcbn07XG5cbmV4cG9ydCBjb25zdCBhbGxMYW5ndWFnZSA9IHsgdW5pcXVlSWQ6ICdBbGwnLCBqYTogJ+WFqOOBpicsIGVuOiAnQWxsJyB9O1xuXG5leHBvcnQgY29uc3QgZGVmYXVsdExhbmd1YWdlcyA9IFtcbiAgeyB1bmlxdWVJZDogJzEnLCBqYTogJ+iLseiqnicsIGVuOiAnRW5nbGlzaCcgfSxcbiAgeyB1bmlxdWVJZDogJzInLCBqYTogJ+S4reWbveiqnicsIGVuOiAnR2VybWFuJyB9LFxuICB7IHVuaXF1ZUlkOiAnMycsIGphOiAn5pel5pys6KqeJywgZW46ICdKYXBhbmVhc2UnIH0sXG4gIHsgdW5pcXVlSWQ6ICc0JywgamE6ICfjgqTjgq7jg6rjgrnoqp4nLCBlbjogJ0JyaXRpc2gnIH0sXG4gIHsgdW5pcXVlSWQ6ICc1JywgamE6ICfjg5Ljg7Pjg4njgqXjg7zoqp4nLCBlbjogJ0hpbmR1JyB9LFxuXTtcblxuZXhwb3J0IGNvbnN0IGxhbmd1YWdlc0luaXQgPSBkZWZhdWx0TGFuZ3VhZ2VzLm1hcCgobGFuZ3VhZ2UpID0+IGxhbmd1YWdlLnVuaXF1ZUlkKTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoeyB0eXBlLCBpc0VkaXRhYmxlLCBsYW5ndWFnZXM6IF9sYW5ndWFnZXMsIG9uQ2hhbmdlIH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IFtpc0FjdGl2ZUFsbCwgc2V0SXNBY3RpdmVBbGxdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbbGFuZ3VhZ2VzLCBzZXRMYW5ndWFnZXNdID0gdXNlU3RhdGUoX2xhbmd1YWdlcyk7XG5cbiAgY29uc3QgZ2V0Q29udGVudCA9ICgpID0+IHtcbiAgICBpZiAoaXNFZGl0YWJsZSkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPEZsZXggY2xhc3NOYW1lPVwibGFuZ3VhZ2VzXCIgZmxvdz17J3JvdyB3cmFwJ30gYWxpZ25JdGVtcz1cImNlbnRlclwiPlxuICAgICAgICAgIDxCdXR0b25DdXN0b21cbiAgICAgICAgICAgIGtleT17YCR7dHlwZX1fJHthbGxMYW5ndWFnZS51bmlxdWVJZH1gfVxuICAgICAgICAgICAgY2xhc3NOYW1lPXtgQnV0dG9uQ3VzdG9tJHt0eXBlfV8ke2FsbExhbmd1YWdlLnVuaXF1ZUlkfWB9XG4gICAgICAgICAgICB0aGVtZT17Z2V0QnV0dG9uVGhlbWUoaXNBY3RpdmVBbGwpfVxuICAgICAgICAgICAgb25DbGljaz17aGFuZGxlT25DaGFuZ2VBbGx9PlxuICAgICAgICAgICAge2FsbExhbmd1YWdlLmphfVxuICAgICAgICAgIDwvQnV0dG9uQ3VzdG9tPlxuXG4gICAgICAgICAge2RlZmF1bHRMYW5ndWFnZXMubWFwKChsYW5ndWFnZSkgPT4gKFxuICAgICAgICAgICAgPEJ1dHRvbkN1c3RvbVxuICAgICAgICAgICAgICBrZXk9e2Ake3R5cGV9XyR7bGFuZ3VhZ2UudW5pcXVlSWR9YH1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPXtgQnV0dG9uQ3VzdG9tJHt0eXBlfV8ke2FsbExhbmd1YWdlLnVuaXF1ZUlkfWB9XG4gICAgICAgICAgICAgIHRoZW1lPXtnZXRCdXR0b25UaGVtZShsYW5ndWFnZXMuaW5jbHVkZXMobGFuZ3VhZ2UudW5pcXVlSWQpKX1cbiAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGFuZGxlT25DaGFuZ2UobGFuZ3VhZ2UudW5pcXVlSWQpfT5cbiAgICAgICAgICAgICAge2xhbmd1YWdlLmphfVxuICAgICAgICAgICAgPC9CdXR0b25DdXN0b20+XG4gICAgICAgICAgKSl9XG4gICAgICAgIDwvRmxleD5cbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChsYW5ndWFnZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiA8Tm9TZXRDb21wb25lbnMgLz47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxGbGV4IGNsYXNzTmFtZT1cImxhbmd1YWdlc1wiIGZsb3c9eydyb3cgd3JhcCd9IGFsaWduSXRlbXM9XCJjZW50ZXJcIj5cbiAgICAgICAgICAgIHtkZWZhdWx0TGFuZ3VhZ2VzLm1hcCgobGFuZ3VhZ2UpID0+IHtcbiAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICBsYW5ndWFnZXMuaW5jbHVkZXMobGFuZ3VhZ2UudW5pcXVlSWQpICYmIChcbiAgICAgICAgICAgICAgICAgIDxCdXR0b25DdXN0b21cbiAgICAgICAgICAgICAgICAgICAga2V5PXtgJHt0eXBlfV8ke2xhbmd1YWdlLnVuaXF1ZUlkfWB9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YEJ1dHRvbkN1c3RvbSR7dHlwZX1fJHthbGxMYW5ndWFnZS51bmlxdWVJZH1gfVxuICAgICAgICAgICAgICAgICAgICB0aGVtZT17Z2V0QnV0dG9uVGhlbWUoKX0+XG4gICAgICAgICAgICAgICAgICAgIHtsYW5ndWFnZS5qYX1cbiAgICAgICAgICAgICAgICAgIDwvQnV0dG9uQ3VzdG9tPlxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIH0pfVxuICAgICAgICAgIDwvRmxleD5cbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VBbGwgPSAoKSA9PiB7XG4gICAgY29uc3QgdXBkYXRlTGFuZ3VhZ2VzID0gIWlzQWN0aXZlQWxsID8gZ2V0RnVsbExhbmd1YWdlcygpIDogbmV3IEFycmF5KCk7XG4gICAgc2V0SXNBY3RpdmVBbGwoIWlzQWN0aXZlQWxsKTtcbiAgICBzZXRMYW5ndWFnZXModXBkYXRlTGFuZ3VhZ2VzKTtcbiAgICBvbkNoYW5nZSh1cGRhdGVMYW5ndWFnZXMpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlID0gKGNsaWNrZWRVbmlxdWVJZCkgPT4ge1xuICAgIGxldCB1cGRhdGVMYW5ndWFnZXMgPSBbLi4ubGFuZ3VhZ2VzXTtcbiAgICBpZiAobGFuZ3VhZ2VzLmluY2x1ZGVzKGNsaWNrZWRVbmlxdWVJZCkpIHtcbiAgICAgIHVwZGF0ZUxhbmd1YWdlcyA9IGxhbmd1YWdlcy5maWx0ZXIoKHVuaXF1ZUlkKSA9PiB1bmlxdWVJZCAhPT0gY2xpY2tlZFVuaXF1ZUlkKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdXBkYXRlTGFuZ3VhZ2VzLnB1c2goY2xpY2tlZFVuaXF1ZUlkKTtcbiAgICB9XG4gICAgc2V0SXNBY3RpdmVBbGwodXBkYXRlTGFuZ3VhZ2VzLmxlbmd0aCA9PT0gZGVmYXVsdExhbmd1YWdlcy5sZW5ndGgpO1xuICAgIHNldExhbmd1YWdlcyh1cGRhdGVMYW5ndWFnZXMpO1xuICAgIG9uQ2hhbmdlKHVwZGF0ZUxhbmd1YWdlcyk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoX2xhbmd1YWdlcykge1xuICAgICAgY29uc3QgdXBkYXRlSXNBY3RpdmVBbGwgPSBfbGFuZ3VhZ2VzLmxlbmd0aCA9PT0gZGVmYXVsdExhbmd1YWdlcy5sZW5ndGg7XG4gICAgICBjb25zdCB1cGRhdGVMYW5ndWFnZXMgPSB1cGRhdGVJc0FjdGl2ZUFsbCA/IGdldEZ1bGxMYW5ndWFnZXMoKSA6IFsuLi5fbGFuZ3VhZ2VzXTtcbiAgICAgIHNldElzQWN0aXZlQWxsKHVwZGF0ZUlzQWN0aXZlQWxsKTtcbiAgICAgIHNldExhbmd1YWdlcyh1cGRhdGVMYW5ndWFnZXMpO1xuICAgIH1cbiAgfSwgW19sYW5ndWFnZXNdKTtcblxuICBpZiAobGFuZ3VhZ2VzKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxGbGV4IGZsb3c9XCJjb2x1bW4gbm93cmFwXCI+XG4gICAgICAgIDxMYWJlbCBib3R0b21NYXJnaW4+TGFuZ3VhZ2U8L0xhYmVsPlxuICAgICAgICB7Z2V0Q29udGVudCgpfVxuICAgICAgPC9GbGV4PlxuICAgICk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgZ2V0RnVsbExhbmd1YWdlcyA9ICgpID0+IGRlZmF1bHRMYW5ndWFnZXMubWFwKChsYW5ndWFnZSkgPT4gbGFuZ3VhZ2UudW5pcXVlSWQpO1xuY29uc3QgZ2V0QnV0dG9uVGhlbWUgPSAoY29uZGl0aW9uID0gdHJ1ZSkgPT4gKGNvbmRpdGlvbiA/IGJ1dHRvblRoZW1lRGVmYXVsdCA6IGJ1dHRvblRoZW1lQnJpZ2h0KTtcblxuY29uc3QgQnV0dG9uQ3VzdG9tID0gc3R5bGVkKEJ1dHRvbilgXG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1yaWdodDogJHtzdHlsZXMuZG91YmxlTWFyZ2lufXB4O1xuICBtYXJnaW4tYm90dG9tOiAke3N0eWxlcy5kb3VibGVNYXJnaW59cHg7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuYDtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBCdXR0b24sIHsgYnV0dG9uVGhlbWVCcmlnaHQsIGJ1dHRvblRoZW1lRGVmYXVsdCB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvQnV0dG9uJztcbmltcG9ydCBGbGV4IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvRmxleCc7XG5pbXBvcnQgTGFiZWwgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9MYWJlbCc7XG5pbXBvcnQgeyBOb1NldENvbXBvbmVucyB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvY29tbW9uJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgdHlwZTogc3RyaW5nO1xuICBpc0VkaXRhYmxlOiBib29sZWFuO1xuICBzZXhlczogc3RyaW5nW107XG4gIG9uQ2hhbmdlOiAoc2V4ZXM6IHN0cmluZ1tdKSA9PiB2b2lkO1xufTtcblxuZXhwb3J0IGNvbnN0IGFsbFNleCA9IHsgdW5pcXVlSWQ6ICdBbGwnLCBqYTogJ+WFqOOBpicsIGVuOiAnQWxsJyB9O1xuXG5leHBvcnQgY29uc3QgZGVmYXVsdFNleGVzID0gW1xuICB7IHVuaXF1ZUlkOiAnMScsIGphOiAn55S3JywgZW46ICdNYW4nIH0sXG4gIHsgdW5pcXVlSWQ6ICcyJywgamE6ICflpbMnLCBlbjogJ1dvbWFuJyB9LFxuXTtcblxuZXhwb3J0IGNvbnN0IHNleGVzSW5pdCA9IFsnMScsICcyJ107XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgdHlwZSwgaXNFZGl0YWJsZSwgc2V4ZXM6IF9zZXhlcywgb25DaGFuZ2UgfTogUHJvcHMpID0+IHtcbiAgY29uc3QgW2lzQWN0aXZlQWxsLCBzZXRJc0FjdGl2ZUFsbF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzZXhlcywgc2V0U2V4ZXNdID0gdXNlU3RhdGUoX3NleGVzKTtcblxuICBjb25zdCBnZXRDb250ZW50ID0gKCkgPT4ge1xuICAgIGlmIChpc0VkaXRhYmxlKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICA8RmxleCBjbGFzc05hbWU9XCJzZXhlc1wiIGZsb3c9XCJyb3cgd3JhcFwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIj5cbiAgICAgICAgICA8QnV0dG9uQ3VzdG9tIGtleT17YCR7dHlwZX1fJHthbGxTZXgudW5pcXVlSWR9YH0gdGhlbWU9e2dldEJ1dHRvblRoZW1lKGlzQWN0aXZlQWxsKX0gb25DbGljaz17aGFuZGxlT25DaGFuZ2VBbGx9PlxuICAgICAgICAgICAge2FsbFNleC5qYX1cbiAgICAgICAgICA8L0J1dHRvbkN1c3RvbT5cbiAgICAgICAgICB7ZGVmYXVsdFNleGVzLm1hcCgoc2V4KSA9PiAoXG4gICAgICAgICAgICA8QnV0dG9uQ3VzdG9tXG4gICAgICAgICAgICAgIGtleT17YCR7dHlwZX1fJHtzZXgudW5pcXVlSWR9YH1cbiAgICAgICAgICAgICAgdGhlbWU9e2dldEJ1dHRvblRoZW1lKHNleGVzLmluY2x1ZGVzKHNleC51bmlxdWVJZCkpfVxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBoYW5kbGVPbkNoYW5nZShzZXgudW5pcXVlSWQpfT5cbiAgICAgICAgICAgICAge3NleC5qYX1cbiAgICAgICAgICAgIDwvQnV0dG9uQ3VzdG9tPlxuICAgICAgICAgICkpfVxuICAgICAgICA8L0ZsZXg+XG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoc2V4ZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiA8Tm9TZXRDb21wb25lbnMgLz47XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gKFxuICAgICAgICAgIDxGbGV4IGNsYXNzTmFtZT1cInNleGVzXCIgZmxvdz17J3JvdyBub3dyYXAnfSBhbGlnbkl0ZW1zPVwiY2VudGVyXCI+XG4gICAgICAgICAgICB7ZGVmYXVsdFNleGVzLm1hcCgoc2V4KSA9PiB7XG4gICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgc2V4ZXMuaW5jbHVkZXMoc2V4LnVuaXF1ZUlkKSAmJiAoXG4gICAgICAgICAgICAgICAgICA8QnV0dG9uQ3VzdG9tIGtleT17YCR7dHlwZX1fJHtzZXgudW5pcXVlSWR9YH0gdGhlbWU9e2dldEJ1dHRvblRoZW1lKCl9PlxuICAgICAgICAgICAgICAgICAgICB7c2V4LmphfVxuICAgICAgICAgICAgICAgICAgPC9CdXR0b25DdXN0b20+XG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSl9XG4gICAgICAgICAgPC9GbGV4PlxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZUFsbCA9ICgpID0+IHtcbiAgICBjb25zdCB1cGRhdGVTZXhlcyA9ICFpc0FjdGl2ZUFsbCA/IGdldEZ1bGxTZXhlcygpIDogbmV3IEFycmF5KCk7XG4gICAgc2V0SXNBY3RpdmVBbGwoIWlzQWN0aXZlQWxsKTtcbiAgICBzZXRTZXhlcyh1cGRhdGVTZXhlcyk7XG4gICAgb25DaGFuZ2UodXBkYXRlU2V4ZXMpO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlID0gKGNsaWNrZWRVbmlxdWVJZCkgPT4ge1xuICAgIGxldCB1cGRhdGVTZXhlcyA9IFsuLi5zZXhlc107XG4gICAgaWYgKHNleGVzLmluY2x1ZGVzKGNsaWNrZWRVbmlxdWVJZCkpIHtcbiAgICAgIHVwZGF0ZVNleGVzID0gc2V4ZXMuZmlsdGVyKCh1bmlxdWVJZCkgPT4gdW5pcXVlSWQgIT09IGNsaWNrZWRVbmlxdWVJZCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHVwZGF0ZVNleGVzLnB1c2goY2xpY2tlZFVuaXF1ZUlkKTtcbiAgICB9XG4gICAgc2V0SXNBY3RpdmVBbGwodXBkYXRlU2V4ZXMubGVuZ3RoID09PSBkZWZhdWx0U2V4ZXMubGVuZ3RoKTtcbiAgICBzZXRTZXhlcyh1cGRhdGVTZXhlcyk7XG4gICAgb25DaGFuZ2UodXBkYXRlU2V4ZXMpO1xuICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKF9zZXhlcykge1xuICAgICAgY29uc3QgdXBkYXRlSXNBY3RpdmVBbGwgPSBfc2V4ZXMubGVuZ3RoID09PSBkZWZhdWx0U2V4ZXMubGVuZ3RoO1xuICAgICAgY29uc3QgdXBkYXRlU2V4ZXMgPSB1cGRhdGVJc0FjdGl2ZUFsbCA/IGdldEZ1bGxTZXhlcygpIDogWy4uLl9zZXhlc107XG4gICAgICBzZXRJc0FjdGl2ZUFsbCh1cGRhdGVJc0FjdGl2ZUFsbCk7XG4gICAgICBzZXRTZXhlcyh1cGRhdGVTZXhlcyk7XG4gICAgfVxuICB9LCBbX3NleGVzXSk7XG5cbiAgaWYgKHNleGVzKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxGbGV4IGZsb3c9XCJjb2x1bW4gd3JhcFwiPlxuICAgICAgICA8TGFiZWwgYm90dG9tTWFyZ2luPlNleDwvTGFiZWw+XG4gICAgICAgIHtnZXRDb250ZW50KCl9XG4gICAgICA8L0ZsZXg+XG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBnZXRGdWxsU2V4ZXMgPSAoKSA9PiBkZWZhdWx0U2V4ZXMubWFwKChsYW5ndWFnZSkgPT4gbGFuZ3VhZ2UudW5pcXVlSWQpO1xuY29uc3QgZ2V0QnV0dG9uVGhlbWUgPSAoY29uZGl0aW9uID0gdHJ1ZSkgPT4gKGNvbmRpdGlvbiA/IGJ1dHRvblRoZW1lRGVmYXVsdCA6IGJ1dHRvblRoZW1lQnJpZ2h0KTtcblxuY29uc3QgQnV0dG9uQ3VzdG9tID0gc3R5bGVkKEJ1dHRvbilgXG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1yaWdodDogJHtzdHlsZXMuZG91YmxlTWFyZ2lufXB4O1xuICBtYXJnaW4tYm90dG9tOiAke3N0eWxlcy5kb3VibGVNYXJnaW59cHg7XG4gIG1hcmdpbi1sZWZ0OiAwO1xuYDtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgRmxleCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0ZsZXgnO1xuaW1wb3J0IExhYmVsIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvTGFiZWwnO1xuaW1wb3J0IFNlbGVjdCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL3NlbGVjdCc7XG5pbXBvcnQgU2VsZWN0WWVhciBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL21vZGFsL2NoaWxkcmVuL1NlbGVjdFllYXInO1xuXG50eXBlIFByb3BzID0ge1xuICB0eXBlOiBzdHJpbmc7XG4gIGlzRWRpdGFibGU6IGJvb2xlYW47XG4gIHN0YXJ0dXBTZXJpZXNJZDogc3RyaW5nO1xuICB5ZWFyOiBudW1iZXI7XG4gIG9uQ2hhbmdlU3RhcnR1cFNlcmllc0lkOiAoc3RhcnR1cFNlcmllc0lkOiBzdHJpbmcpID0+IHZvaWQ7XG4gIG9uQ2hhbmdlWWVhcjogKHN0YXJ0dXBTZXJpZXNJZDogc3RyaW5nKSA9PiB2b2lkO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoe1xuICB0eXBlLFxuICBpc0VkaXRhYmxlLFxuICBzdGFydHVwU2VyaWVzSWQ6IF9zYXJ0dXBTZXJpZXNJZCxcbiAgeWVhcjogX3llYXIsXG4gIG9uQ2hhbmdlU3RhcnR1cFNlcmllc0lkLFxuICBvbkNoYW5nZVllYXIsXG59OiBQcm9wcykgPT4ge1xuICBjb25zdCBbc3RhcnR1cFNlcmllc0lkLCBzZXRTdGFydHVwU2VyaWVzSWRdID0gdXNlU3RhdGUoX3NhcnR1cFNlcmllc0lkKTtcbiAgY29uc3QgW3llYXIsIHNldFllYXJdID0gdXNlU3RhdGUoX3llYXIpO1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlID0gKHZhbHVlKSA9PiB7XG4gICAgc2V0U3RhcnR1cFNlcmllc0lkKHZhbHVlKTtcbiAgICBvbkNoYW5nZVN0YXJ0dXBTZXJpZXNJZCh2YWx1ZSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VZZWFyID0gKHZhbHVlKSA9PiB7XG4gICAgc2V0WWVhcih2YWx1ZSk7XG4gICAgb25DaGFuZ2VZZWFyKHZhbHVlKTtcbiAgfTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldFN0YXJ0dXBTZXJpZXNJZChfc2FydHVwU2VyaWVzSWQpO1xuICB9LCBbX3NhcnR1cFNlcmllc0lkXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRZZWFyKF95ZWFyKTtcbiAgfSwgW195ZWFyXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8RmxleCBmbG93PVwiY29sdW1uIG5vd3JhcFwiPlxuICAgICAgPExhYmVsIGJvdHRvbU1hcmdpbj5QaGFzZTwvTGFiZWw+XG4gICAgICA8RmxleCBmbG93PVwicm93IHdyYXBcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCI+XG4gICAgICAgIDxTZWxlY3QuU2luZ2xlIG9uQ2hhbmdlPXtoYW5kbGVPbkNoYW5nZX0gZGlzYWJsZWQ9eyFpc0VkaXRhYmxlfSBuYW1lPXsnc3RhcnR1cFNlcmllc1tdJ30gdmFsdWU9e3N0YXJ0dXBTZXJpZXNJZH0gbm9TZWxlY3RPcHRpb24+XG4gICAgICAgICAge3dpbmRvdy50YWxrblN0YXRpY1RhZ3Muc3RhcnR1cFNlcmllcy5tYXAoKHRhZykgPT4gKFxuICAgICAgICAgICAgPFNlbGVjdC5PcHRpb24ga2V5PXtgU3RhcnR1cFNlcmllc18ke3RhZy51bmlxdWVJZH1gfSB2YWx1ZT17dGFnLnVuaXF1ZUlkfT5cbiAgICAgICAgICAgICAge3RhZy5qYX1cbiAgICAgICAgICAgIDwvU2VsZWN0Lk9wdGlvbj5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9TZWxlY3QuU2luZ2xlPlxuICAgICAgICA8U2VsZWN0WWVhciB0eXBlPXt0eXBlfSBpc0VkaXRhYmxlPXtpc0VkaXRhYmxlfSB5ZWFyPXt5ZWFyfSBvbkNoYW5nZT17aGFuZGxlT25DaGFuZ2VZZWFyfSAvPlxuICAgICAgPC9GbGV4PlxuICAgIDwvRmxleD5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuXG5pbXBvcnQgU2VsZWN0IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvc2VsZWN0JztcblxudHlwZSBQcm9wcyA9IHtcbiAgc3RvcnlJZDogc3RyaW5nO1xuICBjbGlja2VkU3RvcnlJZDogc3RyaW5nO1xuICBpc0VkaXRhYmxlOiBib29sZWFuO1xuICBzZWxlY3RlZDogc3RyaW5nW107XG4gIG9uQ2hhbmdlOiAoc3RvcnlJZDogc3RyaW5nKSA9PiB2b2lkO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoeyBzdG9yeUlkOiBfc3RvcnlJZCwgY2xpY2tlZFN0b3J5SWQsIGlzRWRpdGFibGUsIHNlbGVjdGVkLCBvbkNoYW5nZSB9OiBQcm9wcykgPT4ge1xuICBjb25zdCBbc3RvcnlJZCwgc2V0U3RvcnlJZF0gPSB1c2VTdGF0ZShfc3RvcnlJZCk7XG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlID0gKHZhbHVlKSA9PiB7XG4gICAgc2V0U3RvcnlJZCh2YWx1ZSk7XG4gICAgb25DaGFuZ2UodmFsdWUpO1xuICB9O1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldFN0b3J5SWQoX3N0b3J5SWQpO1xuICB9LCBbX3N0b3J5SWRdKTtcblxuICByZXR1cm4gKFxuICAgIDxTZWxlY3QuU2luZ2xlIG5hbWU9eydzdG9yeVtdJ30gZGlzYWJsZWQ9eyFpc0VkaXRhYmxlfSBvbkNoYW5nZT17aGFuZGxlT25DaGFuZ2V9IHZhbHVlPXtzdG9yeUlkfSBub1NlbGVjdE9wdGlvbj5cbiAgICAgIHt3aW5kb3cudGFsa25TdGF0aWNUYWdzLnN0b3J5Lm1hcCgodGFnKSA9PiB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgaXNTaG93KGlzRWRpdGFibGUsIHNlbGVjdGVkLCBjbGlja2VkU3RvcnlJZCwgdGFnLnVuaXF1ZUlkKSAmJiAoXG4gICAgICAgICAgICA8U2VsZWN0Lk9wdGlvbiBrZXk9e2BTdGFydHVwU2VyaWVzXyR7dGFnLnVuaXF1ZUlkfWB9IHZhbHVlPXtTdHJpbmcodGFnLnVuaXF1ZUlkKX0+XG4gICAgICAgICAgICAgIHt0YWcuamF9XG4gICAgICAgICAgICA8L1NlbGVjdC5PcHRpb24+XG4gICAgICAgICAgKVxuICAgICAgICApO1xuICAgICAgfSl9XG4gICAgPC9TZWxlY3QuU2luZ2xlPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBpc1Nob3cgPSAoaXNFZGl0YWJsZSwgc2VsZWN0ZWQsIGNsaWNrZWRTdG9yeUlkLCB1bmlxdWVJZCkgPT4ge1xuICBpZiAoaXNFZGl0YWJsZSkge1xuICAgIGlmIChjbGlja2VkU3RvcnlJZCA9PT0gdW5pcXVlSWQpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gIXNlbGVjdGVkLmluY2x1ZGVzKHVuaXF1ZUlkKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn07XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IFNlbGVjdCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL3NlbGVjdCc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIHR5cGU6IHN0cmluZztcbiAgaXNFZGl0YWJsZTogYm9vbGVhbjtcbiAgeWVhcjogbnVtYmVyO1xuICBvbkNoYW5nZTogKHllYXI6IG51bWJlcikgPT4gdm9pZDtcbn07XG5cbmV4cG9ydCBjb25zdCBkZWZhdWx0WWVhcnMgPSBbXG4gIHsgdW5pcXVlSWQ6ICcxJywgamE6IDEgfSxcbiAgeyB1bmlxdWVJZDogJzInLCBqYTogMiB9LFxuICB7IHVuaXF1ZUlkOiAnMycsIGphOiAzIH0sXG4gIHsgdW5pcXVlSWQ6ICc0JywgamE6IDQgfSxcbiAgeyB1bmlxdWVJZDogJzUnLCBqYTogNSB9LFxuICB7IHVuaXF1ZUlkOiAnNicsIGphOiA2IH0sXG4gIHsgdW5pcXVlSWQ6ICc3JywgamE6IDcgfSxcbiAgeyB1bmlxdWVJZDogJzgnLCBqYTogOCB9LFxuICB7IHVuaXF1ZUlkOiAnOScsIGphOiA5IH0sXG4gIHsgdW5pcXVlSWQ6ICcxMCcsIGphOiAxMCB9LFxuICB7IHVuaXF1ZUlkOiAnMTEnLCBqYTogMTEgfSxcbiAgeyB1bmlxdWVJZDogJzEyJywgamE6IDEyIH0sXG4gIHsgdW5pcXVlSWQ6ICcxMycsIGphOiAxMyB9LFxuICB7IHVuaXF1ZUlkOiAnMTQnLCBqYTogMTQgfSxcbiAgeyB1bmlxdWVJZDogJzE1JywgamE6IDE1IH0sXG4gIHsgdW5pcXVlSWQ6ICcxNicsIGphOiAxNiB9LFxuICB7IHVuaXF1ZUlkOiAnMTcnLCBqYTogMTcgfSxcbiAgeyB1bmlxdWVJZDogJzE4JywgamE6IDE4IH0sXG4gIHsgdW5pcXVlSWQ6ICcxOScsIGphOiAxOSB9LFxuICB7IHVuaXF1ZUlkOiAnMjAnLCBqYTogMjAgfSxcbl07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgdHlwZSwgaXNFZGl0YWJsZSwgeWVhcjogX3llYXIsIG9uQ2hhbmdlIH06IFByb3BzKSA9PiB7XG4gIGNvbnN0IFt5ZWFyLCBzZXRZZWFyXSA9IHVzZVN0YXRlKF95ZWFyKTtcbiAgY29uc3QgaGFuZGxlT25DaGFuZ2UgPSAodmFsdWUpID0+IHtcbiAgICBzZXRZZWFyKHZhbHVlKTtcbiAgICBvbkNoYW5nZSh2YWx1ZSk7XG4gIH07XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0WWVhcihfeWVhcik7XG4gIH0sIFtfeWVhcl0pO1xuICByZXR1cm4gKFxuICAgIDxTZWxlY3QuU2luZ2xlIG5hbWU9e3R5cGV9IGRpc2FibGVkPXshaXNFZGl0YWJsZX0gb25DaGFuZ2U9e2hhbmRsZU9uQ2hhbmdlfSB2YWx1ZT17U3RyaW5nKHllYXIpfSBub1NlbGVjdE9wdGlvbj5cbiAgICAgIHtkZWZhdWx0WWVhcnMubWFwKCh0YWcpID0+IChcbiAgICAgICAgPFNlbGVjdC5PcHRpb24ga2V5PXtgWWVhcl8ke3R5cGV9XyR7dGFnLnVuaXF1ZUlkfWB9IHZhbHVlPXtTdHJpbmcodGFnLnVuaXF1ZUlkKX0+XG4gICAgICAgICAge1N0cmluZyh0YWcuamEpfVxuICAgICAgICA8L1NlbGVjdC5PcHRpb24+XG4gICAgICApKX1cbiAgICA8L1NlbGVjdC5TaW5nbGU+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgc2hvdzogYm9vbGVhbjtcbiAgb25DbGljazogKCkgPT4gdm9pZDtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgc2hvdywgb25DbGljayB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lciBvbkNsaWNrPXtvbkNsaWNrfSBzaG93PXtzaG93fT5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYWRkTGluZUhvcml6b25cIiAvPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJhZGRMaW5lVmVydGljYWxcIiAvPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG50eXBlIENvbnRhaW5lclR5cGUgPSB7XG4gIHNob3c6IGJvb2xlYW47XG59O1xuXG5jb25zdCB3aWR0aCA9IDQ4O1xuY29uc3QgaGVpZ2h0ID0gMTA7XG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2PENvbnRhaW5lclR5cGU+YFxuICB3aWR0aDogNTRweDtcbiAgaGVpZ2h0OiA1NHB4O1xuICBtaW4td2lkdGg6IDU0cHg7XG4gIG1pbi1oZWlnaHQ6IDU0cHg7XG4gIG1hcmdpbjogJHtzdHlsZXMuYmFzZU1hcmdpbn1weDtcbiAgYmFja2dyb3VuZDogJHtzdHlsZXMudGhlbWVDb2xvcn07XG4gIGJvcmRlcjogM3B4IHNvbGlkICNmZmY7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2Zvcm06ICR7KHByb3BzKSA9PiAocHJvcHMuc2hvdyA/ICdyb3RhdGUoMGRlZykgc2NhbGUoMSknIDogJ3JvdGF0ZSgwZGVnKSBzY2FsZSgwKScpfTtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcywgYmFja2dyb3VuZCAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXMsIGJveC1zaGFkb3cgJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICBib3gtc2hhZG93OiAwIDAgNHB4IDFweCByZ2IoMCwgMCwgMCwgMC4yKTtcbiAgOmhvdmVyIHtcbiAgICBiYWNrZ3JvdW5kOiAke3N0eWxlcy50aGVtZUNvbG9yfTtcbiAgICBib3gtc2hhZG93OiAke3N0eWxlcy5zaGFkb3dDaXJjbGVEYXJrfTtcbiAgfVxuICAuYWRkTGluZUhvcml6b24ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IDI1JTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICB3aWR0aDogJHtoZWlnaHR9JTtcbiAgICBoZWlnaHQ6ICR7d2lkdGh9JTtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwJTtcbiAgfVxuICAuYWRkTGluZVZlcnRpY2FsIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAtNCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6ICR7d2lkdGh9JTtcbiAgICBoZWlnaHQ6ICR7aGVpZ2h0fSU7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiAxMCU7XG4gIH1cbmA7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBGbGV4IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvRmxleCc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIG9uQ2xpY2s6ICgpID0+IHZvaWQ7XG4gIG9uQ2xpY2tSZW1vdmU6ICgpID0+IHZvaWQ7XG4gIGlzRWRpdGFibGU6IGJvb2xlYW47XG4gIHVwcGVyTGVmdD86IFJlYWN0LlJlYWN0Tm9kZTtcbiAgdXBwZXJSaWdodD86IFJlYWN0LlJlYWN0Tm9kZTtcbiAgYm90dG9tTGVmdD86IFJlYWN0LlJlYWN0Tm9kZTtcbiAgYm90dG9tUmlnaHQ/OiBSZWFjdC5SZWFjdE5vZGU7XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICh7IG9uQ2xpY2ssIG9uQ2xpY2tSZW1vdmUsIGlzRWRpdGFibGUgPSBmYWxzZSwgdXBwZXJMZWZ0LCB1cHBlclJpZ2h0LCBib3R0b21MZWZ0LCBib3R0b21SaWdodCB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lciBmbG93PVwiY29sdW1uIG5vd3JhcFwiPlxuICAgICAgPEhlYWRlciBjbGFzc05hbWU9XCJDbG9zZUhlYWVlclwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIiBqdXN0aWZ5Q29udGVudD1cImZsZXgtZW5kXCI+XG4gICAgICAgIDxDbG9zZUljb24gY2xhc3NOYW1lPVwiQ2xvc2VJY29uXCIgb25DbGljaz17b25DbGlja1JlbW92ZX0gc2hvdz17aXNFZGl0YWJsZX0+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaW5lSG9yaXpvblwiIC8+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaW5lVmVydGljYWxcIiAvPlxuICAgICAgICA8L0Nsb3NlSWNvbj5cbiAgICAgIDwvSGVhZGVyPlxuICAgICAgPEJvZHkgZmxvdz1cImNvbHVtbiBub3dyYXBcIiBvbkNsaWNrPXtvbkNsaWNrfSBpc0VkaXRhYmxlPXtpc0VkaXRhYmxlfT5cbiAgICAgICAgPE1pZGRsd0ZsZXggZmxvdz1cInJvdyBub3dyYXBcIj5cbiAgICAgICAgICA8VXBwZXJMZWZ0Pnt1cHBlckxlZnR9PC9VcHBlckxlZnQ+XG4gICAgICAgICAgPHNwYW4+Lzwvc3Bhbj5cbiAgICAgICAgICA8VXBwZXJSaWdodD57dXBwZXJSaWdodH08L1VwcGVyUmlnaHQ+XG4gICAgICAgIDwvTWlkZGx3RmxleD5cbiAgICAgICAgPEJvdHRvbUZsZXggZmxvdz1cInJvdyBub3dyYXBcIiBhbGlnbi1pdGVtcz1cImNlbnRlclwiPlxuICAgICAgICAgIDxCb3R0b21MZWZ0Pntib3R0b21MZWZ0fTwvQm90dG9tTGVmdD5cbiAgICAgICAgICA8Qm90dG9tUmlnaHQ+e2JvdHRvbVJpZ2h0fTwvQm90dG9tUmlnaHQ+XG4gICAgICAgIDwvQm90dG9tRmxleD5cbiAgICAgIDwvQm9keT5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkKEZsZXgpYFxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwcHgsIDBweCk7XG5gO1xuXG5jb25zdCBIZWFkZXIgPSBzdHlsZWQoRmxleClgYDtcblxudHlwZSBDbG9zZUljb25UeXBlID0ge1xuICBzaG93OiBib29sZWFuO1xufTtcblxuY29uc3Qgd2lkdGggPSA0ODtcbmNvbnN0IGhlaWdodCA9IDEwO1xuY29uc3QgQ2xvc2VJY29uID0gc3R5bGVkLmRpdjxDbG9zZUljb25UeXBlPmBcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IC01cHg7XG4gIHJpZ2h0OiAtNXB4O1xuICB3aWR0aDogMzhweDtcbiAgaGVpZ2h0OiAzOHB4O1xuICBiYWNrZ3JvdW5kOiAke3N0eWxlcy50aGVtZUNvbG9yfTtcbiAgYm9yZGVyOiAzcHggc29saWQgI2ZmZjtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBvcGFjaXR5OiAwLjk7XG4gIHRyYW5zZm9ybTogJHsocHJvcHMpID0+IChwcm9wcy5zaG93ID8gJ3JvdGF0ZSg0NWRlZykgc2NhbGUoMSknIDogJ3JvdGF0ZSg0NWRlZykgc2NhbGUoMCknKX07XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXMsIGJhY2tncm91bmQgJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zLCBib3gtc2hhZG93ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbiAgYm94LXNoYWRvdzogMCAwIDRweCAxcHggcmdiKDAsIDAsIDAsIDAuMik7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgOmhvdmVyIHtcbiAgICBib3gtc2hhZG93OiAke3N0eWxlcy5zaGFkb3dDaXJjbGVEYXJrfTtcbiAgfVxuICAubGluZUhvcml6b24ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IDI1JTtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICB3aWR0aDogJHtoZWlnaHR9JTtcbiAgICBoZWlnaHQ6ICR7d2lkdGh9JTtcbiAgICBiYWNrZ3JvdW5kOiAjZmZmO1xuICAgIGJvcmRlci1yYWRpdXM6IDEwJTtcbiAgfVxuICAubGluZVZlcnRpY2FsIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAtNCU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6ICR7d2lkdGh9JTtcbiAgICBoZWlnaHQ6ICR7aGVpZ2h0fSU7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiAxMCU7XG4gIH1cbmA7XG5cbnR5cGUgQm9keVByb3BzVHlwZSA9IHtcbiAgaXNFZGl0YWJsZTogYm9vbGVhbjtcbn07XG5cbmNvbnN0IEJvZHkgPSBzdHlsZWQoRmxleCk8Qm9keVByb3BzVHlwZT5gXG4gIGhlaWdodDogaW5oZXJpdDtcbiAgcGFkZGluZzogMTBweCAzMHB4O1xuICBtYXJnaW46IDEwcHg7XG4gIGJhY2tncm91bmQ6ICR7KHByb3BzKSA9PiAocHJvcHMuaXNFZGl0YWJsZSA/IHN0eWxlcy50aGVtZUNvbG9yIDogc3R5bGVzLnRhZ0JnQ29sb3IpfTtcbiAgYm9yZGVyLXJhZGl1czogMzBweDtcbiAgY29sb3I6ICNmZmY7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXMsIGJveC1zaGFkb3cgJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICA6aG92ZXIge1xuICAgIGJveC1zaGFkb3c6ICR7c3R5bGVzLnNoYWRvd0hvcml6b25CcmlnaHR9O1xuICB9XG5gO1xuXG5jb25zdCBNaWRkbHdGbGV4ID0gc3R5bGVkKEZsZXgpYFxuICBmb250LXNpemU6IDEwcHg7XG4gIGxpbmUtaGVpZ2h0OiAxNXB4O1xuYDtcblxuY29uc3QgQm90dG9tRmxleCA9IHN0eWxlZChGbGV4KWBcbiAgbGluZS1oZWlnaHQ6IDIwcHg7XG5gO1xuXG5jb25zdCBVcHBlckxlZnQgPSBzdHlsZWQuZGl2YGA7XG5jb25zdCBVcHBlclJpZ2h0ID0gc3R5bGVkLmRpdmBgO1xuY29uc3QgQm90dG9tTGVmdCA9IHN0eWxlZC5kaXZgYDtcbmNvbnN0IEJvdHRvbVJpZ2h0ID0gc3R5bGVkLmRpdmBgO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgRmxleCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0ZsZXgnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG50eXBlIFByb3BzID0ge1xuICBvbkNsaWNrOiAoKSA9PiB2b2lkO1xuICBvbkNsaWNrUmVtb3ZlOiAoKSA9PiB2b2lkO1xuICBpc0VkaXRhYmxlOiBib29sZWFuO1xuICBsYWJlbDogUmVhY3QuUmVhY3ROb2RlO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoeyBvbkNsaWNrLCBvbkNsaWNrUmVtb3ZlLCBpc0VkaXRhYmxlLCBsYWJlbCB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lciBmbG93PVwiY29sdW1uIG5vd3JhcFwiPlxuICAgICAgPEhlYWRlciBjbGFzc05hbWU9XCJDbG9zZUhlYWVlclwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIiBqdXN0aWZ5Q29udGVudD1cImZsZXgtZW5kXCI+XG4gICAgICAgIDxDbG9zZUljb24gY2xhc3NOYW1lPVwiQ2xvc2VJY29uXCIgb25DbGljaz17b25DbGlja1JlbW92ZX0gc2hvdz17aXNFZGl0YWJsZX0+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaW5lSG9yaXpvblwiIC8+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJsaW5lVmVydGljYWxcIiAvPlxuICAgICAgICA8L0Nsb3NlSWNvbj5cbiAgICAgIDwvSGVhZGVyPlxuICAgICAgPEJvZHkgZmxvdz1cImNvbHVtbiBub3dyYXBcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCIganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIiBvbkNsaWNrPXtvbkNsaWNrfSBpc0VkaXRhYmxlPXtpc0VkaXRhYmxlfT5cbiAgICAgICAge2xhYmVsfVxuICAgICAgPC9Cb2R5PlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQoRmxleClgXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKDBweCwgMHB4KTtcbmA7XG5cbmNvbnN0IEhlYWRlciA9IHN0eWxlZChGbGV4KWBgO1xuXG50eXBlIENsb3NlSWNvblR5cGUgPSB7XG4gIHNob3c6IGJvb2xlYW47XG59O1xuXG5jb25zdCB3aWR0aCA9IDQ4O1xuY29uc3QgaGVpZ2h0ID0gMTA7XG5jb25zdCBDbG9zZUljb24gPSBzdHlsZWQuZGl2PENsb3NlSWNvblR5cGU+YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogLTVweDtcbiAgcmlnaHQ6IC01cHg7XG4gIHdpZHRoOiAzOHB4O1xuICBoZWlnaHQ6IDM4cHg7XG4gIGJhY2tncm91bmQ6ICR7c3R5bGVzLnRoZW1lQ29sb3J9O1xuICBib3JkZXI6IDNweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgb3BhY2l0eTogMC45O1xuICB0cmFuc2Zvcm06ICR7KHByb3BzKSA9PiAocHJvcHMuc2hvdyA/ICdyb3RhdGUoNDVkZWcpIHNjYWxlKDEpJyA6ICdyb3RhdGUoNDVkZWcpIHNjYWxlKDApJyl9O1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zLCBiYWNrZ3JvdW5kICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcywgYm94LXNoYWRvdyAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIGJveC1zaGFkb3c6IDAgMCA0cHggMXB4IHJnYigwLCAwLCAwLCAwLjIpO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIDpob3ZlciB7XG4gICAgYm94LXNoYWRvdzogJHtzdHlsZXMuc2hhZG93Q2lyY2xlRGFya307XG4gIH1cbiAgLmxpbmVIb3Jpem9uIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAyNSU7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgd2lkdGg6ICR7aGVpZ2h0fSU7XG4gICAgaGVpZ2h0OiAke3dpZHRofSU7XG4gICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICBib3JkZXItcmFkaXVzOiAxMCU7XG4gIH1cbiAgLmxpbmVWZXJ0aWNhbCB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogLTQlO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHdpZHRoOiAke3dpZHRofSU7XG4gICAgaGVpZ2h0OiAke2hlaWdodH0lO1xuICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgYm9yZGVyLXJhZGl1czogMTAlO1xuICB9XG5gO1xudHlwZSBCb2R5UHJvcHNUeXBlID0ge1xuICBpc0VkaXRhYmxlOiBib29sZWFuO1xufTtcblxuY29uc3QgQm9keSA9IHN0eWxlZChGbGV4KTxCb2R5UHJvcHNUeXBlPmBcbiAgaGVpZ2h0OiA1NXB4O1xuICBwYWRkaW5nOiAxMHB4IDMwcHg7XG4gIG1hcmdpbjogMTBweDtcbiAgYmFja2dyb3VuZDogJHsocHJvcHMpID0+IChwcm9wcy5pc0VkaXRhYmxlID8gc3R5bGVzLnRoZW1lQ29sb3IgOiBzdHlsZXMudGFnQmdDb2xvcil9O1xuICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICBjb2xvcjogI2ZmZjtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcywgYm94LXNoYWRvdyAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIDpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogJHtzdHlsZXMudGhlbWVDb2xvcn07XG4gICAgYm94LXNoYWRvdzogJHtzdHlsZXMuc2hhZG93SG9yaXpvbkJyaWdodH07XG4gIH1cbmA7XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IGNvbmYgZnJvbSAnY29tbW9uL2NvbmYnO1xuXG5pbXBvcnQgSCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0gnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuaW1wb3J0IHsgU2VsZWN0Q29udGVudE1lbnVUeXBlIH0gZnJvbSAnY292ZXIvdGFsa24uY292ZXInO1xuXG50eXBlIFByb3BzID0ge1xuICBjaDogc3RyaW5nO1xuICBvcGVuTWVudTogYm9vbGVhbjtcbiAgc3Rvcmllc0luZGV4UG9pbnRlcjogbnVtYmVyO1xuICBzZWxlY3RDb250ZW50TWVudTogU2VsZWN0Q29udGVudE1lbnVUeXBlO1xuICBtZW51T3JkZXJSZWY6IFJlYWN0Lk11dGFibGVSZWZPYmplY3Q8SFRNTEVsZW1lbnQ+O1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoeyBjaCwgb3Blbk1lbnUsIHN0b3JpZXNJbmRleFBvaW50ZXIsIG1lbnVPcmRlclJlZiB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJTaWRlTWVudU9yZGVyXCIgcmVmPXttZW51T3JkZXJSZWZ9IG9wZW5NZW51PXtvcGVuTWVudX0gZm9jdXNNZW51Tm89e3N0b3JpZXNJbmRleFBvaW50ZXJ9PlxuICAgICAge3dpbmRvdy50YWxrbkNvbmZpZy5zdG9yaWVzSW5kZXgubGVuZ3RoID4gMCAmJlxuICAgICAgICB3aW5kb3cudGFsa25Db25maWcuc3Rvcmllc0luZGV4Lm1hcCgoY29udGVudHMsIGluZGV4KSA9PiB7XG4gICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxILkZpdmUga2V5PXtgSW5kZXgke2luZGV4fWB9IGlkPVwiSW5kZXhcIiBjbGFzc05hbWU9e2BNZW51TGlzdCBNZW51TGlzdC0ke2NvbnRlbnRzLm5vfWB9PlxuICAgICAgICAgICAgICA8QW5jaG9yUm93IGhyZWY9e2BodHRwczovLyR7Y29uZi5jb3ZlclVSTH0ke2NofXN0b3J5LyR7Y29udGVudHMubm99YH0+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibnVtYmVyXCI+I3tjb250ZW50cy5ub30mbmJzcDs8L3NwYW4+XG4gICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwicmVzdW1lXCI+e2NvbnRlbnRzLnRpdGxlfTwvc3Bhbj5cbiAgICAgICAgICAgICAgPC9BbmNob3JSb3c+XG4gICAgICAgICAgICA8L0guRml2ZT5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxudHlwZSBDb250YWluZXJQcm9wc1R5cGUgPSB7XG4gIHJlZjogYW55O1xuICBvcGVuTWVudTogYm9vbGVhbjtcbiAgZm9jdXNNZW51Tm86IG51bWJlcjtcbn07XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXY8Q29udGFpbmVyUHJvcHNUeXBlPmBcbiAgcG9zaXRpb246IGZpeGVkO1xuICB6LWluZGV4OiAke3N0eWxlcy56SW5kZXguc2lkZU1lbnV9O1xuICB0b3A6ICR7c3R5bGVzLmFwcEhlYWRlckhlaWdodH1weDtcbiAgcmlnaHQ6IDA7XG4gIG92ZXJmbG93LXg6IGhpZGRlbjtcbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IGNvbHVtbjtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgYmFja2dyb3VuZDogJHtzdHlsZXMuY29tcG9uZW50QmdDb2xvcn07XG4gIGNvbG9yOiAke3N0eWxlcy5mb250Q29sb3J9O1xuICB3aWR0aDogJHtzdHlsZXMubWVudVBjV2lkdGh9cHg7XG4gIGhlaWdodDogY2FsYygxMDAlIC0gJHtzdHlsZXMuYXBwSGVhZGVySGVpZ2h0fXB4KTtcbiAgbWluLWhlaWdodDogY2FsYygxMDAlIC0gJHtzdHlsZXMuYXBwSGVhZGVySGVpZ2h0fXB4KTtcbiAgbWF4LWhlaWdodDogY2FsYygxMDAlIC0gJHtzdHlsZXMuYXBwSGVhZGVySGVpZ2h0fXB4KTtcbiAgcGFkZGluZzogJHtzdHlsZXMuYmFzZVBhZGRpbmd9cHg7XG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJHtzdHlsZXMuYm9yZGVyQ29sb3J9O1xuICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKCR7KHByb3BzKSA9PiAocHJvcHMub3Blbk1lbnUgPyAwIDogYCR7c3R5bGVzLm1lbnVQY1dpZHRofXB4YCl9LCAwcHgpO1xuICBhLFxuICBhOnZpc2l0ZWQsXG4gIGE6aG92ZXIsXG4gIGE6YWN0aXZlIHtcbiAgICBjb2xvcjogJHtzdHlsZXMuZm9udENvbG9yfTtcbiAgfVxuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRXaWR0aH1weCkge1xuICAgIHdpZHRoOiAke3N0eWxlcy5tZW51VGFiV2lkdGh9cHg7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoJHsocHJvcHMpID0+IChwcm9wcy5vcGVuTWVudSA/IDAgOiBgJHtzdHlsZXMubWVudVRhYldpZHRofXB4YCl9LCAwcHgpO1xuICB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFN0cmljdFdpZHRofXB4KSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoJHsocHJvcHMpID0+IChwcm9wcy5vcGVuTWVudSA/IDAgOiAnMTAwJScpfSwgMHB4KTtcbiAgfVxuICAuTWVudUxpc3QtJHsocHJvcHMpID0+IHByb3BzLmZvY3VzTWVudU5vfSB7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBsaW5lLWhlaWdodDogNDBweDtcbiAgfVxuYDtcbmNvbnN0IEFuY2hvclJvdyA9IHN0eWxlZC5hYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGxpbmUtaGVpZ2h0OiA0MHB4O1xuICA6aG92ZXIge1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgLnJlc3VtZSB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG4gIH1cbiAgLm51bWJlciB7XG4gICAgd2lkdGg6IDM1cHg7XG4gICAgbWluLXdpZHRoOiAzNXB4O1xuICB9XG5gO1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBIIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvSCc7XG5pbXBvcnQgTm9kZSwgeyBQcm9wcyBhcyBOb2RlUHJvcHMgfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL05vZGUnO1xuaW1wb3J0IFN0b3J5U2VjdGlvbiBmcm9tICdjb3Zlci9jb21wb25lbnRzL21vbGVjdWxlcy9TdG9yeVNlY3Rpb24nO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG5leHBvcnQgdHlwZSBOYXZpZ2F0aW9uTGF5b3V0ID0ge1xuICB3aWR0aDogbnVtYmVyO1xuICBtYXJnaW5Ub3A6IG51bWJlcjtcbiAgbWFyZ2luUmlnaHQ6IG51bWJlcjtcbiAgbWFyZ2luQm90dG9tOiBudW1iZXI7XG4gIG1hcmdpbkxlZnQ6IG51bWJlcjtcbiAgcGFkZGluZ1RvcDogbnVtYmVyO1xuICBwYWRkaW5nUmlnaHQ6IG51bWJlcjtcbiAgcGFkZGluZ0JvdHRvbTogbnVtYmVyO1xuICBwYWRkaW5nTGVmdDogbnVtYmVyO1xufTtcblxudHlwZSBQcm9wcyA9IHtcbiAgbmF2aWdhdGlvbkxheW91dDogTmF2aWdhdGlvbkxheW91dDtcbiAgc3Rvcmllc1JlZjogUmVhY3QuTXV0YWJsZVJlZk9iamVjdDxIVE1MRWxlbWVudD47XG4gIHJlc3VtZVJlZjogUmVhY3QuTXV0YWJsZVJlZk9iamVjdDxIVE1MRWxlbWVudD47XG4gIHN0b3JpZXNQb2ludGVyOiBudW1iZXI7XG4gIGhhbmRsZU9uQ2xpY2tOYXY6IChjaGFwdGVySW5kZXg6IG51bWJlcikgPT4gdm9pZDtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgbmF2aWdhdGlvbkxheW91dCwgc3Rvcmllc1JlZiwgcmVzdW1lUmVmLCBzdG9yaWVzUG9pbnRlciwgaGFuZGxlT25DbGlja05hdiB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lciBuYXZpZ2F0aW9uTGF5b3V0PXtuYXZpZ2F0aW9uTGF5b3V0fT5cbiAgICAgIDxTdG9yaWVzIGNsYXNzTmFtZT17J1N0b3JpZXMnfSByZWY9e3N0b3JpZXNSZWZ9PlxuICAgICAgICB7d2luZG93LnRhbGtuU3Rvcmllcy5zZWN0aW9ucy5tYXAoKHsgdGl0bGUsIGZsb3csIG5vZGVzIH0sIGkpID0+IHtcbiAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgPFN0b3J5U2VjdGlvbiBrZXk9e2BTZWN0aW9uJHtpfWB9IG51bWJlcj17aSArIDF9IHRpdGxlPXt0aXRsZX0gZmxvdz17Zmxvd30+XG4gICAgICAgICAgICAgIHtub2Rlcy5tYXAoKG5vZGU6IE5vZGVQcm9wcywgaikgPT4gKFxuICAgICAgICAgICAgICAgIDxOb2RlIGtleT17YCR7bm9kZS50eXBlfS0ke2l9LSR7an1gfSB0eXBlPXtub2RlLnR5cGV9IHByb3BzPXtub2RlLnByb3BzfSBub2Rlcz17bm9kZS5ub2Rlc30gLz5cbiAgICAgICAgICAgICAgKSl9XG4gICAgICAgICAgICA8L1N0b3J5U2VjdGlvbj5cbiAgICAgICAgICApO1xuICAgICAgICB9KX1cbiAgICAgIDwvU3Rvcmllcz5cbiAgICAgIDxOYXZpZ2F0aW9uIHJlZj17cmVzdW1lUmVmfSBuYXZpZ2F0aW9uTGF5b3V0PXtuYXZpZ2F0aW9uTGF5b3V0fT5cbiAgICAgICAgPEhGaXZlQ3VzdG9tPi0g55uu5qyhIC08L0hGaXZlQ3VzdG9tPlxuICAgICAgICB7d2luZG93LnRhbGtuU3RvcmllcyAmJiB3aW5kb3cudGFsa25TdG9yaWVzLnNlY3Rpb25zLmxlbmd0aCA+IDAgJiYgKFxuICAgICAgICAgIDxOYXZpZ2F0aW9uT3JkZXIgc3Rvcmllc1BvaW50ZXI9e3N0b3JpZXNQb2ludGVyfT5cbiAgICAgICAgICAgIHt3aW5kb3cudGFsa25TdG9yaWVzLnNlY3Rpb25zLm1hcCgoeyByZXN1bWUgfSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgY29uc3QgbnVtYmVyID0gaW5kZXggPCA5ID8gYDAke2luZGV4ICsgMX1gIDogaW5kZXggKyAxO1xuICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxsaSBrZXk9e2Ake3Jlc3VtZX0ke2luZGV4fWB9PlxuICAgICAgICAgICAgICAgICAgPEFuY2hvclJvdyBvbkNsaWNrPXsoKSA9PiBoYW5kbGVPbkNsaWNrTmF2KGluZGV4KX0+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm51bWJlclwiPntudW1iZXJ9Ljwvc3Bhbj5cbiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwicmVzdW1lXCI+e3Jlc3VtZX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICA8L0FuY2hvclJvdz5cbiAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgfSl9XG4gICAgICAgICAgPC9OYXZpZ2F0aW9uT3JkZXI+XG4gICAgICAgICl9XG4gICAgICA8L05hdmlnYXRpb24+XG4gICAgPC9Db250YWluZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbnR5cGUgU3Rvcmllc1Byb3BzVHlwZSA9IHtcbiAgbmF2aWdhdGlvbkxheW91dDogTmF2aWdhdGlvbkxheW91dDtcbn07XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXY8U3Rvcmllc1Byb3BzVHlwZT5gXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogJHsocHJvcHMpID0+IChwcm9wcy5uYXZpZ2F0aW9uTGF5b3V0ID8gJ3JvdyBub3dyYXAnIDogJ2NvbHVtbiBub3dyYXAnKX07XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6ICR7c3R5bGVzLmFwcFdpZHRofXB4O1xuICBoZWlnaHQ6IGF1dG87XG4gIG1hcmdpbjogMCBhdXRvO1xuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRXaWR0aH1weCkge1xuICAgIGZsZXgtZmxvdzogY29sdW1uLXJldmVyc2U7XG4gIH1cbmA7XG5cbnR5cGUgU3Rvcmllc1JlZlR5cGUgPSB7XG4gIHJlZjogYW55O1xufTtcblxuY29uc3QgbGF5b3V0UGFkZGluZ0xlZnQgPSBzdHlsZXMuZG91YmxlUGFkZGluZztcbmNvbnN0IFN0b3JpZXMgPSBzdHlsZWQuZGl2PFN0b3JpZXNSZWZUeXBlPmBcbiAgZmxleDogMSAxIGF1dG87XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGhlaWdodDogYXV0bztcbiAgcGFkZGluZy1yaWdodDogMDtcbiAgcGFkZGluZy1sZWZ0OiAke2xheW91dFBhZGRpbmdMZWZ0fXB4O1xuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRXaWR0aH1weCkge1xuICAgIHBhZGRpbmctcmlnaHQ6ICR7c3R5bGVzLmJhc2VQYWRkaW5nfXB4O1xuICAgIHBhZGRpbmctbGVmdDogJHtzdHlsZXMuYmFzZVBhZGRpbmd9cHg7XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGh9cHgpIHtcbiAgICBwYWRkaW5nLXJpZ2h0OiAwO1xuICAgIHBhZGRpbmctbGVmdDogMDtcbiAgfVxuYDtcblxuY29uc3QgTmF2aWdhdGlvbiA9IHN0eWxlZC5uYXY8eyBuYXZpZ2F0aW9uTGF5b3V0OiBOYXZpZ2F0aW9uTGF5b3V0IH0+YFxuICBmbGV4OiAxIDEgYXV0bztcbiAgei1pbmRleDogMDtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAke3N0eWxlcy5hcHBIZWFkZXJIZWlnaHQgKiAyICsgc3R5bGVzLmJhc2VNYXJnaW59cHg7XG4gIHdpZHRoOiAxMDAlO1xuICBtaW4td2lkdGg6IDMyMHB4O1xuICBtYXgtd2lkdGg6IDMyMHB4O1xuICBwYWRkaW5nLXRvcDogJHtzdHlsZXMuYmFzZVBhZGRpbmd9cHg7XG4gIHBhZGRpbmctcmlnaHQ6ICR7c3R5bGVzLmJhc2VQYWRkaW5nfXB4O1xuICBwYWRkaW5nLWJvdHRvbTogJHtzdHlsZXMuZG91YmxlUGFkZGluZ31weDtcbiAgcGFkZGluZy1sZWZ0OiAke3N0eWxlcy5iYXNlUGFkZGluZ31weDtcbiAgbWFyZ2luOiAke3N0eWxlcy5xdWFkTWFyZ2lufXB4ICR7c3R5bGVzLmJhc2VNYXJnaW59cHggJHtzdHlsZXMuYmFzZU1hcmdpbn1weCAke3N0eWxlcy5iYXNlTWFyZ2lufXB4O1xuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSk7XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7c3R5bGVzLmJvcmRlckNvbG9yfTtcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgb2wsXG4gIGxpIHtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICB9XG4gIGxpIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBmb250LXdlaWdodDogMjAwO1xuICAgIGxpbmUtaGVpZ2h0OiAyNHB4O1xuICB9XG4gIGEge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1mbG93OiByb3cgbm93cmFwO1xuICAgIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgICBsaW5lLWhlaWdodDogNDBweDtcbiAgfVxuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRXaWR0aH1weCkge1xuICAgIHotaW5kZXg6IGF1dG87XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogMDtcbiAgICB3aWR0aDogY2FsYygxMDAlIC0gJHtzdHlsZXMuZG91YmxlTWFyZ2lufXB4KTtcbiAgICBtaW4td2lkdGg6IGNhbGMoMTAwJSAtICR7c3R5bGVzLmRvdWJsZU1hcmdpbn1weCk7XG4gICAgcGFkZGluZzogMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbGkge1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgfVxuICB9XG5gO1xudHlwZSBOYXZpZ2F0aW9uT3JkZXJQcm9wc1R5cGUgPSB7XG4gIHN0b3JpZXNQb2ludGVyOiBudW1iZXI7XG59O1xuXG5jb25zdCBOYXZpZ2F0aW9uT3JkZXIgPSBzdHlsZWQub2w8TmF2aWdhdGlvbk9yZGVyUHJvcHNUeXBlPmBcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGxpOm50aC1jaGlsZCgkeyhwcm9wcykgPT4gcHJvcHMuc3Rvcmllc1BvaW50ZXIgKyAxfSkgYSB7XG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgICBsZXR0ZXItc3BhY2luZzogMS41cHg7XG4gIH1cbmA7XG5cbmNvbnN0IEFuY2hvclJvdyA9IHN0eWxlZC5hYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIGxpbmUtaGVpZ2h0OiA0MHB4O1xuICA6aG92ZXIge1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgLnJlc3VtZSB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgICB9XG4gIH1cbiAgLm51bWJlciB7XG4gICAgd2lkdGg6IDM1cHg7XG4gICAgbWluLXdpZHRoOiAzNXB4O1xuICB9XG5gO1xuXG5jb25zdCBIRml2ZUN1c3RvbSA9IHN0eWxlZChILkZpdmUpYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyBub3dyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuYDtcbiIsImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlLCB1c2VSZWYgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IGNvbmYgZnJvbSAnY29tbW9uL2NvbmYnO1xuaW1wb3J0IHsgU3Rvcmllc0luZGV4VHlwZSwgY29uZmlnU3Rvcmllc0xpbWl0IH0gZnJvbSAnY29tbW9uL3RhbGtuQ29uZmlnJztcblxuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG50eXBlIFByb3BzID0ge307XG5cbmV4cG9ydCBjb25zdCBzdG9yaWVzSW5kZXhDb250ZW50c0luaXQ6IFN0b3JpZXNJbmRleFR5cGVbXSA9IFtdO1xuZXhwb3J0IGNvbnN0IGdldFNjcm9sbFdpZHRoID0gKCkgPT4gKHdpbmRvdy5pbm5lcldpZHRoID4gc3R5bGVzLmFwcFdpZHRoID8gc3R5bGVzLmFwcFdpZHRoIDogd2luZG93LmlubmVyV2lkdGgpO1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9ICgpID0+IHtcbiAgY29uc3Qgc3Rvcmllc0V5ZUNhdGNoT3JkZXJSZWYgPSB1c2VSZWY8SFRNTEVsZW1lbnQ+KCk7XG4gIGNvbnN0IFtzdG9yaWVzSW5kZXhlcywgc2V0U3Rvcmllc0luZGV4ZXNdID0gdXNlU3RhdGU8U3Rvcmllc0luZGV4VHlwZVtdPihbXSk7XG4gIGNvbnN0IFtzdG9yaWVzSW5kZXgsIHNldFN0b3JpZXNJbmRleF0gPSB1c2VTdGF0ZSgwKTtcbiAgY29uc3QgW3N0b3JpZXNFeWVDYXRjaHMsIHNldFN0b3JpZXNFeWVDYXRjaHNdID0gdXNlU3RhdGU8U3Rvcmllc0luZGV4VHlwZVtdPihzdG9yaWVzSW5kZXhDb250ZW50c0luaXQpO1xuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGNvbnN0IF9vZmZzZXQgPSB3aW5kb3cudGFsa25TdG9yaWVzUG9pbnRlciAtIGNvbmZpZ1N0b3JpZXNMaW1pdCAvIDI7XG4gICAgY29uc3Qgb2Zmc2V0ID0gMCA8PSBfb2Zmc2V0ID8gX29mZnNldCA6IDA7XG4gICAgY29uc3QgbGltaXQgPSBjb25maWdTdG9yaWVzTGltaXQ7XG4gICAgY29uc3QgX3N0b3JpZXNJbmRleGVzID0gWy4uLndpbmRvdy50YWxrbkNvbmZpZy5zdG9yaWVzSW5kZXhdLnJldmVyc2UoKTtcblxuICAgIGxldCBfc3Rvcmllc0V5ZUNhdGNocyA9IFsuLi53aW5kb3cudGFsa25Db25maWcuc3Rvcmllc0luZGV4XVxuICAgICAgLm1hcCgoc3Rvcmllc0luZGV4LCBpbmRleCkgPT4ge1xuICAgICAgICBpZiAod2luZG93LnRhbGtuVGhyZWFkLmNoICE9PSAnLycpIHtcbiAgICAgICAgICAvL3N0b3JpZXNJbmRleC5ubyA9IGluZGV4ICsgMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3Rvcmllc0luZGV4O1xuICAgICAgfSlcbiAgICAgIC5zcGxpY2Uob2Zmc2V0LCBsaW1pdCk7XG4gICAgX3N0b3JpZXNFeWVDYXRjaHMgPSBfc3Rvcmllc0V5ZUNhdGNocy5yZXZlcnNlKCk7XG5cbiAgICBzZXRTdG9yaWVzSW5kZXhlcyhfc3Rvcmllc0luZGV4ZXMpO1xuICAgIHNldFN0b3JpZXNFeWVDYXRjaHMoX3N0b3JpZXNFeWVDYXRjaHMpO1xuICB9LCBbd2luZG93LnRhbGtuQ29uZmlnLnN0b3JpZXNJbmRleF0pO1xuXG4gIGNvbnN0IGhhbmRsZU9uU2Nyb2xsSGVhZEV5ZUNhdGNoID0gKGU6IFJlYWN0LlVJRXZlbnQ8SFRNTE9MaXN0RWxlbWVudCwgVUlFdmVudD4pID0+IHtcbiAgICBjb25zdCBzY3JvbGxXaWR0aCA9IGdldFNjcm9sbFdpZHRoKCk7XG4gICAgY29uc3Qgc2Nyb2xsSW5kZXggPSAoZS50YXJnZXQgYXMgSFRNTE9MaXN0RWxlbWVudCkuc2Nyb2xsTGVmdCAvIHNjcm9sbFdpZHRoO1xuICAgIGlmIChOdW1iZXIuaXNJbnRlZ2VyKHNjcm9sbEluZGV4KSkge1xuICAgICAgc2V0U3Rvcmllc0luZGV4KHNjcm9sbEluZGV4KTtcbiAgICB9XG4gIH07XG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lciByZWY9e3N0b3JpZXNFeWVDYXRjaE9yZGVyUmVmfSBvblNjcm9sbD17aGFuZGxlT25TY3JvbGxIZWFkRXllQ2F0Y2h9IHN0b3JpZXNJbmRleENudD17d2luZG93LnRhbGtuQ29uZmlnLnN0b3JpZXNJbmRleC5sZW5ndGh9PlxuICAgICAge3N0b3JpZXNFeWVDYXRjaHMubWFwKChzdG9yaWVzRXllQ2F0Y2gsIGkpID0+IChcbiAgICAgICAgPEhlYWRFeWVDYXRjaExpc3RcbiAgICAgICAgICBrZXk9e2BIZWFkRXllQ2F0Y2hMaXN0JHtpfWB9XG4gICAgICAgICAgY2xhc3NOYW1lPVwiSGVhZEV5ZUNhdGNoTGlzdFwiXG4gICAgICAgICAgZGF0YS1ubz17c3Rvcmllc0V5ZUNhdGNoLm5vfVxuICAgICAgICAgIGV5ZUNhdGNoPXtzdG9yaWVzRXllQ2F0Y2guZXllQ2F0Y2h9XG4gICAgICAgICAgc3Rvcmllc0luZGV4Q250PXt3aW5kb3cudGFsa25Db25maWcuc3Rvcmllc0luZGV4Lmxlbmd0aH0+XG4gICAgICAgICAgPFZpZXdBbmNob3IgaHJlZj17YGh0dHBzOi8vJHtjb25mLmNvdmVyVVJMfSR7c3Rvcmllc0V5ZUNhdGNoLmNofXN0b3J5LyR7c3Rvcmllc0V5ZUNhdGNoLm5vfWB9PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjcmVhdG9yQmdcIj57c3Rvcmllc0V5ZUNhdGNoLmV5ZUNhdGNoID09PSAnJyAmJiAnTk8gSU1BR0UnfTwvZGl2PlxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjcmVhdG9yRGVzY3JpcHRpb25cIj57c3Rvcmllc0V5ZUNhdGNoLnRpdGxlfTwvZGl2PlxuICAgICAgICAgIDwvVmlld0FuY2hvcj5cbiAgICAgICAgPC9IZWFkRXllQ2F0Y2hMaXN0PlxuICAgICAgKSl9XG4gICAgPC9Db250YWluZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbnR5cGUgQ29udGFpbmVyUHJvcHNUeXBlID0ge1xuICByZWY6IGFueTtcbiAgc2xpZGU/OiBib29sZWFuO1xuICBzdG9yaWVzSW5kZXhDbnQ6IG51bWJlcjtcbn07XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5vbDxDb250YWluZXJQcm9wc1R5cGU+YFxuICAkeyhwcm9wcykgPT4gKHByb3BzLnNsaWRlID8gJ292ZXJmbG93OiBzY3JvbGwgaGlkZGVuJyA6ICcnKX07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93ICR7KHByb3BzKSA9PiAocHJvcHMuc2xpZGUgPyAnbm93cmFwJyA6ICd3cmFwJyl9O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAganVzdGlmeS1jb250ZW50OiAkeyhwcm9wcykgPT4ge1xuICAgIGlmIChwcm9wcy5zbGlkZSkge1xuICAgICAgcmV0dXJuIHByb3BzLnN0b3JpZXNJbmRleENudCA8IDMgPyAnY2VudGVyJyA6ICdmbGV4LXN0YXJ0JztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuICdmbGV4LXN0YXJ0JztcbiAgICB9XG4gIH19O1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAke3N0eWxlcy5hcHBXaWR0aH1weDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gICR7KHByb3BzKSA9PiAocHJvcHMuc2xpZGUgPyAnc2Nyb2xsLXNuYXAtdHlwZTogeCBtYW5kYXRvcnknIDogJycpfTtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGh9cHgpIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIH1cbmA7XG5cbmV4cG9ydCBjb25zdCBIZWFkRXllQ2F0Y2hMaXN0ID0gc3R5bGVkLmxpPHsgZXllQ2F0Y2g6IHN0cmluZzsgc3Rvcmllc0luZGV4Q250OiBudW1iZXI7IHNsaWRlPzogYm9vbGVhbiB9PmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW4gbm93cmFwO1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcbiAgd2lkdGg6IDMzLjMzJTtcbiAgbWluLXdpZHRoOiA0MDBweDtcbiAgaGVpZ2h0OiBmaXQtY29udGVudDtcbiAgcGFkZGluZzogMTBweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICR7KHByb3BzKSA9PiAocHJvcHMuc2xpZGUgPyAnc2Nyb2xsLXNuYXAtYWxpZ246IHN0YXJ0JyA6ICcnKX07XG4gIGNvbG9yOiAjZmZmO1xuICBsaXN0LXN0eWxlOiBub25lO1xuICA6aG92ZXIge1xuICAgIGEge1xuICAgICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAzKTtcbiAgICAgIG9wYWNpdHk6IDAuODtcbiAgICB9XG4gICAgZGl2LmNyZWF0b3JEZXNjcmlwdGlvbiB7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBzb2xpZCAke3N0eWxlcy5mb250Q29sb3J9IDFweDtcbiAgICB9XG4gIH1cbiAgYSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgY29sb3I6ICNmZmY7XG4gICAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuICBkaXYuY3JlYXRvckJnIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxNjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke3N0eWxlcy5hcnRpY2xlQmdDb2xvcn07XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJyR7KHByb3BzKSA9PiAocHJvcHMuZXllQ2F0Y2ggIT09ICcnID8gcHJvcHMuZXllQ2F0Y2ggOiAnbm9uZScpfScpO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJTtcbiAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICR7c3R5bGVzLmJvcmRlckNvbG9yfTtcbiAgICBib3JkZXItcmFkaXVzOiAke3N0eWxlcy5iYXNlU2l6ZX1weDtcbiAgICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gICAgOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7c3R5bGVzLmFydGljbGVCZ0hvdmVyQ29sb3J9O1xuICAgIH1cbiAgfVxuICBkaXYuY3JlYXRvckRlc2NyaXB0aW9uIHtcbiAgICBtYXJnaW46ICR7c3R5bGVzLmJhc2VNYXJnaW59cHggMDtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBmb250LXdlaWdodDogMjAwO1xuICAgIGNvbG9yOiAke3N0eWxlcy5mb250Q29sb3J9O1xuICB9XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFdpZHRofXB4KSB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBtaW4td2lkdGg6IDUwJTtcbiAgfVxuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRTdHJpY3RXaWR0aH1weCkge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIG1pbi13aWR0aDogMTAwJTtcbiAgfVxuYDtcblxuZXhwb3J0IGNvbnN0IFZpZXdBbmNob3IgPSBzdHlsZWQuYWBcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiBhdXRvO1xuICBoZWlnaHQ6IDEwMCU7XG5gO1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkLCB7IGNzcyB9IGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IGNvbmYgZnJvbSAnY29tbW9uL2NvbmYnO1xuaW1wb3J0IHV0aWwgZnJvbSAnY29tbW9uL3V0aWwnO1xuXG5pbXBvcnQgRmxleCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0ZsZXgnO1xuaW1wb3J0IENoZWNrbWFyayBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL3N2Zy9DaGVja21hcmsnO1xuaW1wb3J0IHsgdXNlR2xvYmFsQ29udGV4dCwgR2xvYmFsQ29udGV4dFR5cGUgfSBmcm9tICdjb3Zlci9jb250YWluZXInO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuaW1wb3J0IHsgVXNlclR5cGUgfSBmcm9tICdjb3Zlci90YWxrbi5jb3Zlcic7XG5cbmV4cG9ydCBjb25zdCBob3ZlckFuaW1hdGlvbkJveFNoYWRvdyA9ICdzaGFkb3cnO1xuZXhwb3J0IGNvbnN0IGhvdmVyQW5pbWF0aW9uQmx1ciA9ICdibHVyJztcbmV4cG9ydCBjb25zdCBob3ZlckFuaW1hdGlvbkRlZmF1bHQgPSBob3ZlckFuaW1hdGlvbkJsdXI7XG5leHBvcnQgdHlwZSBIb3ZlckFuaW1hdGlvblR5cGUgPSB0eXBlb2YgaG92ZXJBbmltYXRpb25Cb3hTaGFkb3cgfCB0eXBlb2YgaG92ZXJBbmltYXRpb25CbHVyO1xuXG5leHBvcnQgdHlwZSBGaXhWYWx1ZXNUeXBlID0ge1xuICBlbWFpbDogc3RyaW5nO1xuICBiZzogc3RyaW5nO1xuICBpY29uOiBzdHJpbmc7XG4gIHNleGVzOiBzdHJpbmdbXTtcbiAgbGFuZ3VhZ2VzOiBzdHJpbmdbXTtcbiAgYmlydGhkYXk6IG51bWJlcjtcbn07XG5cbmV4cG9ydCBjb25zdCBmaXhWYWx1ZXNJbml0OiBGaXhWYWx1ZXNUeXBlID0ge1xuICBlbWFpbDogJycsXG4gIGJnOiAnJyxcbiAgaWNvbjogJycsXG4gIHNleGVzOiBbXSxcbiAgbGFuZ3VhZ2VzOiBbXSxcbiAgYmlydGhkYXk6IGNvbmYuZGVmYXVsdEJpcnRoZGF5VW5peHRpbWUsXG59O1xuXG5jb25zdCBNYXJrOiBSZWFjdC5GQzx7IGxhYmVsOiBzdHJpbmcgfT4gPSAoeyBsYWJlbCB9KSA9PiAoXG4gIDxNYXJrQ29udGFpbmVyPlxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImxhYmVsXCI+e2xhYmVsfTwvc3Bhbj5cbiAgPC9NYXJrQ29udGFpbmVyPlxuKTtcblxudHlwZSBQcm9wcyA9IHtcbiAgdXNlcj86IFVzZXJUeXBlO1xuICBoYW5kbGVPbkNsaWNrPzogKCkgPT4gdm9pZDtcbiAgaXNTYXZlZEFuaW1hdGlvbj86IGJvb2xlYW47XG4gIGhvdmVyQW5pbWF0aW9uVHlwZT86IEhvdmVyQW5pbWF0aW9uVHlwZTtcbiAgZnVsbFdpZHRoPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHtcbiAgdXNlciA9IHt9LFxuICBoYW5kbGVPbkNsaWNrLFxuICBpc1NhdmVkQW5pbWF0aW9uLFxuICBob3ZlckFuaW1hdGlvblR5cGUgPSBob3ZlckFuaW1hdGlvbkRlZmF1bHQsXG4gIGZ1bGxXaWR0aCA9IHRydWUsXG59KSA9PiB7XG4gIGNvbnN0IHsgaW5uZXJXaWR0aCwgaW5uZXJIZWlnaHQgfTogR2xvYmFsQ29udGV4dFR5cGUgPSB1c2VHbG9iYWxDb250ZXh0KCk7XG4gIGNvbnN0IFtpc0hvdmVyLCBzZXRJc0hvdmVyXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW2RpZE1vdW50LCBzZXREaWRNb3VudF0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IGNvbnRyb2xIZWlnaHQgPSBnZXRDb250cm9sSGVpZ2h0KGlubmVyV2lkdGgsIGlubmVySGVpZ2h0KTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldERpZE1vdW50KHRydWUpO1xuICB9LCBbXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyPlxuICAgICAgPEJhY2tncm91bmRcbiAgICAgICAgZW1haWw9e3VzZXIuZW1haWx9XG4gICAgICAgIGltYWdlPXt1c2VyLmJnfVxuICAgICAgICBpc0hvdmVyPXtpc0hvdmVyfVxuICAgICAgICBob3ZlckFuaW1hdGlvblR5cGU9e2hvdmVyQW5pbWF0aW9uVHlwZX1cbiAgICAgICAgY29udHJvbEhlaWdodD17Y29udHJvbEhlaWdodH1cbiAgICAgICAgZnVsbFdpZHRoPXtmdWxsV2lkdGh9XG4gICAgICAvPlxuICAgICAge2RpZE1vdW50ICYmIChcbiAgICAgICAgPEJvZHlcbiAgICAgICAgICBjbGFzc05hbWU9XCJFeWVDYXRjaE1haW5Cb2R5XCJcbiAgICAgICAgICBvbk1vdXNlT3Zlcj17KCkgPT4gc2V0SXNIb3Zlcih0cnVlKX1cbiAgICAgICAgICBvbk1vdXNlTGVhdmU9eygpID0+IHNldElzSG92ZXIoZmFsc2UpfVxuICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZU9uQ2xpY2sgJiYgaGFuZGxlT25DbGlja31cbiAgICAgICAgICBmdWxsV2lkdGg9e2Z1bGxXaWR0aH1cbiAgICAgICAgICBmbG93PVwicm93IG5vd3JhcFwiXG4gICAgICAgICAgYWxpZ25JdGVtcz1cImNlbnRlclwiXG4gICAgICAgICAganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIlxuICAgICAgICAgIGNvbnRyb2xIZWlnaHQ9e2NvbnRyb2xIZWlnaHR9PlxuICAgICAgICAgIDxQcm9maWxlQ29udGVudCBjbGFzc05hbWU9XCJQcm9maWxlQ29udGVudFwiIGZsb3c9XCJyb3cgbm93cmFwXCIgYWxpZ25JdGVtcz1cImZsZXgtc3RhcnRcIiBqdXN0aWZ5Q29udGVudD1cImZsZXgtc3RhcnRcIj5cbiAgICAgICAgICAgIDxVc2VySWNvbiBlbWFpbD17dXNlci5lbWFpbH0gaW1hZ2U9e3VzZXIuaWNvbn0gLz5cbiAgICAgICAgICAgIDxGbGV4IGNsYXNzTmFtZT1cInVzZXJEYXRhXCIgZmxvdz1cImNvbHVtbiBub3dyYXBcIiBzaWRlTWFyZ2luIHNpZGVQYWRkaW5nPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm5hbWVcIj57dXNlci5uYW1lfTwvZGl2PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImFnZVwiPkFHRToge3V0aWwuZ2V0QWdlQnlCaXJ0aGRheSh1c2VyLmJpcnRoZGF5KX08L2Rpdj5cbiAgICAgICAgICAgICAgPEZsZXggY2xhc3NOYW1lPVwidXNlclRhZ3NcIiBmbG93PVwicm93IHdyYXBcIiB1cHBlck1hcmdpbj5cbiAgICAgICAgICAgICAgICB7dXNlciAmJlxuICAgICAgICAgICAgICAgICAgdXNlci5oYXNTZWxmVGFncyAmJlxuICAgICAgICAgICAgICAgICAgT2JqZWN0LmtleXModXNlci5oYXNTZWxmVGFncykubWFwKChrZXkpID0+IHVzZXIuaGFzU2VsZlRhZ3Nba2V5XSAmJiA8TWFyayBrZXk9e2tleX0gbGFiZWw9e2tleX0gLz4pfVxuICAgICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgICAgIDxGbGV4IGNsYXNzTmFtZT1cInNlbGZJbnRyb1wiIGZsb3c9XCJyb3cgd3JhcFwiIHVwcGVyTWFyZ2luPlxuICAgICAgICAgICAgICAgIFNlbGYgSW50cm9kdWN0aW9uIFRleHQuLi4uLi5cbiAgICAgICAgICAgICAgPC9GbGV4PlxuICAgICAgICAgICAgPC9GbGV4PlxuICAgICAgICAgIDwvUHJvZmlsZUNvbnRlbnQ+XG4gICAgICAgICAge2lzU2F2ZWRBbmltYXRpb24gJiYgPENoZWNrbWFyayAvPn1cbiAgICAgICAgPC9Cb2R5PlxuICAgICAgKX1cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLnNlY3Rpb25gXG4gIGRpc3BsYXk6IGNvbnRlbnRzO1xuYDtcblxudHlwZSBCYWNrZ3JvdW5kUHJvcHNUeXBlID0ge1xuICBlbWFpbDogc3RyaW5nO1xuICBpc0hvdmVyOiBib29sZWFuO1xuICBob3ZlckFuaW1hdGlvblR5cGU6IEhvdmVyQW5pbWF0aW9uVHlwZTtcbiAgY29udHJvbEhlaWdodDogbnVtYmVyO1xuICBmdWxsV2lkdGg6IGJvb2xlYW47XG4gIGltYWdlPzogc3RyaW5nO1xufTtcblxuY29uc3QgQmFja2dyb3VuZCA9IHN0eWxlZC5kaXY8QmFja2dyb3VuZFByb3BzVHlwZT5gXG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgd2lkdGg6ICR7KHByb3BzKSA9PiAocHJvcHMuZnVsbFdpZHRoID8gYCR7c3R5bGVzLmV5ZUNhdGNoVndWYWx1ZX12d2AgOiAnMTAwJScpfTtcbiAgaGVpZ2h0OiAkeyhwcm9wcykgPT4gcHJvcHMuY29udHJvbEhlaWdodH1weDtcbiAgbWluLWhlaWdodDogJHtzdHlsZXMuZXllQ2F0Y2hNaW5IZWlnaHRQeFZhbHVlfXB4O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHsocHJvcHMpID0+IGdldEJhY2tncm91bmRJbWFnZSh7IGVtYWlsOiBwcm9wcy5lbWFpbCwgaW1hZ2U6IHByb3BzLmltYWdlIH0pfSk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgY29sb3I6ICR7c3R5bGVzLndoaXRlQ29sb3J9O1xuICBvcGFjaXR5OiAxO1xuICBib3gtc2hhZG93OiAkeyhwcm9wcykgPT4gZ2V0Qm94U2hhZG93KHByb3BzKX07XG4gIHRyYW5zaXRpb246ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbiAgdHJhbnNmb3JtOiAkeyhwcm9wcykgPT4gZ2V0QmFja2dyb3VuZFRyYW5zZm9ybShwcm9wcyl9O1xuICA6YmVmb3JlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMyk7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICBib3R0b206IDA7XG4gICAgbGVmdDogMDtcbiAgICBjb250ZW50OiAnICc7XG4gICAgYmFja2Ryb3AtZmlsdGVyOiAkeyhwcm9wcykgPT4gZ2V0QmFja2Ryb3BGaWx0ZXIocHJvcHMpfTtcbiAgICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIH1cblxuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRTdHJpY3RXaWR0aH1weCkge1xuICAgIGhlaWdodDogJHtzdHlsZXMuZXllQ2F0Y2hWaFZhbHVlfXZoO1xuICAgIG1pbi1oZWlnaHQ6IHVuc2V0O1xuICB9XG5gO1xuXG50eXBlIEJvZHlQcm9wc1R5cGUgPSB7XG4gIGNvbnRyb2xIZWlnaHQ6IG51bWJlcjtcbiAgZnVsbFdpZHRoOiBib29sZWFuO1xuICBvbk1vdXNlT3ZlcjogKCkgPT4gdm9pZDtcbiAgb25Nb3VzZUxlYXZlOiAoKSA9PiB2b2lkO1xufTtcblxuY29uc3QgQm9keSA9IHN0eWxlZChGbGV4KTxCb2R5UHJvcHNUeXBlPmBcbiAgd2lkdGg6ICR7KHByb3BzKSA9PiAocHJvcHMuZnVsbFdpZHRoID8gYCR7c3R5bGVzLmV5ZUNhdGNoVndWYWx1ZX12d2AgOiAnMTAwJScpfTtcbiAgaGVpZ2h0OiAkeyhwcm9wcykgPT4gcHJvcHMuY29udHJvbEhlaWdodH1weDtcbiAgbWluLWhlaWdodDogJHtzdHlsZXMuZXllQ2F0Y2hNaW5IZWlnaHRQeFZhbHVlfXB4O1xuICBtYXJnaW4tdG9wOiAtJHsocHJvcHMpID0+IHByb3BzLmNvbnRyb2xIZWlnaHR9cHg7XG4gIHotaW5kZXg6ICR7c3R5bGVzLnpJbmRleC5leWVDYXRjaH07XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGh9cHgpIHtcbiAgICBoZWlnaHQ6ICR7c3R5bGVzLmV5ZUNhdGNoVmhWYWx1ZX12aDtcbiAgICBtaW4taGVpZ2h0OiB1bnNldDtcbiAgfVxuYDtcblxuY29uc3QgUHJvZmlsZUNvbnRlbnQgPSBzdHlsZWQoRmxleClgXG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6ICR7c3R5bGVzLmFwcFdpZHRofXB4O1xuICBtYXJnaW4tbGVmdDogNSU7XG4gIGNvbG9yOiAke3N0eWxlcy53aGl0ZUNvbG9yfTtcblxuICAubmFtZSB7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICBmb250LXNpemU6IDM1cHg7XG4gIH1cblxuICAuYWdlIHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gIH1cblxuICAudXNlclRhZ3Mge1xuICAgIG1hcmdpbi1sZWZ0OiAtJHtzdHlsZXMuYmFzZU1hcmdpbn1weDtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gIH1cblxuICAuc2VsZkludHJvIHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gIH1cblxuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRTdHJpY3RXaWR0aH1weCkge1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgbWFyZ2luLWxlZnQ6IDV2dztcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIC51c2VyRGF0YSB7XG4gICAgICBwYWRkaW5nOiAwO1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgIG1hcmdpbi1yaWdodDogMDtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICB9XG5cbiAgICAubmFtZSB7XG4gICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgZm9udC1zaXplOiAyNXB4O1xuICAgIH1cblxuICAgIC5hZ2Uge1xuICAgICAgZm9udC1zaXplOiAxMnB4O1xuICAgIH1cblxuICAgIC51c2VyVGFncyB7XG4gICAgICBtYXJnaW4tbGVmdDogLSR7c3R5bGVzLmJhc2VNYXJnaW59cHg7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgfVxuXG4gICAgLnNlbGZJbnRybyB7XG4gICAgICBmb250LXNpemU6IDEycHg7XG4gICAgfVxuICB9XG5gO1xuXG50eXBlIFVzZXJJY29uUHJvcHNUeXBlID0ge1xuICBlbWFpbDogc3RyaW5nO1xuICBpbWFnZTogc3RyaW5nO1xufTtcblxuY29uc3QgVXNlckljb24gPSBzdHlsZWQuZGl2PFVzZXJJY29uUHJvcHNUeXBlPmBcbiAgd2lkdGg6IDEyMHB4O1xuICBoZWlnaHQ6IDEyMHB4O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHsocHJvcHMpID0+IGdldEJhY2tncm91bmRJbWFnZSh7IGVtYWlsOiBwcm9wcy5lbWFpbCwgaW1hZ2U6IHByb3BzLmltYWdlIH0pfSk7XG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFN0cmljdFdpZHRofXB4KSB7XG4gICAgd2lkdGg6IDYwcHg7XG4gICAgaGVpZ2h0OiA2MHB4O1xuICB9XG5gO1xuXG5jb25zdCBNYXJrQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcbiAgYmFja2dyb3VuZDogJHtzdHlsZXMudGhlbWVDb2xvcn07XG4gIHBhZGRpbmc6ICR7c3R5bGVzLmJhc2VQYWRkaW5nfXB4ICR7c3R5bGVzLmJhc2VQYWRkaW5nICogMn1weDtcbiAgbWFyZ2luLXJpZ2h0OiAke3N0eWxlcy5kb3VibGVNYXJnaW59cHg7XG4gIGNvbG9yOiAke3N0eWxlcy53aGl0ZUNvbG9yfTtcbiAgYm9yZGVyLXJhZGl1czogMzBweDtcbmA7XG5cbmNvbnN0IGdldENvbnRyb2xIZWlnaHQgPSAoaW5uZXJXaWR0aCwgaW5uZXJIZWlnaHQpID0+IHtcbiAgY29uc3QgeyBzcExheW91dFN0cmljdFdpZHRoLCBleWVDYXRjaE1pbkhlaWdodFB4VmFsdWUgfSA9IHN0eWxlcztcbiAgbGV0IGNvbnRyb2xIZWlnaHQgPSBNYXRoLmZsb29yKGlubmVySGVpZ2h0ICogKHN0eWxlcy5leWVDYXRjaFZoVmFsdWUgLyAxMDApKTtcbiAgaWYgKGlubmVyV2lkdGggPCBzcExheW91dFN0cmljdFdpZHRoKSB7XG4gICAgcmV0dXJuIGNvbnRyb2xIZWlnaHQ7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGNvbnRyb2xIZWlnaHQgPCBleWVDYXRjaE1pbkhlaWdodFB4VmFsdWUgPyBleWVDYXRjaE1pbkhlaWdodFB4VmFsdWUgOiBjb250cm9sSGVpZ2h0O1xuICB9XG59O1xuXG5jb25zdCBnZXRCYWNrZ3JvdW5kSW1hZ2UgPSAoeyBlbWFpbCwgaW1hZ2UgfSkgPT4ge1xuICBpZiAoaW1hZ2UgJiYgaW1hZ2UgIT09ICcnKSB7XG4gICAgcmV0dXJuIGBodHRwczovLyR7Y29uZi5hc3NldHNDb3ZlclBhdGh9JHtlbWFpbH0vJHtpbWFnZX1gO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiAnbm9uZSc7XG4gIH1cbn07XG5cbmNvbnN0IGdldEJhY2tncm91bmRUcmFuc2Zvcm0gPSAocHJvcHM6IEJhY2tncm91bmRQcm9wc1R5cGUpOiBzdHJpbmcgPT4ge1xuICBpZiAocHJvcHMuaXNIb3Zlcikge1xuICAgIGlmIChwcm9wcy5ob3ZlckFuaW1hdGlvblR5cGUgPT09IGhvdmVyQW5pbWF0aW9uQmx1cikge1xuICAgICAgcmV0dXJuIGBzY2FsZSgxLjAzKWA7XG4gICAgfSBlbHNlIGlmIChwcm9wcy5ob3ZlckFuaW1hdGlvblR5cGUgPT09IGhvdmVyQW5pbWF0aW9uQm94U2hhZG93KSB7XG4gICAgICByZXR1cm4gYHNjYWxlKDEpYDtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGBzY2FsZSgxKWA7XG4gICAgfVxuICB9IGVsc2Uge1xuICAgIHJldHVybiAnc2NhbGUoMSknO1xuICB9XG59O1xuXG5jb25zdCBnZXRCYWNrZHJvcEZpbHRlciA9IChwcm9wczogQmFja2dyb3VuZFByb3BzVHlwZSk6IHN0cmluZyA9PiB7XG4gIGlmIChwcm9wcy5pc0hvdmVyKSB7XG4gICAgcmV0dXJuIGBibHVyKDJweCkgYnJpZ2h0bmVzcygwLjcpYDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gYGJsdXIoMCkgYnJpZ2h0bmVzcygxKWA7XG4gIH1cbn07XG5cbmNvbnN0IGdldEJveFNoYWRvdyA9IChwcm9wczogQmFja2dyb3VuZFByb3BzVHlwZSk6IHN0cmluZyA9PiB7XG4gIGlmIChwcm9wcy5pc0hvdmVyICYmIHByb3BzLmhvdmVyQW5pbWF0aW9uVHlwZSA9PT0gaG92ZXJBbmltYXRpb25Cb3hTaGFkb3cpIHtcbiAgICByZXR1cm4gc3R5bGVzLnNoYWRvd0hvcml6b25CYXNlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBgbm9uZWA7XG4gIH1cbn07XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQsIHsgY3NzIH0gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgY29uZiBmcm9tICdjb21tb24vY29uZic7XG5cbmltcG9ydCBhcGkgZnJvbSAnY292ZXIvYXBpJztcbmltcG9ydCBCdXR0b24sIHsgYnV0dG9uVGhlbWVCcmlnaHQsIGJ1dHRvblRoZW1lSG90IH0gZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9CdXR0b24nO1xuaW1wb3J0IEZsZXggZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9GbGV4JztcbmltcG9ydCBIIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvSCc7XG5pbXBvcnQgSW5wdXQgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9pbnB1dCc7XG5pbXBvcnQgeyBpbWFnZUJnLCBpbWFnZUljb24gfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL2lucHV0L0Ryb3BJbWFnZSc7XG5pbXBvcnQgeyBQcm9maWxlcyB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0NvbnRlbnRzL1Byb2ZpbGUvY29tbW9uJztcbmltcG9ydCB7IFVzZXJNb2RhbE9wdGlvblR5cGUgfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL2luZGV4JztcbmltcG9ydCBDb250ZW50IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0V5ZUNhdGNoL0NvbnRlbnQnO1xuaW1wb3J0IE1vZGFsIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL01vZGFsJztcbmltcG9ydCB7IHVzZUdsb2JhbENvbnRleHQsIEdsb2JhbENvbnRleHRUeXBlIH0gZnJvbSAnY292ZXIvY29udGFpbmVyJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcbmltcG9ydCB7IFVzZXJUeXBlLCBVc2VyVGFnc1R5cGUgfSBmcm9tICdjb3Zlci90YWxrbi5jb3Zlcic7XG5cbmV4cG9ydCB0eXBlIEZpeFZhbHVlc1R5cGUgPSB7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIGJnOiBzdHJpbmc7XG4gIGljb246IHN0cmluZztcbiAgc2V4ZXM6IHN0cmluZ1tdO1xuICBsYW5ndWFnZXM6IHN0cmluZ1tdO1xuICBiaXJ0aGRheTogbnVtYmVyO1xufTtcblxuZXhwb3J0IGNvbnN0IGZpeFZhbHVlc0luaXQ6IEZpeFZhbHVlc1R5cGUgPSB7XG4gIGVtYWlsOiAnJyxcbiAgYmc6ICcnLFxuICBpY29uOiAnJyxcbiAgc2V4ZXM6IFtdLFxuICBsYW5ndWFnZXM6IFtdLFxuICBiaXJ0aGRheTogY29uZi5kZWZhdWx0QmlydGhkYXlVbml4dGltZSxcbn07XG5cbmNvbnN0IE1hcms6IFJlYWN0LkZDPHsgbGFiZWw6IHN0cmluZzsgY250OiBudW1iZXIgfT4gPSAoeyBsYWJlbCB9KSA9PiAoXG4gIDxNYXJrQ29udGFpbmVyPlxuICAgIDxzcGFuIGNsYXNzTmFtZT1cImxhYmVsXCI+e2xhYmVsfTwvc3Bhbj5cbiAgPC9NYXJrQ29udGFpbmVyPlxuKTtcblxudHlwZSBQcm9wcyA9IHtcbiAgaXNNeVBhZ2U6IGJvb2xlYW47XG4gIHVzZXJNb2RhbE9wdGlvbnM6IFVzZXJNb2RhbE9wdGlvblR5cGU7XG4gIHVzZXI6IFVzZXJUeXBlO1xuICB1c2VyVGFnczogVXNlclRhZ3NUeXBlO1xuICBzZXRVc2VyOiBSZWFjdC5EaXNwYXRjaDxSZWFjdC5TZXRTdGF0ZUFjdGlvbjxVc2VyVHlwZT4+O1xuICBzZXRTZWxlY3RQcm9maWxlTW9kYWxPcHRpb246IFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPFVzZXJNb2RhbE9wdGlvblR5cGU+Pjtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgaXNNeVBhZ2UsIHVzZXJUYWdzLCB1c2VyTW9kYWxPcHRpb25zLCB1c2VyLCBzZXRVc2VyLCBzZXRTZWxlY3RQcm9maWxlTW9kYWxPcHRpb24gfSkgPT4ge1xuICBjb25zdCBbaXNTYXZlZEFuaW1hdGlvbiwgc2V0SXNTYXZlZEFuaW1hdGlvbl0gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtpc0Rpc2FibGVkU2F2ZUJ1dHRvbiwgc2V0SXNEaXNhYmxlZFNhdmVCdXR0b25dID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbc2hvd01vZGFsLCBzZXRTaG93TW9kYWxdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbYmdGb3JtRGF0YSwgc2V0QmdGcm9tRGF0YV0gPSB1c2VTdGF0ZTxGb3JtRGF0YT4obmV3IEZvcm1EYXRhKCkpO1xuICBjb25zdCBbaWNvbkZvcm1EYXRhLCBzZXRJY29uRm9ybURhdGFdID0gdXNlU3RhdGU8Rm9ybURhdGE+KG5ldyBGb3JtRGF0YSgpKTtcbiAgY29uc3QgW2ZpeFZhbHVlcywgc2V0Rml4VmFsdWVzXSA9IHVzZVN0YXRlPEZpeFZhbHVlc1R5cGU+KGZpeFZhbHVlc0luaXQpO1xuICBjb25zdCBlbWFpbCA9IHVzZXIgJiYgdXNlci5lbWFpbCA/IHVzZXIuZW1haWwgOiAnJztcblxuICBjb25zdCBoYW5kbGVPbkNoYW5nZUJnID0gKGZvcm1EYXRhLCBmaWxlTmFtZSkgPT4ge1xuICAgIHNldEJnRnJvbURhdGEoZm9ybURhdGEpO1xuICAgIHNldEZpeFZhbHVlcyh7IC4uLmZpeFZhbHVlcywgYmc6IGZpbGVOYW1lIH0pO1xuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2hhbmdlSWNvbiA9IChmb3JtRGF0YSwgZmlsZU5hbWUpID0+IHtcbiAgICBzZXRJY29uRm9ybURhdGEoZm9ybURhdGEpO1xuICAgIHNldEZpeFZhbHVlcyh7IC4uLmZpeFZhbHVlcywgaWNvbjogZmlsZU5hbWUgfSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VCaXJ0aGRheSA9IChiaXJ0aGRheSkgPT4ge1xuICAgIHNldEZpeFZhbHVlcyh7IC4uLmZpeFZhbHVlcywgYmlydGhkYXkgfSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VMYW5ndWFnZXMgPSAobGFuZ3VhZ2VzKSA9PiB7XG4gICAgc2V0Rml4VmFsdWVzKHsgLi4uZml4VmFsdWVzLCBsYW5ndWFnZXMgfSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DaGFuZ2VTZXhlcyA9IChzZXhlcykgPT4ge1xuICAgIHNldEZpeFZhbHVlcyh7IC4uLmZpeFZhbHVlcywgc2V4ZXMgfSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25TYXZlID0gKCkgPT4ge1xuICAgIGNvbnN0IHByb21pc2VzID0gW107XG4gICAgY29uc3QgZW1haWwgPSB1c2VyLmVtYWlsO1xuICAgIGNvbnN0IHVwZGF0ZVVzZXIgPSB7XG4gICAgICAuLi51c2VyLFxuICAgICAgZW1haWwsXG4gICAgICBiZzogZml4VmFsdWVzLmJnLFxuICAgICAgaWNvbjogZml4VmFsdWVzLmljb24sXG4gICAgICBsYW5ndWFnZXM6IGZpeFZhbHVlcy5sYW5ndWFnZXMsXG4gICAgICBzZXhlczogZml4VmFsdWVzLnNleGVzLFxuICAgICAgYmlydGhkYXk6IGZpeFZhbHVlcy5iaXJ0aGRheSxcbiAgICB9O1xuICAgIGxldCBpc1VwZGF0ZUltYWdlID0gZmFsc2U7XG5cbiAgICBzZXRVc2VyKHVwZGF0ZVVzZXIpO1xuICAgIHNldFNlbGVjdFByb2ZpbGVNb2RhbE9wdGlvbih7XG4gICAgICAuLi51c2VyTW9kYWxPcHRpb25zLFxuICAgICAgYmc6IHVwZGF0ZVVzZXIuYmcsXG4gICAgICBpY29uOiB1cGRhdGVVc2VyLmljb24sXG4gICAgICBsYW5ndWFnZXM6IHVwZGF0ZVVzZXIubGFuZ3VhZ2VzLFxuICAgICAgc2V4ZXM6IHVwZGF0ZVVzZXIuc2V4ZXMsXG4gICAgICBiaXJ0aGRheTogdXBkYXRlVXNlci5iaXJ0aGRheSxcbiAgICB9KTtcblxuICAgIGlmIChpY29uRm9ybURhdGEuaGFzKCdpY29uJykpIHtcbiAgICAgIGlzVXBkYXRlSW1hZ2UgPSB0cnVlO1xuICAgICAgaWNvbkZvcm1EYXRhLnNldCgnZW1haWwnLCBlbWFpbCk7XG4gICAgICBwcm9taXNlcy5wdXNoKGFwaS5mb3JtRGF0YSgnc2F2ZVVzZXJJY29uJywgZW1haWwsIGljb25Gb3JtRGF0YSkpO1xuICAgIH1cblxuICAgIGlmIChiZ0Zvcm1EYXRhLmhhcygnYmcnKSkge1xuICAgICAgaXNVcGRhdGVJbWFnZSA9IHRydWU7XG4gICAgICBiZ0Zvcm1EYXRhLnNldCgnZW1haWwnLCBlbWFpbCk7XG4gICAgICBwcm9taXNlcy5wdXNoKGFwaS5mb3JtRGF0YSgnc2F2ZVVzZXJCZycsIGVtYWlsLCBiZ0Zvcm1EYXRhKSk7XG4gICAgfVxuXG4gICAgcHJvbWlzZXMucHVzaChhcGkuanNvbignc2F2ZVVzZXInLCB1cGRhdGVVc2VyKSk7XG5cbiAgICBQcm9taXNlLmFsbChwcm9taXNlcykudGhlbigoKSA9PiB7XG4gICAgICBpZiAoaXNVcGRhdGVJbWFnZSkge1xuICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBzZXRJc1NhdmVkQW5pbWF0aW9uKHRydWUpO1xuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBzZXRJc1NhdmVkQW5pbWF0aW9uKGZhbHNlKTtcbiAgICAgICAgfSwgMjAwMCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoXG4gICAgICBmaXhWYWx1ZXMubGFuZ3VhZ2VzICYmXG4gICAgICBmaXhWYWx1ZXMuc2V4ZXMgJiZcbiAgICAgIGZpeFZhbHVlcy5sYW5ndWFnZXMubGVuZ3RoID4gMCAmJlxuICAgICAgZml4VmFsdWVzLnNleGVzLmxlbmd0aCA+IDAgJiZcbiAgICAgIGZpeFZhbHVlcy5iaXJ0aGRheSAhPT0gMFxuICAgICkge1xuICAgICAgc2V0SXNEaXNhYmxlZFNhdmVCdXR0b24oZmFsc2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZXRJc0Rpc2FibGVkU2F2ZUJ1dHRvbih0cnVlKTtcbiAgICB9XG4gIH0sIFtmaXhWYWx1ZXNdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldEZpeFZhbHVlcyh7XG4gICAgICAuLi5maXhWYWx1ZXMsXG4gICAgICBiZzogdXNlck1vZGFsT3B0aW9ucy5iZyxcbiAgICAgIGljb246IHVzZXJNb2RhbE9wdGlvbnMuaWNvbixcbiAgICAgIGxhbmd1YWdlczogdXNlck1vZGFsT3B0aW9ucy5sYW5ndWFnZXMsXG4gICAgICBzZXhlczogdXNlck1vZGFsT3B0aW9ucy5zZXhlcyxcbiAgICAgIGJpcnRoZGF5OiB1c2VyTW9kYWxPcHRpb25zLmJpcnRoZGF5LFxuICAgIH0pO1xuICB9LCBbdXNlck1vZGFsT3B0aW9uc10pO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxDb250ZW50IHVzZXI9e3VzZXJ9IGhhbmRsZU9uQ2xpY2s9eygpID0+IGlzTXlQYWdlICYmIHNldFNob3dNb2RhbCghc2hvd01vZGFsKX0gaXNTYXZlZEFuaW1hdGlvbj17aXNTYXZlZEFuaW1hdGlvbn0gLz5cblxuICAgICAgPE1vZGFsLlN0cnVjdHVyZVxuICAgICAgICBzaG93PXtzaG93TW9kYWx9XG4gICAgICAgIGNsb3NlTW9kYWw9eygpID0+IHNldFNob3dNb2RhbChmYWxzZSl9XG4gICAgICAgIGhlYWRlcj17PEguRml2ZT5Qcm9maWxlKEVkaXQpPC9ILkZpdmU+fVxuICAgICAgICBjb250ZW50PXtcbiAgICAgICAgICA8RmxleCBmbG93PVwiY29sdW1uIG5vd3JhcFwiPlxuICAgICAgICAgICAgPElucHV0LkRyb3BJbWFnZVxuICAgICAgICAgICAgICB0eXBlPXtpbWFnZUJnfVxuICAgICAgICAgICAgICBlbWFpbD17ZW1haWx9XG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cIklucHV0RHJvcEltYWdlQmdcIlxuICAgICAgICAgICAgICBvbkNoYW5nZT17aGFuZGxlT25DaGFuZ2VCZ31cbiAgICAgICAgICAgICAgdmFsdWU9e3VzZXJNb2RhbE9wdGlvbnMuYmd9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPElucHV0RHJvcEltYWdlSWNvblxuICAgICAgICAgICAgICB0eXBlPXtpbWFnZUljb259XG4gICAgICAgICAgICAgIGVtYWlsPXtlbWFpbH1cbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiSW5wdXREcm9wSW1hZ2VJY29uXCJcbiAgICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZU9uQ2hhbmdlSWNvbn1cbiAgICAgICAgICAgICAgdmFsdWU9e3VzZXJNb2RhbE9wdGlvbnMuaWNvbn1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8YnIgLz5cbiAgICAgICAgICAgIDxQcm9maWxlc1xuICAgICAgICAgICAgICB0eXBlPVwiRXllQ2F0Y2hNYWluXCJcbiAgICAgICAgICAgICAgdXNlck1vZGFsT3B0aW9ucz17eyAuLi51c2VyTW9kYWxPcHRpb25zLCBpc0VkaXRhYmxlOiB0cnVlIH19XG4gICAgICAgICAgICAgIGhhbmRsZU9uQ2hhbmdlTGFuZ3VhZ2VzPXtoYW5kbGVPbkNoYW5nZUxhbmd1YWdlc31cbiAgICAgICAgICAgICAgaGFuZGxlT25DaGFuZ2VTZXhlcz17aGFuZGxlT25DaGFuZ2VTZXhlc31cbiAgICAgICAgICAgICAgaGFuZGxlT25DaGFuZ2VCaXJ0aGRheT17aGFuZGxlT25DaGFuZ2VCaXJ0aGRheX1cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgPC9GbGV4PlxuICAgICAgICB9XG4gICAgICAgIGZvb3Rlcj17XG4gICAgICAgICAgPD5cbiAgICAgICAgICAgIDxCdXR0b24gZGlzYWJsZWQ9e2ZhbHNlfSB0aGVtZT17YnV0dG9uVGhlbWVCcmlnaHR9IG9uQ2xpY2s9eygpID0+IHNldFNob3dNb2RhbChmYWxzZSl9IHNpZGVNYXJnaW4+XG4gICAgICAgICAgICAgIENMT1NFXG4gICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgZGlzYWJsZWQ9e2lzRGlzYWJsZWRTYXZlQnV0dG9ufVxuICAgICAgICAgICAgICB0aGVtZT17aXNEaXNhYmxlZFNhdmVCdXR0b24gPyBidXR0b25UaGVtZUhvdCA6IGJ1dHRvblRoZW1lSG90fVxuICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICAgICAgaGFuZGxlT25TYXZlKCk7XG4gICAgICAgICAgICAgICAgc2V0U2hvd01vZGFsKGZhbHNlKTtcbiAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgc2lkZU1hcmdpbj5cbiAgICAgICAgICAgICAgU0FWRVxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgICAgPC8+XG4gICAgICAgIH1cbiAgICAgIC8+XG4gICAgPC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbmNvbnN0IElucHV0RHJvcEltYWdlSWNvbiA9IHN0eWxlZChJbnB1dC5Ecm9wSW1hZ2UpYFxuICBtYXJnaW4tdG9wOiAtMTkwcHg7XG4gIG1hcmdpbi1sZWZ0OiAzMnB4O1xuICBtYXJnaW4tYm90dG9tOiAxMDBweDtcbmA7XG5cbmNvbnN0IE1hcmtDb250YWluZXIgPSBzdHlsZWQuZGl2YFxuICBiYWNrZ3JvdW5kOiAke3N0eWxlcy50aGVtZUNvbG9yfTtcbiAgcGFkZGluZzogMTBweCAke3N0eWxlcy5kb3VibGVQYWRkaW5nICogMS41fXB4O1xuICBtYXJnaW4tcmlnaHQ6ICR7c3R5bGVzLmRvdWJsZU1hcmdpbn1weDtcbiAgY29sb3I6ICR7c3R5bGVzLndoaXRlQ29sb3J9O1xuICBib3JkZXItcmFkaXVzOiAzMHB4O1xuICAuY250IHtcbiAgICBmb250LXNpemU6IDE1cHg7XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGh9cHgpIHtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gIH1cbmA7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSwgdXNlUmVmIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBjb25mIGZyb20gJ2NvbW1vbi9jb25mJztcbmltcG9ydCB7IFN0b3JpZXNJbmRleFR5cGUsIGNvbmZpZ1N0b3JpZXNMaW1pdCB9IGZyb20gJ2NvbW1vbi90YWxrbkNvbmZpZyc7XG5cbmltcG9ydCB7IEhlYWRFeWVDYXRjaExpc3QsIFZpZXdBbmNob3IsIGdldFNjcm9sbFdpZHRoIH0gZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvU3RvcnkvaW5kZXgnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG5leHBvcnQgY29uc3Qgc3Rvcmllc0luZGV4Q29udGVudHNJbml0OiBTdG9yaWVzSW5kZXhUeXBlW10gPSBbXTtcbnR5cGUgUHJvcHMgPSB7XG4gIHNsaWRlPzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgc2xpZGUgfSkgPT4ge1xuICBjb25zdCBzdG9yaWVzRXllQ2F0Y2hPcmRlclJlZiA9IHVzZVJlZjxIVE1MRWxlbWVudD4oKTtcbiAgY29uc3QgW3N0b3JpZXNJbmRleCwgc2V0U3Rvcmllc0luZGV4XSA9IHVzZVN0YXRlPFN0b3JpZXNJbmRleFR5cGVbXT4oc3Rvcmllc0luZGV4Q29udGVudHNJbml0KTtcbiAgY29uc3QgW3N0b3JpZXNFeWVDYXRjaHMsIHNldFN0b3JpZXNFeWVDYXRjaHNdID0gdXNlU3RhdGU8U3Rvcmllc0luZGV4VHlwZVtdPihzdG9yaWVzSW5kZXhDb250ZW50c0luaXQpO1xuICBjb25zdCBbZXllQ2F0Y2hTY3JvbGxJbmRleCwgc2V0RXllQ2F0Y2hTY3JvbGxJbmRleF0gPSB1c2VTdGF0ZSgwKTtcbiAgY29uc3Qgc3Rvcmllc0luZGV4Q250ID0gd2luZG93LnRhbGtuQ29uZmlnLnN0b3JpZXNJbmRleC5sZW5ndGg7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoc3Rvcmllc0V5ZUNhdGNoT3JkZXJSZWYuY3VycmVudCkge1xuICAgICAgY29uc3Qgc2Nyb2xsSW5kZXggPSBBcnJheS5mcm9tKHN0b3JpZXNFeWVDYXRjaE9yZGVyUmVmLmN1cnJlbnQuY2hpbGRyZW4pLmZpbmRJbmRleCgoY2hpbGQpID0+IHtcbiAgICAgICAgY29uc3QgY2hpbGRFbGVtZW50ID0gY2hpbGQgYXMgSFRNTEVsZW1lbnQ7XG4gICAgICAgIHJldHVybiBOdW1iZXIoY2hpbGRFbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1ubycpKSA9PT0gd2luZG93LnRhbGtuU3Rvcmllc1BvaW50ZXI7XG4gICAgICB9KTtcblxuICAgICAgaWYgKHNjcm9sbEluZGV4ID49IDApIHtcbiAgICAgICAgc3Rvcmllc0V5ZUNhdGNoT3JkZXJSZWYuY3VycmVudC5zY3JvbGxMZWZ0ID0gZ2V0U2Nyb2xsV2lkdGgoKSAqIHNjcm9sbEluZGV4O1xuICAgICAgICBzZXRFeWVDYXRjaFNjcm9sbEluZGV4KHNjcm9sbEluZGV4KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIFtzdG9yaWVzRXllQ2F0Y2hPcmRlclJlZi5jdXJyZW50LCB3aW5kb3cudGFsa25TdG9yaWVzUG9pbnRlcl0pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgY29uc3QgX29mZnNldCA9IHdpbmRvdy50YWxrblN0b3JpZXNQb2ludGVyIC0gY29uZmlnU3Rvcmllc0xpbWl0IC8gMjtcbiAgICBjb25zdCBvZmZzZXQgPSAwIDw9IF9vZmZzZXQgPyBfb2Zmc2V0IDogMDtcbiAgICBjb25zdCBsaW1pdCA9IGNvbmZpZ1N0b3JpZXNMaW1pdDtcbiAgICBjb25zdCBfc3Rvcmllc0luZGV4ID0gWy4uLndpbmRvdy50YWxrbkNvbmZpZy5zdG9yaWVzSW5kZXhdLnJldmVyc2UoKTtcblxuICAgIGxldCBfc3Rvcmllc0V5ZUNhdGNocyA9IFsuLi53aW5kb3cudGFsa25Db25maWcuc3Rvcmllc0luZGV4XVxuICAgICAgLm1hcCgoc3Rvcmllc0luZGV4LCBpbmRleCkgPT4ge1xuICAgICAgICBpZiAod2luZG93LnRhbGtuVGhyZWFkLmNoICE9PSAnLycpIHtcbiAgICAgICAgICAvL3N0b3JpZXNJbmRleC5ubyA9IGluZGV4ICsgMTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gc3Rvcmllc0luZGV4O1xuICAgICAgfSlcbiAgICAgIC5zcGxpY2Uob2Zmc2V0LCBsaW1pdCk7XG4gICAgX3N0b3JpZXNFeWVDYXRjaHMgPSBfc3Rvcmllc0V5ZUNhdGNocy5yZXZlcnNlKCk7XG5cbiAgICBzZXRTdG9yaWVzSW5kZXgoX3N0b3JpZXNJbmRleCk7XG4gICAgc2V0U3Rvcmllc0V5ZUNhdGNocyhfc3Rvcmllc0V5ZUNhdGNocyk7XG4gIH0sIFt3aW5kb3cudGFsa25Db25maWcuc3Rvcmllc0luZGV4XSk7XG5cbiAgY29uc3QgaGFuZGxlT25TY3JvbGxIZWFkRXllQ2F0Y2ggPSAoZSkgPT4ge307XG5cbiAgY29uc3QgaGFuZGxlT25DbGlja0NpcmNsZSA9IChlKSA9PiB7XG4gICAgaWYgKHN0b3JpZXNFeWVDYXRjaE9yZGVyUmVmLmN1cnJlbnQpIHtcbiAgICAgIHN0b3JpZXNFeWVDYXRjaE9yZGVyUmVmLmN1cnJlbnQuc2Nyb2xsVG8oe1xuICAgICAgICBsZWZ0OiBnZXRTY3JvbGxXaWR0aCgpICogZS50YXJnZXQuZGF0YXNldC5pbmRleCxcbiAgICAgICAgYmVoYXZpb3I6ICdzbW9vdGgnLFxuICAgICAgfSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8Q29udGFpbmVyIHJlZj17c3Rvcmllc0V5ZUNhdGNoT3JkZXJSZWZ9IHNsaWRlIG9uU2Nyb2xsPXtoYW5kbGVPblNjcm9sbEhlYWRFeWVDYXRjaH0gc3Rvcmllc0luZGV4Q250PXtzdG9yaWVzSW5kZXhDbnR9PlxuICAgICAgICB7c3Rvcmllc0V5ZUNhdGNocy5tYXAoKHN0b3JpZXNFeWVDYXRjaCwgaSkgPT4gKFxuICAgICAgICAgIDxIZWFkRXllQ2F0Y2hMaXN0XG4gICAgICAgICAgICBrZXk9e2BIZWFkRXllQ2F0Y2hMaXN0JHtpfWB9XG4gICAgICAgICAgICBzbGlkZVxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiSGVhZEV5ZUNhdGNoTGlzdFwiXG4gICAgICAgICAgICBkYXRhLW5vPXtzdG9yaWVzRXllQ2F0Y2gubm99XG4gICAgICAgICAgICBleWVDYXRjaD17c3Rvcmllc0V5ZUNhdGNoLmV5ZUNhdGNofVxuICAgICAgICAgICAgc3Rvcmllc0luZGV4Q250PXtzdG9yaWVzSW5kZXhDbnR9PlxuICAgICAgICAgICAgPFZpZXdBbmNob3IgaHJlZj17YGh0dHBzOi8vJHtjb25mLmNvdmVyVVJMfSR7c3Rvcmllc0V5ZUNhdGNoLmNofXN0b3J5LyR7c3Rvcmllc0V5ZUNhdGNoLm5vfWB9PlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNyZWF0b3JCZ1wiPntzdG9yaWVzRXllQ2F0Y2guZXllQ2F0Y2ggPT09ICcnICYmICdOTyBJTUFHRSd9PC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY3JlYXRvckRlc2NyaXB0aW9uXCI+e3N0b3JpZXNFeWVDYXRjaC50aXRsZX08L2Rpdj5cbiAgICAgICAgICAgIDwvVmlld0FuY2hvcj5cbiAgICAgICAgICA8L0hlYWRFeWVDYXRjaExpc3Q+XG4gICAgICAgICkpfVxuICAgICAgPC9Db250YWluZXI+XG4gICAgICB7d2luZG93LnRhbGtuQ29uZmlnICYmIHdpbmRvdy50YWxrbkNvbmZpZy5zdG9yaWVzSW5kZXgubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgIDxFeWVDYXRjaENpcmNsZU9yZGVyIHN0b3JpZXNJbmRleENudD17c3Rvcmllc0luZGV4Q250fSBleWVDYXRjaFNjcm9sbEluZGV4PXtleWVDYXRjaFNjcm9sbEluZGV4fT5cbiAgICAgICAgICB7d2luZG93LnRhbGtuQ29uZmlnICYmXG4gICAgICAgICAgICB3aW5kb3cudGFsa25Db25maWcuc3Rvcmllc0luZGV4Lm1hcCgoY2lyY2xlLCBpbmRleCkgPT4gKFxuICAgICAgICAgICAgICA8bGkga2V5PXtgJHtjaXJjbGUubm99LSR7aW5kZXh9YH0gZGF0YS1pbmRleD17aW5kZXh9IG9uQ2xpY2s9e2hhbmRsZU9uQ2xpY2tDaXJjbGV9IC8+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgPC9FeWVDYXRjaENpcmNsZU9yZGVyPlxuICAgICAgKX1cbiAgICA8Lz5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxudHlwZSBDb250YWluZXJQcm9wc1R5cGUgPSB7XG4gIHJlZjogYW55O1xuICBzbGlkZT86IGJvb2xlYW47XG4gIHN0b3JpZXNJbmRleENudDogbnVtYmVyO1xuICBvblNjcm9sbDogYW55O1xufTtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdjxDb250YWluZXJQcm9wc1R5cGU+YFxuICAkeyhwcm9wcykgPT4gKHByb3BzLnNsaWRlID8gJ292ZXJmbG93OiBzY3JvbGwgaGlkZGVuJyA6ICcnKX07XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93ICR7KHByb3BzKSA9PiAocHJvcHMuc2xpZGUgPyAnbm93cmFwJyA6ICd3cmFwJyl9O1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbiAganVzdGlmeS1jb250ZW50OiAkeyhwcm9wcykgPT4ge1xuICAgIGlmIChwcm9wcy5zbGlkZSkge1xuICAgICAgcmV0dXJuIHByb3BzLnN0b3JpZXNJbmRleENudCA8IDMgPyAnY2VudGVyJyA6ICdmbGV4LXN0YXJ0JztcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuICdmbGV4LXN0YXJ0JztcbiAgICB9XG4gIH19O1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAke3N0eWxlcy5hcHBXaWR0aH1weDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gICR7KHByb3BzKSA9PiAocHJvcHMuc2xpZGUgPyAnc2Nyb2xsLXNuYXAtdHlwZTogeCBtYW5kYXRvcnknIDogJycpfTtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGh9cHgpIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIH1cbmA7XG5cbnR5cGUgRXllQ2F0Y2hDaXJjbGVPcmRlclByb3BzVHlwZSA9IHtcbiAgc3Rvcmllc0luZGV4Q250OiBudW1iZXI7XG4gIGV5ZUNhdGNoU2Nyb2xsSW5kZXg6IG51bWJlcjtcbn07XG5cbmNvbnN0IEV5ZUNhdGNoQ2lyY2xlT3JkZXIgPSBzdHlsZWQub2w8RXllQ2F0Y2hDaXJjbGVPcmRlclByb3BzVHlwZT5gXG4gIGRpc3BsYXk6IG5vbmU7XG4gIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gIHdpZHRoOiBjYWxjKCR7KHByb3BzKSA9PiBnZXRIZWFkRXllQ2F0Y2hTZWxlY3RPcmRlcldpZHRoKHByb3BzLnN0b3JpZXNJbmRleENudCl9JSAtICR7c3R5bGVzLmRvdWJsZU1hcmdpbn1weCk7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBsaSB7XG4gICAgd2lkdGg6ICR7c3R5bGVzLmJhc2VTaXplfXB4O1xuICAgIGhlaWdodDogJHtzdHlsZXMuYmFzZVNpemV9cHg7XG4gICAgbWFyZ2luOiAke3N0eWxlcy5iYXNlU2l6ZX1weDtcbiAgICBiYWNrZ3JvdW5kOiAke3N0eWxlcy5ib3JkZXJDb2xvcn07XG4gICAgYm9yZGVyLXJhZGl1czogJHtzdHlsZXMuYmFzZVNpemV9cHg7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gIH1cbiAgbGlbZGF0YS1pbmRleD0nJHsocHJvcHMpID0+IHByb3BzLmV5ZUNhdGNoU2Nyb2xsSW5kZXh9J10ge1xuICAgIGJhY2tncm91bmQ6ICR7c3R5bGVzLmZvbnRDb2xvcn07XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICBsaSB7XG4gICAgICBtYXJnaW46ICR7c3R5bGVzLmJhc2VTaXplIC8gMn1weDtcbiAgICB9XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGh9cHgpIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGxpIHtcbiAgICAgIHdpZHRoOiAxMHB4O1xuICAgICAgbWluLXdpZHRoOiAxMHB4O1xuICAgICAgaGVpZ2h0OiAxMHB4O1xuICAgICAgbWluLWhlaWdodDogMTBweDtcbiAgICAgIG1hcmdpbjogMTBweDtcbiAgICB9XG4gIH1cbmA7XG5cbmNvbnN0IGdldEhlYWRFeWVDYXRjaFNlbGVjdE9yZGVyV2lkdGggPSAoc3Rvcmllc0luZGV4Q250KTogbnVtYmVyID0+IHtcbiAgaWYgKHN0b3JpZXNJbmRleENudCA8IDEwKSByZXR1cm4gTnVtYmVyKGAke3N0b3JpZXNJbmRleENudH0wYCk7XG4gIHJldHVybiAxMDA7XG59O1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgRnVuY3Rpb25Db21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEZsZXgsIHsgRmxleExheW91dFByb3BzVHlwZSwgZmxleExheW91dFByb3BzSW5pdCB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvRmxleCc7XG5pbXBvcnQgTGFiZWwgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9MYWJlbCc7XG5pbXBvcnQgTGkgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9MaSc7XG5pbXBvcnQgeyBMYXlvdXRQcm9wc1R5cGUsIGxheW91dFByb3BzSW5pdCB9IGZyb20gJ2NvdmVyL25vZGVzL0xheW91dCc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbmV4cG9ydCB0eXBlIE1lbnVzVHlwZSA9IHtcbiAga2V5OiBzdHJpbmc7XG4gIGxhYmVsOiBzdHJpbmc7XG59O1xuXG50eXBlIFByb3BzID0ge1xuICBtZW51czogTWVudXNUeXBlW107XG4gIHNob3c6IGJvb2xlYW47XG4gIHNldFNob3c6IFJlYWN0LkRpc3BhdGNoPFJlYWN0LlNldFN0YXRlQWN0aW9uPGJvb2xlYW4+PjtcbiAgb25DbGljazogKG1lbnU6IHN0cmluZykgPT4gdm9pZDtcbiAgZml0UmlnaHQ/OiBib29sZWFuO1xuICBsYWJlbD86IFJlYWN0LlJlYWN0Tm9kZTtcbn0gJiBMYXlvdXRQcm9wc1R5cGUgJlxuICBGbGV4TGF5b3V0UHJvcHNUeXBlO1xuXG5jb25zdCBtb2RhbENvbnRhaW5lckNsYXNzTmFtZSA9ICdGbG9hdE1lbnVDb250YWluZXInO1xuXG5jb25zdCBDb21wb25lbnQ6IEZ1bmN0aW9uQ29tcG9uZW50PFByb3BzPiA9IChwcm9wczogUHJvcHMpID0+IHtcbiAgY29uc3QgbWVudVJlZiA9IHVzZVJlZig8b2wgLz4pO1xuICBjb25zdCBwOiBQcm9wcyA9IHsgLi4ubGF5b3V0UHJvcHNJbml0LCAuLi5mbGV4TGF5b3V0UHJvcHNJbml0LCBmaXRSaWdodDogZmFsc2UsIC4uLnByb3BzIH07XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEJhY2tncm91bmQgc2hvdz17cC5zaG93fSBvbkNsaWNrPXsoKSA9PiBwLnNldFNob3coZmFsc2UpfSAvPlxuICAgICAgPEZsZXggZmxvdz1cImNvbHVtbiBub3dyYXBcIiBjbGFzc05hbWU9e21vZGFsQ29udGFpbmVyQ2xhc3NOYW1lfT5cbiAgICAgICAge3AubGFiZWwgJiYgPExhYmVsIG9uQ2xpY2s9eygpID0+IHAuc2V0U2hvdyh0cnVlKX0+e3AubGFiZWx9PC9MYWJlbD59XG4gICAgICAgIHtwLnNob3cgJiYgKFxuICAgICAgICAgIDxNZW51T2wgcmVmPXttZW51UmVmfSBzaG93PXtwLnNob3d9IGZpdFJpZ2h0PXtwLmZpdFJpZ2h0fSBjbGFzc05hbWU9XCJNZW51T2xcIj5cbiAgICAgICAgICAgIHtwLm1lbnVzLm1hcCgobWVudTogTWVudXNUeXBlKSA9PiAoXG4gICAgICAgICAgICAgIDxMaSBrZXk9e21lbnUua2V5fSBvbkNsaWNrPXsoKSA9PiBwLm9uQ2xpY2sobWVudS5rZXkpfSBsaW5lSGVpZ2h0PVwiMzZweFwiIHNpZGVQYWRkaW5nIHBvaW50ZXIgaG92ZXI+XG4gICAgICAgICAgICAgICAge21lbnUubGFiZWx9XG4gICAgICAgICAgICAgIDwvTGk+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgICA8L01lbnVPbD5cbiAgICAgICAgKX1cbiAgICAgIDwvRmxleD5cbiAgICA8Lz5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxudHlwZSBCYWNrZ3JvdW5kVHlwZVByb3BzID0ge1xuICBzaG93OiBib29sZWFuO1xufTtcblxuY29uc3QgQmFja2dyb3VuZCA9IHN0eWxlZC5kaXY8QmFja2dyb3VuZFR5cGVQcm9wcz5gXG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBkaXNwbGF5OiAkeyhwcm9wcykgPT4gKHByb3BzLnNob3cgPyAnZmxleCcgOiAnbm9uZScpfTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgei1pbmRleDogJHsocHJvcHMpID0+IChwcm9wcy5zaG93ID8gMTAwMCA6IC0xKX07XG4gIG9wYWNpdHk6ICR7KHByb3BzKSA9PiAocHJvcHMuc2hvdyA/IDEgOiAwKX07XG5gO1xuXG50eXBlIE1lbnVPbFByb3BzID0ge1xuICByZWY6IGFueTtcbiAgc2hvdzogYm9vbGVhbjtcbiAgZml0UmlnaHQ6IGJvb2xlYW47XG59O1xuXG5jb25zdCBNZW51T2wgPSBzdHlsZWQub2w8TWVudU9sUHJvcHM+YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICR7KHByb3BzKSA9PiAocHJvcHMuc2hvdyAmJiBwcm9wcy5maXRSaWdodCA/ICdyaWdodDogMCcgOiAnJyl9O1xuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogZml0LWNvbnRlbnQ7XG4gIGhlaWdodDogZml0LWNvbnRlbnQ7XG4gIHBhZGRpbmc6ICR7c3R5bGVzLmRvdWJsZVBhZGRpbmd9cHggJHtzdHlsZXMuYmFzZVBhZGRpbmd9cHg7XG4gIG1hcmdpbjogJHtzdHlsZXMuZG91YmxlTWFyZ2lufXB4O1xuICAke3N0eWxlcy5hbHBoYUJnU2V0fTtcbiAgYm9yZGVyOiAxcHggc29saWQgJHtzdHlsZXMuYm9yZGVyQ29sb3J9O1xuICBib3JkZXItcmFkaXVzOiAke3N0eWxlcy5ib3JkZXJSYWRpdXN9cHg7XG4gIGJveC1zaGFkb3c6ICR7c3R5bGVzLnNoYWRvd0hvcml6b25CcmlnaHR9O1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICB6LWluZGV4OiAkeyhwcm9wcykgPT4gKHByb3BzLnNob3cgPyAxMDAxIDogLTEpfTtcbiAgb3BhY2l0eTogJHsocHJvcHMpID0+IChwcm9wcy5zaG93ID8gMSA6IDApfTtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKCR7KHByb3BzKSA9PiAocHJvcHMuc2hvdyA/IDAgOiBgJHtzdHlsZXMuYmFzZVNpemUgKiAyfXB4YCl9KTtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGh9cHgpIHtcbiAgICB3aWR0aDogMTAwdnc7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBib3JkZXItcmFkaXVzOiAwO1xuICB9XG5gO1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgY29uZiBmcm9tICdjb21tb24vY29uZic7XG5cbmltcG9ydCBGbGV4IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvRmxleCc7XG5pbXBvcnQgSCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0gnO1xuaW1wb3J0IEJveExpc3QgZnJvbSAnY292ZXIvY29tcG9uZW50cy9tb2xlY3VsZXMvQm94TGlzdCc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIGNoOiBzdHJpbmc7XG59O1xuXG5jb25zdCBDb21wb25lbnQ6IEZ1bmN0aW9uQ29tcG9uZW50PFByb3BzPiA9ICh7IGNoIH0pID0+IHtcbiAgY29uc3QgW2NvcGllZCwgc2V0Q29waWVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgaGFuZGxlT25DbGljayA9IChlKSA9PiB7XG4gICAgZS50YXJnZXQuc2VsZWN0KCk7XG4gICAgZG9jdW1lbnQuZXhlY0NvbW1hbmQoJ2NvcHknKTtcbiAgICBzZXRDb3BpZWQodHJ1ZSk7XG4gICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICBzZXRDb3BpZWQoZmFsc2UpO1xuICAgIH0sIDIwMDApO1xuICB9O1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXI+XG4gICAgICA8SC5GaXZlIGNvbG9yPXtzdHlsZXMuZm9udExpZ2h0Q29sb3J9Pi0gQWN0aW9ucyAtPC9ILkZpdmU+XG4gICAgICA8YnIgLz5cbiAgICAgIDxiciAvPlxuICAgICAgPGgzPlVwZGF0ZTwvaDM+XG4gICAgICA8RmxleCBmbG93PVwicm93IHdyYXBcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCIganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIj5cbiAgICAgICAgPEJveExpc3QgbGFiZWw9XCJMaXZlIFBhZ2VzXCIgdGhlbWU9XCJkYXJrXCIgaHJlZj17YGh0dHBzOi8vJHtjb25mLmNvdmVyVVJMfSR7Y2h9YnVpbGRgfSAvPlxuICAgICAgICA8Qm94TGlzdCBsYWJlbD1cIkNvbmZpZ1wiIHRoZW1lPVwiZGFya1wiIGhyZWY9e2BodHRwczovLyR7Y29uZi5jb3ZlclVSTH0ke2NofXVwZGF0ZUNvbmZpZ2B9IC8+XG4gICAgICA8L0ZsZXg+XG4gICAgICA8YnIgLz5cbiAgICAgIDxiciAvPlxuICAgICAgPGgzPkluY2x1ZGUgeW91ciBzaXRlPC9oMz5cbiAgICAgIDxNZXNzYWdlIGNvcGllZD17Y29waWVkfT57Y29waWVkICYmICdDb3BpZWQnfTwvTWVzc2FnZT5cbiAgICAgIDx1bD5cbiAgICAgICAgPGxpPlxuICAgICAgICAgIDxzcGFuPkxpdmVDbnTjgpLjgrXjgqTjg4jjgavntYTjgb/ovrzjgoA8L3NwYW4+XG4gICAgICAgICAgPGlucHV0IG9uQ2xpY2s9e2hhbmRsZU9uQ2xpY2t9IG9uQ2hhbmdlPXsoKSA9PiB7fX0gdmFsdWU9e2A8c2NyaXB0IHNyYz1cIi8vdHVuZS50YWxrbi5pby9cIiB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIgLz5gfSAvPlxuICAgICAgICA8L2xpPlxuICAgICAgICA8bGk+XG4gICAgICAgICAgPHNwYW4+Q29tcG9uZW5044KS44K144Kk44OI44Gr57WE44G/6L6844KAPC9zcGFuPlxuICAgICAgICAgIDxpbnB1dCBvbkNsaWNrPXtoYW5kbGVPbkNsaWNrfSBvbkNoYW5nZT17KCkgPT4ge319IHZhbHVlPXtgPHNjcmlwdCBzcmM9XCIvL2NvbXBvbmVudHMudGFsa24uaW8vXCIgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiIC8+YH0gLz5cbiAgICAgICAgPC9saT5cbiAgICAgICAgPGxpPlxuICAgICAgICAgIDxzcGFuPkZ1bGwgUGFja2FnZeOCkuOCteOCpOODiOOBq+e1hOOBv+i+vOOCgDwvc3Bhbj5cbiAgICAgICAgICA8aW5wdXQgb25DbGljaz17aGFuZGxlT25DbGlja30gb25DaGFuZ2U9eygpID0+IHt9fSB2YWx1ZT17YDxzY3JpcHQgc3JjPVwiLy9leHQudGFsa24uaW8vXCIgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiIC8+YH0gLz5cbiAgICAgICAgPC9saT5cbiAgICAgICAgPGxpPlxuICAgICAgICAgIDxzcGFuPnRhbGtuQVBJ44KS44K144Kk44OI44Gr57WE44G/6L6844KAPC9zcGFuPlxuICAgICAgICAgIDxpbnB1dCBvbkNsaWNrPXtoYW5kbGVPbkNsaWNrfSBvbkNoYW5nZT17KCkgPT4ge319IHZhbHVlPXtgPHNjcmlwdCBzcmM9XCIvL2FwaS50YWxrbi5pby9cIiB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIgLz5gfSAvPlxuICAgICAgICA8L2xpPlxuICAgICAgPC91bD5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLnNlY3Rpb25gXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogJHtzdHlsZXMuZG91YmxlUGFkZGluZ31weDtcbiAgYmFja2dyb3VuZDogcmdiKDgwLCA4MCwgODApO1xuICBjb2xvcjogI2ZmZjtcblxuICB1bCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgbWF4LXdpZHRoOiAke3N0eWxlcy5hcHBXaWR0aCAvIDEuNX1weDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcblxuICAgIGxpIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xuICAgICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICB3aWR0aDogMzIwcHg7XG4gICAgICBtYXJnaW46ICR7c3R5bGVzLmJhc2VNYXJnaW59cHg7XG4gICAgfVxuICAgIHNwYW4ge1xuICAgICAgdGV4dC1pbmRlbnQ6ICR7c3R5bGVzLmJhc2VTaXplICogMn1weDtcbiAgICB9XG4gICAgaW5wdXQge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtaW4td2lkdGg6IDIzMHB4O1xuICAgICAgbWF4LXdpZHRoOiAzMjBweDtcbiAgICAgIHBhZGRpbmc6IDEwcHggJHtzdHlsZXMuYmFzZVBhZGRpbmd9cHg7XG4gICAgICBtYXJnaW46ICR7c3R5bGVzLmJhc2VNYXJnaW59cHg7XG4gICAgICBib3JkZXI6IDA7XG4gICAgICBib3JkZXItcmFkaXVzOiAke3N0eWxlcy5iYXNlU2l6ZSAqIDJ9cHg7XG4gICAgICBvdXRsaW5lOiBub25lO1xuICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICAgICAgOmhvdmVyIHtcbiAgICAgICAgYmFja2dyb3VuZDogJHtzdHlsZXMudGhlbWVDb2xvcn07XG4gICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgfVxuICAgIH1cbiAgfVxuYDtcblxudHlwZSBNZXNzYWdlUHJvcHNUeXBlID0ge1xuICBjb3BpZWQ6IGJvb2xlYW47XG59O1xuXG5jb25zdCBNZXNzYWdlID0gc3R5bGVkLmRpdjxNZXNzYWdlUHJvcHNUeXBlPmBcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGhlaWdodDogJHtzdHlsZXMuYmFzZUhlaWdodH1weDtcbiAgcGFkZGluZzogMCAke3N0eWxlcy5kb3VibGVQYWRkaW5nfXB4O1xuICBib3JkZXItcmFkaXVzOiAke3N0eWxlcy5iYXNlU2l6ZX1weDtcbiAgb3BhY2l0eTogJHsocHJvcHMpID0+IChwcm9wcy5jb3BpZWQgPyAxIDogMCl9O1xuICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG5gO1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbnR5cGUgUHJvcHMgPSB7fTtcblxuY29uc3QgRGVzaWduU2VjdGlvbjogRnVuY3Rpb25Db21wb25lbnQ8UHJvcHM+ID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXI+XG4gICAgICA8Q29udGVudD5cbiAgICAgICAgPEJhckFycm93V3JhcD5cbiAgICAgICAgICA8QmFyIC8+XG4gICAgICAgICAgPEJhckFycm93IC8+XG4gICAgICAgIDwvQmFyQXJyb3dXcmFwPlxuICAgICAgICA8TG9nbyAvPlxuICAgICAgPC9Db250ZW50PlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgRGVzaWduU2VjdGlvbjtcblxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLnNlY3Rpb25gXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTY4MHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgYmFja2dyb3VuZDogIzExMTtcbmA7XG5cbmNvbnN0IENvbnRlbnQgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6ICR7c3R5bGVzLmFwcFdpZHRofXB4O1xuICBoZWlnaHQ6IGluaGVyaXQ7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBiYWNrZ3JvdW5kOiB1cmwoaHR0cHM6Ly9hc3NldHMudGFsa24uaW8vaW1nL3dhbGsyLnBuZykgMTAlIDg1JSAvIDI0MHB4IG5vLXJlcGVhdDtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoaHR0cHM6Ly9hc3NldHMudGFsa24uaW8vaW1nL3dhbGsyLnBuZykgNTAlIDEwMCUgLyAyNDBweCBuby1yZXBlYXQ7XG4gIH1cbmA7XG5cbmNvbnN0IEJhckFycm93V3JhcCA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIHdpZHRoOiAzMDBweDtcbiAgaGVpZ2h0OiBjYWxjKDgwJSArIDE5MHB4KTtcbiAgbWFyZ2luLWxlZnQ6IC00NSU7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFdpZHRofXB4KSB7XG4gICAgaGVpZ2h0OiBjYWxjKDEwMCUgKyAxOTBweCk7XG4gICAgbWFyZ2luLWxlZnQ6IDA7XG4gIH1cbmA7XG5cbmNvbnN0IEJhciA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDgwJTtcbiAgYmFja2dyb3VuZDogcmdiKDM1LCAzNSwgMzUpO1xuYDtcblxuY29uc3QgQmFyQXJyb3cgPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTUwcHg7XG4gIGhlaWdodDogMTUwcHg7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudCB0cmFuc3BhcmVudCByZ2IoMzUsIDM1LCAzNSkgdHJhbnNwYXJlbnQ7XG4gIGJvcmRlci1zdHlsZTogc29saWQ7XG4gIGJvcmRlci13aWR0aDogMTUwcHggMTUwcHggMTUwcHggMDtcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgtMTA0cHgsIC0yMDNweCwgMCkgcm90YXRlKDMxNWRlZyk7XG5gO1xuXG5jb25zdCBMb2dvID0gc3R5bGVkLmRpdmBcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB3aWR0aDogNTEycHg7XG4gIGhlaWdodDogNTEycHg7XG4gIGJhY2tncm91bmQ6IHVybChodHRwczovL2Fzc2V0cy50YWxrbi5pby9pbWcvbG9nb19nbGF5LnBuZykgMTAwJSAvIDUxMnB4IG5vLXJlcGVhdDtcbiAgb3BhY2l0eTogMC4yO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKC0xMDBweCwgNjQwcHgsIDApO1xuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRXaWR0aH1weCkge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoLTEwMHB4LCA3ODBweCwgMCk7XG4gIH1cbmA7XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHt9O1xuXG5jb25zdCBNZXNzYWdlU2VjdGlvbjogRnVuY3Rpb25Db21wb25lbnQ8UHJvcHM+ID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXI+XG4gICAgICA8TWVzc2FnZT4tIFVwZGF0ZSB0aGUgaW50ZXJuZXQgZm9yIGNyZWF0b3JzIC08L01lc3NhZ2U+XG4gICAgICA8Q29weXJpZ2h0PkNvcHlyaWdodCDCqSB0YWxrbi48L0NvcHlyaWdodD5cbiAgICA8L0NvbnRhaW5lcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE1lc3NhZ2VTZWN0aW9uO1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQuc2VjdGlvbmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAke3N0eWxlcy5zZXBNYXJnaW59cHggMDtcbiAgY29sb3I6ICNmZmY7XG4gIGJhY2tncm91bmQ6ICMxMTE7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFdpZHRofXB4KSB7XG4gICAgcGFkZGluZzogNjBweCAwIDEyMHB4O1xuICB9XG5gO1xuXG5jb25zdCBNZXNzYWdlID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIG1hcmdpbjogMjBweDtcbmA7XG5cbmNvbnN0IENvcHlyaWdodCA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAyMHB4O1xuYDtcbiIsImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHsgRnVuY3Rpb25Db21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IHsgTWVkaWFUeXBlTmV3cywgTWVkaWFUeXBlU3ViZG9tYWlucywgTmV0d29ya0xpc3QgfSBmcm9tICdjb21tb24vTmV0d29ya3MnO1xuXG5pbXBvcnQgRmxleCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0ZsZXgnO1xuaW1wb3J0IEggZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9IJztcbmltcG9ydCBTZWN0aW9uIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvU2VjdGlvbic7XG5pbXBvcnQgVWwgZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9VbCc7XG5pbXBvcnQgQm94TGlzdCBmcm9tICdjb3Zlci9jb21wb25lbnRzL21vbGVjdWxlcy9Cb3hMaXN0JztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHVua25vd247XG5cbmNvbnN0IE90aGVyQ29udGVudHNTZWN0aW9uOiBGdW5jdGlvbkNvbXBvbmVudDxQcm9wcz4gPSAoKSA9PiB7XG4gIGNvbnN0IExpdmVNZWRpYUxpc3QgPSBBcnJheS5mcm9tKE9iamVjdC5rZXlzKE5ldHdvcmtMaXN0KSkubWFwKChfbWVkaWFUeXBlOiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCBtZWRpYVR5cGUgPSBfbWVkaWFUeXBlIGFzIE1lZGlhVHlwZVN1YmRvbWFpbnM7XG4gICAgY29uc3QgbGFiZWwgPSBOZXR3b3JrTGlzdFttZWRpYVR5cGVdLmxhYmVsO1xuICAgIGNvbnN0IGFjdGl2ZSA9IG1lZGlhVHlwZSA9PT0gTWVkaWFUeXBlTmV3cztcbiAgICByZXR1cm4gPEJveExpc3QgbGFiZWw9e2xhYmVsfSBrZXk9e2xhYmVsfSBhY3RpdmU9e2FjdGl2ZX0gdGhlbWU9XCJkYXJrXCIgaHJlZj1cImh0dHBzOi8vbmV3cy50YWxrbi5pb1wiIC8+O1xuICB9KTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICB7LypcbiAgICAgIDxDb250YWluZXIgZmxvdz1cImNvbHVtbiBub3dyYXBcIiBhbGlnbkl0ZW1zPVwiY2VudGVyXCIgdXBwZXJQYWRkaW5nIGJvdHRvbVBhZGRpbmc+XG4gICAgICA8SC5GaXZlIGNvbG9yPXtzdHlsZXMuZm9udExpZ2h0Q29sb3J9Pi0gT3RoZXIgQ29udGVudHMgLTwvSC5GaXZlPlxuICAgICAgPEZsZXggZmxvdz1cInJvdyB3cmFwXCIgdXBwZXJNYXJnaW4+XG4gICAgICAgIDxVbCBmbG93PVwiY29sdW1uIG5vd3JhcFwiIGFsaWduSXRlbXM9XCJjZW50ZXJcIj5cbiAgICAgICAgICA8bGkgY2xhc3NOYW1lPVwidGl0bGVcIj5UYWxrbiBGb3I8L2xpPlxuICAgICAgICAgIDxCb3hMaXN0IGxhYmVsPVwiVXNlclwiIHRoZW1lPVwiZGFya1wiIGhyZWY9XCJodHRwczovL3d3dy50YWxrbi5pb1wiIC8+XG4gICAgICAgICAgPEJveExpc3QgbGFiZWw9XCJXZWJzaXRlIG93bmVyXCIgdGhlbWU9XCJkYXJrXCIgaHJlZj1cImh0dHBzOi8vb3duLnRhbGtuLmlvXCIgLz5cbiAgICAgICAgICA8Qm94TGlzdFxuICAgICAgICAgICAgbGFiZWw9XCJDaHJvbWUgZXh0ZW5zaW9uXCJcbiAgICAgICAgICAgIHRoZW1lPVwiZGFya1wiXG4gICAgICAgICAgICBocmVmPVwiaHR0cHM6Ly9jaHJvbWUuZ29vZ2xlLmNvbS93ZWJzdG9yZS9kZXRhaWwvdGFsa24tZm9yLWNocm9tZS9ka25nbm1kbGNvZmFtYnBmYWNjZXBibmpnZmhvbGdibz9obD1lblwiXG4gICAgICAgICAgLz5cbiAgICAgICAgPC9VbD5cbiAgICAgICAgPFVsIGZsb3c9XCJjb2x1bW4gbm93cmFwXCIgYWxpZ25JdGVtcz1cImNlbnRlclwiPlxuICAgICAgICAgIDxsaSBjbGFzc05hbWU9XCJ0aXRsZVwiPkxpdmUgTWVkaWE8L2xpPlxuICAgICAgICAgIDxCb3hMaXN0IGxhYmVsPVwidGFsa25cIiB0aGVtZT1cImRhcmtcIiBocmVmPVwiaHR0cHM6Ly90YWxrbi5pby9cIiAvPlxuICAgICAgICAgIDxCb3hMaXN0IGxhYmVsPVwidGFsa24gbmV3c1wiIHRoZW1lPVwiZGFya1wiIGhyZWY9XCJodHRwczovL25ld3MudGFsa24uaW8vXCIgLz5cbiAgICAgICAgPC9VbD5cbiAgICAgIDwvRmxleD5cbiAgICAgIDwvQ29udGFpbmVyPlxuICAqL31cbiAgICA8Lz5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IE90aGVyQ29udGVudHNTZWN0aW9uO1xuXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQoU2VjdGlvbilgXG4gIGJhY2tncm91bmQ6IHJnYigzNSwgMzUsIDM1KTtcbiAgY29sb3I6ICNmZmY7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFdpZHRofXB4KSB7XG4gICAgcGFkZGluZzogMjBweCAwO1xuICB9XG5gO1xuIiwiaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgSCBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL0gnO1xuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG50eXBlIFByb3BzID0ge307XG5cbmNvbnN0IENvbXBvbmVudDogRnVuY3Rpb25Db21wb25lbnQ8UHJvcHM+ID0gKCkgPT4ge1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXI+XG4gICAgICA8SC5GaXZlIGNvbG9yPXtzdHlsZXMuZm9udExpZ2h0Q29sb3J9Pi0gRG9tYWluIFByb2ZpbGUgUHJvamVjdCAtPC9ILkZpdmU+XG4gICAgICA8YnIgLz5cbiAgICAgIDxoMz5Db25jZXB0PC9oMz5cbiAgICAgIDxNZXNzYWdlPlxuICAgICAgICA8cD5cbiAgICAgICAgICDjg4njg6HjgqTjg7Pjga7kuK3jgafjgoLjga7kvZzjgorjgpLjgZnjgovkurrjgpLjg5Tjg4Pjgq/jgqLjg4Pjg5fjgZnjgotXRULjg6Hjg4fjgqPjgqLjgafjgZnjgIJcbiAgICAgICAgICBUT1Djg4njg6HjgqTjg7PjgYzkv53mnInjgZnjgovjgIxNZXRh44K/44Kw44CN44CMT2dw44K/44Kw44CN44KS57eo6ZuG44GZ44KL44GT44Go44Gn6Ieq55Sx44Gr5L2c5oiQ44O757eo6ZuG44GM5Ye65p2l44G+44GZ44CCXG4gICAgICAgIDwvcD5cbiAgICAgICAgey8qXG4gICAgICAgIDxwPlxuICAgICAgICAgIFRoaXMgaXMgYSB3ZWIgbWVkaWEgdGhhdCBwaWNrcyB1cCBwZW9wbGUgd2hvIG1ha2UgdGhpbmdzIGluIHRoZSBkb21haW4uIEJ5IGVkaXRpbmcgdGhlIE1ldGEgdGFncyBhbmQgT2dwIHRhZ3Mgb3duZWQgYnkgdGhlIFRPUFxuICAgICAgICAgIGRvbWFpbnMsIHlvdSBjYW4gZnJlZWx5IGNyZWF0ZSBhbmQgZWRpdCB0aGVtLlxuICAgICAgICA8L3A+XG4qL31cbiAgICAgIDwvTWVzc2FnZT5cbiAgICAgIDxoMz5NaXNzaW9uPC9oMz5cbiAgICAgIDxNZXNzYWdlPlxuICAgICAgICA8cD5cbiAgICAgICAgICDjgoLjga7kvZzjgorjgavplqLjgo/jgovkurrjg7vnuYvjgYzjgorjgZ/jgYTkurrjgpLjgr/jgrDku5jjgZHjgaflj6/oppbljJbjgIFBSeODnuODg+ODgeODs+OCsOOBmeOCi+OBk+OBqOOBp+OAgeOCpOODs+OCv+ODvOODjeODg+ODiOS4iuOBp+S4jeimgeOBquOAjOS7suS7i+OAjeOChOOAjOmcgOe1puOCruODo+ODg+ODl+OAjeOCkueEoeOBj+OBl+OBvuOBmeOAglxuICAgICAgICA8L3A+XG4gICAgICAgIHsvKlxuICAgICAgICA8cD5cbiAgICAgICAgICBPdXIgbWlzc2lvbiBpcyB0byBlbGltaW5hdGUgdW5uZWNlc3Nhcnkg44CMaW50ZXJtZWRpYXJpZXPjgI1hbmTjgIxzdXBwbHktZGVtYW5kIGdhcHPjgI0gb24gdGhlIEludGVybmV0IGJ5IHZpc3VhbGl6aW5nIGFuZCBBSS1tYXRjaGluZ1xuICAgICAgICAgIHBlb3BsZSB3aG8gYXJlIGludm9sdmVkIGluIG1hbnVmYWN0dXJpbmcgYW5kIHBlb3BsZSB3aG8gd2FudCB0byBiZSBjb25uZWN0ZWQgd2l0aCBNZXRhIFRhZ3MgYW5kIE9ncCBUYWdzLlxuICAgICAgICA8L3A+XG4gICAgICAgICovfVxuICAgICAgPC9NZXNzYWdlPlxuICAgICAgPGgzPlNwb25zZXI8L2gzPlxuICAgICAgPEdyb3Vwcz5cbiAgICAgICAgPE1lbWJlcj5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJpY29uXCIgLz5cbiAgICAgICAgICA8c3Bhbj48L3NwYW4+XG4gICAgICAgIDwvTWVtYmVyPlxuICAgICAgICA8TWVtYmVyPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImljb25cIiAvPlxuICAgICAgICAgIDxzcGFuPjwvc3Bhbj5cbiAgICAgICAgPC9NZW1iZXI+XG4gICAgICAgIDxNZW1iZXI+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiaWNvblwiIC8+XG4gICAgICAgICAgPHNwYW4+PC9zcGFuPlxuICAgICAgICA8L01lbWJlcj5cbiAgICAgIDwvR3JvdXBzPlxuICAgICAgPGgzPk1lbWJlcjwvaDM+XG4gICAgICA8R3JvdXBzPlxuICAgICAgICA8TWVtYmVyIGhyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL21pcmF6bGVcIiBiZ1NyYz1cImh0dHBzOi8vcGJzLnR3aW1nLmNvbS9wcm9maWxlX2ltYWdlcy8xNzI1NjQwODAxL2JhYmFfeDk2LnBuZ1wiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImljb25cIiAvPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm5hbWVcIj5taXJhemxlQHRhbGtuPC9zcGFuPlxuICAgICAgICA8L01lbWJlcj5cbiAgICAgICAgPE1lbWJlciBocmVmPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9taXJhemxlXCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiaWNvblwiIC8+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibmFtZVwiPjwvc3Bhbj5cbiAgICAgICAgPC9NZW1iZXI+XG4gICAgICAgIDxNZW1iZXIgaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vbWlyYXpsZVwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImljb25cIiAvPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm5hbWVcIj48L3NwYW4+XG4gICAgICAgIDwvTWVtYmVyPlxuICAgICAgICA8TWVtYmVyIGhyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL21pcmF6bGVcIj5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJpY29uXCIgLz5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuYW1lXCI+PC9zcGFuPlxuICAgICAgICA8L01lbWJlcj5cbiAgICAgICAgPE1lbWJlciBocmVmPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9taXJhemxlXCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiaWNvblwiIC8+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibmFtZVwiPjwvc3Bhbj5cbiAgICAgICAgPC9NZW1iZXI+XG4gICAgICAgIDxNZW1iZXIgaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vbWlyYXpsZVwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImljb25cIiAvPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm5hbWVcIj48L3NwYW4+XG4gICAgICAgIDwvTWVtYmVyPlxuICAgICAgICA8TWVtYmVyIGhyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL21pcmF6bGVcIj5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJpY29uXCIgLz5cbiAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJuYW1lXCI+PC9zcGFuPlxuICAgICAgICA8L01lbWJlcj5cbiAgICAgICAgPE1lbWJlciBocmVmPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS9taXJhemxlXCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiaWNvblwiIC8+XG4gICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwibmFtZVwiPjwvc3Bhbj5cbiAgICAgICAgPC9NZW1iZXI+XG4gICAgICAgIDxNZW1iZXIgaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vbWlyYXpsZVwiPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cImljb25cIiAvPlxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cIm5hbWVcIj48L3NwYW4+XG4gICAgICAgIDwvTWVtYmVyPlxuICAgICAgPC9Hcm91cHM+XG4gICAgPC9Db250YWluZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5zZWN0aW9uYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAke3N0eWxlcy5kb3VibGVQYWRkaW5nfXB4ICR7c3R5bGVzLmRvdWJsZVBhZGRpbmd9cHggJHtzdHlsZXMuc2VwTWFyZ2lufXB4ICR7c3R5bGVzLmRvdWJsZVBhZGRpbmd9cHg7XG4gIGJhY2tncm91bmQ6IHJnYig2OCwgNjgsIDY4KTtcbiAgY29sb3I6ICNmZmY7XG4gIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICBoMyB7XG4gICAgbWFyZ2luOiA0NXB4IDA7XG4gIH1cbmA7XG5cbmNvbnN0IE1lc3NhZ2UgPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiA2MDBweDtcbmA7XG5cbmNvbnN0IEdyb3VwcyA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtYXgtd2lkdGg6ICR7c3R5bGVzLmFwcFdpZHRofXB4O1xuYDtcblxudHlwZSBNZW1iZXJUeXBlID0ge1xuICBiZ1NyYz86IHN0cmluZztcbn07XG5cbmNvbnN0IE1lbWJlciA9IHN0eWxlZC5hPE1lbWJlclR5cGU+YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBtYXJnaW46ICR7c3R5bGVzLmJhc2VNYXJnaW59cHg7XG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgY29sb3I6ICNmZmY7XG4gIG9wYWNpdHk6IDE7XG4gIHRyYW5zaXRpb246ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbiAgOmhvdmVyIHtcbiAgICBvcGFjaXR5OiAwLjY7XG4gICAgLmljb24ge1xuICAgICAgYmFja2dyb3VuZC1zaXplOiA3NHB4O1xuICAgIH1cbiAgfVxuICAuaWNvbiB7XG4gICAgd2lkdGg6IDY0cHg7XG4gICAgaGVpZ2h0OiA2NHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYmFja2dyb3VuZDogdXJsKCR7KHByb3BzKSA9PiBwcm9wcy5iZ1NyY30pO1xuICAgIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IDY0cHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtzdHlsZXMuZm9udENvbG9yfTtcbiAgICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIH1cbiAgLm5hbWUge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBoZWlnaHQ6IDQwcHg7XG4gIH1cbmA7XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHt9O1xuXG5jb25zdCBDb21wb25lbnQ6IEZ1bmN0aW9uQ29tcG9uZW50PFByb3BzPiA9ICgpID0+IHtcbiAgY29uc3QgaGFuZGxlT25DbGlja1RvVG9wID0gKCkgPT4ge1xuICAgIHdpbmRvdy5zY3JvbGxUbyh7IHRvcDogMCwgYmVoYXZpb3I6ICdzbW9vdGgnIH0pO1xuICB9O1xuICByZXR1cm4gKFxuICAgIDxUb1RvcCBvbkNsaWNrPXtoYW5kbGVPbkNsaWNrVG9Ub3B9PlxuICAgICAgPGRpdiBjbGFzc05hbWU9eydUb1RvcEFycm93J30gLz5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPXsnVG9Ub3BBcnJvd1VuZGVyQmFyJ30gLz5cbiAgICA8L1RvVG9wPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG5jb25zdCBUb1RvcCA9IHN0eWxlZC5kaXZgXG4gIHotaW5kZXg6ICR7c3R5bGVzLnpJbmRleC50b1RvcH07XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogY2FsYygxMDB2aCAtIDExMHB4KTtcbiAgcmlnaHQ6IDcwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uIG5vd3JhcDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHdpZHRoOiAke3N0eWxlcy5xdWludFNpemV9cHg7XG4gIGhlaWdodDogJHtzdHlsZXMucXVpbnRTaXplfXB4O1xuICBwYWRkaW5nOiAke3N0eWxlcy5xdWludFNpemV9cHg7XG4gIG1hcmdpbjogMCAwIDYwcHggYXV0bztcbiAgJHtzdHlsZXMuYWxwaGFCZ1NldH07XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7c3R5bGVzLmZvbnRDb2xvcn07XG4gIGJvcmRlci1yYWRpdXM6ICR7c3R5bGVzLmJhc2VTaXplfXB4O1xuICB0cmFuc2l0aW9uOiAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIGRpdi5Ub1RvcEFycm93IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgdG9wOiAtNHB4O1xuICAgIGJvcmRlci1yaWdodDogMTVweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgICBib3JkZXItYm90dG9tOiAyNXB4IHNvbGlkICR7c3R5bGVzLmZvbnRDb2xvcn07XG4gICAgYm9yZGVyLWxlZnQ6IDE1cHggc29saWQgdHJhbnNwYXJlbnQ7XG4gIH1cbiAgZGl2LlRvVG9wQXJyb3dVbmRlckJhciB7XG4gICAgd2lkdGg6IDMwcHg7XG4gICAgaGVpZ2h0OiA1cHg7XG4gICAgbWluLWhlaWdodDogNXB4O1xuICAgIGJhY2tncm91bmQ6ICR7c3R5bGVzLmZvbnRDb2xvcn07XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgfVxuICA6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6ICR7c3R5bGVzLmZvbnRDb2xvcn07XG4gICAgYm9yZGVyOiAxcHggc29saWQgJHtzdHlsZXMuZm9udENvbG9yfTtcbiAgICBkaXYuVG9Ub3BBcnJvdyB7XG4gICAgICBib3JkZXItYm90dG9tOiAyNXB4IHNvbGlkICNmZmY7XG4gICAgfVxuICAgIGRpdi5Ub1RvcEFycm93VW5kZXJCYXIge1xuICAgICAgYmFja2dyb3VuZDogI2ZmZjtcbiAgICB9XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGh9cHgpIHtcbiAgICByaWdodDogMTVweDtcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gIH1cbmA7XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgdHlwZSB7IEZ1bmN0aW9uQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XG5cbmltcG9ydCBBY3Rpb25zU2VjdGlvbiBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Gb290ZXIvQWN0aW9uc1NlY3Rpb24nO1xuaW1wb3J0IERlc2lnblNlY3Rpb24gZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvRm9vdGVyL0Rlc2lnblNlY3Rpb24nO1xuaW1wb3J0IE1lc3NhZ2VTZWN0aW9uIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0Zvb3Rlci9NZXNzYWdlU2VjdGlvbic7XG5pbXBvcnQgT3RoZXJDb250ZW50c1NlY3Rpb24gZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvRm9vdGVyL090aGVyQ29udGVudHNTZWN0aW9uJztcbmltcG9ydCBTZXJ2aWNlQ29uY2VwdFNlY3Rpb24gZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvRm9vdGVyL1NlcnZpY2VDb25jZXB0U2VjdGlvbic7XG5pbXBvcnQgVG9Ub3BTZWN0aW9uIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0Zvb3Rlci9Ub1RvcFNlY3Rpb24nO1xuXG50eXBlIFByb3BzID0ge1xuICBjaDogc3RyaW5nO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBGdW5jdGlvbkNvbXBvbmVudDxQcm9wcz4gPSAoeyBjaCB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPEZvb3Rlcj5cbiAgICAgIDxUb1RvcFNlY3Rpb24gLz5cbiAgICAgIDxBY3Rpb25zU2VjdGlvbiBjaD17Y2h9IC8+XG4gICAgICA8U2VydmljZUNvbmNlcHRTZWN0aW9uIC8+XG4gICAgICA8T3RoZXJDb250ZW50c1NlY3Rpb24gLz5cbiAgICAgIDxEZXNpZ25TZWN0aW9uIC8+XG4gICAgICA8TWVzc2FnZVNlY3Rpb24gLz5cbiAgICA8L0Zvb3Rlcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgRm9vdGVyID0gc3R5bGVkLmZvb3RlcmBcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1mbG93OiBjb2x1bW47XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbmA7XG4iLCJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEZsZXggZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9GbGV4JztcbmltcG9ydCBIIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvSCc7XG5pbXBvcnQgQWNjb3VudCBmcm9tICdjb3Zlci9jb21wb25lbnRzL21vbGVjdWxlcy9BY2NvdW50JztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcbmltcG9ydCB7IEdvb2dsZVNlc3Npb25UeXBlIH0gZnJvbSAnY292ZXIvdGFsa24uY292ZXInO1xuXG50eXBlIFByb3BzID0ge1xuICBvcGVuTWVudTogYm9vbGVhbjtcbiAgY2g6IHN0cmluZztcbiAgZmF2aWNvbjogc3RyaW5nO1xuICBzZXNzaW9uOiBHb29nbGVTZXNzaW9uVHlwZTtcbiAgc2V0U2Vzc2lvbjogUmVhY3QuRGlzcGF0Y2g8UmVhY3QuU2V0U3RhdGVBY3Rpb248R29vZ2xlU2Vzc2lvblR5cGU+PjtcbiAgaGFuZGxlT25DbGlja01lbnU6IChlOiBSZWFjdC5Nb3VzZUV2ZW50PEhUTUxEaXZFbGVtZW50LCBNb3VzZUV2ZW50PikgPT4gdm9pZDtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgY2gsIGZhdmljb24sIG9wZW5NZW51LCBzZXNzaW9uLCBzZXRTZXNzaW9uLCBoYW5kbGVPbkNsaWNrTWVudSB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPEhlYWRlcj5cbiAgICAgIDxIZWFkZXJJblNpZGVNZW51XG4gICAgICAgIGZsb3c9XCJjb2x1bW4gd3JhcFwiXG4gICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICBqdXN0aWZ5Q29udGVudD1cImNlbnRlclwiXG4gICAgICAgIGNsYXNzTmFtZT17b3Blbk1lbnUgJiYgJ29wZW4nfVxuICAgICAgICBzaWRlTWFyZ2luXG4gICAgICAgIG9uQ2xpY2s9e2hhbmRsZU9uQ2xpY2tNZW51fT5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJIZWFkZXJNZW51TGluZVwiIC8+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiSGVhZGVyTWVudUxpbmVcIiAvPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIkhlYWRlck1lbnVMaW5lXCIgLz5cbiAgICAgIDwvSGVhZGVySW5TaWRlTWVudT5cbiAgICAgIDxBIGhyZWY9e2BodHRwczovJHtjaH1gfT5cbiAgICAgICAgey8qPEltZyBzcmM9e2Zhdmljb259IHdpZHRoPXszMH0gaGVpZ2h0PXszMH0gLz4qL31cbiAgICAgICAgezxILk9uZSBpZD17J0FwcEhlYWRlcid9PntjaCA9PT0gJy8nID8gJ3RhbGtuJyA6IGNofTwvSC5PbmU+fVxuICAgICAgPC9BPlxuICAgICAgPEhlYWRlclNpZGUgZmxvdz1cImNvbHVtbiB3cmFwXCIgYWxpZ25JdGVtcz1cImNlbnRlclwiIGp1c3RpZnlDb250ZW50PVwiY2VudGVyXCIgc2lkZU1hcmdpbj5cbiAgICAgICAgPEFjY291bnQgc2Vzc2lvbj17c2Vzc2lvbn0gc2V0U2Vzc2lvbj17c2V0U2Vzc2lvbn0gLz5cbiAgICAgIDwvSGVhZGVyU2lkZT5cbiAgICA8L0hlYWRlcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbXBvbmVudDtcblxuY29uc3QgSGVhZGVyID0gc3R5bGVkLmhlYWRlcmBcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgei1pbmRleDogJHtzdHlsZXMuekluZGV4LmhlYWRlcn07XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAke3N0eWxlcy5hcHBIZWFkZXJIZWlnaHR9cHg7XG4gICR7c3R5bGVzLmFscGhhQmdTZXR9O1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHtzdHlsZXMuYm9yZGVyQ29sb3J9O1xuICBhIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgY29sb3I6ICR7c3R5bGVzLmZvbnRDb2xvcn07XG4gIH1cbmA7XG5cbmNvbnN0IEhlYWRlckluU2lkZU1lbnUgPSBzdHlsZWQoRmxleClgXG4gIHdpZHRoOiA2MHB4O1xuICBoZWlnaHQ6IDYwcHg7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbiAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIC5IZWFkZXJNZW51TGluZSB7XG4gICAgd2lkdGg6IDcwJTtcbiAgICBoZWlnaHQ6IDFweDtcbiAgICBtYXJnaW46IDVweDtcbiAgICBiYWNrZ3JvdW5kOiAjYmJiO1xuICAgIHRyYW5zaXRpb246ICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcztcbiAgfVxuICAmLm9wZW4ge1xuICAgIC5IZWFkZXJNZW51TGluZTpudGgtY2hpbGQoMSkge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHRyYW5zbGF0ZSg4cHgsIDhweCk7XG4gICAgfVxuICAgIC5IZWFkZXJNZW51TGluZTpudGgtY2hpbGQoMikge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoNDVkZWcpIHRyYW5zbGF0ZSgwcHgsIDBweCk7XG4gICAgfVxuICAgIC5IZWFkZXJNZW51TGluZTpudGgtY2hpbGQoMykge1xuICAgICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKSB0cmFuc2xhdGUoN3B4LCAtOHB4KTtcbiAgICB9XG4gIH1cbmA7XG5cbmNvbnN0IEEgPSBzdHlsZWQuYWBcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG5gO1xuXG5jb25zdCBJbWcgPSBzdHlsZWQuaW1nYFxuICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG4gIG1hcmdpbi1sZWZ0OiAtMTVweDtcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XG5gO1xuXG5jb25zdCBIZWFkZXJTaWRlID0gc3R5bGVkKEZsZXgpYFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6IDYwcHg7XG4gIGhlaWdodDogNjBweDtcbmA7XG4iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHR5cGUgeyBGdW5jdGlvbkNvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgRmxleCwgeyBGbGV4TGF5b3V0UHJvcHNUeXBlLCBmbGV4TGF5b3V0UHJvcHNJbml0IH0gZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9GbGV4JztcbmltcG9ydCB7IExheW91dFByb3BzVHlwZSwgbGF5b3V0UHJvcHNJbml0IH0gZnJvbSAnY292ZXIvbm9kZXMvTGF5b3V0JztcbmltcG9ydCBzdHlsZXMgZnJvbSAnY292ZXIvc3R5bGVzJztcblxudHlwZSBQcm9wcyA9IHtcbiAgc2hvdzogYm9vbGVhbjtcbiAgY2xvc2VNb2RhbDogKCkgPT4gdm9pZDtcbiAgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTtcbn0gJiBMYXlvdXRQcm9wc1R5cGUgJlxuICBGbGV4TGF5b3V0UHJvcHNUeXBlO1xuXG5jb25zdCBtb2RhbENvbnRhaW5lckNsYXNzTmFtZSA9ICdNb2RhbENvbnRhaW5lcic7XG5cbmNvbnN0IENvbXBvbmVudDogRnVuY3Rpb25Db21wb25lbnQ8UHJvcHM+ID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCBwOiBQcm9wcyA9IHsgLi4ubGF5b3V0UHJvcHNJbml0LCAuLi5mbGV4TGF5b3V0UHJvcHNJbml0LCB3aWR0aDogc3R5bGVzLnNwTGF5b3V0U3RyaWN0V2lkdGhQeCwgLi4ucHJvcHMgfTtcbiAgY29uc3QgaGFuZGxlT25DbGljayA9IChlKSA9PiB7XG4gICAgaWYgKGUudGFyZ2V0LmNsYXNzTmFtZS5pbmRleE9mKG1vZGFsQ29udGFpbmVyQ2xhc3NOYW1lKSA+PSAwKSB7XG4gICAgICBwLmNsb3NlTW9kYWwoKTtcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT17bW9kYWxDb250YWluZXJDbGFzc05hbWV9IHNob3c9e3Auc2hvd30gb25DbGljaz17aGFuZGxlT25DbGlja30gb25UcmFuc2l0aW9uRW5kPXsoKSA9PiB7fX0+XG4gICAgICA8Qm9hcmQgY2xhc3NOYW1lPXtgJHttb2RhbENvbnRhaW5lckNsYXNzTmFtZX1Cb2FyZGB9IHNob3c9e3Auc2hvd30gd2lkdGg9e3Aud2lkdGh9PlxuICAgICAgICA8RmxleCBjbGFzc05hbWU9e2Ake21vZGFsQ29udGFpbmVyQ2xhc3NOYW1lfUZsZXhgfSBmbG93PXtwLmZsb3d9PlxuICAgICAgICAgIHtwLmNoaWxkcmVufVxuICAgICAgICA8L0ZsZXg+XG4gICAgICA8L0JvYXJkPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG50eXBlIENvbnRhaW5lclR5cGVQcm9wcyA9IHtcbiAgc2hvdzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXY8Q29udGFpbmVyVHlwZVByb3BzPmBcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigwLCAwLCAwLCAwLjMpO1xuICB6LWluZGV4OiAkeyhwcm9wcykgPT4gKHByb3BzLnNob3cgPyAxMDAwIDogLTEpfTtcbiAgb3BhY2l0eTogJHsocHJvcHMpID0+IChwcm9wcy5zaG93ID8gMSA6IDApfTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG5gO1xuXG50eXBlIEJvYXJkVHlwZVByb3BzID0ge1xuICBzaG93OiBib29sZWFuO1xuICB3aWR0aDogc3RyaW5nO1xufTtcblxuY29uc3QgQm9hcmQgPSBzdHlsZWQuc2VjdGlvbjxCb2FyZFR5cGVQcm9wcz5gXG4gIHdpZHRoOiAkeyhwcm9wcykgPT4gKHByb3BzLndpZHRoID8gcHJvcHMud2lkdGggOiAnZml0LWNvbnRlbnQnKX07XG4gIGhlaWdodDogZml0LWNvbnRlbnQ7XG4gIHBhZGRpbmc6ICR7c3R5bGVzLmJhc2VQYWRkaW5nfXB4O1xuICAke3N0eWxlcy5hbHBoYUJnU2V0fTtcbiAgYm9yZGVyLXJhZGl1czogJHtzdHlsZXMuYm9yZGVyUmFkaXVzfXB4O1xuICBib3gtc2hhZG93OiAke3N0eWxlcy5zaGFkb3dIb3Jpem9uQmFzZX07XG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgkeyhwcm9wcykgPT4gKHByb3BzLnNob3cgPyAwIDogYCR7c3R5bGVzLmJhc2VTaXplICogMn1weGApfSk7XG4gIEBtZWRpYSAobWF4LXdpZHRoOiAke3N0eWxlcy5zcExheW91dFN0cmljdFdpZHRofXB4KSB7XG4gICAgd2lkdGg6IDEwMHZ3O1xuICAgIGhlaWdodDogMTAwdmg7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgfVxuYDtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IEZsZXgsIHsgRmxleExheW91dFByb3BzVHlwZSwgZmxleExheW91dFByb3BzSW5pdCB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvRmxleCc7XG5pbXBvcnQgeyBHbG9iYWxDb250ZXh0VHlwZSwgdXNlR2xvYmFsQ29udGV4dCB9IGZyb20gJ2NvdmVyL2NvbnRhaW5lcic7XG5pbXBvcnQgeyBMYXlvdXRQcm9wc1R5cGUsIGxheW91dFByb3BzSW5pdCB9IGZyb20gJ2NvdmVyL25vZGVzL0xheW91dCc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbnR5cGUgUHJvcHMgPSB7XG4gIHNob3c6IGJvb2xlYW47XG4gIGNsb3NlTW9kYWw6ICgpID0+IHZvaWQ7XG4gIGhlYWRlcj86IFJlYWN0LlJlYWN0Tm9kZTtcbiAgY29udGVudDogUmVhY3QuUmVhY3ROb2RlO1xuICBmb290ZXI/OiBSZWFjdC5SZWFjdE5vZGU7XG4gIGZ1bGxIZWlnaHRDb250ZW50PzogYm9vbGVhbjtcbn0gJiBMYXlvdXRQcm9wc1R5cGUgJlxuICBGbGV4TGF5b3V0UHJvcHNUeXBlO1xuXG5jb25zdCBzcGFjZSA9IHN0eWxlcy5kb3VibGVNYXJnaW47XG5jb25zdCBwYXJ0c0hlaWdodCA9IDgwO1xuY29uc3QgbW9kYWxDb250YWluZXJDbGFzc05hbWUgPSAnTW9kYWxDb250YWluZXInO1xuXG5jb25zdCBDb21wb25lbnQ6IFJlYWN0LkZDPFByb3BzPiA9IChwcm9wczogUHJvcHMpID0+IHtcbiAgY29uc3QgZ2xvYmFsQ29udGV4dDogR2xvYmFsQ29udGV4dFR5cGUgPSB1c2VHbG9iYWxDb250ZXh0KCk7XG4gIGNvbnN0IHA6IFByb3BzID0geyAuLi5sYXlvdXRQcm9wc0luaXQsIC4uLmZsZXhMYXlvdXRQcm9wc0luaXQsIHdpZHRoOiBzdHlsZXMuc3BMYXlvdXRTdHJpY3RXaWR0aFB4LCAuLi5wcm9wcyB9O1xuICBsZXQgb3B0aW5hbFBhcnRDbnQgPSAwO1xuICBCb29sZWFuKHAuaGVhZGVyKSAmJiBvcHRpbmFsUGFydENudCsrO1xuICBCb29sZWFuKHAuZm9vdGVyKSAmJiBvcHRpbmFsUGFydENudCsrO1xuXG4gIHJldHVybiAoXG4gICAgPENvbnRhaW5lclxuICAgICAgY2xhc3NOYW1lPXttb2RhbENvbnRhaW5lckNsYXNzTmFtZX1cbiAgICAgIHNob3c9e3Auc2hvd31cbiAgICAgIG9uQ2xpY2s9eyhlOiBSZWFjdC5Nb3VzZUV2ZW50PEhUTUxEaXZFbGVtZW50LCBNb3VzZUV2ZW50PikgPT4ge1xuICAgICAgICBjb25zdCBlbG0gPSBlLnRhcmdldCBhcyBIVE1MRWxlbWVudDtcbiAgICAgICAgY29uc3QgaXNDbG9zZSA9IEJvb2xlYW4oQXJyYXkuZnJvbShlbG0uY2xhc3NMaXN0KS5maW5kKChjbGFzc05hbWUpID0+IGNsYXNzTmFtZSA9PT0gbW9kYWxDb250YWluZXJDbGFzc05hbWUpKTtcbiAgICAgICAgaWYgKGlzQ2xvc2UpIHtcbiAgICAgICAgICBwLmNsb3NlTW9kYWwoKTtcbiAgICAgICAgfVxuICAgICAgfX0+XG4gICAgICA8U2VjdGlvbkJvYXJkIGNsYXNzTmFtZT17YCR7bW9kYWxDb250YWluZXJDbGFzc05hbWV9Qm9hcmRgfSBzaG93PXtwLnNob3d9IHdpZHRoPXtwLndpZHRofT5cbiAgICAgICAge3AuaGVhZGVyICYmIChcbiAgICAgICAgICA8SGVhZGVyXG4gICAgICAgICAgICBjbGFzc05hbWU9e2Ake21vZGFsQ29udGFpbmVyQ2xhc3NOYW1lfUhlYWRlcmB9XG4gICAgICAgICAgICBhbGlnbkl0ZW1zPVwiY2VudGVyXCJcbiAgICAgICAgICAgIGp1c3RpZnlDb250ZW50PVwiZmxleC1zdGFydFwiXG4gICAgICAgICAgICBib3JkZXI9XCJ1bmRlcmxpbmVcIlxuICAgICAgICAgICAgc2lkZVBhZGRpbmc+XG4gICAgICAgICAgICB7cC5oZWFkZXJ9XG4gICAgICAgICAgPC9IZWFkZXI+XG4gICAgICAgICl9XG4gICAgICAgIDxDb250ZW50XG4gICAgICAgICAgY2xhc3NOYW1lPXtgJHttb2RhbENvbnRhaW5lckNsYXNzTmFtZX1Db250ZW50YH1cbiAgICAgICAgICBmbG93PXtwLmZsb3d9XG4gICAgICAgICAgd2luZG93SW5uZXJIZWlnaHQ9e2dsb2JhbENvbnRleHQuaW5uZXJIZWlnaHR9XG4gICAgICAgICAgZnVsbEhlaWdodENvbnRlbnQ9e3AuZnVsbEhlaWdodENvbnRlbnR9XG4gICAgICAgICAgb3B0aW5hbFBhcnRDbnQ9e29wdGluYWxQYXJ0Q250fVxuICAgICAgICAgIHVwcGVyUGFkZGluZ1xuICAgICAgICAgIHNpZGVQYWRkaW5nXG4gICAgICAgICAgYm90dG9tUGFkZGluZz5cbiAgICAgICAgICB7cC5jb250ZW50fVxuICAgICAgICA8L0NvbnRlbnQ+XG4gICAgICAgIHtwLmZvb3RlciAmJiAoXG4gICAgICAgICAgPEZvb3RlclxuICAgICAgICAgICAgY2xhc3NOYW1lPXtgJHttb2RhbENvbnRhaW5lckNsYXNzTmFtZX1Gb290ZXJgfVxuICAgICAgICAgICAgd2lkdGg9XCIxMDAlXCJcbiAgICAgICAgICAgIGFsaWduSXRlbXM9XCJjZW50ZXJcIlxuICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ9XCJjZW50ZXJcIlxuICAgICAgICAgICAgYm9yZGVyPVwidG9wbGluZVwiXG4gICAgICAgICAgICBzaWRlUGFkZGluZz5cbiAgICAgICAgICAgIHtwLmZvb3Rlcn1cbiAgICAgICAgICA8L0Zvb3Rlcj5cbiAgICAgICAgKX1cbiAgICAgIDwvU2VjdGlvbkJvYXJkPlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgQ29tcG9uZW50O1xuXG50eXBlIENvbnRhaW5lclR5cGVQcm9wcyA9IHtcbiAgc2hvdzogYm9vbGVhbjtcbn07XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXY8Q29udGFpbmVyVHlwZVByb3BzPmBcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMTAwdmg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigwLCAwLCAwLCAwLjMpO1xuICB6LWluZGV4OiAkeyhwcm9wcykgPT4gKHByb3BzLnNob3cgPyAxMDAwIDogLTEpfTtcbiAgb3BhY2l0eTogJHsocHJvcHMpID0+IChwcm9wcy5zaG93ID8gMSA6IDApfTtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAke3N0eWxlcy50cmFuc2l0aW9uRHVyYXRpb259bXM7XG5gO1xuXG50eXBlIEJvYXJkVHlwZVByb3BzID0ge1xuICBzaG93OiBib29sZWFuO1xuICB3aWR0aDogc3RyaW5nO1xufTtcblxuY29uc3QgU2VjdGlvbkJvYXJkID0gc3R5bGVkLnNlY3Rpb248Qm9hcmRUeXBlUHJvcHM+YFxuICBvdmVyZmxvdzogaGlkZGVuO1xuICB3aWR0aDogJHsocHJvcHMpID0+IChwcm9wcy53aWR0aCA/IHByb3BzLndpZHRoIDogJ2ZpdC1jb250ZW50Jyl9O1xuICBoZWlnaHQ6IGZpdC1jb250ZW50O1xuICBtYXgtaGVpZ2h0OiBjYWxjKDEwMHZoIC0gJHtzcGFjZSAqIDJ9cHgpO1xuICBwYWRkaW5nOiAwICR7c3BhY2V9cHg7XG4gIG1hcmdpbjogJHtzcGFjZX1weDtcbiAgJHtzdHlsZXMuYWxwaGFCZ1NldH07XG4gIGJvcmRlci1yYWRpdXM6ICR7c3R5bGVzLmJvcmRlclJhZGl1c31weDtcbiAgYm94LXNoYWRvdzogJHtzdHlsZXMuc2hhZG93SG9yaXpvbkJhc2V9O1xuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoJHsocHJvcHMpID0+IChwcm9wcy5zaG93ID8gMCA6IGAke3N0eWxlcy5iYXNlU2l6ZSAqIDJ9cHhgKX0pO1xuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRTdHJpY3RXaWR0aH1weCkge1xuICAgIHdpZHRoOiAxMDB2dztcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIG1heC1oZWlnaHQ6IG5vbmU7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgfVxuYDtcblxuY29uc3QgSGVhZGVyID0gc3R5bGVkKEZsZXgpYFxuICBoZWlnaHQ6ICR7cGFydHNIZWlnaHR9cHg7XG5gO1xuXG50eXBlIENvbnRlbnRQcm9wc1R5cGUgPSB7XG4gIHdpbmRvd0lubmVySGVpZ2h0OiBudW1iZXI7XG4gIG9wdGluYWxQYXJ0Q250OiBudW1iZXI7XG4gIGZ1bGxIZWlnaHRDb250ZW50PzogYm9vbGVhbjtcbn0gJiBGbGV4TGF5b3V0UHJvcHNUeXBlO1xuXG5jb25zdCBDb250ZW50ID0gc3R5bGVkKEZsZXgpPENvbnRlbnRQcm9wc1R5cGU+YFxuICBvdmVyZmxvdzogaGlkZGVuIHNjcm9sbDtcbiAgJHsocHJvcHMpID0+IChwcm9wcy5mdWxsSGVpZ2h0Q29udGVudCA/ICdoZWlnaHQ6IDEwMHZoJyA6ICcnKX07XG4gIG1heC1oZWlnaHQ6ICR7KHByb3BzKSA9PiBwcm9wcy53aW5kb3dJbm5lckhlaWdodCAtIChwYXJ0c0hlaWdodCArIHNwYWNlKSAqIHByb3BzLm9wdGluYWxQYXJ0Q250fXB4O1xuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRTdHJpY3RXaWR0aH1weCkge1xuICAgIG1heC1oZWlnaHQ6ICR7KHByb3BzKSA9PiBwcm9wcy53aW5kb3dJbm5lckhlaWdodCAtIHBhcnRzSGVpZ2h0ICogcHJvcHMub3B0aW5hbFBhcnRDbnR9cHg7XG4gIH1cbmA7XG5cbmNvbnN0IEZvb3RlciA9IHN0eWxlZChGbGV4KWBcbiAgaGVpZ2h0OiAke3BhcnRzSGVpZ2h0fXB4O1xuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuc3BMYXlvdXRTdHJpY3RXaWR0aH1weCkge1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICBib3R0b206IDA7XG4gIH1cbmA7XG4iLCJpbXBvcnQgTW9kYWxQbGFpbiBmcm9tICcuL01vZGFsUGxhaW4nO1xuaW1wb3J0IE1vZGFsU3RydWN0dXJlIGZyb20gJy4vTW9kYWxTdHJ1Y3R1cmUnO1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIFBsYWluOiBNb2RhbFBsYWluLFxuICBTdHJ1Y3R1cmU6IE1vZGFsU3RydWN0dXJlLFxufTtcbiIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG50eXBlIFByb3BzID0ge1xuICBjaDogc3RyaW5nO1xufTtcblxuY29uc3QgQ29tcG9uZW50OiBSZWFjdC5GQzxQcm9wcz4gPSAoeyBjaCB9OiBQcm9wcykgPT4ge1xuICByZXR1cm4gKFxuICAgIDxDb250YWluZXI+XG4gICAgICA8VHdpdHRlciBjbGFzc05hbWU9XCJ0d2l0dGVyXCI+XG4gICAgICAgIDxhXG4gICAgICAgICAgaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vc2hhcmU/cmVmX3NyYz10d3NyYyU1RXRmdyZ1cmw9aHR0cHM6Ly9jb3Zlci50YWxrbi5pby93d3cuc3VuYnJpZGdlLmNvbS9cIlxuICAgICAgICAgIGNsYXNzTmFtZT1cInR3aXR0ZXItc2hhcmUtYnV0dG9uXCJcbiAgICAgICAgICBkYXRhLXNob3ctY291bnQ9XCJmYWxzZVwiPlxuICAgICAgICAgIDxUd2l0dGVySWNvbiAvPlxuICAgICAgICAgIFR3ZWV0XG4gICAgICAgIDwvYT5cbiAgICAgICAgPHNjcmlwdCBhc3luYyBzcmM9XCJodHRwczovL3BsYXRmb3JtLnR3aXR0ZXIuY29tL3dpZGdldHMuanNcIiBjaGFyU2V0PVwidXRmLThcIj48L3NjcmlwdD5cbiAgICAgIDwvVHdpdHRlcj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiZmFjZWJvb2tcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJmYi1zaGFyZS1idXR0b25cIiBkYXRhLWhyZWY9e2BodHRwczovL2NvdmVyLnRhbGtuLmlvJHtjaH1gfSBkYXRhLWxheW91dD1cImJ1dHRvbl9jb3VudFwiIGRhdGEtc2l6ZT1cImxhcmdlXCI+XG4gICAgICAgICAgPGFcbiAgICAgICAgICAgIHRhcmdldD1cIl9ibGFua1wiXG4gICAgICAgICAgICBocmVmPXtgaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL3NoYXJlci9zaGFyZXIucGhwP3U9aHR0cHM6Ly9jb3Zlci50YWxrbi5pbyR7Y2h9O3NyYz1zZGtwcmVwYXJzZWB9XG4gICAgICAgICAgICBjbGFzc05hbWU9XCJmYi14ZmJtbC1wYXJzZS1pZ25vcmVcIlxuICAgICAgICAgICAgcmVsPVwibm9yZWZlcnJlclwiPlxuICAgICAgICAgICAgU2hhcmVcbiAgICAgICAgICA8L2E+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgPC9Db250YWluZXI+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBtYXJnaW46ICR7c3R5bGVzLmRvdWJsZU1hcmdpbn1weCAke3N0eWxlcy5kb3VibGVNYXJnaW59cHggJHtzdHlsZXMuZG91YmxlTWFyZ2lufXB4O1xuYDtcblxuY29uc3QgVHdpdHRlciA9IHN0eWxlZC5kaXZgXG4gIHBhZGRpbmc6IDVweCAxMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gIGJhY2tncm91bmQ6ICMxZGExZjI7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgZm9udC1zaXplOiAxM3B4O1xuICBjb2xvcjogI2ZmZjtcbiAgaSB7XG4gICAgbWFyZ2luLXRvcDogMnB4O1xuICAgIG1hcmdpbi1yaWdodDogNXB4O1xuICB9XG4gIGEge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgY29sb3I6ICNmZmY7XG4gIH1cbmA7XG5cbmNvbnN0IFR3aXR0ZXJJY29uID0gc3R5bGVkLmlgXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBiYWNrZ3JvdW5kOiB1cmwoZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyUyMHhtbG5zJTNEJTIyaHR0cCUzQSUyRiUyRnd3dy53My5vcmclMkYyMDAwJTJGc3ZnJTIyJTIwdmlld0JveCUzRCUyMjAlMjAwJTIwNzIlMjA3MiUyMiUzRSUzQ3BhdGglMjBmaWxsJTNEJTIybm9uZSUyMiUyMGQlM0QlMjJNMCUyMDBoNzJ2NzJIMHolMjIlMkYlM0UlM0NwYXRoJTIwY2xhc3MlM0QlMjJpY29uJTIyJTIwZmlsbCUzRCUyMiUyM2ZmZiUyMiUyMGQlM0QlMjJNNjguODEyJTIwMTUuMTRjLTIuMzQ4JTIwMS4wNC00Ljg3JTIwMS43NDQtNy41MiUyMDIuMDYlMjAyLjcwNC0xLjYyJTIwNC43OC00LjE4NiUyMDUuNzU3LTcuMjQzLTIuNTMlMjAxLjUtNS4zMyUyMDIuNTkyLTguMzE0JTIwMy4xNzZDNTYuMzUlMjAxMC41OSUyMDUyLjk0OCUyMDklMjA0OS4xODIlMjA5Yy03LjIzJTIwMC0xMy4wOTIlMjA1Ljg2LTEzLjA5MiUyMDEzLjA5MyUyMDAlMjAxLjAyNi4xMTglMjAyLjAyLjMzOCUyMDIuOThDMjUuNTQzJTIwMjQuNTI3JTIwMTUuOSUyMDE5LjMxOCUyMDkuNDQlMjAxMS4zOTZjLTEuMTI1JTIwMS45MzYtMS43NyUyMDQuMTg0LTEuNzclMjA2LjU4JTIwMCUyMDQuNTQzJTIwMi4zMTIlMjA4LjU1MiUyMDUuODI0JTIwMTAuOS0yLjE0Ni0uMDctNC4xNjUtLjY1OC01LjkzLTEuNjQtLjAwMi4wNTYtLjAwMi4xMS0uMDAyLjE2MyUyMDAlMjA2LjM0NSUyMDQuNTEzJTIwMTEuNjM4JTIwMTAuNTA0JTIwMTIuODQtMS4xLjI5OC0yLjI1Ni40NTctMy40NS40NTctLjg0NSUyMDAtMS42NjYtLjA3OC0yLjQ2NC0uMjMlMjAxLjY2NyUyMDUuMiUyMDYuNSUyMDguOTg1JTIwMTIuMjMlMjA5LjA5LTQuNDgyJTIwMy41MS0xMC4xMyUyMDUuNjA1LTE2LjI2JTIwNS42MDUtMS4wNTUlMjAwLTIuMDk2LS4wNi0zLjEyMi0uMTg0JTIwNS43OTQlMjAzLjcxNyUyMDEyLjY3NiUyMDUuODgyJTIwMjAuMDY3JTIwNS44ODIlMjAyNC4wODMlMjAwJTIwMzcuMjUtMTkuOTUlMjAzNy4yNS0zNy4yNSUyMDAtLjU2NS0uMDEzLTEuMTMzLS4wMzgtMS42OTMlMjAyLjU1OC0xLjg0NyUyMDQuNzc4LTQuMTUlMjA2LjUzMi02Ljc3NHolMjIlMkYlM0UlM0MlMkZzdmclM0UpO1xuICBtaW4td2lkdGg6IDE0cHg7XG4gIG1pbi1oZWlnaHQ6IDE0cHg7XG4gIHdpZHRoOiAxNHB4O1xuICBoZWlnaHQ6IDE0cHg7XG5gO1xuIiwiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmltcG9ydCB1dGlsIGZyb20gJ2NvbW1vbi91dGlsJztcblxuaW1wb3J0IGFwaSBmcm9tICdjb3Zlci9hcGknO1xuaW1wb3J0IEZsZXggZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9GbGV4JztcbmltcG9ydCBIIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvSCc7XG5pbXBvcnQgU3Bpbm5lciBmcm9tICdjb3Zlci9jb21wb25lbnRzL2F0b21zL1NwaW5uZXInO1xuaW1wb3J0IHsgTW9kYWxGb290ZXIgfSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9Qcm9maWxlL2NvbW1vbic7XG5pbXBvcnQgeyBVc2VyTW9kYWxPcHRpb25UeXBlIH0gZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9pbmRleCc7XG5pbXBvcnQgQ29udGVudCwgeyBob3ZlckFuaW1hdGlvbkJveFNoYWRvdyB9IGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0V5ZUNhdGNoL0NvbnRlbnQnO1xuaW1wb3J0IE1vZGFsIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL01vZGFsJztcblxudHlwZSBQcm9wcyA9IHtcbiAgc2hvdzogYm9vbGVhbjtcbiAgdXNlck1vZGFsT3B0aW9uczogVXNlck1vZGFsT3B0aW9uVHlwZTtcbiAgaGFuZGxlT25DbG9zZTogKCkgPT4gdm9pZDtcbn07XG5cbmNvbnN0IENvbXBvbmVudDogUmVhY3QuRkM8UHJvcHM+ID0gKHsgc2hvdywgdXNlck1vZGFsT3B0aW9ucywgaGFuZGxlT25DbG9zZSB9OiBQcm9wcykgPT4ge1xuICBjb25zdCBbaXNMb2FkaW5nLCBzZXRJc0xvYWRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbdXNlcnMsIHNldFVzZXJzXSA9IHVzZVN0YXRlPGFueVtdPihbXSk7XG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0SXNMb2FkaW5nKHRydWUpO1xuICAgIGNvbnN0IHJlcXVlc3RKc29uID0gdXRpbC5kZWVwQ29weSh1c2VyTW9kYWxPcHRpb25zKTtcbiAgICBkZWxldGUgcmVxdWVzdEpzb24uaXNFZGl0YWJsZTtcbiAgICBkZWxldGUgcmVxdWVzdEpzb24uaW5kZXg7XG5cbiAgICAvLyBkZWNsYXJlIHRoZSBkYXRhIGZldGNoaW5nIGZ1bmN0aW9uXG4gICAgY29uc3QgZmV0Y2hEYXRhID0gYXN5bmMgKCkgPT4ge1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgYXBpLmpzb24oJ3NlYXJjaCcsIHJlcXVlc3RKc29uKTtcbiAgICAgIHNldFVzZXJzKHJlc3VsdC5yZXNwb25zZSk7XG4gICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xuICAgIH07XG5cbiAgICAvLyBjYWxsIHRoZSBmdW5jdGlvblxuICAgIGZldGNoRGF0YSgpLmNhdGNoKChlKSA9PiB7XG4gICAgICBzZXRJc0xvYWRpbmcoZmFsc2UpO1xuICAgICAgY29uc29sZS5lcnJvcihlKTtcbiAgICB9KTtcbiAgfSwgW10pO1xuICBjb25zb2xlLmxvZyh1c2Vycyk7XG4gIHJldHVybiAoXG4gICAgPE1vZGFsLlN0cnVjdHVyZVxuICAgICAgc2hvdz17c2hvd31cbiAgICAgIGNsb3NlTW9kYWw9e2hhbmRsZU9uQ2xvc2V9XG4gICAgICBmbG93PVwiY29sdW1uIG5vd3JhcFwiXG4gICAgICBoZWFkZXI9ezxILkZpdmU+U2VhcmNoIFJlc3VsdDwvSC5GaXZlPn1cbiAgICAgIGNvbnRlbnQ9e1xuICAgICAgICA8PlxuICAgICAgICAgIHtpc0xvYWRpbmcgJiYgKFxuICAgICAgICAgICAgPEZsZXggZmxvdz1cImNvbHVtbiBub3dyYXBcIiB3aWR0aD1cIjEwMCVcIiBoZWlnaHQ9XCIxMDAlXCIgYWxpZ25JdGVtcz1cImNlbnRlclwiIGp1c3RpZnlDb250ZW50PVwiY2VudGVyXCI+XG4gICAgICAgICAgICAgIDxTcGlubmVyIC8+XG4gICAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgICAgKX1cbiAgICAgICAgICA8RmxleCBmbG93PVwiY29sdW1uIG5vd3JhcFwiIHdpZHRoPVwiMTAwJVwiPlxuICAgICAgICAgICAge3VzZXJzLm1hcCgodXNlcikgPT4gKFxuICAgICAgICAgICAgICA8PlxuICAgICAgICAgICAgICAgIDxDb250ZW50IGtleT17dXNlci5lbWFpbH0gdXNlcj17dXNlcn0gZnVsbFdpZHRoPXtmYWxzZX0gaG92ZXJBbmltYXRpb25UeXBlPXtob3ZlckFuaW1hdGlvbkJveFNoYWRvd30gLz5cbiAgICAgICAgICAgICAgICA8YnIgLz5cbiAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgICA8L0ZsZXg+XG4gICAgICAgIDwvPlxuICAgICAgfVxuICAgICAgZm9vdGVyPXs8TW9kYWxGb290ZXIgdXNlck1vZGFsT3B0aW9ucz17dXNlck1vZGFsT3B0aW9uc30gaGFuZGxlT25DbG9zZT17aGFuZGxlT25DbG9zZX0gc2hvd1Bvc2l0aXZlPXtmYWxzZX0gLz59XG4gICAgICBmdWxsSGVpZ2h0Q29udGVudFxuICAgICAgdXBwZXJQYWRkaW5nXG4gICAgICBzaWRlUGFkZGluZ1xuICAgICAgYm90dG9tUGFkZGluZ1xuICAgIC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBDb21wb25lbnQ7XG4iLCJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUNhbGxiYWNrLCB1c2VDb250ZXh0LCB1c2VFZmZlY3QsIHVzZVJlZiwgdXNlTWVtbyB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgeyBTdG9yaWVzSW5kZXhUeXBlLCBjb25maWdVc2VyQ2F0ZWdvcnlDaExpbWl0IH0gZnJvbSAnY29tbW9uL3RhbGtuQ29uZmlnJztcblxuaW1wb3J0IENvbW1pbmdTb29uIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvYXRvbXMvQ29tbWluZ1Nvb24nO1xuaW1wb3J0IHsgUHJvcHMgYXMgTm9kZVByb3BzIH0gZnJvbSAnY292ZXIvY29tcG9uZW50cy9hdG9tcy9Ob2RlJztcbmltcG9ydCBBZHZlcnRzIGZyb20gJ2NvdmVyL2NvbXBvbmVudHMvb3JnYW5pc21zL0FkdmVydHMnO1xuaW1wb3J0IExpdmVQYWdlQ29udGVudHMgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvTGl2ZVBhZ2UvJztcbmltcG9ydCBDb250ZW50TWVudSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9Db250ZW50cy9NZW51JztcbmltcG9ydCBQcm9maWxlQ29udGVudHMgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZSc7XG5pbXBvcnQgeyBVc2VyTW9kYWxPcHRpb25UeXBlLCB1c2VyTW9kYWxPcHRpb25Jbml0IH0gZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvUHJvZmlsZS9pbmRleCc7XG5pbXBvcnQgU2lkZU1lbnUgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvU2lkZU1lbnUnO1xuaW1wb3J0IFN0b3J5Q29udGVudHMgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvU3RvcnkvY29udGVudHMnO1xuaW1wb3J0IFN0b3J5SW5kZXggZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvQ29udGVudHMvU3RvcnkvaW5kZXgnO1xuaW1wb3J0IEV5ZUNhdGNoTWFpbiBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9FeWVDYXRjaC9NYWluJztcbmltcG9ydCBGb290ZXIgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvRm9vdGVyJztcbmltcG9ydCBIZWFkZXIgZnJvbSAnY292ZXIvY29tcG9uZW50cy9vcmdhbmlzbXMvSGVhZGVyJztcbmltcG9ydCBTbnNTaGFyZSBmcm9tICdjb3Zlci9jb21wb25lbnRzL29yZ2FuaXNtcy9TbnNTaGFyZSc7XG5pbXBvcnQgU2VhcmNoTW9kYWwgZnJvbSAnY292ZXIvY29tcG9uZW50cy9wYWdlcy9TZWFyY2hNb2RhbCc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5pbXBvcnQge1xuICBVc2VyVHlwZSxcbiAgVXNlclRhZ3NUeXBlLFxuICBHb29nbGVTZXNzaW9uVHlwZSxcbiAgZ29vZ2xlU2Vzc2lvbkluaXQsXG4gIFNlbGVjdENvbnRlbnRNZW51VHlwZSxcbiAgc2VsZWN0Q29udGVudE1lbnVMaXZlUGFnZXMsXG4gIHNlbGVjdENvbnRlbnRNZW51QnVzaW5lc3MsXG4gIHNlbGVjdENvbnRlbnRNZW51U3RvcnksXG4gIHNlbGVjdENvbnRlbnRNZW51UHJvZmlsZSxcbiAgc2VsZWN0Q29udGVudE1lbnVEZWZhdWx0LFxufSBmcm9tICdjb3Zlci90YWxrbi5jb3Zlcic7XG5cbmV4cG9ydCB0eXBlIEdsb2JhbENvbnRleHRUeXBlID0ge1xuICBpbm5lcldpZHRoOiBudW1iZXI7XG4gIGlubmVySGVpZ2h0OiBudW1iZXI7XG59O1xuXG5jb25zdCBHbG9iYWxDb250ZXh0ID0gUmVhY3QuY3JlYXRlQ29udGV4dCh7IGlubmVyV2lkdGg6IDAsIGlubmVySGVpZ2h0OiAwIH0pO1xuXG5leHBvcnQgY29uc3QgdXNlR2xvYmFsQ29udGV4dCA9ICgpID0+IHtcbiAgcmV0dXJuIHVzZUNvbnRleHQoR2xvYmFsQ29udGV4dCk7XG59O1xuXG50eXBlIFN0b3JpZXNWZXJ0aWNhbERhdGFzID0ge1xuICBvZmZzZXRUb3A6IG51bWJlcjtcbiAgb2Zmc2V0Qm90dG9tOiBudW1iZXI7XG59O1xuXG50eXBlIFByb3BzID0gdW5rbm93bjtcblxudHlwZSBOYXZpZ2F0aW9uTGF5b3V0ID0ge1xuICB3aWR0aDogbnVtYmVyO1xuICBtYXJnaW5Ub3A6IG51bWJlcjtcbiAgbWFyZ2luUmlnaHQ6IG51bWJlcjtcbiAgbWFyZ2luQm90dG9tOiBudW1iZXI7XG4gIG1hcmdpbkxlZnQ6IG51bWJlcjtcbiAgcGFkZGluZ1RvcDogbnVtYmVyO1xuICBwYWRkaW5nUmlnaHQ6IG51bWJlcjtcbiAgcGFkZGluZ0JvdHRvbTogbnVtYmVyO1xuICBwYWRkaW5nTGVmdDogbnVtYmVyO1xufTtcblxudHlwZSBTdG9yaWVzU2VjdGlvblR5cGUgPSB7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIHJlc3VtZTogc3RyaW5nO1xuICBmbG93OiBzdHJpbmc7XG4gIG5vZGVzOiBOb2RlUHJvcHNbXTtcbn07XG5cbnR5cGUgU3Rvcmllc1R5cGUgPSB7XG4gIHZlcnNpb246IHN0cmluZztcbiAgY3JlYXRlVGltZTogc3RyaW5nO1xuICBjc3M6IHN0cmluZztcbiAgaGVhZDogc3RyaW5nO1xuICBzZWN0aW9uczogU3Rvcmllc1NlY3Rpb25UeXBlW10gfCBbXTtcbn07XG5cbmNvbnN0IHN0b3JpZXNJbml0OiBTdG9yaWVzVHlwZSA9IHtcbiAgdmVyc2lvbjogJycsXG4gIGNyZWF0ZVRpbWU6ICcnLFxuICBjc3M6ICcnLFxuICBoZWFkOiAnJyxcbiAgc2VjdGlvbnM6IFtdLFxufTtcblxuY29uc3Qgc3Rvcmllc1ZlcnRpY2FsSW5pdGlhbCA9IHsgb2Zmc2V0VG9wOiAwLCBvZmZzZXRCb3R0b206IDAgfTtcblxubGV0IHN0b3JpZXNWZXJ0aWNhbERhdGFzOiBTdG9yaWVzVmVydGljYWxEYXRhc1tdID0gW107XG5jb25zdCBUYWxrbkNvbnRhaW5lcjogUmVhY3QuRkM8UHJvcHM+ID0gKHByb3BzKSA9PiB7XG4gIGNvbnN0IFtkYXRhTW91bnQsIHNldE1vdW50RGF0YV0gPSBSZWFjdC51c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtjb25maWcsIHNldENvbmZpZ10gPSB1c2VTdGF0ZTxhbnk+KHt9KTtcbiAgY29uc3QgW3RocmVhZCwgc2V0VGhyZWFkXSA9IHVzZVN0YXRlPGFueT4oe30pO1xuICBjb25zdCBbc2VydmVyTWV0YXMsIHNldFNlcnZlck1ldGFzXSA9IHVzZVN0YXRlPGFueT4oe30pO1xuICBjb25zdCBbc3Rvcmllcywgc2V0U3Rvcmllc10gPSB1c2VTdGF0ZTxTdG9yaWVzVHlwZT4oc3Rvcmllc0luaXQpO1xuXG4gIGNvbnN0IFtpc015UGFnZSwgc2V0SXNNeVBhZ2VdID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbc2Vzc2lvbiwgc2V0U2Vzc2lvbl0gPSB1c2VTdGF0ZTxHb29nbGVTZXNzaW9uVHlwZT4oZ29vZ2xlU2Vzc2lvbkluaXQpO1xuXG4gIGNvbnN0IFt1c2VyLCBzZXRVc2VyXSA9IHVzZVN0YXRlPFVzZXJUeXBlPigpO1xuICBjb25zdCBbdXNlclRhZ3NJbml0LCBzZXRVc2VyVGFnc0luaXRdID0gdXNlU3RhdGU8VXNlclRhZ3NUeXBlPigpO1xuICBjb25zdCBbdXNlclRhZ3MsIHNldFVzZXJUYWdzXSA9IHVzZVN0YXRlPFVzZXJUYWdzVHlwZT4oKTtcblxuICBjb25zdCBbc2VsZWN0UHJvZmlsZU1vZGFsT3B0aW9uLCBzZXRTZWxlY3RQcm9maWxlTW9kYWxPcHRpb25dID0gdXNlU3RhdGU8VXNlck1vZGFsT3B0aW9uVHlwZT4oeyAuLi51c2VyTW9kYWxPcHRpb25Jbml0IH0pO1xuICAvKlxuICBjb25zdCBbc3Rvcmllc0V5ZUNhdGNocywgc2V0U3Rvcmllc0V5ZUNhdGNoc10gPSB1c2VTdGF0ZTxTdG9yaWVzSW5kZXhUeXBlW10+KFN0b3JpZXNJbmRleENvbnRlbnRzSW5pdCk7XG4gIGNvbnN0IFtleWVDYXRjaFNjcm9sbEluZGV4LCBzZXRFeWVDYXRjaFNjcm9sbEluZGV4XSA9IHVzZVN0YXRlKDApO1xuKi9cbiAgY29uc3QgW21heE1haW4sIHNldE1heE1haW5dID0gdXNlU3RhdGUoZmFsc2UpO1xuICBjb25zdCBbc2hvd0FkdmVydCwgc2V0U2hvd0FkdmVydF0gPSB1c2VTdGF0ZSh0cnVlKTtcbiAgY29uc3QgW3Nob3dTZWFyY2hNb2RhbE9wdGlvbiwgc2V0U2hvd1NlYXJjaE1vZGFsT3B0aW9uXSA9IHVzZVN0YXRlPFVzZXJNb2RhbE9wdGlvblR5cGU+KHsgLi4udXNlck1vZGFsT3B0aW9uSW5pdCB9KTtcblxuICBjb25zdCBbdXNlckNhdGVnb3J5Q2hzLCBzZXRVc2VyQ2F0ZWdvcnlDaHNdID0gdXNlU3RhdGUoW10pO1xuICAvLyAgY29uc3QgW3N0b3JpZXNJbmRleCwgc2V0U3Rvcmllc0luZGV4XSA9IHVzZVN0YXRlPFN0b3JpZXNJbmRleFR5cGVbXT4oU3Rvcmllc0luZGV4Q29udGVudHNJbml0KTtcbiAgY29uc3QgW3N0b3JpZXNJbmRleFBvaW50ZXIsIHNldFN0b3JpZXNJbmRleFBvaW50ZXJdID0gdXNlU3RhdGU8bnVtYmVyIHwgdW5kZWZpbmVkPigpO1xuICBjb25zdCBbb3Blbk1lbnUsIHNldE9wZW5NZW51XSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3NlbGVjdENvbnRlbnRNZW51LCBzZXRTZWxlY3RDb250ZW50TWVudV0gPSB1c2VTdGF0ZTxTZWxlY3RDb250ZW50TWVudVR5cGU+KHNlbGVjdENvbnRlbnRNZW51RGVmYXVsdCk7XG4gIGNvbnN0IFtzdG9yaWVzUG9pbnRlciwgc2V0U3Rvcmllc1BvaW50ZXJdID0gdXNlU3RhdGU8bnVtYmVyIHwgdW5kZWZpbmVkPigpO1xuICBjb25zdCBbbmF2aWdhdGlvbkxheW91dCwgc2V0TmF2aWdhdGlvbkxheW91dF0gPSB1c2VTdGF0ZTxOYXZpZ2F0aW9uTGF5b3V0IHwgdW5kZWZpbmVkPigpO1xuXG4gIGNvbnN0IG1lbnVPcmRlclJlZiA9IHVzZVJlZjxIVE1MRWxlbWVudD4oKTtcbiAgY29uc3Qgc3Rvcmllc1JlZiA9IHVzZVJlZjxIVE1MRWxlbWVudD4oKTtcbiAgY29uc3QgcmVzdW1lUmVmID0gdXNlUmVmPEhUTUxFbGVtZW50PigpO1xuICBjb25zdCBjb250ZW50TWVudVJlZiA9IHVzZVJlZjxIVE1MRWxlbWVudD4oKTtcbiAgY29uc3QgdGFsa25GcmFtZVJlZiA9IHVzZVJlZjxIVE1MRWxlbWVudD4oKTtcbiAgY29uc3Qgb2dwSW1hZ2VSZWYgPSB1c2VSZWY8SFRNTEVsZW1lbnQ+KCk7XG4gIGNvbnN0IHNob3dTZWFyY2hNb2RhbCA9IHNob3dTZWFyY2hNb2RhbE9wdGlvbi5pbmRleCAhPT0gdW5kZWZpbmVkO1xuXG4gIGNvbnN0IHVzZVdpbmRvd1NpemUgPSAoKSA9PiB7XG4gICAgY29uc3QgW3dpbmRvd1NpemUsIHNldFdpbmRvd1NpemVdID0gdXNlU3RhdGUoeyBpbm5lcldpZHRoOiAwLCBpbm5lckhlaWdodDogMCB9KTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICBjb25zdCBoYW5kbGVSZXNpemUgPSAoKSA9PiB7XG4gICAgICAgIHNldFdpbmRvd1NpemUoe1xuICAgICAgICAgIGlubmVyV2lkdGg6IHdpbmRvdy5pbm5lcldpZHRoLFxuICAgICAgICAgIGlubmVySGVpZ2h0OiB3aW5kb3cuaW5uZXJIZWlnaHQsXG4gICAgICAgIH0pO1xuICAgICAgfTtcbiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCBoYW5kbGVSZXNpemUpO1xuICAgICAgaGFuZGxlUmVzaXplKCk7XG4gICAgICByZXR1cm4gKCkgPT4gd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGhhbmRsZVJlc2l6ZSk7XG4gICAgfSwgW10pO1xuXG4gICAgcmV0dXJuIHdpbmRvd1NpemU7XG4gIH07XG5cbiAgY29uc3Qgc2l6ZSA9IHVzZVdpbmRvd1NpemUoKTtcblxuICBjb25zdCBoYW5kbGVPbkNsaWNrTmF2ID0gKGNoYXB0ZXJJbmRleDogbnVtYmVyKSA9PiB7XG4gICAgaWYgKHN0b3JpZXNSZWYuY3VycmVudCkge1xuICAgICAgY29uc3Qgc2Nyb2xsVG9FbG0gPSBzdG9yaWVzUmVmLmN1cnJlbnQuY2hpbGRyZW5bY2hhcHRlckluZGV4XSBhcyBIVE1MRWxlbWVudDtcbiAgICAgIGNvbnN0IHNjcm9sbFRvVG9wID0gc2Nyb2xsVG9FbG0ub2Zmc2V0VG9wIC0gc3R5bGVzLmFwcEhlYWRlckhlaWdodCAqIDIgLSBzdHlsZXMuYmFzZVNpemU7XG4gICAgICB3aW5kb3cuc2Nyb2xsVG8oeyB0b3A6IHNjcm9sbFRvVG9wLCBiZWhhdmlvcjogJ3Ntb290aCcgfSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2xpY2tNZW51ID0gKCkgPT4ge1xuICAgIHNldE9wZW5NZW51KCFvcGVuTWVudSk7XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlT25DbGlja01lbnVPdXQgPSAoZSkgPT4ge1xuICAgIC8vICAgIGlmIChlLnRhcmdldCAhPT0gbWVudU9yZGVyUmVmLmN1cnJlbnQgJiYgZS50YXJnZXQgIT09IGhlYWRlclNpZGVNZW51UmVmLmN1cnJlbnQpIHtcbiAgICBzZXRPcGVuTWVudShmYWxzZSk7XG4gICAgLy8gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZU9uQ2xpY2tDb250cm9sQWR2ZXJ0ID0gKCkgPT4ge1xuICAgIGlmIChzaG93QWR2ZXJ0KSB7XG4gICAgICBzZXRTaG93QWR2ZXJ0KGZhbHNlKTtcbiAgICAgIHNldE1heE1haW4odHJ1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldE1heE1haW4oZmFsc2UpO1xuICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgIHNldFNob3dBZHZlcnQodHJ1ZSk7XG4gICAgICB9LCBzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9uKTtcbiAgICB9XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAobWVudU9yZGVyUmVmLmN1cnJlbnQpIHtcbiAgICAgIG1lbnVPcmRlclJlZi5jdXJyZW50LnNjcm9sbFRvcCA9IC1tZW51T3JkZXJSZWYuY3VycmVudC5jbGllbnRIZWlnaHQ7XG4gICAgfVxuICB9LCBbbWVudU9yZGVyUmVmLmN1cnJlbnRdKTtcblxuICAvKioqKioqKioqKiovXG4gIC8qIFNUT1JZXG4gIC8qKioqKioqKioqKi9cblxuICBjb25zdCB1c2VDYWxsYmFja1Njcm9sbCA9IHVzZUNhbGxiYWNrKCgpID0+IHtcbiAgICBjb25zdCBfc3Rvcmllc1BvaW50ZXIgPSBzdG9yaWVzVmVydGljYWxEYXRhcy5maW5kSW5kZXgoXG4gICAgICAob2JqKSA9PiBvYmoub2Zmc2V0VG9wIDw9IHdpbmRvdy5zY3JvbGxZICsgc3R5bGVzLmJhc2VIZWlnaHQgJiYgd2luZG93LnNjcm9sbFkgKyBzdHlsZXMuYmFzZUhlaWdodCA8IG9iai5vZmZzZXRCb3R0b21cbiAgICApO1xuICAgIHNldFN0b3JpZXNQb2ludGVyKF9zdG9yaWVzUG9pbnRlcik7XG4gIH0sIFtzdG9yaWVzVmVydGljYWxEYXRhc10pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHN0b3JpZXNSZWYuY3VycmVudCkge1xuICAgICAgQXJyYXkuZnJvbShzdG9yaWVzUmVmLmN1cnJlbnQuY2hpbGRyZW4pLmZvckVhY2goKGNoaWxkOiBIVE1MRWxlbWVudCwgaW5kZXgpID0+IHtcbiAgICAgICAgaWYgKCFzdG9yaWVzVmVydGljYWxEYXRhc1tpbmRleF0pIHtcbiAgICAgICAgICBzdG9yaWVzVmVydGljYWxEYXRhc1tpbmRleF0gPSBzdG9yaWVzVmVydGljYWxJbml0aWFsO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG9mZnNldFRvcCA9IGNoaWxkLm9mZnNldFRvcCAtIHN0eWxlcy5hcHBIZWFkZXJIZWlnaHQgLSBzdHlsZXMuYmFzZVNpemU7XG4gICAgICAgIGNvbnN0IG9mZnNldEJvdHRvbSA9IG9mZnNldFRvcCArIGNoaWxkLmNsaWVudEhlaWdodDtcbiAgICAgICAgc3Rvcmllc1ZlcnRpY2FsRGF0YXNbaW5kZXhdID0geyBvZmZzZXRUb3AsIG9mZnNldEJvdHRvbSB9O1xuICAgICAgICBpZiAoaW5kZXggPiAwKSB7XG4gICAgICAgICAgc3Rvcmllc1ZlcnRpY2FsRGF0YXNbaW5kZXggLSAxXS5vZmZzZXRCb3R0b20gPSBvZmZzZXRUb3AgLSAxO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIFtzdG9yaWVzUmVmLmN1cnJlbnQgJiYgc3Rvcmllc1JlZi5jdXJyZW50LmNsaWVudEhlaWdodF0pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHJlc3VtZVJlZi5jdXJyZW50ICYmIHdpbmRvdy50YWxrblN0b3JpZXMgJiYgd2luZG93LnRhbGtuU3Rvcmllcy5zZWN0aW9ucy5sZW5ndGggPiAwKSB7XG4gICAgICBpZiAoc3R5bGVzLnNwTGF5b3V0V2lkdGggPCB3aW5kb3cuaW5uZXJXaWR0aCkge1xuICAgICAgICBjb25zdCByZXN1bWVFbG0gPSByZXN1bWVSZWYuY3VycmVudDtcbiAgICAgICAgY29uc3QgcmVzdW1lU3R5bGUgPSBnZXRDb21wdXRlZFN0eWxlKHJlc3VtZUVsbSk7XG4gICAgICAgIGNvbnN0IHdpZHRoID0gc3R5bGVzLmdldFRyaW1Vbml0TnVtYmVyKHJlc3VtZVN0eWxlLndpZHRoKTtcbiAgICAgICAgY29uc3QgbWFyZ2luVG9wID0gc3R5bGVzLmdldFRyaW1Vbml0TnVtYmVyKHJlc3VtZVN0eWxlLm1hcmdpblRvcCk7XG4gICAgICAgIGNvbnN0IG1hcmdpblJpZ2h0ID0gc3R5bGVzLmdldFRyaW1Vbml0TnVtYmVyKHJlc3VtZVN0eWxlLm1hcmdpblJpZ2h0KTtcbiAgICAgICAgY29uc3QgbWFyZ2luQm90dG9tID0gc3R5bGVzLmdldFRyaW1Vbml0TnVtYmVyKHJlc3VtZVN0eWxlLm1hcmdpbkJvdHRvbSk7XG4gICAgICAgIGNvbnN0IG1hcmdpbkxlZnQgPSBzdHlsZXMuZ2V0VHJpbVVuaXROdW1iZXIocmVzdW1lU3R5bGUubWFyZ2luTGVmdCk7XG4gICAgICAgIGNvbnN0IHBhZGRpbmdUb3AgPSBzdHlsZXMuZ2V0VHJpbVVuaXROdW1iZXIocmVzdW1lU3R5bGUucGFkZGluZ1RvcCk7XG4gICAgICAgIGNvbnN0IHBhZGRpbmdSaWdodCA9IHN0eWxlcy5nZXRUcmltVW5pdE51bWJlcihyZXN1bWVTdHlsZS5wYWRkaW5nUmlnaHQpO1xuICAgICAgICBjb25zdCBwYWRkaW5nQm90dG9tID0gc3R5bGVzLmdldFRyaW1Vbml0TnVtYmVyKHJlc3VtZVN0eWxlLnBhZGRpbmdCb3R0b20pO1xuICAgICAgICBjb25zdCBwYWRkaW5nTGVmdCA9IHN0eWxlcy5nZXRUcmltVW5pdE51bWJlcihyZXN1bWVTdHlsZS5wYWRkaW5nTGVmdCk7XG5cbiAgICAgICAgc2V0TmF2aWdhdGlvbkxheW91dCh7XG4gICAgICAgICAgd2lkdGgsXG4gICAgICAgICAgbWFyZ2luVG9wLFxuICAgICAgICAgIG1hcmdpblJpZ2h0LFxuICAgICAgICAgIG1hcmdpbkJvdHRvbSxcbiAgICAgICAgICBtYXJnaW5MZWZ0LFxuICAgICAgICAgIHBhZGRpbmdUb3AsXG4gICAgICAgICAgcGFkZGluZ1JpZ2h0LFxuICAgICAgICAgIHBhZGRpbmdCb3R0b20sXG4gICAgICAgICAgcGFkZGluZ0xlZnQsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgfSwgW3dpbmRvdy5pbm5lcldpZHRoLCBzdG9yaWVzICYmIHN0b3JpZXMuc2VjdGlvbnMubGVuZ3RoXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAoc2Vzc2lvbiAmJiBzZXNzaW9uLmVtYWlsICYmIHNlc3Npb24uZW1haWwgIT09ICcnKSB7XG4gICAgICBjb25zdCBwYWdlID0gbG9jYXRpb24ucGF0aG5hbWUuc3BsaXQoJy8nKVsxXTtcbiAgICAgIHNldElzTXlQYWdlKHNlc3Npb24uZW1haWwgPT09IHBhZ2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICBzZXRJc015UGFnZShmYWxzZSk7XG4gICAgfVxuICB9LCBbc2Vzc2lvbl0pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgc2V0U2VsZWN0UHJvZmlsZU1vZGFsT3B0aW9uKHsgLi4udXNlck1vZGFsT3B0aW9uSW5pdCwgLi4udXNlciB9KTtcbiAgfSwgW3VzZXJdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldE1vdW50RGF0YSh0cnVlKTtcbiAgICBjb25zdCB1c2VyQ2F0ZWdvcnlDaENudCA9IHdpbmRvdy50YWxrbkNvbmZpZy51c2VyQ2F0ZWdvcnlDaHMubGVuZ3RoO1xuICAgIHdpbmRvdy50YWxrbkNvbmZpZy51c2VyQ2F0ZWdvcnlDaHMgPSB3aW5kb3cudGFsa25Db25maWcudXNlckNhdGVnb3J5Q2hzLmNvbmNhdChcbiAgICAgIG5ldyBBcnJheShjb25maWdVc2VyQ2F0ZWdvcnlDaExpbWl0IC0gdXNlckNhdGVnb3J5Q2hDbnQpLmZpbGwoJycpXG4gICAgKTtcblxuICAgIHNldENvbmZpZyh3aW5kb3cudGFsa25Db25maWcpO1xuICAgIHNldFRocmVhZCh3aW5kb3cudGFsa25UaHJlYWQpO1xuICAgIHNldFNlcnZlck1ldGFzKHdpbmRvdy50YWxrblNlcnZlck1ldGFzKTtcbiAgICBzZXRTdG9yaWVzKHdpbmRvdy50YWxrblN0b3JpZXMpO1xuICAgIHNldFN0b3JpZXNJbmRleFBvaW50ZXIod2luZG93LnRhbGtuU3Rvcmllc1BvaW50ZXIpO1xuICAgIHNldFVzZXJDYXRlZ29yeUNocyh3aW5kb3cudGFsa25Db25maWcudXNlckNhdGVnb3J5Q2hzKTtcbiAgICBzZXRTZWxlY3RDb250ZW50TWVudSh3aW5kb3cudGFsa25TZWxlY3RDb250ZW50TWVudSk7XG4gICAgc2V0VXNlcih3aW5kb3cudGFsa25Vc2VyKTtcbiAgICBzZXRVc2VyVGFncyh3aW5kb3cudGFsa25Vc2VyVGFncyk7XG5cbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdXNlQ2FsbGJhY2tTY3JvbGwpO1xuICB9LCBbXSk7XG5cbiAgY29uc3QgZ2V0Q29udGVudE5vZGUgPSAoKSA9PiB7XG4gICAgc3dpdGNoIChzZWxlY3RDb250ZW50TWVudSkge1xuICAgICAgY2FzZSBzZWxlY3RDb250ZW50TWVudUxpdmVQYWdlczpcbiAgICAgICAgcmV0dXJuIDxMaXZlUGFnZUNvbnRlbnRzIGNoPXt0aHJlYWQuY2h9IHVzZXJDYXRlZ29yeUNocz17dXNlckNhdGVnb3J5Q2hzfSB0YWxrbkZyYW1lUmVmPXt0YWxrbkZyYW1lUmVmfSAvPjtcbiAgICAgIGNhc2Ugc2VsZWN0Q29udGVudE1lbnVCdXNpbmVzczpcbiAgICAgICAgcmV0dXJuIDxDb21taW5nU29vbiBjaD17dGhyZWFkLmNofSAvPjtcbiAgICAgIGNhc2Ugc2VsZWN0Q29udGVudE1lbnVTdG9yeTpcbiAgICAgICAgaWYgKHdpbmRvdy50YWxrblN0b3JpZXMgJiYgd2luZG93LnRhbGtuU3Rvcmllcy5zZWN0aW9ucy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxTdG9yeUNvbnRlbnRzXG4gICAgICAgICAgICAgIG5hdmlnYXRpb25MYXlvdXQ9e25hdmlnYXRpb25MYXlvdXR9XG4gICAgICAgICAgICAgIHN0b3JpZXNSZWY9e3N0b3JpZXNSZWZ9XG4gICAgICAgICAgICAgIHJlc3VtZVJlZj17cmVzdW1lUmVmfVxuICAgICAgICAgICAgICBzdG9yaWVzUG9pbnRlcj17c3Rvcmllc1BvaW50ZXJ9XG4gICAgICAgICAgICAgIGhhbmRsZU9uQ2xpY2tOYXY9e2hhbmRsZU9uQ2xpY2tOYXZ9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuIDxTdG9yeUluZGV4IC8+O1xuICAgICAgICB9XG4gICAgICBjYXNlIHNlbGVjdENvbnRlbnRNZW51UHJvZmlsZTpcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICA8UHJvZmlsZUNvbnRlbnRzXG4gICAgICAgICAgICBpc015UGFnZT17aXNNeVBhZ2V9XG4gICAgICAgICAgICBzZXNzaW9uPXtzZXNzaW9ufVxuICAgICAgICAgICAgdXNlcj17dXNlcn1cbiAgICAgICAgICAgIHVzZXJUYWdzPXt1c2VyVGFnc31cbiAgICAgICAgICAgIHVzZXJUYWdzSW5pdD17dXNlclRhZ3NJbml0fVxuICAgICAgICAgICAgc2VsZWN0UHJvZmlsZU1vZGFsT3B0aW9uPXtzZWxlY3RQcm9maWxlTW9kYWxPcHRpb259XG4gICAgICAgICAgICBzZXRVc2VyPXtzZXRVc2VyfVxuICAgICAgICAgICAgc2V0VXNlclRhZ3M9e3NldFVzZXJUYWdzfVxuICAgICAgICAgICAgc2V0VXNlclRhZ3NJbml0PXtzZXRVc2VyVGFnc0luaXR9XG4gICAgICAgICAgICBzZXRTaG93U2VhcmNoTW9kYWxPcHRpb249e3NldFNob3dTZWFyY2hNb2RhbE9wdGlvbn1cbiAgICAgICAgICAvPlxuICAgICAgICApO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxHbG9iYWxDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7IGlubmVyV2lkdGg6IHNpemUuaW5uZXJXaWR0aCwgaW5uZXJIZWlnaHQ6IHNpemUuaW5uZXJIZWlnaHQgfX0+XG4gICAgICA8Q29udGFpbmVyIG9uQ2xpY2s9eyhlKSA9PiBoYW5kbGVPbkNsaWNrTWVudU91dH0+XG4gICAgICAgIHsvKiDjgrXjgqTjg4njg6Hjg4vjg6Xjg7wgKi99XG4gICAgICAgIDxTaWRlTWVudVxuICAgICAgICAgIGNoPXt0aHJlYWQuY2h9XG4gICAgICAgICAgb3Blbk1lbnU9e29wZW5NZW51fVxuICAgICAgICAgIHN0b3JpZXNJbmRleFBvaW50ZXI9e3N0b3JpZXNJbmRleFBvaW50ZXJ9XG4gICAgICAgICAgc2VsZWN0Q29udGVudE1lbnU9e3NlbGVjdENvbnRlbnRNZW51fVxuICAgICAgICAgIG1lbnVPcmRlclJlZj17bWVudU9yZGVyUmVmfVxuICAgICAgICAvPlxuICAgICAgICB7Lyog44OY44OD44OA44O8ICovfVxuICAgICAgICA8SGVhZGVyXG4gICAgICAgICAgb3Blbk1lbnU9e29wZW5NZW51fVxuICAgICAgICAgIGNoPXt0aHJlYWQuY2h9XG4gICAgICAgICAgZmF2aWNvbj17dGhyZWFkLmZhdmljb259XG4gICAgICAgICAgc2Vzc2lvbj17c2Vzc2lvbn1cbiAgICAgICAgICBzZXRTZXNzaW9uPXtzZXRTZXNzaW9ufVxuICAgICAgICAgIC8vICAgICAgICBoZWFkZXJTaWRlTWVudVJlZj17aGVhZGVyU2lkZU1lbnVSZWZ9XG4gICAgICAgICAgaGFuZGxlT25DbGlja01lbnU9e2hhbmRsZU9uQ2xpY2tNZW51fVxuICAgICAgICAvPlxuXG4gICAgICAgIHsvKiDjg4njg6HjgqTjg7Pjga5vZzppbWFnZeOCkuOCouOCpOOCreODo+ODg+ODgeOBqOOBl+OBpuihqOekuiAqL31cbiAgICAgICAge3NlbGVjdENvbnRlbnRNZW51ID09PSBzZWxlY3RDb250ZW50TWVudVByb2ZpbGUgJiYgKFxuICAgICAgICAgIDxFeWVDYXRjaE1haW5cbiAgICAgICAgICAgIGlzTXlQYWdlPXtpc015UGFnZX1cbiAgICAgICAgICAgIHVzZXJNb2RhbE9wdGlvbnM9e3NlbGVjdFByb2ZpbGVNb2RhbE9wdGlvbn1cbiAgICAgICAgICAgIHVzZXI9e3VzZXJ9XG4gICAgICAgICAgICB1c2VyVGFncz17dXNlclRhZ3N9XG4gICAgICAgICAgICBzZXRVc2VyPXtzZXRVc2VyfVxuICAgICAgICAgICAgc2V0U2VsZWN0UHJvZmlsZU1vZGFsT3B0aW9uPXtzZXRTZWxlY3RQcm9maWxlTW9kYWxPcHRpb259XG4gICAgICAgICAgLz5cbiAgICAgICAgKX1cbiAgICAgICAgey8qXG4gICAgICAgIHtzdG9yaWVzRXllQ2F0Y2hzICYmIHN0b3JpZXNFeWVDYXRjaHMubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgICAgPEV5ZUNhdGNoT3JkZXJcbiAgICAgICAgICAgIGNoPXt0aHJlYWQuY2h9XG4gICAgICAgICAgICBzbGlkZVxuICAgICAgICAgICAgc3Rvcmllc0V5ZUNhdGNocz17c3Rvcmllc0V5ZUNhdGNoc31cbiAgICAgICAgICAgIHN0b3JpZXNFeWVDYXRjaE9yZGVyUmVmPXtzdG9yaWVzRXllQ2F0Y2hPcmRlclJlZn1cbiAgICAgICAgICAgIGhhbmRsZU9uU2Nyb2xsSGVhZEV5ZUNhdGNoPXtoYW5kbGVPblNjcm9sbEhlYWRFeWVDYXRjaH1cbiAgICAgICAgICAgIHN0b3JpZXNJbmRleENudD17d2luZG93LnRhbGtuQ29uZmlnLnN0b3JpZXNJbmRleC5sZW5ndGh9XG4gICAgICAgICAgLz5cbiAgICAgICAgKX1cblxuICAgICAgICB7d2luZG93LnRhbGtuQ29uZmlnICYmIHdpbmRvdy50YWxrbkNvbmZpZy5zdG9yaWVzSW5kZXgubGVuZ3RoID4gMCAmJiAoXG4gICAgICAgICAgPEV5ZUNhdGNoQ2lyY2xlT3JkZXJcbiAgICAgICAgICAgIGNoPXt0aHJlYWQuY2h9XG4gICAgICAgICAgICBzdG9yaWVzSW5kZXhDbnQ9e3dpbmRvdy50YWxrbkNvbmZpZy5zdG9yaWVzSW5kZXgubGVuZ3RofVxuICAgICAgICAgICAgZXllQ2F0Y2hTY3JvbGxJbmRleD17ZXllQ2F0Y2hTY3JvbGxJbmRleH1cbiAgICAgICAgICAgIHN0b3JpZXNFeWVDYXRjaHM9e3N0b3JpZXNFeWVDYXRjaHN9XG4gICAgICAgICAgICBzdG9yaWVzRXllQ2F0Y2hPcmRlclJlZj17c3Rvcmllc0V5ZUNhdGNoT3JkZXJSZWZ9XG4gICAgICAgICAgICBoYW5kbGVPbkNsaWNrQ2lyY2xlPXtoYW5kbGVPbkNsaWNrQ2lyY2xlfVxuICAgICAgICAgIC8+XG4gICAgICAgICl9XG4gICAgICAgICovfVxuICAgICAgICB7Lyog44Kz44Oz44OG44Oz44OE44Oh44OL44Ol44O8ICovfVxuICAgICAgICA8TWFpbkNvbnRlbnRzQm9hcmQ+XG4gICAgICAgICAgPENvbnRlbnRNZW51IGNoPXt0aHJlYWQuY2h9IHNlbGVjdENvbnRlbnRNZW51PXtzZWxlY3RDb250ZW50TWVudX0gY29udGVudE1lbnVSZWY9e2NvbnRlbnRNZW51UmVmfSAvPlxuICAgICAgICAgIDxBZHZlcnRzLkhlYWRlciBzaG93QWR2ZXJ0PXtzaG93QWR2ZXJ0fSBoYW5kbGVPbkNsaWNrQ29udHJvbEFkdmVydD17aGFuZGxlT25DbGlja0NvbnRyb2xBZHZlcnR9IC8+XG4gICAgICAgICAgPE1haW5Db250ZW50c1dyYXAgc2hvd0FkdmVydD17c2hvd0FkdmVydH0+XG4gICAgICAgICAgICA8QWR2ZXJ0cy5MZWZ0IHNob3dBZHZlcnQ9e3Nob3dBZHZlcnR9IC8+XG4gICAgICAgICAgICA8TWFpbkNvbnRlbnRzIG1heE1haW49e21heE1haW59IHNob3dBZHZlcnQ9e3Nob3dBZHZlcnR9PlxuICAgICAgICAgICAgICB7dXNlTWVtbyhnZXRDb250ZW50Tm9kZSwgW3NlbGVjdENvbnRlbnRNZW51LCBuYXZpZ2F0aW9uTGF5b3V0LCBzdG9yaWVzUG9pbnRlciwgdXNlckNhdGVnb3J5Q2hzLCB1c2VyLCB1c2VyVGFncywgaXNNeVBhZ2VdKX1cbiAgICAgICAgICAgIDwvTWFpbkNvbnRlbnRzPlxuICAgICAgICAgICAgPEFkdmVydHMuUmlnaHQgc2hvd0FkdmVydD17c2hvd0FkdmVydH0gLz5cbiAgICAgICAgICA8L01haW5Db250ZW50c1dyYXA+XG4gICAgICAgIDwvTWFpbkNvbnRlbnRzQm9hcmQ+XG4gICAgICAgIDxTbnNTaGFyZSBjaD17dGhyZWFkLmNofSAvPlxuICAgICAgICA8Rm9vdGVyIGNoPXt0aHJlYWQuY2h9IC8+XG4gICAgICA8L0NvbnRhaW5lcj5cbiAgICAgIHtzaG93U2VhcmNoTW9kYWwgJiYgKFxuICAgICAgICA8U2VhcmNoTW9kYWxcbiAgICAgICAgICBzaG93PXtzaG93U2VhcmNoTW9kYWx9XG4gICAgICAgICAgdXNlck1vZGFsT3B0aW9ucz17c2hvd1NlYXJjaE1vZGFsT3B0aW9ufVxuICAgICAgICAgIGhhbmRsZU9uQ2xvc2U9eygpID0+IHNldFNob3dTZWFyY2hNb2RhbE9wdGlvbih7IC4uLnVzZXJNb2RhbE9wdGlvbkluaXQgfSl9XG4gICAgICAgIC8+XG4gICAgICApfVxuICAgIDwvR2xvYmFsQ29udGV4dC5Qcm92aWRlcj5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IFRhbGtuQ29udGFpbmVyO1xuXG4vLyBwcmV0dGllci1pZ25vcmVcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIGZvbnQtc2l6ZTogJHtzdHlsZXMuZm9udEJhc2VTaXplfXB4O1xuICBjb2xvcjogJHtzdHlsZXMuZm9udENvbG9yfTtcblxuICAqIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsICdTZWdvZSBVSScsIFJvYm90bywgJ0hpcmFnaW5vIFNhbnMnLCAnTm90byBTYW5zIENKSyBKUCcsICdPcmlnaW5hbCBZdSBHb3RoaWMnLFxuICAgICAgJ1l1IEdvdGhpYycsIHNhbnMtc2VyaWYsICdBcHBsZSBDb2xvciBFbW9qaScsICdTZWdvZSBVSSBFbW9qaScsICdTZWdvZSBVSSBTeW1ib2wnLCAnTm90byBTYW5zIEVtb2ppJztcbiAgICBsZXR0ZXItc3BhY2luZzogMnB4O1xuICAgIDo6c2VsZWN0aW9uIHtcbiAgICAgIGJhY2tncm91bmQ6ICR7c3R5bGVzLnRoZW1lQ29sb3J9O1xuICAgICAgY29sb3I6ICNmZmY7XG4gICAgfVxuICB9XG5cbiAgYSxcbiAgYTp2aXNpdGVkLFxuICBhOmhvdmVyLFxuICBhOmFjdGl2ZSB7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgfVxuYDtcblxuY29uc3QgTWFpbkNvbnRlbnRzQm9hcmQgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IHJvdyB3cmFwO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgd2lkdGg6IDEwMCU7XG5gO1xuXG5jb25zdCBNYWluQ29udGVudHNXcmFwID0gc3R5bGVkLmRpdjx7IHNob3dBZHZlcnQ6IGJvb2xlYW4gfT5gXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZmxvdzogcm93IG5vd3JhcDtcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICB3aWR0aDogMTAwJTtcbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICBmbGV4LWZsb3c6IGNvbHVtbiBub3dyYXA7XG4gIH1cbmA7XG5cbmNvbnN0IE1haW5Db250ZW50cyA9IHN0eWxlZC5tYWluPHsgc2hvd0FkdmVydDogYm9vbGVhbjsgbWF4TWFpbjogYm9vbGVhbiB9PmBcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogJHsocHJvcHMpID0+ICghcHJvcHMubWF4TWFpbiA/IGAke3N0eWxlcy5hcHBXaWR0aH1weGAgOiAnMTAwJScpfTtcbiAgdHJhbnNpdGlvbjogbWF4LXdpZHRoICR7c3R5bGVzLnRyYW5zaXRpb25EdXJhdGlvbn1tcyBlYXNlIDBzO1xuICBAbWVkaWEgKG1heC13aWR0aDogJHtzdHlsZXMuZG91YmxlQWR2ZXJ0V2lkdGh9cHgpIHtcbiAgICB3aWR0aDogJHsocHJvcHMpID0+IChwcm9wcy5zaG93QWR2ZXJ0ID8gYGNhbGMoIDEwMCUgLSAke3N0eWxlcy5hZHZlcnRXaWR0aCArIHN0eWxlcy5iYXNlTWFyZ2luICogMn1weClgIDogJzEwMCUnKX07XG4gIH1cbiAgQG1lZGlhIChtYXgtd2lkdGg6ICR7c3R5bGVzLnNwTGF5b3V0V2lkdGh9cHgpIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuYDtcbiIsImltcG9ydCB7IGNzcyB9IGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJztcblxuaW1wb3J0IHN0eWxlcyBmcm9tICdjb3Zlci9zdHlsZXMnO1xuXG5leHBvcnQgdHlwZSBDb250ZW50UHJvcHMgPSB7XG4gIGNvbG9yPzogc3RyaW5nO1xuICBmb250U2l6ZT86IHN0cmluZztcbiAgZm9udFdlaWdodD86IHN0cmluZztcbiAgbGluZUhlaWdodD86IHN0cmluZztcbiAgdXNlU2VsZWN0PzogYm9vbGVhbjtcbiAgcG9pbnRlcj86IGJvb2xlYW47XG59O1xuXG5leHBvcnQgY29uc3QgY29udGVudFByb3BzSW5pdDogQ29udGVudFByb3BzID0ge1xuICBjb2xvcjogc3R5bGVzLmZvbnRDb2xvcixcbiAgZm9udFNpemU6IHN0eWxlcy5mb250U2l6ZSxcbiAgZm9udFdlaWdodDogc3R5bGVzLmZvbnRXZWlnaHQsXG4gIGxpbmVIZWlnaHQ6IHN0eWxlcy5saW5lSGVpZ2h0LFxuICB1c2VTZWxlY3Q6IGZhbHNlLFxuICBwb2ludGVyOiBmYWxzZSxcbn07XG5cbmV4cG9ydCBjb25zdCBDb250ZW50Q3NzID0gY3NzPENvbnRlbnRQcm9wcz5gXG4gIGNvbG9yOiAkeyhwcm9wcykgPT4gcHJvcHMuY29sb3J9O1xuICBmb250LXNpemU6ICR7KHByb3BzKSA9PiBwcm9wcy5mb250U2l6ZX07XG4gIGZvbnQtd2VpZ2h0OiAkeyhwcm9wcykgPT4gcHJvcHMuZm9udFdlaWdodH07XG4gIGxpbmUtaGVpZ2h0OiAkeyhwcm9wcykgPT4gcHJvcHMubGluZUhlaWdodH07XG4gIHVzZS1zZWxlY3Q6ICR7KHByb3BzKSA9PiAocHJvcHMudXNlU2VsZWN0ID8gJ2F1dG8nIDogJ25vbmUnKX07XG4gIGN1cnNvcjogJHsocHJvcHMpID0+IChwcm9wcy5wb2ludGVyID8gJ3BvaW50ZXInIDogJ2RlZmF1bHQnKX07XG5gO1xuIiwiaW1wb3J0IHsgY3NzIH0gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gJ2NvdmVyL3N0eWxlcyc7XG5cbmV4cG9ydCBjb25zdCB0b3BsaW5lID0gJ3RvcGxpbmUnO1xuZXhwb3J0IGNvbnN0IHVuZGVybGluZSA9ICd1bmRlcmxpbmUnO1xuZXhwb3J0IGNvbnN0IHJhZGl1c0NpcmNsZSA9ICdjaXJjbGUnO1xuZXhwb3J0IGNvbnN0IHJhZGl1c0J1dHRvbiA9ICdidXR0b24nO1xuZXhwb3J0IGNvbnN0IHJhZGl1c0lucHV0ID0gJ2lucHV0JztcbmV4cG9ydCBjb25zdCBzaXplT2ZmID0gJ29mZic7XG5leHBvcnQgY29uc3Qgc2l6ZVNtYWxsID0gJ3NtYWxsJztcbmV4cG9ydCBjb25zdCBzaXplTWlkZGxlID0gJ21pZGRsZSc7XG5leHBvcnQgY29uc3Qgc2l6ZUxhcmdlID0gJ2xhcmdlJztcbmV4cG9ydCBjb25zdCBzaXplRGVmYXVsdCA9IGZhbHNlO1xuXG5leHBvcnQgdHlwZSBTaXplVHlwZSA9IGJvb2xlYW4gfCB0eXBlb2Ygc2l6ZVNtYWxsIHwgdHlwZW9mIHNpemVNaWRkbGUgfCB0eXBlb2Ygc2l6ZUxhcmdlO1xuXG5leHBvcnQgdHlwZSBMYXlvdXRQcm9wc1R5cGUgPSB7XG4gIHdpZHRoPzogc3RyaW5nO1xuICBoZWlnaHQ/OiBzdHJpbmc7XG4gIHVwcGVyUGFkZGluZz86IFNpemVUeXBlO1xuICBzaWRlUGFkZGluZz86IFNpemVUeXBlO1xuICBib3R0b21QYWRkaW5nPzogU2l6ZVR5cGU7XG4gIHVwcGVyTWFyZ2luPzogU2l6ZVR5cGU7XG4gIHNpZGVNYXJnaW4/OiBTaXplVHlwZTtcbiAgYm90dG9tTWFyZ2luPzogU2l6ZVR5cGU7XG4gIGJvcmRlcj86IGJvb2xlYW4gfCB0eXBlb2YgdW5kZXJsaW5lIHwgdHlwZW9mIHRvcGxpbmU7XG4gIGJvcmRlclJhZGl1cz86IGJvb2xlYW4gfCB0eXBlb2YgcmFkaXVzQ2lyY2xlIHwgdHlwZW9mIHJhZGl1c0J1dHRvbiB8IHR5cGVvZiByYWRpdXNJbnB1dDtcbiAgaG92ZXI/OiBib29sZWFuIHwgc3RyaW5nO1xuICByZXNldE9yaWdpbj86IGJvb2xlYW47XG4gIGlubGluZT86IGJvb2xlYW47XG59O1xuXG5leHBvcnQgY29uc3QgbGF5b3V0UHJvcHNJbml0ID0ge1xuICB3aWR0aDogJ2F1dG8nLFxuICBoZWlnaHQ6ICdhdXRvJyxcbiAgdXBwZXJQYWRkaW5nOiBzaXplRGVmYXVsdCxcbiAgc2lkZVBhZGRpbmc6IHNpemVEZWZhdWx0LFxuICBib3R0b21QYWRkaW5nOiBzaXplRGVmYXVsdCxcbiAgdXBwZXJNYXJnaW46IHNpemVEZWZhdWx0LFxuICBzaWRlTWFyZ2luOiBzaXplRGVmYXVsdCxcbiAgYm90dG9tTWFyZ2luOiBzaXplRGVmYXVsdCxcbiAgYm9yZGVyOiBmYWxzZSxcbiAgYm9yZGVyUmFkaXVzOiBmYWxzZSxcbiAgaG92ZXI6IGZhbHNlLFxuICByZXNldE9yaWdpbjogZmFsc2UsXG4gIGlubGluZTogZmFsc2UsXG59O1xuXG5leHBvcnQgY29uc3QgTGF5b3V0Q3NzID0gY3NzPExheW91dFByb3BzVHlwZT5gXG4gIHdpZHRoOiAkeyhwcm9wcykgPT4gZ2V0V2lkdGgocHJvcHMpfTtcbiAgaGVpZ2h0OiAkeyhwcm9wcykgPT4gZ2V0SGVpZ2h0KHByb3BzKX07XG4gIHBhZGRpbmc6ICR7KHByb3BzKSA9PiBnZXRQYWRkaW5nKHByb3BzKX07XG4gIG1hcmdpbjogJHsocHJvcHMpID0+IGdldE1hcmdpbihwcm9wcyl9O1xuICAkeyhwcm9wcykgPT4gZ2V0Qm9yZGVyKHByb3BzKX07XG4gICR7KHByb3BzKSA9PiBnZXRSYWRpdXMocHJvcHMpfTtcbiAgJHsocHJvcHMpID0+IGdldEJhY2tncm91bmQocHJvcHMpfTtcbiAgJHsocHJvcHMpID0+IChwcm9wcy5yZXNldE9yaWdpbiA/ICd0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwcHgsIDBweCknIDogJycpfTtcbiAgdHJhbnNpdGlvbjogJHtzdHlsZXMudHJhbnNpdGlvbkR1cmF0aW9ufW1zO1xuYDtcblxuZXhwb3J0IGNvbnN0IGdldEJhY2tncm91bmQgPSAocHJvcHM6IExheW91dFByb3BzVHlwZSB8IGFueSkgPT4ge1xuICBpZiAocHJvcHMuaG92ZXIgPT09IHRydWUpIHtcbiAgICByZXR1cm4gYDpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiAke3N0eWxlcy53aGl0ZUhvdmVyQ29sb3J9O1xuICAgIH1gO1xuICB9IGVsc2UgaWYgKHByb3BzLmhvdmVyKSB7XG4gICAgcmV0dXJuIGA6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZDogJHtwcm9wcy5ob3Zlcn07XG4gICAgfWA7XG4gIH1cbiAgcmV0dXJuICcnO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFdpZHRoID0gKHByb3BzOiBMYXlvdXRQcm9wc1R5cGUgfCBhbnkpID0+IHtcbiAgbGV0IHdpZHRoID0gJ2F1dG8nO1xuICBpZiAocHJvcHMud2lkdGggPT09IHVuZGVmaW5lZCkge1xuICAgIGlmIChwcm9wcy5pbmxpbmUpIHtcbiAgICAgIHJldHVybiAnYXV0byc7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmIChwcm9wcy5zaWRlTWFyZ2luID09PSBzaXplU21hbGwpIHtcbiAgICAgICAgcmV0dXJuIGBjYWxjKCAxMDAlIC0gJHtzdHlsZXMuYmFzZU1hcmdpbiAqIDJ9cHggKWA7XG4gICAgICB9IGVsc2UgaWYgKHByb3BzLnNpZGVNYXJnaW4gPT09IHRydWUgfHwgcHJvcHMuc2lkZU1hcmdpbiA9PT0gc2l6ZU1pZGRsZSkge1xuICAgICAgICByZXR1cm4gYGNhbGMoIDEwMCUgLSAke3N0eWxlcy5kb3VibGVNYXJnaW4gKiAyfXB4IClgO1xuICAgICAgfSBlbHNlIGlmIChwcm9wcy5zaWRlTWFyZ2luID09PSBzaXplTGFyZ2UpIHtcbiAgICAgICAgcmV0dXJuIGBjYWxjKCAxMDAlIC0gJHtzdHlsZXMudHJpcGxlTWFyZ2luICogMn1weCApYDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBwcm9wcy53aWR0aDtcbiAgICAgIH1cbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgd2lkdGggPSBwcm9wcy53aWR0aDtcbiAgfVxuICByZXR1cm4gd2lkdGg7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0SGVpZ2h0ID0gKHByb3BzOiBMYXlvdXRQcm9wc1R5cGUgfCBhbnkpID0+IHtcbiAgaWYgKHByb3BzLmhlaWdodCkge1xuICAgIHJldHVybiBwcm9wcy5oZWlnaHQ7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuICdhdXRvJztcbiAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGdldFBhZGRpbmcgPSAocHJvcHM6IExheW91dFByb3BzVHlwZSB8IGFueSkgPT4ge1xuICBsZXQgcGFkZGluZ1RvcCA9IDA7XG4gIGxldCBwYWRkaW5nUmlnaHQgPSAwO1xuICBsZXQgcGFkZGluZ0JvdHRvbSA9IDA7XG4gIGxldCBwYWRkaW5nTGVmdCA9IDA7XG5cbiAgLy8gdXBwZXJcbiAgaWYgKHByb3BzLnVwcGVyUGFkZGluZyA9PT0gc2l6ZVNtYWxsKSB7XG4gICAgcGFkZGluZ1RvcCA9IHN0eWxlcy5iYXNlUGFkZGluZztcbiAgfSBlbHNlIGlmIChwcm9wcy51cHBlclBhZGRpbmcgPT09IHNpemVNaWRkbGUgfHwgcHJvcHMudXBwZXJQYWRkaW5nID09PSB0cnVlKSB7XG4gICAgcGFkZGluZ1RvcCA9IHN0eWxlcy5kb3VibGVQYWRkaW5nO1xuICB9IGVsc2UgaWYgKHByb3BzLnVwcGVyUGFkZGluZyA9PT0gc2l6ZUxhcmdlKSB7XG4gICAgcGFkZGluZ1RvcCA9IHN0eWxlcy50cmlwbGVQYWRkaW5nO1xuICB9XG5cbiAgLy8gc2lkZVxuICBpZiAocHJvcHMuc2lkZVBhZGRpbmcgPT09IHNpemVTbWFsbCkge1xuICAgIHBhZGRpbmdSaWdodCA9IHN0eWxlcy5iYXNlUGFkZGluZztcbiAgICBwYWRkaW5nTGVmdCA9IHN0eWxlcy5iYXNlUGFkZGluZztcbiAgfSBlbHNlIGlmIChwcm9wcy5zaWRlUGFkZGluZyA9PT0gc2l6ZU1pZGRsZSB8fCBwcm9wcy5zaWRlUGFkZGluZyA9PT0gdHJ1ZSkge1xuICAgIHBhZGRpbmdSaWdodCA9IHN0eWxlcy5kb3VibGVQYWRkaW5nO1xuICAgIHBhZGRpbmdMZWZ0ID0gc3R5bGVzLmRvdWJsZVBhZGRpbmc7XG4gIH0gZWxzZSBpZiAocHJvcHMuc2lkZVBhZGRpbmcgPT09IHNpemVMYXJnZSkge1xuICAgIHBhZGRpbmdSaWdodCA9IHN0eWxlcy50cmlwbGVQYWRkaW5nO1xuICAgIHBhZGRpbmdMZWZ0ID0gc3R5bGVzLnRyaXBsZVBhZGRpbmc7XG4gIH1cblxuICAvLyBib3R0b21cbiAgaWYgKHByb3BzLmJvdHRvbVBhZGRpbmcgPT09IHNpemVTbWFsbCkge1xuICAgIHBhZGRpbmdCb3R0b20gPSBzdHlsZXMuYmFzZVBhZGRpbmc7XG4gIH0gZWxzZSBpZiAocHJvcHMuYm90dG9tUGFkZGluZyA9PT0gc2l6ZU1pZGRsZSB8fCBwcm9wcy5ib3R0b21QYWRkaW5nID09PSB0cnVlKSB7XG4gICAgcGFkZGluZ0JvdHRvbSA9IHN0eWxlcy5kb3VibGVQYWRkaW5nO1xuICB9IGVsc2UgaWYgKHByb3BzLmJvdHRvbVBhZGRpbmcgPT09IHNpemVMYXJnZSkge1xuICAgIHBhZGRpbmdCb3R0b20gPSBzdHlsZXMudHJpcGxlUGFkZGluZztcbiAgfVxuXG4gIHJldHVybiBgJHtwYWRkaW5nVG9wfXB4ICR7cGFkZGluZ1JpZ2h0fXB4ICR7cGFkZGluZ0JvdHRvbX1weCAke3BhZGRpbmdMZWZ0fXB4YDtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRNYXJnaW4gPSAocHJvcHM6IExheW91dFByb3BzVHlwZSB8IGFueSkgPT4ge1xuICBsZXQgbWFyZ2luVG9wID0gMDtcbiAgbGV0IG1hcmdpblJpZ2h0ID0gMDtcbiAgbGV0IG1hcmdpbkJvdHRvbSA9IDA7XG4gIGxldCBtYXJnaW5MZWZ0ID0gMDtcblxuICAvLyB1cHBlclxuICBpZiAocHJvcHMudXBwZXJNYXJnaW4gPT09IHNpemVTbWFsbCkge1xuICAgIG1hcmdpblRvcCA9IHN0eWxlcy5iYXNlUGFkZGluZztcbiAgfSBlbHNlIGlmIChwcm9wcy51cHBlck1hcmdpbiA9PT0gc2l6ZU1pZGRsZSB8fCBwcm9wcy51cHBlck1hcmdpbiA9PT0gdHJ1ZSkge1xuICAgIG1hcmdpblRvcCA9IHN0eWxlcy5kb3VibGVQYWRkaW5nO1xuICB9IGVsc2UgaWYgKHByb3BzLnVwcGVyTWFyZ2luID09PSBzaXplTGFyZ2UpIHtcbiAgICBtYXJnaW5Ub3AgPSBzdHlsZXMudHJpcGxlUGFkZGluZztcbiAgfVxuXG4gIC8vIHNpZGVcbiAgaWYgKHByb3BzLnNpZGVNYXJnaW4gPT09IHNpemVTbWFsbCkge1xuICAgIG1hcmdpblJpZ2h0ID0gc3R5bGVzLmJhc2VQYWRkaW5nO1xuICAgIG1hcmdpbkxlZnQgPSBzdHlsZXMuYmFzZVBhZGRpbmc7XG4gIH0gZWxzZSBpZiAocHJvcHMuc2lkZU1hcmdpbiA9PT0gc2l6ZU1pZGRsZSB8fCBwcm9wcy5zaWRlTWFyZ2luID09PSB0cnVlKSB7XG4gICAgbWFyZ2luUmlnaHQgPSBzdHlsZXMuZG91YmxlUGFkZGluZztcbiAgICBtYXJnaW5MZWZ0ID0gc3R5bGVzLmRvdWJsZVBhZGRpbmc7XG4gIH0gZWxzZSBpZiAocHJvcHMuc2lkZU1hcmdpbiA9PT0gc2l6ZUxhcmdlKSB7XG4gICAgbWFyZ2luUmlnaHQgPSBzdHlsZXMudHJpcGxlUGFkZGluZztcbiAgICBtYXJnaW5MZWZ0ID0gc3R5bGVzLnRyaXBsZVBhZGRpbmc7XG4gIH1cblxuICAvLyBib3R0b21cbiAgaWYgKHByb3BzLmJvdHRvbU1hcmdpbiA9PT0gc2l6ZVNtYWxsKSB7XG4gICAgbWFyZ2luQm90dG9tID0gc3R5bGVzLmJhc2VQYWRkaW5nO1xuICB9IGVsc2UgaWYgKHByb3BzLmJvdHRvbU1hcmdpbiA9PT0gc2l6ZU1pZGRsZSB8fCBwcm9wcy5ib3R0b21NYXJnaW4gPT09IHRydWUpIHtcbiAgICBtYXJnaW5Cb3R0b20gPSBzdHlsZXMuZG91YmxlUGFkZGluZztcbiAgfSBlbHNlIGlmIChwcm9wcy5ib3R0b21NYXJnaW4gPT09IHNpemVMYXJnZSkge1xuICAgIG1hcmdpbkJvdHRvbSA9IHN0eWxlcy50cmlwbGVQYWRkaW5nO1xuICB9XG5cbiAgcmV0dXJuIGAke21hcmdpblRvcH1weCAke21hcmdpblJpZ2h0fXB4ICR7bWFyZ2luQm90dG9tfXB4ICR7bWFyZ2luTGVmdH1weGA7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0Qm9yZGVyID0gKHByb3BzOiBMYXlvdXRQcm9wc1R5cGUgfCBhbnkpID0+IHtcbiAgaWYgKHByb3BzLmJvcmRlciA9PT0gdW5kZXJsaW5lKSB7XG4gICAgcmV0dXJuIGBib3JkZXItYm90dG9tOiAxcHggc29saWQgJHtzdHlsZXMuYm9yZGVyQ29sb3J9YDtcbiAgfSBlbHNlIGlmIChwcm9wcy5ib3JkZXIgPT09IHRvcGxpbmUpIHtcbiAgICByZXR1cm4gYGJvcmRlci10b3A6IDFweCBzb2xpZCAke3N0eWxlcy5ib3JkZXJDb2xvcn1gO1xuICB9IGVsc2UgaWYgKHByb3BzLmJvcmRlciA9PT0gdHJ1ZSkge1xuICAgIHJldHVybiBgYm9yZGVyOiAxcHggc29saWQgJHtzdHlsZXMuYm9yZGVyQ29sb3J9YDtcbiAgfVxuICByZXR1cm4gJyc7XG59O1xuXG5leHBvcnQgY29uc3QgZ2V0UmFkaXVzID0gKHByb3BzOiBMYXlvdXRQcm9wc1R5cGUgfCBhbnkpID0+IHtcbiAgaWYgKHByb3BzLmJvcmRlclJhZGl1cyA9PT0gdHJ1ZSkge1xuICAgIHJldHVybiBgYm9yZGVyLXJhZGl1czogJHtzdHlsZXMuYm9yZGVyUmFkaXVzfXB4YDtcbiAgfVxuICBpZiAocHJvcHMuYm9yZGVyUmFkaXVzID09PSByYWRpdXNDaXJjbGUpIHtcbiAgICByZXR1cm4gYGJvcmRlci1yYWRpdXM6IDUwJWA7XG4gIH1cbiAgaWYgKHByb3BzLmJvcmRlclJhZGl1cyA9PT0gcmFkaXVzQnV0dG9uKSB7XG4gICAgcmV0dXJuIGBib3JkZXItcmFkaXVzOiA2cHhgO1xuICB9XG4gIGlmIChwcm9wcy5ib3JkZXJSYWRpdXMgPT09IHJhZGl1c0lucHV0KSB7XG4gICAgcmV0dXJuIGBib3JkZXItcmFkaXVzOiAzcHhgO1xuICB9XG4gIHJldHVybiAnJztcbn07XG4iLCJleHBvcnQgY29uc3QgYmFzZVNpemUgPSA4O1xuZXhwb3J0IGNvbnN0IGRvdWJsZVNpemUgPSBiYXNlU2l6ZSAqIDI7XG5leHBvcnQgY29uc3QgdHJpcGxlU2l6ZSA9IGJhc2VTaXplICogMztcbmV4cG9ydCBjb25zdCBxdWFkU2l6ZSA9IGJhc2VTaXplICogNDtcbmV4cG9ydCBjb25zdCBxdWludFNpemUgPSBiYXNlU2l6ZSAqIDU7XG5leHBvcnQgY29uc3Qgc2l4U2l6ZSA9IGJhc2VTaXplICogNjtcbmV4cG9ydCBjb25zdCBzZXBTaXplID0gYmFzZVNpemUgKiA3O1xuZXhwb3J0IGNvbnN0IGJhc2VNYXJnaW4gPSBiYXNlU2l6ZTtcbmV4cG9ydCBjb25zdCBkb3VibGVNYXJnaW4gPSBiYXNlTWFyZ2luICogMjtcbmV4cG9ydCBjb25zdCB0cmlwbGVNYXJnaW4gPSBiYXNlTWFyZ2luICogMztcbmV4cG9ydCBjb25zdCBxdWFkTWFyZ2luID0gYmFzZU1hcmdpbiAqIDQ7XG5leHBvcnQgY29uc3QgcXVpbnRNYXJnaW4gPSBiYXNlTWFyZ2luICogNTtcbmV4cG9ydCBjb25zdCBzZXhNYXJnaW4gPSBiYXNlTWFyZ2luICogNjtcbmV4cG9ydCBjb25zdCBzZXBNYXJnaW4gPSBiYXNlTWFyZ2luICogNztcbmV4cG9ydCBjb25zdCBiYXNlUGFkZGluZyA9IGJhc2VTaXplO1xuZXhwb3J0IGNvbnN0IGRvdWJsZVBhZGRpbmcgPSBiYXNlUGFkZGluZyAqIDI7XG5leHBvcnQgY29uc3QgdHJpcGxlUGFkZGluZyA9IGJhc2VQYWRkaW5nICogMztcbmV4cG9ydCBjb25zdCBxdWFkUGFkZGluZyA9IGJhc2VQYWRkaW5nICogNDtcbmV4cG9ydCBjb25zdCBxdWludFBhZGRpbmcgPSBiYXNlTWFyZ2luICogNTtcbmV4cG9ydCBjb25zdCBzZXhQYWRkaW5nID0gYmFzZU1hcmdpbiAqIDY7XG5leHBvcnQgY29uc3Qgc2VwUGFkZGluZyA9IGJhc2VNYXJnaW4gKiA3O1xuZXhwb3J0IGNvbnN0IHNoYWRvd1NpemUgPSAxMDtcbmV4cG9ydCBjb25zdCB0cmFuc2l0aW9uRHVyYXRpb24gPSAzMDA7XG5leHBvcnQgY29uc3QgZm9udEJhc2VTaXplID0gMTg7XG5leHBvcnQgY29uc3QgZm9udFNpemUgPSAnMTAwJSc7XG5leHBvcnQgY29uc3QgZm9udFdlaWdodCA9ICcyMDAnO1xuZXhwb3J0IGNvbnN0IGxpbmVIZWlnaHQgPSAnMzBweCc7XG5leHBvcnQgY29uc3QgYm9yZGVyUmFkaXVzID0gZG91YmxlU2l6ZTtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBiYXNlU2l6ZSxcbiAgZG91YmxlU2l6ZSxcbiAgdHJpcGxlU2l6ZSxcbiAgcXVhZFNpemUsXG4gIHF1aW50U2l6ZSxcbiAgc2l4U2l6ZSxcbiAgc2VwU2l6ZSxcbiAgYmFzZU1hcmdpbixcbiAgZG91YmxlTWFyZ2luLFxuICB0cmlwbGVNYXJnaW4sXG4gIHF1YWRNYXJnaW4sXG4gIHF1aW50TWFyZ2luLFxuICBzZXhNYXJnaW4sXG4gIHNlcE1hcmdpbixcbiAgYmFzZVBhZGRpbmcsXG4gIGRvdWJsZVBhZGRpbmcsXG4gIHRyaXBsZVBhZGRpbmcsXG4gIHF1YWRQYWRkaW5nLFxuICBxdWludFBhZGRpbmcsXG4gIHNleFBhZGRpbmcsXG4gIHNlcFBhZGRpbmcsXG4gIHNoYWRvd1NpemUsXG4gIHRyYW5zaXRpb25EdXJhdGlvbixcbiAgZm9udEJhc2VTaXplLFxuICBmb250U2l6ZSxcbiAgZm9udFdlaWdodCxcbiAgbGluZUhlaWdodCxcbiAgYm9yZGVyUmFkaXVzLFxufTtcbiIsIi8qKioqKioqKioqKioqKioqKioqL1xuLyogIHR5cGVcbi8qKioqKioqKioqKioqKioqKioqL1xuXG5leHBvcnQgdHlwZSBUaGVtZUNvbG9yVHlwZSA9IHR5cGVvZiB0aGVtZVJnYiB8IHR5cGVvZiBob3RSZ2IgfCB0eXBlb2YgZmxhdFJnYiB8IHR5cGVvZiBjb2xkUmdiO1xuZXhwb3J0IHR5cGUgQmFzZUNvbG9yVHlwZSA9XG4gIHwgdHlwZW9mIHdoaXRlUmdiXG4gIHwgdHlwZW9mIGJyaWdodGVyUmdiXG4gIHwgdHlwZW9mIGJyaWdodFJnYlxuICB8IHR5cGVvZiBiYXNlUmdiXG4gIHwgdHlwZW9mIGRhcmtSZ2JcbiAgfCB0eXBlb2YgZGFya2VyUmdiXG4gIHwgdHlwZW9mIGJsYWNrUmdiO1xuZXhwb3J0IHR5cGUgQ29sb3JUeXBlID0gVGhlbWVDb2xvclR5cGUgfCBCYXNlQ29sb3JUeXBlO1xuXG5leHBvcnQgdHlwZSBBbHBoYVR5cGUgPSB0eXBlb2YgYnJpZ2h0QWxwaGEgfCB0eXBlb2YgYmFzZUFscGhhIHwgdHlwZW9mIGRhcmtBbHBoYTtcblxuLyoqKioqKioqKioqKioqKioqKiovXG4vKiAgZnVuY3Rpb25cbi8qKioqKioqKioqKioqKioqKioqL1xuXG5leHBvcnQgY29uc3QgZ2V0UmdiQ29sb3IgPSAoY29sb3I6IENvbG9yVHlwZSkgPT4gYHJnYigke2NvbG9yfSlgO1xuZXhwb3J0IGNvbnN0IGdldFJnYmFDb2xvciA9IChjb2xvcjogQ29sb3JUeXBlLCBhbHBoYTogQWxwaGFUeXBlID0gYmFzZUFscGhhKSA9PiBgcmdiYSgke2NvbG9yfSwgJHthbHBoYX0pYDtcblxuLyoqKioqKioqKioqKioqKioqKiovXG4vKiAgYmFzZSBjb2xvcnNcbi8qKioqKioqKioqKioqKioqKioqL1xuXG5leHBvcnQgY29uc3QgYmFzZVRlbnNpb24gPSAxMDA7XG5leHBvcnQgY29uc3QgZGFya0RlcHRoID0gMjA7XG5leHBvcnQgY29uc3QgZGFya2VyRGVwdGggPSBkYXJrRGVwdGggKiAyO1xuXG5leHBvcnQgY29uc3Qgd2hpdGVSZ2IgPSAnMjU1LCAyNTUsIDI1NSc7XG5leHBvcnQgY29uc3QgYnJpZ2h0ZXJSZ2IgPSAnMjQwLCAyNDAsIDI0MCc7XG5leHBvcnQgY29uc3QgYnJpZ2h0UmdiID0gYCR7YmFzZVRlbnNpb24gKiAyfSwgJHtiYXNlVGVuc2lvbiAqIDJ9LCAke2Jhc2VUZW5zaW9uICogMn1gO1xuZXhwb3J0IGNvbnN0IGJhc2VSZ2IgPSBgJHtiYXNlVGVuc2lvbn0sICR7YmFzZVRlbnNpb259LCAke2Jhc2VUZW5zaW9ufWA7XG5leHBvcnQgY29uc3QgZGFya1JnYiA9IGAke2Jhc2VUZW5zaW9uIC0gZGFya0RlcHRofSwgJHtiYXNlVGVuc2lvbiAtIGRhcmtEZXB0aH0sICR7YmFzZVRlbnNpb24gLSBkYXJrRGVwdGh9YDtcbmV4cG9ydCBjb25zdCBkYXJrZXJSZ2IgPSBgJHtiYXNlVGVuc2lvbiAtIGRhcmtlckRlcHRofSwgJHtiYXNlVGVuc2lvbiAtIGRhcmtlckRlcHRofSwgJHtiYXNlVGVuc2lvbiAtIGRhcmtlckRlcHRofWA7XG5leHBvcnQgY29uc3QgYmxhY2tSZ2IgPSAnMCwgMCwgMCc7XG5cbi8vIGFscGhhcy5cbmV4cG9ydCBjb25zdCBicmlnaHRBbHBoYSA9ICcwLjk2JztcbmV4cG9ydCBjb25zdCBiYXNlQWxwaGEgPSAnMC45JztcbmV4cG9ydCBjb25zdCBkYXJrQWxwaGEgPSAnMC42JztcblxuLyoqKioqKioqKioqKioqKioqKiovXG4vKiAgdGhlbWUgY29sb3JzXG4vKioqKioqKioqKioqKioqKioqKi9cblxuZXhwb3J0IGNvbnN0IHRoZW1lUmdiID0gYDc5LCAxNzQsIDE1OWA7XG5leHBvcnQgY29uc3QgaG90UmdiID0gYDI1NSwgJHtiYXNlVGVuc2lvbn0sIDBgO1xuZXhwb3J0IGNvbnN0IGZsYXRSZ2IgPSBgJHtiYXNlVGVuc2lvbn0sICR7YmFzZVRlbnNpb259LCAke2Jhc2VUZW5zaW9ufWA7XG5leHBvcnQgY29uc3QgY29sZFJnYiA9IGAwLCAke2Jhc2VUZW5zaW9ufSwgMjU1YDtcblxuLyoqKioqKioqKioqKioqKioqKiovXG4vKiAgY29tbW9uIGNvbG9yc1xuLyoqKioqKioqKioqKioqKioqKiovXG5cbmV4cG9ydCBjb25zdCB0aGVtZUNvbG9yID0gZ2V0UmdiYUNvbG9yKHRoZW1lUmdiKTtcbmV4cG9ydCBjb25zdCBob3RDb2xvciA9IGdldFJnYmFDb2xvcihob3RSZ2IpO1xuZXhwb3J0IGNvbnN0IGZsYXRDb2xvciA9IGdldFJnYmFDb2xvcihmbGF0UmdiKTtcbmV4cG9ydCBjb25zdCBjb2xkQ29sb3IgPSBnZXRSZ2JhQ29sb3IoY29sZFJnYik7XG5cbmV4cG9ydCBjb25zdCB3aGl0ZUNvbG9yID0gZ2V0UmdiYUNvbG9yKHdoaXRlUmdiKTtcbmV4cG9ydCBjb25zdCBicmlnaHRlckNvbG9yID0gZ2V0UmdiYUNvbG9yKGJyaWdodGVyUmdiKTtcbmV4cG9ydCBjb25zdCBicmlnaHRDb2xvciA9IGdldFJnYmFDb2xvcihicmlnaHRSZ2IpO1xuZXhwb3J0IGNvbnN0IGJhc2VDb2xvciA9IGdldFJnYmFDb2xvcihiYXNlUmdiKTtcbmV4cG9ydCBjb25zdCBkYXJrQ29sb3IgPSBnZXRSZ2JhQ29sb3IoZGFya1JnYik7XG5leHBvcnQgY29uc3QgZGFya2VyQ29sb3IgPSBnZXRSZ2JhQ29sb3IoZGFya2VyUmdiKTtcbmV4cG9ydCBjb25zdCBibGFja0NvbG9yID0gZ2V0UmdiYUNvbG9yKGJsYWNrUmdiKTtcblxuLyoqKioqKioqKioqKioqKioqKiovXG4vKiAgZm9udCBjb2xvcnNcbi8qKioqKioqKioqKioqKioqKioqL1xuXG5leHBvcnQgY29uc3QgZm9udExpZ2h0Q29sb3IgPSBnZXRSZ2JDb2xvcihicmlnaHRlclJnYik7XG5leHBvcnQgY29uc3QgZm9udENvbG9yID0gZ2V0UmdiQ29sb3IoYmFzZVJnYik7XG5leHBvcnQgY29uc3QgZm9udERhcmtDb2xvciA9IGdldFJnYkNvbG9yKGRhcmtlclJnYik7XG5cbi8qKioqKioqKioqKioqKioqKioqL1xuLyogIGNvbnRlbnQgY29sb3JzXG4vKioqKioqKioqKioqKioqKioqKi9cblxuZXhwb3J0IGNvbnN0IG1hcmt1cENvbG9yID0gZ2V0UmdiQ29sb3IoYnJpZ2h0ZXJSZ2IpO1xuZXhwb3J0IGNvbnN0IGJvcmRlckNvbG9yID0gZ2V0UmdiQ29sb3IoYnJpZ2h0UmdiKTtcbmV4cG9ydCBjb25zdCBjb21wb25lbnRCZ0NvbG9yID0gZ2V0UmdiYUNvbG9yKHdoaXRlUmdiKTtcbmV4cG9ydCBjb25zdCB3aGl0ZUhvdmVyQ29sb3IgPSBnZXRSZ2JhQ29sb3IoYnJpZ2h0UmdiLCBkYXJrQWxwaGEpO1xuZXhwb3J0IGNvbnN0IHRhZ0JnQ29sb3IgPSBnZXRSZ2JhQ29sb3IoZGFya1JnYik7XG5leHBvcnQgY29uc3QgYWR2ZXJ0Q29sb3IgPSBnZXRSZ2JhQ29sb3IoYnJpZ2h0UmdiKTtcbmV4cG9ydCBjb25zdCBhZHZlcnRIb3ZlckNvbG9yID0gZ2V0UmdiYUNvbG9yKGRhcmtSZ2IpO1xuZXhwb3J0IGNvbnN0IGFydGljbGVCZ0NvbG9yID0gZ2V0UmdiYUNvbG9yKGJyaWdodFJnYik7XG5leHBvcnQgY29uc3QgYXJ0aWNsZUJnSG92ZXJDb2xvciA9IGdldFJnYmFDb2xvcihkYXJrUmdiKTtcbmV4cG9ydCBjb25zdCBzYXZlQ29sb3IgPSBnZXRSZ2JhQ29sb3IoaG90UmdiKTtcbmV4cG9ydCBjb25zdCBzYXZlQ2hlY2tDb2xvciA9IGdldFJnYmFDb2xvcih0aGVtZVJnYik7XG5leHBvcnQgY29uc3QgYWxwaGFCZ1NldCA9IGBcbiAgICBiYWNrZ3JvdW5kOiAke2dldFJnYmFDb2xvcih3aGl0ZVJnYil9O1xuICAgIGJhY2tkcm9wLWZpbHRlcjogYmx1cig1cHgpO1xuYDtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBiYXNlVGVuc2lvbixcbiAgZGFya0RlcHRoLFxuICBkYXJrZXJEZXB0aCxcbiAgd2hpdGVSZ2IsXG4gIGJyaWdodGVyUmdiLFxuICBicmlnaHRSZ2IsXG4gIGJhc2VSZ2IsXG4gIGRhcmtSZ2IsXG4gIGRhcmtlclJnYixcbiAgYmxhY2tSZ2IsXG4gIGJyaWdodEFscGhhLFxuICBiYXNlQWxwaGEsXG4gIGRhcmtBbHBoYSxcbiAgdGhlbWVSZ2IsXG4gIGhvdFJnYixcbiAgZmxhdFJnYixcbiAgY29sZFJnYixcbiAgdGhlbWVDb2xvcixcbiAgaG90Q29sb3IsXG4gIGZsYXRDb2xvcixcbiAgY29sZENvbG9yLFxuICB3aGl0ZUNvbG9yLFxuICBicmlnaHRlckNvbG9yLFxuICBicmlnaHRDb2xvcixcbiAgYmFzZUNvbG9yLFxuICBkYXJrQ29sb3IsXG4gIGRhcmtlckNvbG9yLFxuICBibGFja0NvbG9yLFxuICBmb250TGlnaHRDb2xvcixcbiAgZm9udENvbG9yLFxuICBmb250RGFya0NvbG9yLFxuICBtYXJrdXBDb2xvcixcbiAgYm9yZGVyQ29sb3IsXG4gIGNvbXBvbmVudEJnQ29sb3IsXG4gIHdoaXRlSG92ZXJDb2xvcixcbiAgYWR2ZXJ0Q29sb3IsXG4gIGFkdmVydEhvdmVyQ29sb3IsXG4gIGFydGljbGVCZ0NvbG9yLFxuICBhcnRpY2xlQmdIb3ZlckNvbG9yLFxuICB0YWdCZ0NvbG9yLFxuICBzYXZlQ29sb3IsXG4gIHNhdmVDaGVja0NvbG9yLFxuICBhbHBoYUJnU2V0LFxuICBnZXRSZ2JDb2xvcixcbiAgZ2V0UmdiYUNvbG9yLFxufTtcbiIsImltcG9ydCBibG9ja3MgZnJvbSAnLi9ibG9ja3MnO1xuaW1wb3J0IGNvbG9ycyBmcm9tICcuL2NvbG9ycyc7XG5pbXBvcnQgbGF5b3V0cyBmcm9tICcuL2xheW91dHMnO1xuaW1wb3J0IHNoYWRvdyBmcm9tICcuL3NoYWRvdyc7XG5pbXBvcnQgekluZGV4IGZyb20gJy4vekluZGV4JztcblxuZXhwb3J0IGNvbnN0IGdldFRyaW1Vbml0TnVtYmVyID0gKHZhbHVlOiBzdHJpbmcpID0+IE51bWJlcih2YWx1ZS5yZXBsYWNlKCdweCcsICcnKSk7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgekluZGV4LFxuICAuLi5sYXlvdXRzLFxuICAuLi5jb2xvcnMsXG4gIC4uLmJsb2NrcyxcbiAgLi4uc2hhZG93LFxuICBnZXRUcmltVW5pdE51bWJlcixcbn07XG4iLCJpbXBvcnQgYmxvY2tzIGZyb20gJy4vYmxvY2tzJztcblxuLy8gU2VjdGlvblxuZXhwb3J0IGNvbnN0IHNlY3Rpb25QYWRkaW5nID0gYmxvY2tzLmRvdWJsZVNpemU7XG5leHBvcnQgY29uc3Qgc2VjdGlvbk1hcmdpbkNvbHVtbiA9IGJsb2Nrcy5xdWFkTWFyZ2luO1xuXG4vLyBNbnUuXG5leHBvcnQgY29uc3QgbWVudVBjV2lkdGggPSA1MjA7XG5leHBvcnQgY29uc3QgbWVudVRhYldpZHRoID0gNDMwO1xuXG4vLyBBcHAuXG5leHBvcnQgY29uc3QgYmFzZUhlaWdodCA9IDYwO1xuZXhwb3J0IGNvbnN0IGFwcEhlYWRlckhlaWdodCA9IGJhc2VIZWlnaHQ7XG5leHBvcnQgY29uc3QgYXBwV2lkdGggPSAxMjAwO1xuZXhwb3J0IGNvbnN0IGFkdmVydFdpZHRoID0gMjAwO1xuZXhwb3J0IGNvbnN0IHNwTGF5b3V0U3RyaWN0V2lkdGggPSA2ODA7XG5leHBvcnQgY29uc3Qgc3BMYXlvdXRTdHJpY3RXaWR0aFB4ID0gYCR7c3BMYXlvdXRTdHJpY3RXaWR0aH1weGA7XG5leHBvcnQgY29uc3Qgc3BMYXlvdXRXaWR0aCA9IDk4MDtcbmV4cG9ydCBjb25zdCBkb3VibGVBZHZlcnRXaWR0aCA9IGFwcFdpZHRoICsgYWR2ZXJ0V2lkdGggKiAxLjU7XG5leHBvcnQgY29uc3QgZXllQ2F0Y2hWd1ZhbHVlID0gMTAwO1xuZXhwb3J0IGNvbnN0IGV5ZUNhdGNoVmhWYWx1ZSA9IDIwO1xuZXhwb3J0IGNvbnN0IGV5ZUNhdGNoTWluSGVpZ2h0UHhWYWx1ZSA9IDI4MDtcblxuLy8gQXJ0aWNsZSBPcmRlci5cbmV4cG9ydCBjb25zdCBhcnRpY2xlT3JkZXJIZWlnaHQgPSAyOTA7XG5cbi8vIEFydGljbGUgKGxpc3QpLlxuZXhwb3J0IGNvbnN0IGFydGljbGVXaWR0aCA9IDMwMDtcbmV4cG9ydCBjb25zdCBhcnRpY2xlVG90YWxXaWR0aCA9IGFydGljbGVXaWR0aCArIGJsb2Nrcy5iYXNlU2l6ZSAqIDI7XG5leHBvcnQgY29uc3QgYXJ0aWNsZUNsb3NlSGVpZ2h0ID0gMjYwO1xuZXhwb3J0IGNvbnN0IGFydGljbGVPcGVuSGVpZ2h0ID0gJ2F1dG8nO1xuZXhwb3J0IGNvbnN0IGFydGljbGVPcGVuU2NhbGUgPSAxLjA1O1xuZXhwb3J0IGNvbnN0IGFydGljbGVTaGFkb3dDb2xvciA9ICcjNDQ0JztcblxuLy8gRG9tYWluIFByb2ZpbGUuXG5leHBvcnQgY29uc3QgaW1hZ2VXaWR0aCA9IDIwMDtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBzZWN0aW9uUGFkZGluZyxcbiAgc2VjdGlvbk1hcmdpbkNvbHVtbixcbiAgbWVudVBjV2lkdGgsXG4gIG1lbnVUYWJXaWR0aCxcbiAgYmFzZUhlaWdodCxcbiAgYXBwSGVhZGVySGVpZ2h0LFxuICBhcHBXaWR0aCxcbiAgYWR2ZXJ0V2lkdGgsXG4gIHNwTGF5b3V0U3RyaWN0V2lkdGgsXG4gIHNwTGF5b3V0U3RyaWN0V2lkdGhQeCxcbiAgc3BMYXlvdXRXaWR0aCxcbiAgZG91YmxlQWR2ZXJ0V2lkdGgsXG4gIGV5ZUNhdGNoVndWYWx1ZSxcbiAgZXllQ2F0Y2hWaFZhbHVlLFxuICBleWVDYXRjaE1pbkhlaWdodFB4VmFsdWUsXG4gIGFydGljbGVPcmRlckhlaWdodCxcbiAgYXJ0aWNsZVdpZHRoLFxuICBhcnRpY2xlVG90YWxXaWR0aCxcbiAgYXJ0aWNsZUNsb3NlSGVpZ2h0LFxuICBhcnRpY2xlT3BlbkhlaWdodCxcbiAgYXJ0aWNsZU9wZW5TY2FsZSxcbiAgYXJ0aWNsZVNoYWRvd0NvbG9yLFxuICBpbWFnZVdpZHRoLFxufTtcbiIsImltcG9ydCBjb2xvcnMsIHsgZ2V0UmdiQ29sb3IgfSBmcm9tICcuL2NvbG9ycyc7XG5cbmV4cG9ydCBjb25zdCBzaGFkb3dTaXplID0gMTA7XG5jb25zdCBzaGFkb3dUZXh0VHlwZSA9ICcxcHggMXB4JztcbmNvbnN0IHNoYWRvd0NpcmNsZSA9IGAwIDAgJHtzaGFkb3dTaXplfXB4IDBgO1xuY29uc3Qgc2hhZG93SG9yaXpvbiA9IGAwICR7c2hhZG93U2l6ZSAvIDJ9cHggJHtzaGFkb3dTaXplfXB4IDBgO1xuXG5leHBvcnQgY29uc3QgYmFzZVRleHRTaGFkb3cgPSBgJHtzaGFkb3dUZXh0VHlwZX0gJHtnZXRSZ2JDb2xvcihjb2xvcnMuZGFya1JnYil9YDtcbmV4cG9ydCBjb25zdCBzaGFkb3dDaXJjbGVCcmlnaHRlciA9IGAke3NoYWRvd0NpcmNsZX0gJHtnZXRSZ2JDb2xvcihjb2xvcnMuYnJpZ2h0ZXJSZ2IpfWA7XG5leHBvcnQgY29uc3Qgc2hhZG93Q2lyY2xlQnJpZ2h0ID0gYCR7c2hhZG93Q2lyY2xlfSAke2dldFJnYkNvbG9yKGNvbG9ycy5icmlnaHRSZ2IpfWA7XG5leHBvcnQgY29uc3Qgc2hhZG93Q2lyY2xlQmFzZSA9IGAke3NoYWRvd0NpcmNsZX0gJHtnZXRSZ2JDb2xvcihjb2xvcnMuYmFzZVJnYil9YDtcbmV4cG9ydCBjb25zdCBzaGFkb3dDaXJjbGVEYXJrID0gYCR7c2hhZG93Q2lyY2xlfSAke2dldFJnYkNvbG9yKGNvbG9ycy5kYXJrUmdiKX1gO1xuZXhwb3J0IGNvbnN0IHNoYWRvd0hvcml6b25CcmlnaHRlciA9IGAke3NoYWRvd0hvcml6b259ICR7Z2V0UmdiQ29sb3IoY29sb3JzLmJyaWdodGVyUmdiKX1gO1xuZXhwb3J0IGNvbnN0IHNoYWRvd0hvcml6b25CcmlnaHQgPSBgJHtzaGFkb3dIb3Jpem9ufSAke2dldFJnYkNvbG9yKGNvbG9ycy5icmlnaHRSZ2IpfWA7XG5leHBvcnQgY29uc3Qgc2hhZG93SG9yaXpvbkJhc2UgPSBgJHtzaGFkb3dIb3Jpem9ufSAke2dldFJnYkNvbG9yKGNvbG9ycy5iYXNlUmdiKX1gO1xuZXhwb3J0IGNvbnN0IHNoYWRvd0hvcml6b25EYXJrID0gYCR7c2hhZG93SG9yaXpvbn0gJHtnZXRSZ2JDb2xvcihjb2xvcnMuZGFya1JnYil9YDtcblxuZXhwb3J0IGRlZmF1bHQge1xuICBzaGFkb3dTaXplLFxuICBiYXNlVGV4dFNoYWRvdyxcbiAgc2hhZG93Q2lyY2xlQnJpZ2h0ZXIsXG4gIHNoYWRvd0NpcmNsZUJyaWdodCxcbiAgc2hhZG93Q2lyY2xlQmFzZSxcbiAgc2hhZG93Q2lyY2xlRGFyayxcbiAgc2hhZG93SG9yaXpvbkJyaWdodGVyLFxuICBzaGFkb3dIb3Jpem9uQnJpZ2h0LFxuICBzaGFkb3dIb3Jpem9uQmFzZSxcbiAgc2hhZG93SG9yaXpvbkRhcmssXG59O1xuIiwiZXhwb3J0IGNvbnN0IHpJbmRleCA9IHtcbiAgc2lkZU1lbnU6IDk4MCxcbiAgaGVhZGVyOiAxMDIsXG4gIHRvVG9wOiAxMDEsXG4gIGNvbnRlbnRzTWVudTogMTAwLFxuICBleWVDYXRjaDogMTAwLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgekluZGV4O1xuIiwiaW1wb3J0ICdub3JtYWxpemUuY3NzJztcblxuaW1wb3J0IGNvbmYgZnJvbSAnY29tbW9uL2NvbmYnO1xuaW1wb3J0IGRlZmluZSBmcm9tICdjb21tb24vZGVmaW5lJztcbmltcG9ydCB7IENvbmZpZ1R5cGUsIGNvbmZpZ0luaXQgfSBmcm9tICdjb21tb24vdGFsa25Db25maWcnO1xuXG5pbXBvcnQgUmVuZGVyIGZyb20gJ2NvdmVyL0FwcCc7XG5cbmV4cG9ydCBjb25zdCBzZWxlY3RDb250ZW50TWVudUxpdmVQYWdlcyA9ICdsaXZlUGFnZXMnO1xuZXhwb3J0IGNvbnN0IHNlbGVjdENvbnRlbnRNZW51Q3JlYXRvcnMgPSAnc3Rvcmllcyc7XG5leHBvcnQgY29uc3Qgc2VsZWN0Q29udGVudE1lbnVDb25maWcgPSAnY29uZmlnJztcbmV4cG9ydCBjb25zdCBzZWxlY3RDb250ZW50TWVudUJ1c2luZXNzID0gJ2J1c2luZXNzJztcbmV4cG9ydCBjb25zdCBzZWxlY3RDb250ZW50TWVudVN0b3J5ID0gJ3N0b3J5JztcbmV4cG9ydCBjb25zdCBzZWxlY3RDb250ZW50TWVudVByb2ZpbGUgPSAncHJvZmlsZSc7XG5leHBvcnQgY29uc3Qgc2VsZWN0Q29udGVudE1lbnVEZWZhdWx0ID0gc2VsZWN0Q29udGVudE1lbnVCdXNpbmVzcztcbmV4cG9ydCB0eXBlIFNlbGVjdENvbnRlbnRNZW51VHlwZSA9XG4gIHwgdHlwZW9mIHNlbGVjdENvbnRlbnRNZW51TGl2ZVBhZ2VzXG4gIHwgdHlwZW9mIHNlbGVjdENvbnRlbnRNZW51QnVzaW5lc3NcbiAgfCB0eXBlb2Ygc2VsZWN0Q29udGVudE1lbnVTdG9yeVxuICB8IHR5cGVvZiBzZWxlY3RDb250ZW50TWVudVByb2ZpbGVcbiAgfCB0eXBlb2Ygc2VsZWN0Q29udGVudE1lbnVMaXZlUGFnZXNcbiAgfCB0eXBlb2Ygc2VsZWN0Q29udGVudE1lbnVDcmVhdG9yc1xuICB8IHR5cGVvZiBzZWxlY3RDb250ZW50TWVudUNvbmZpZztcblxuZGVjbGFyZSBnbG9iYWwge1xuICBpbnRlcmZhY2UgV2luZG93IHtcbiAgICBnb29nbGU6IGFueTtcbiAgICB0YWxrblBheWxvYWQ6IGFueTtcbiAgICB0YWxrblRocmVhZDogYW55O1xuICAgIHRhbGtuU2VydmVyTWV0YXM6IGFueTtcbiAgICB0YWxrblN0YXRpY1RhZ3M6IGFueTtcbiAgICB0YWxrblN0YXRpY1RhZ3NCeUlkOiBhbnk7XG4gICAgdGFsa25Vc2VyOiBhbnk7XG4gICAgdGFsa25Vc2VyVGFnczogYW55O1xuICAgIHRhbGtuQ29uZmlnOiBDb25maWdUeXBlO1xuICAgIHRhbGtuU2VsZWN0Q29udGVudE1lbnU6IFNlbGVjdENvbnRlbnRNZW51VHlwZTtcbiAgICB0YWxrbkNvbXBvbmVudHM6IGFueTtcbiAgICB0YWxrblN0b3JpZXM6IGFueTtcbiAgICB0YWxrblN0b3JpZXNQb2ludGVyOiBudW1iZXI7XG4gICAgdGFsa25XaW5kb3c6IGFueTtcbiAgICB0YWxrbk1lZGlhOiBhbnk7XG4gICAgdGFsa25BUEk6IGFueTtcbiAgICBZb3V0dWJlOiBhbnk7XG4gICAgbG9nOiBhbnk7XG4gICAgX19SRURVWF9ERVZUT09MU19FWFRFTlNJT05fQ09NUE9TRV9fOiBhbnk7XG4gIH1cbiAgaW50ZXJmYWNlIE1hdGgge1xuICAgIGVhc2VJbk91dFF1YWQ6IGFueTtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBHb29nbGVTZXNzaW9uVHlwZSA9IHtcbiAgYXVkOiBzdHJpbmc7XG4gIGF6cDogc3RyaW5nO1xuICBlbWFpbDogc3RyaW5nO1xuICBlbWFpbF92ZXJpZmllZDogYm9vbGVhbjtcbiAgZXhwOiBudW1iZXI7XG4gIGZhbWlseV9uYW1lOiBzdHJpbmc7XG4gIGdpdmVuX25hbWU6IHN0cmluZztcbiAgaWF0OiBudW1iZXI7XG4gIGlzczogc3RyaW5nO1xuICBqdGk6IHN0cmluZztcbiAgbmFtZTogc3RyaW5nO1xuICBuYmY6IG51bWJlcjtcbiAgcGljdHVyZTogc3RyaW5nO1xuICBzdWI6IHN0cmluZztcbn07XG5cbmV4cG9ydCBjb25zdCBnb29nbGVTZXNzaW9uSW5pdCA9IHtcbiAgYXVkOiAnJyxcbiAgYXpwOiAnJyxcbiAgZW1haWw6ICcnLFxuICBlbWFpbF92ZXJpZmllZDogZmFsc2UsXG4gIGV4cDogMCxcbiAgZmFtaWx5X25hbWU6ICcnLFxuICBnaXZlbl9uYW1lOiAnJyxcbiAgaWF0OiAwLFxuICBpc3M6ICcnLFxuICBqdGk6ICcnLFxuICBuYW1lOiAnJyxcbiAgbmJmOiAwLFxuICBwaWN0dXJlOiAnJyxcbiAgc3ViOiAnJyxcbn07XG5cbmV4cG9ydCB0eXBlIFVzZXJUeXBlID0ge1xuICBuYW1lOiBzdHJpbmc7XG4gIGVtYWlsOiBzdHJpbmc7XG4gIGJnOiBzdHJpbmc7XG4gIGljb246IHN0cmluZztcbiAgYmlydGhkYXk6IG51bWJlcjtcbiAgbGFuZ3VhZ2VzOiBzdHJpbmdbXTtcbiAgc2V4ZXM6IHN0cmluZ1tdO1xuICBoYXNTZWxmVGFnczoge1xuICAgIGludmVzdG9yOiBib29sZWFuO1xuICAgIGZvdW5kZXI6IGJvb2xlYW47XG4gICAgbWVtYmVyOiBib29sZWFuO1xuICB9O1xufTtcblxuZXhwb3J0IGNvbnN0IHVzZXJIYXNTZWxmVGFnc0luaXQgPSB7XG4gIGludmVzdG9yOiBmYWxzZSxcbiAgZm91bmRlcjogZmFsc2UsXG4gIG1lbWJlcjogZmFsc2UsXG59O1xuXG5leHBvcnQgY29uc3QgdXNlckluaXQ6IFVzZXJUeXBlID0ge1xuICBuYW1lOiAnJyxcbiAgZW1haWw6ICcnLFxuICBiZzogJycsXG4gIGljb246ICcnLFxuICBiaXJ0aGRheTogY29uZi5kZWZhdWx0QmlydGhkYXlVbml4dGltZSxcbiAgbGFuZ3VhZ2VzOiBbXSxcbiAgc2V4ZXM6IFtdLFxuICBoYXNTZWxmVGFnczogdXNlckhhc1NlbGZUYWdzSW5pdCxcbn07XG5cbmV4cG9ydCB0eXBlIFVzZXJUYWdzVHlwZSA9IHtcbiAgc2VsZjogeyBpbnZlc3RvcjogYW55W107IGZvdW5kZXI6IGFueVtdOyBtZW1iZXI6IGFueVtdIH07XG4gIHJlbGF0aW9uOiB7IGludmVzdG9yOiBhbnlbXTsgZm91bmRlcjogYW55W107IG1lbWJlcjogYW55W10gfTtcbiAgc3Rvcnk6IHsgc3Rvcnk6IGFueVtdIH07XG59O1xuXG5jb25zdCBocmVmID0gU3RyaW5nKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcbmNvbnN0IHNwbGl0ZWRVcmwgPSBocmVmLnNwbGl0KCcvJyk7XG5jb25zdCBzcGxpdGVkVXJsTGVuZ3RoID0gc3BsaXRlZFVybC5sZW5ndGg7XG5sZXQgY2ggPSAnLyc7XG5cbndpbmRvdy50YWxrblN0b3JpZXNQb2ludGVyID0gd2luZG93LnRhbGtuQ29uZmlnICYmIHdpbmRvdy50YWxrbkNvbmZpZy5zdG9yaWVzSW5kZXggPyB3aW5kb3cudGFsa25Db25maWcuc3Rvcmllc0luZGV4Lmxlbmd0aCA6IDA7XG5cbmlmIChzcGxpdGVkVXJsW3NwbGl0ZWRVcmxMZW5ndGggLSAxXSA9PT0gJycpIHtcbiAgY2ggPSBocmVmO1xufSBlbHNlIHtcbiAgY29uc3QgbGFzdFNsYXNoID0gaHJlZi5sYXN0SW5kZXhPZignLycpO1xuICBjb25zdCBfdGFsa25TdG9yaWVzUG9pbnRlciA9IE51bWJlcihocmVmLnN1YnN0cihsYXN0U2xhc2ggKyAxLCBsYXN0U2xhc2gpKTtcbiAgY2ggPSBocmVmLnN1YnN0cigwLCBsYXN0U2xhc2ggKyAxKTtcblxuICBpZiAoX3RhbGtuU3Rvcmllc1BvaW50ZXIgPD0gMCkge1xuICAgIHdpbmRvdy50YWxrblN0b3JpZXNQb2ludGVyID0gMTtcbiAgfVxuXG4gIGlmICh3aW5kb3cudGFsa25TdG9yaWVzUG9pbnRlciA8IHdpbmRvdy50YWxrbkNvbmZpZy5zdG9yaWVzSW5kZXgubGVuZ3RoKSB7XG4gICAgd2luZG93LnRhbGtuU3Rvcmllc1BvaW50ZXIgPSB3aW5kb3cudGFsa25Db25maWcuc3Rvcmllc0luZGV4Lmxlbmd0aDtcbiAgfSBlbHNlIHtcbiAgICB3aW5kb3cudGFsa25TdG9yaWVzUG9pbnRlciA9IF90YWxrblN0b3JpZXNQb2ludGVyO1xuICB9XG59XG5cbmlmIChjb25mLmRvbWFpbiA9PT0gZGVmaW5lLkRFVkVMT1BNRU5UX0RPTUFJTikge1xuICBpZiAoY2guaW5kZXhPZihkZWZpbmUuUE9SVFMuREVWRUxPUE1FTlRfQ09WRVIpID49IDApIHtcbiAgICBjaCA9IGNoLnJlcGxhY2UoYGh0dHBzOi8vJHtkZWZpbmUuREVWRUxPUE1FTlRfRE9NQUlOfToke2RlZmluZS5QT1JUUy5ERVZFTE9QTUVOVF9DT1ZFUn1gLCAnJyk7XG4gIH0gZWxzZSB7XG4gICAgY2ggPSBjaC5yZXBsYWNlKGBodHRwczovLyR7ZGVmaW5lLlNVQl9ET01BSU5TLkNPVkVSfS4ke2RlZmluZS5ERVZFTE9QTUVOVF9ET01BSU59YCwgJycpO1xuICB9XG59IGVsc2Uge1xuICBjaCA9IGNoLnJlcGxhY2UoYGh0dHBzOi8vJHtkZWZpbmUuU1VCX0RPTUFJTlMuQ09WRVJ9LiR7ZGVmaW5lLlBST0RVQ1RJT05fRE9NQUlOfWAsICcnKTtcbn1cblxuUmVuZGVyKCk7XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHRsb2FkZWQ6IGZhbHNlLFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcblx0bW9kdWxlLmxvYWRlZCA9IHRydWU7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCIvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSAoZXhwb3J0cykgPT4ge1xuXHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcblx0fVxuXHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5tZCA9IChtb2R1bGUpID0+IHtcblx0bW9kdWxlLnBhdGhzID0gW107XG5cdGlmICghbW9kdWxlLmNoaWxkcmVuKSBtb2R1bGUuY2hpbGRyZW4gPSBbXTtcblx0cmV0dXJuIG1vZHVsZTtcbn07IiwiLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vLyBUaGlzIGVudHJ5IG1vZHVsZSBpcyByZWZlcmVuY2VkIGJ5IG90aGVyIG1vZHVsZXMgc28gaXQgY2FuJ3QgYmUgaW5saW5lZFxudmFyIF9fd2VicGFja19leHBvcnRzX18gPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDkyOTMpO1xuIl0sIm5hbWVzIjpbImNhY2hlZFNldFRpbWVvdXQiLCJjYWNoZWRDbGVhclRpbWVvdXQiLCJwcm9jZXNzIiwibW9kdWxlIiwiZXhwb3J0cyIsImRlZmF1bHRTZXRUaW1vdXQiLCJFcnJvciIsImRlZmF1bHRDbGVhclRpbWVvdXQiLCJydW5UaW1lb3V0IiwiZnVuIiwic2V0VGltZW91dCIsImUiLCJjYWxsIiwidGhpcyIsImNsZWFyVGltZW91dCIsImN1cnJlbnRRdWV1ZSIsInF1ZXVlIiwiZHJhaW5pbmciLCJxdWV1ZUluZGV4IiwiY2xlYW5VcE5leHRUaWNrIiwibGVuZ3RoIiwiY29uY2F0IiwiZHJhaW5RdWV1ZSIsInRpbWVvdXQiLCJsZW4iLCJydW4iLCJtYXJrZXIiLCJydW5DbGVhclRpbWVvdXQiLCJJdGVtIiwiYXJyYXkiLCJub29wIiwibmV4dFRpY2siLCJhcmdzIiwiQXJyYXkiLCJhcmd1bWVudHMiLCJpIiwicHVzaCIsInByb3RvdHlwZSIsImFwcGx5IiwidGl0bGUiLCJicm93c2VyIiwiZW52IiwiYXJndiIsInZlcnNpb24iLCJ2ZXJzaW9ucyIsIm9uIiwiYWRkTGlzdGVuZXIiLCJvbmNlIiwib2ZmIiwicmVtb3ZlTGlzdGVuZXIiLCJyZW1vdmVBbGxMaXN0ZW5lcnMiLCJlbWl0IiwicHJlcGVuZExpc3RlbmVyIiwicHJlcGVuZE9uY2VMaXN0ZW5lciIsImxpc3RlbmVycyIsIm5hbWUiLCJiaW5kaW5nIiwiY3dkIiwiY2hkaXIiLCJkaXIiLCJ1bWFzayIsInciLCJhdG9iTmF0aXZlIiwiYXRvYkJlc3QiLCJhdG9iIiwiQnVmZmVyIiwiYSIsInRvU3RyaW5nIiwiYmFzZTY0anMiLCJidWYiLCJiNjRUb0J5dGVBcnJheSIsIm1hcCIsImNoIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiam9pbiIsIndpbmRvdyIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiaWQiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsIml0ZW0iLCJjb250ZW50IiwibW9kdWxlcyIsIm1lZGlhUXVlcnkiLCJkZWR1cGUiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiX2kiLCJfYXJyYXlMaWtlVG9BcnJheSIsImFyciIsImFycjIiLCJfaXRlbSIsImlzQXJyYXkiLCJfYXJyYXlXaXRoSG9sZXMiLCJTeW1ib2wiLCJpdGVyYXRvciIsIl9zIiwiX2UiLCJfYXJyIiwiX24iLCJfZCIsIm5leHQiLCJkb25lIiwidmFsdWUiLCJlcnIiLCJfaXRlcmFibGVUb0FycmF5TGltaXQiLCJvIiwibWluTGVuIiwibiIsIk9iamVjdCIsInNsaWNlIiwiY29uc3RydWN0b3IiLCJmcm9tIiwidGVzdCIsIl91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheSIsIlR5cGVFcnJvciIsIl9ub25JdGVyYWJsZVJlc3QiLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290IiwicmVhY3RJcyIsIlJFQUNUX1NUQVRJQ1MiLCJjaGlsZENvbnRleHRUeXBlcyIsImNvbnRleHRUeXBlIiwiY29udGV4dFR5cGVzIiwiZGVmYXVsdFByb3BzIiwiZGlzcGxheU5hbWUiLCJnZXREZWZhdWx0UHJvcHMiLCJnZXREZXJpdmVkU3RhdGVGcm9tRXJyb3IiLCJnZXREZXJpdmVkU3RhdGVGcm9tUHJvcHMiLCJtaXhpbnMiLCJwcm9wVHlwZXMiLCJ0eXBlIiwiS05PV05fU1RBVElDUyIsImNhbGxlciIsImNhbGxlZSIsImFyaXR5IiwiTUVNT19TVEFUSUNTIiwiY29tcGFyZSIsIlRZUEVfU1RBVElDUyIsImdldFN0YXRpY3MiLCJjb21wb25lbnQiLCJpc01lbW8iLCJGb3J3YXJkUmVmIiwicmVuZGVyIiwiTWVtbyIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlOYW1lcyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImdldFByb3RvdHlwZU9mIiwib2JqZWN0UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJrZXlzIiwidGFyZ2V0U3RhdGljcyIsInNvdXJjZVN0YXRpY3MiLCJrZXkiLCJkZXNjcmlwdG9yIiwiaGFzT3duUHJvcGVydHkiLCJwcm9wSXNFbnVtZXJhYmxlIiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJ0b09iamVjdCIsInZhbCIsImFzc2lnbiIsInRlc3QxIiwidGVzdDIiLCJ0ZXN0MyIsInNwbGl0IiwiZm9yRWFjaCIsImxldHRlciIsInNob3VsZFVzZU5hdGl2ZSIsInRhcmdldCIsInN5bWJvbHMiLCJ0byIsInMiLCJhYSIsIm0iLCJyIiwieSIsImIiLCJjIiwiYmEiLCJTZXQiLCJjYSIsImRhIiwiZWEiLCJhZGQiLCJmYSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImhhIiwiaWEiLCJqYSIsImthIiwiQiIsImQiLCJmIiwiZyIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJzYW5pdGl6ZVVSTCIsInJlbW92ZUVtcHR5U3RyaW5nIiwiRCIsInRvTG93ZXJDYXNlIiwib2EiLCJwYSIsInRvVXBwZXJDYXNlIiwicWEiLCJtYSIsImlzTmFOIiwibmEiLCJsYSIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwicmVwbGFjZSIsInhsaW5rSHJlZiIsInJhIiwiX19TRUNSRVRfSU5URVJOQUxTX0RPX05PVF9VU0VfT1JfWU9VX1dJTExfQkVfRklSRUQiLCJzYSIsInRhIiwidWEiLCJ3YSIsInhhIiwieWEiLCJ6YSIsIkFhIiwiQmEiLCJDYSIsIkRhIiwiRWEiLCJGYSIsIkdhIiwiSGEiLCJJYSIsIkphIiwiZm9yIiwiRSIsIk1hIiwiS2EiLCJMYSIsIk5hIiwic3RhY2siLCJ0cmltIiwibWF0Y2giLCJPYSIsIlBhIiwicHJlcGFyZVN0YWNrVHJhY2UiLCJzZXQiLCJSZWZsZWN0IiwiY29uc3RydWN0IiwiayIsImgiLCJRYSIsInRhZyIsIl9yZW5kZXIiLCJSYSIsIiQkdHlwZW9mIiwiX2NvbnRleHQiLCJfcGF5bG9hZCIsIl9pbml0IiwiU2EiLCJUYSIsIm5vZGVOYW1lIiwiVmEiLCJfdmFsdWVUcmFja2VyIiwiZ2V0IiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldFZhbHVlIiwic2V0VmFsdWUiLCJzdG9wVHJhY2tpbmciLCJVYSIsIldhIiwiY2hlY2tlZCIsIlhhIiwiYWN0aXZlRWxlbWVudCIsImJvZHkiLCJZYSIsImRlZmF1bHRDaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiX3dyYXBwZXJTdGF0ZSIsImluaXRpYWxDaGVja2VkIiwiWmEiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiJGEiLCJhYiIsImJiIiwiY2IiLCJvd25lckRvY3VtZW50IiwiZWIiLCJjaGlsZHJlbiIsIkNoaWxkcmVuIiwiZGIiLCJmYiIsIm9wdGlvbnMiLCJzZWxlY3RlZCIsImRlZmF1bHRTZWxlY3RlZCIsImRpc2FibGVkIiwiZ2IiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsImhiIiwiaWIiLCJqYiIsInRleHRDb250ZW50Iiwia2IiLCJsYiIsIm1iIiwibmIiLCJvYiIsIm5hbWVzcGFjZVVSSSIsImlubmVySFRNTCIsInZhbHVlT2YiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJhcHBlbmRDaGlsZCIsIk1TQXBwIiwiZXhlY1Vuc2FmZUxvY2FsRnVuY3Rpb24iLCJwYiIsImxhc3RDaGlsZCIsIm5vZGVUeXBlIiwibm9kZVZhbHVlIiwicWIiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRBcmVhIiwiZ3JpZFJvdyIsImdyaWRSb3dFbmQiLCJncmlkUm93U3BhbiIsImdyaWRSb3dTdGFydCIsImdyaWRDb2x1bW4iLCJncmlkQ29sdW1uRW5kIiwiZ3JpZENvbHVtblNwYW4iLCJncmlkQ29sdW1uU3RhcnQiLCJmb250V2VpZ2h0IiwibGluZUNsYW1wIiwibGluZUhlaWdodCIsIm9wYWNpdHkiLCJvcmRlciIsIm9ycGhhbnMiLCJ0YWJTaXplIiwid2lkb3dzIiwiekluZGV4Iiwiem9vbSIsImZpbGxPcGFjaXR5IiwiZmxvb2RPcGFjaXR5Iiwic3RvcE9wYWNpdHkiLCJzdHJva2VEYXNoYXJyYXkiLCJzdHJva2VEYXNob2Zmc2V0Iiwic3Ryb2tlTWl0ZXJsaW1pdCIsInN0cm9rZU9wYWNpdHkiLCJzdHJva2VXaWR0aCIsInJiIiwic2IiLCJ0YiIsInN0eWxlIiwiaW5kZXhPZiIsInNldFByb3BlcnR5IiwiY2hhckF0Iiwic3Vic3RyaW5nIiwidWIiLCJtZW51aXRlbSIsImFyZWEiLCJiYXNlIiwiYnIiLCJjb2wiLCJlbWJlZCIsImhyIiwiaW1nIiwiaW5wdXQiLCJrZXlnZW4iLCJsaW5rIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJ2YiIsIndiIiwiaXMiLCJ4YiIsInNyY0VsZW1lbnQiLCJjb3JyZXNwb25kaW5nVXNlRWxlbWVudCIsInBhcmVudE5vZGUiLCJ5YiIsInpiIiwiQWIiLCJCYiIsIkNiIiwic3RhdGVOb2RlIiwiRGIiLCJFYiIsIkZiIiwiR2IiLCJIYiIsIkliIiwiSmIiLCJLYiIsIkxiIiwiTWIiLCJPYiIsIlBiIiwiUWIiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIlJiIiwibCIsIm9uRXJyb3IiLCJTYiIsIlRiIiwiVWIiLCJWYiIsIldiIiwiWGIiLCJaYiIsImFsdGVybmF0ZSIsInJldHVybiIsImZsYWdzIiwiJGIiLCJtZW1vaXplZFN0YXRlIiwiZGVoeWRyYXRlZCIsImFjIiwiY2MiLCJjaGlsZCIsInNpYmxpbmciLCJjdXJyZW50IiwiYmMiLCJkYyIsImVjIiwiZmMiLCJnYyIsImhjIiwiaWMiLCJqYyIsImtjIiwibGMiLCJtYyIsIm5jIiwiTWFwIiwib2MiLCJwYyIsInFjIiwicmMiLCJibG9ja2VkT24iLCJkb21FdmVudE5hbWUiLCJldmVudFN5c3RlbUZsYWdzIiwibmF0aXZlRXZlbnQiLCJ0YXJnZXRDb250YWluZXJzIiwic2MiLCJkZWxldGUiLCJwb2ludGVySWQiLCJ0YyIsInZjIiwid2MiLCJsYW5lUHJpb3JpdHkiLCJ1bnN0YWJsZV9ydW5XaXRoUHJpb3JpdHkiLCJwcmlvcml0eSIsImh5ZHJhdGUiLCJjb250YWluZXJJbmZvIiwieGMiLCJ5YyIsInNoaWZ0IiwiemMiLCJBYyIsIkJjIiwidW5zdGFibGVfc2NoZWR1bGVDYWxsYmFjayIsInVuc3RhYmxlX05vcm1hbFByaW9yaXR5IiwiQ2MiLCJEYyIsIkVjIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiRmMiLCJHYyIsIkhjIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsIkljIiwiSmMiLCJLYyIsIkxjIiwiTWMiLCJOYyIsIk9jIiwiUGMiLCJRYyIsInVuc3RhYmxlX25vdyIsIkYiLCJSYyIsIlVjIiwicGVuZGluZ0xhbmVzIiwiZXhwaXJlZExhbmVzIiwic3VzcGVuZGVkTGFuZXMiLCJwaW5nZWRMYW5lcyIsIlZjIiwiZW50YW5nbGVkTGFuZXMiLCJlbnRhbmdsZW1lbnRzIiwiV2MiLCJYYyIsIlljIiwiWmMiLCIkYyIsImV2ZW50VGltZXMiLCJNYXRoIiwiY2x6MzIiLCJiZCIsImNkIiwibG9nIiwiTE4yIiwiZGQiLCJ1bnN0YWJsZV9Vc2VyQmxvY2tpbmdQcmlvcml0eSIsImVkIiwiZmQiLCJnZCIsImhkIiwiYmluZCIsInVjIiwiamQiLCJrZCIsImxkIiwibWQiLCJuZCIsIm9kIiwia2V5Q29kZSIsImNoYXJDb2RlIiwicGQiLCJxZCIsInJkIiwiX3JlYWN0TmFtZSIsIl90YXJnZXRJbnN0IiwiY3VycmVudFRhcmdldCIsImlzRGVmYXVsdFByZXZlbnRlZCIsImRlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJjYW5jZWxCdWJibGUiLCJwZXJzaXN0IiwiaXNQZXJzaXN0ZW50Iiwid2QiLCJ4ZCIsInlkIiwic2QiLCJldmVudFBoYXNlIiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJ0aW1lU3RhbXAiLCJEYXRlIiwibm93IiwiaXNUcnVzdGVkIiwidGQiLCJ1ZCIsInZpZXciLCJkZXRhaWwiLCJ2ZCIsIkFkIiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInBhZ2VYIiwicGFnZVkiLCJjdHJsS2V5Iiwic2hpZnRLZXkiLCJhbHRLZXkiLCJtZXRhS2V5IiwiZ2V0TW9kaWZpZXJTdGF0ZSIsInpkIiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInRvRWxlbWVudCIsIm1vdmVtZW50WCIsIm1vdmVtZW50WSIsIkJkIiwiRGQiLCJkYXRhVHJhbnNmZXIiLCJGZCIsIkhkIiwiYW5pbWF0aW9uTmFtZSIsImVsYXBzZWRUaW1lIiwicHNldWRvRWxlbWVudCIsIkpkIiwiY2xpcGJvYXJkRGF0YSIsIkxkIiwiTWQiLCJFc2MiLCJTcGFjZWJhciIsIkxlZnQiLCJVcCIsIlJpZ2h0IiwiRG93biIsIkRlbCIsIldpbiIsIk1lbnUiLCJBcHBzIiwiU2Nyb2xsIiwiTW96UHJpbnRhYmxlS2V5IiwiTmQiLCJPZCIsIkFsdCIsIkNvbnRyb2wiLCJNZXRhIiwiU2hpZnQiLCJQZCIsIlJkIiwiY29kZSIsImxvY2F0aW9uIiwicmVwZWF0IiwibG9jYWxlIiwid2hpY2giLCJUZCIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0YW5nZW50aWFsUHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwidHdpc3QiLCJwb2ludGVyVHlwZSIsImlzUHJpbWFyeSIsIlZkIiwidG91Y2hlcyIsInRhcmdldFRvdWNoZXMiLCJjaGFuZ2VkVG91Y2hlcyIsIlhkIiwiWmQiLCJkZWx0YVgiLCJ3aGVlbERlbHRhWCIsImRlbHRhWSIsIndoZWVsRGVsdGFZIiwid2hlZWxEZWx0YSIsImRlbHRhWiIsImRlbHRhTW9kZSIsIiRkIiwiYWUiLCJiZSIsImRvY3VtZW50TW9kZSIsImNlIiwiZGUiLCJlZSIsImZlIiwiZ2UiLCJoZSIsImllIiwibGUiLCJjb2xvciIsImRhdGUiLCJkYXRldGltZSIsImVtYWlsIiwibW9udGgiLCJudW1iZXIiLCJwYXNzd29yZCIsInJhbmdlIiwic2VhcmNoIiwidGVsIiwidGV4dCIsInRpbWUiLCJ1cmwiLCJ3ZWVrIiwibWUiLCJuZSIsIm9lIiwiZXZlbnQiLCJwZSIsInFlIiwicmUiLCJzZSIsInRlIiwidWUiLCJ2ZSIsIndlIiwieGUiLCJ5ZSIsInplIiwib25pbnB1dCIsIkFlIiwiZGV0YWNoRXZlbnQiLCJCZSIsIkNlIiwiYXR0YWNoRXZlbnQiLCJEZSIsIkVlIiwiRmUiLCJIZSIsIkllIiwiSmUiLCJLZSIsIkxlIiwibm9kZSIsIm9mZnNldCIsIm5leHRTaWJsaW5nIiwiTWUiLCJjb250YWlucyIsImNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIiwiTmUiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnRXaW5kb3ciLCJocmVmIiwiT2UiLCJjb250ZW50RWRpdGFibGUiLCJQZSIsIlFlIiwiUmUiLCJTZSIsIlRlIiwiVWUiLCJzdGFydCIsInNlbGVjdGlvblN0YXJ0IiwiZW5kIiwic2VsZWN0aW9uRW5kIiwiYW5jaG9yTm9kZSIsImRlZmF1bHRWaWV3IiwiZ2V0U2VsZWN0aW9uIiwiYW5jaG9yT2Zmc2V0IiwiZm9jdXNOb2RlIiwiZm9jdXNPZmZzZXQiLCJWZSIsIldlIiwiWGUiLCJZZSIsIlplIiwiWWIiLCJpbnN0YW5jZSIsImxpc3RlbmVyIiwiRyIsIiRlIiwiaGFzIiwiYWYiLCJiZiIsInJhbmRvbSIsImNmIiwiZGYiLCJjYXB0dXJlIiwicGFzc2l2ZSIsIk5iIiwieCIsInoiLCJ1IiwicSIsInQiLCJ2IiwiZWYiLCJmZiIsInBhcmVudFdpbmRvdyIsImdmIiwiaGYiLCJKIiwiSyIsIlEiLCJMIiwiamUiLCJjaGFyIiwia2UiLCJ1bnNoaWZ0IiwiamYiLCJrZiIsImxmIiwibWYiLCJhdXRvRm9jdXMiLCJuZiIsIl9faHRtbCIsIm9mIiwicGYiLCJxZiIsInJmIiwic2YiLCJwcmV2aW91c1NpYmxpbmciLCJ0ZiIsInZmIiwid2YiLCJ4ZiIsInlmIiwiemYiLCJBZiIsIkJmIiwiSCIsIkkiLCJDZiIsIk0iLCJOIiwiRGYiLCJFZiIsIl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dCIsIkZmIiwiR2YiLCJIZiIsIklmIiwiZ2V0Q2hpbGRDb250ZXh0IiwiSmYiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dCIsIktmIiwiTGYiLCJNZiIsIk5mIiwiT2YiLCJQZiIsInVuc3RhYmxlX2NhbmNlbENhbGxiYWNrIiwiUWYiLCJ1bnN0YWJsZV9zaG91bGRZaWVsZCIsIlJmIiwidW5zdGFibGVfcmVxdWVzdFBhaW50IiwiU2YiLCJUZiIsInVuc3RhYmxlX2dldEN1cnJlbnRQcmlvcml0eUxldmVsIiwiVWYiLCJ1bnN0YWJsZV9JbW1lZGlhdGVQcmlvcml0eSIsIlZmIiwiV2YiLCJYZiIsInVuc3RhYmxlX0xvd1ByaW9yaXR5IiwiWWYiLCJ1bnN0YWJsZV9JZGxlUHJpb3JpdHkiLCJaZiIsIiRmIiwiYWciLCJiZyIsImNnIiwiZGciLCJPIiwiZWciLCJmZyIsImdnIiwiaGciLCJpZyIsImpnIiwia2ciLCJSZWFjdEN1cnJlbnRCYXRjaENvbmZpZyIsImxnIiwibWciLCJuZyIsIm9nIiwicGciLCJxZyIsInJnIiwiX2N1cnJlbnRWYWx1ZSIsInNnIiwiY2hpbGRMYW5lcyIsInRnIiwiZGVwZW5kZW5jaWVzIiwiZmlyc3RDb250ZXh0IiwibGFuZXMiLCJ1ZyIsInZnIiwiY29udGV4dCIsIm9ic2VydmVkQml0cyIsInJlc3BvbmRlcnMiLCJ3ZyIsInhnIiwidXBkYXRlUXVldWUiLCJiYXNlU3RhdGUiLCJmaXJzdEJhc2VVcGRhdGUiLCJsYXN0QmFzZVVwZGF0ZSIsInNoYXJlZCIsInBlbmRpbmciLCJlZmZlY3RzIiwieWciLCJ6ZyIsImV2ZW50VGltZSIsImxhbmUiLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJBZyIsIkJnIiwiQ2ciLCJBIiwicCIsIkMiLCJEZyIsIkVnIiwiRmciLCJDb21wb25lbnQiLCJyZWZzIiwiR2ciLCJLZyIsImlzTW91bnRlZCIsIl9yZWFjdEludGVybmFscyIsImVucXVldWVTZXRTdGF0ZSIsIkhnIiwiSWciLCJKZyIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJMZyIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwiTWciLCJzdGF0ZSIsInVwZGF0ZXIiLCJOZyIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIk9nIiwicHJvcHMiLCJnZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSIsIlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnRXaWxsTW91bnQiLCJjb21wb25lbnREaWRNb3VudCIsIlBnIiwiUWciLCJyZWYiLCJfb3duZXIiLCJfc3RyaW5nUmVmIiwiUmciLCJTZyIsImxhc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJpbmRleCIsIlRnIiwiVWciLCJtb2RlIiwiZWxlbWVudFR5cGUiLCJWZyIsImltcGxlbWVudGF0aW9uIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJkaCIsImVoIiwiZG9jdW1lbnRFbGVtZW50IiwidGFnTmFtZSIsImZoIiwiZ2giLCJoaCIsIlAiLCJpaCIsIm1lbW9pemVkUHJvcHMiLCJyZXZlYWxPcmRlciIsImpoIiwia2giLCJsaCIsIm1oIiwibmgiLCJvaCIsInBlbmRpbmdQcm9wcyIsInBoIiwicWgiLCJyaCIsInNoIiwidGgiLCJ1aCIsIl93b3JrSW5Qcm9ncmVzc1ZlcnNpb25QcmltYXJ5IiwidmgiLCJSZWFjdEN1cnJlbnREaXNwYXRjaGVyIiwid2giLCJ4aCIsIlIiLCJTIiwiVCIsInloIiwiemgiLCJBaCIsIkJoIiwiQ2giLCJEaCIsIkVoIiwiRmgiLCJHaCIsIkhoIiwiYmFzZVF1ZXVlIiwiSWgiLCJKaCIsIktoIiwibGFzdFJlbmRlcmVkUmVkdWNlciIsImFjdGlvbiIsImVhZ2VyUmVkdWNlciIsImVhZ2VyU3RhdGUiLCJsYXN0UmVuZGVyZWRTdGF0ZSIsImRpc3BhdGNoIiwiTGgiLCJNaCIsIl9nZXRWZXJzaW9uIiwiX3NvdXJjZSIsIm11dGFibGVSZWFkTGFuZXMiLCJOaCIsIlUiLCJ1c2VTdGF0ZSIsImdldFNuYXBzaG90Iiwic3Vic2NyaWJlIiwidXNlRWZmZWN0Iiwic2V0U25hcHNob3QiLCJPaCIsIlBoIiwiUWgiLCJSaCIsImNyZWF0ZSIsImRlc3Ryb3kiLCJkZXBzIiwiU2giLCJUaCIsIlVoIiwiVmgiLCJXaCIsIlhoIiwiWWgiLCJaaCIsIiRoIiwiYWkiLCJiaSIsImNpIiwiZGkiLCJyZWFkQ29udGV4dCIsInVzZUNhbGxiYWNrIiwidXNlQ29udGV4dCIsInVzZUltcGVyYXRpdmVIYW5kbGUiLCJ1c2VMYXlvdXRFZmZlY3QiLCJ1c2VNZW1vIiwidXNlUmVkdWNlciIsInVzZVJlZiIsInVzZURlYnVnVmFsdWUiLCJ1c2VEZWZlcnJlZFZhbHVlIiwidXNlVHJhbnNpdGlvbiIsInVzZU11dGFibGVTb3VyY2UiLCJ1c2VPcGFxdWVJZGVudGlmaWVyIiwidW5zdGFibGVfaXNOZXdSZWNvbmNpbGVyIiwidWYiLCJlaSIsIlJlYWN0Q3VycmVudE93bmVyIiwiZmkiLCJnaSIsImhpIiwiaWkiLCJqaSIsImtpIiwibGkiLCJtaSIsImJhc2VMYW5lcyIsIm5pIiwib2kiLCJwaSIsIlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlIiwiY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsInFpIiwicmkiLCJwZW5kaW5nQ29udGV4dCIsIkJpIiwiRGkiLCJFaSIsInNpIiwicmV0cnlMYW5lIiwidGkiLCJmYWxsYmFjayIsInVuc3RhYmxlX2F2b2lkVGhpc0ZhbGxiYWNrIiwidWkiLCJ1bnN0YWJsZV9leHBlY3RlZExvYWRUaW1lIiwidmkiLCJ3aSIsInhpIiwieWkiLCJ6aSIsImlzQmFja3dhcmRzIiwicmVuZGVyaW5nIiwicmVuZGVyaW5nU3RhcnRUaW1lIiwibGFzdCIsInRhaWwiLCJ0YWlsTW9kZSIsIkFpIiwiRmkiLCJHaSIsIndhc011bHRpcGxlIiwibXVsdGlwbGUiLCJvbkNsaWNrIiwib25jbGljayIsInNpemUiLCJjcmVhdGVFbGVtZW50TlMiLCJjcmVhdGVUZXh0Tm9kZSIsIlYiLCJIaSIsIklpIiwiVyIsIkppIiwiS2kiLCJMaSIsIk1pIiwibWVzc2FnZSIsIk5pIiwiY29uc29sZSIsImVycm9yIiwiT2kiLCJXZWFrTWFwIiwiUGkiLCJlbGVtZW50IiwiUWkiLCJSaSIsIlNpIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJUaSIsImNvbXBvbmVudFN0YWNrIiwiVWkiLCJXZWFrU2V0IiwiVmkiLCJXaSIsIlhpIiwiX19yZWFjdEludGVybmFsU25hcHNob3RCZWZvcmVVcGRhdGUiLCJZaSIsIlppIiwiJGkiLCJmb2N1cyIsImFqIiwiZGlzcGxheSIsImJqIiwib25Db21taXRGaWJlclVubW91bnQiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsImNqIiwiZGoiLCJlaiIsImZqIiwiZ2oiLCJoaiIsImluc2VydEJlZm9yZSIsIl9yZWFjdFJvb3RDb250YWluZXIiLCJpaiIsImpqIiwia2oiLCJsaiIsInRoZW4iLCJtaiIsIm5qIiwiY2VpbCIsIm9qIiwicGoiLCJYIiwiWSIsInFqIiwicmoiLCJzaiIsInRqIiwidWoiLCJ2aiIsIkluZmluaXR5Iiwid2oiLCJjayIsIloiLCJ4aiIsInlqIiwiemoiLCJBaiIsIkJqIiwiQ2oiLCJEaiIsIkVqIiwiRmoiLCJHaiIsIkhqIiwiSWoiLCJKaiIsIlNjIiwiS2oiLCJMaiIsIk1qIiwiY2FsbGJhY2tOb2RlIiwiZXhwaXJhdGlvblRpbWVzIiwiY2FsbGJhY2tQcmlvcml0eSIsIlRjIiwiTmoiLCJPaiIsIlBqIiwiUWoiLCJSaiIsIlNqIiwiVGoiLCJmaW5pc2hlZFdvcmsiLCJmaW5pc2hlZExhbmVzIiwiVWoiLCJ0aW1lb3V0SGFuZGxlIiwiV2oiLCJYaiIsInBpbmdDYWNoZSIsIllqIiwiWmoiLCJ2YSIsImFrIiwiYmsiLCJkayIsInJhbmdlQ291bnQiLCJmb2N1c2VkRWxlbSIsInNlbGVjdGlvblJhbmdlIiwiZWsiLCJtaW4iLCJleHRlbmQiLCJjcmVhdGVSYW5nZSIsInNldFN0YXJ0IiwicmVtb3ZlQWxsUmFuZ2VzIiwiYWRkUmFuZ2UiLCJzZXRFbmQiLCJsZWZ0Iiwic2Nyb2xsTGVmdCIsInRvcCIsInNjcm9sbFRvcCIsIm9uQ29tbWl0RmliZXJSb290IiwiZmsiLCJnayIsImlrIiwiaXNSZWFjdENvbXBvbmVudCIsInBlbmRpbmdDaGlsZHJlbiIsImprIiwibXV0YWJsZVNvdXJjZUVhZ2VySHlkcmF0aW9uRGF0YSIsImtrIiwibGsiLCJtayIsIm5rIiwib2siLCJxayIsImh5ZHJhdGlvbk9wdGlvbnMiLCJtdXRhYmxlU291cmNlcyIsIl9pbnRlcm5hbFJvb3QiLCJyayIsInRrIiwiaGFzQXR0cmlidXRlIiwic2siLCJ1ayIsImhrIiwiX2NhbGN1bGF0ZUNoYW5nZWRCaXRzIiwidW5zdGFibGVfb2JzZXJ2ZWRCaXRzIiwidW5tb3VudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JtIiwiVmoiLCJ2ayIsIkV2ZW50cyIsIndrIiwiZmluZEZpYmVyQnlIb3N0SW5zdGFuY2UiLCJidW5kbGVUeXBlIiwicmVuZGVyZXJQYWNrYWdlTmFtZSIsInhrIiwicmVuZGVyZXJDb25maWciLCJvdmVycmlkZUhvb2tTdGF0ZSIsIm92ZXJyaWRlSG9va1N0YXRlRGVsZXRlUGF0aCIsIm92ZXJyaWRlSG9va1N0YXRlUmVuYW1lUGF0aCIsIm92ZXJyaWRlUHJvcHMiLCJvdmVycmlkZVByb3BzRGVsZXRlUGF0aCIsIm92ZXJyaWRlUHJvcHNSZW5hbWVQYXRoIiwic2V0U3VzcGVuc2VIYW5kbGVyIiwic2NoZWR1bGVVcGRhdGUiLCJjdXJyZW50RGlzcGF0Y2hlclJlZiIsImZpbmRIb3N0SW5zdGFuY2VCeUZpYmVyIiwiZmluZEhvc3RJbnN0YW5jZXNGb3JSZWZyZXNoIiwic2NoZWR1bGVSZWZyZXNoIiwic2NoZWR1bGVSb290Iiwic2V0UmVmcmVzaEhhbmRsZXIiLCJnZXRDdXJyZW50RmliZXIiLCJfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18iLCJ5ayIsImlzRGlzYWJsZWQiLCJzdXBwb3J0c0ZpYmVyIiwiaW5qZWN0IiwiY3JlYXRlUG9ydGFsIiwiZmluZERPTU5vZGUiLCJmbHVzaFN5bmMiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9jcmVhdGVQb3J0YWwiLCJ1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImNoZWNrRENFIiwiQXN5bmNNb2RlIiwiQ29uY3VycmVudE1vZGUiLCJDb250ZXh0Q29uc3VtZXIiLCJDb250ZXh0UHJvdmlkZXIiLCJFbGVtZW50IiwiRnJhZ21lbnQiLCJMYXp5IiwiUG9ydGFsIiwiUHJvZmlsZXIiLCJTdHJpY3RNb2RlIiwiU3VzcGVuc2UiLCJpc0FzeW5jTW9kZSIsImlzQ29uY3VycmVudE1vZGUiLCJpc0NvbnRleHRDb25zdW1lciIsImlzQ29udGV4dFByb3ZpZGVyIiwiaXNFbGVtZW50IiwiaXNGb3J3YXJkUmVmIiwiaXNGcmFnbWVudCIsImlzTGF6eSIsImlzUG9ydGFsIiwiaXNQcm9maWxlciIsImlzU3RyaWN0TW9kZSIsImlzU3VzcGVuc2UiLCJpc1ZhbGlkRWxlbWVudFR5cGUiLCJ0eXBlT2YiLCJzZXRTdGF0ZSIsImZvcmNlVXBkYXRlIiwiX19zZWxmIiwiX19zb3VyY2UiLCJlc2NhcGUiLCJfc3RhdHVzIiwiX3Jlc3VsdCIsImRlZmF1bHQiLCJJc1NvbWVSZW5kZXJlckFjdGluZyIsImNvdW50IiwidG9BcnJheSIsIm9ubHkiLCJQdXJlQ29tcG9uZW50IiwiY2xvbmVFbGVtZW50IiwiY3JlYXRlQ29udGV4dCIsIl9jdXJyZW50VmFsdWUyIiwiX3RocmVhZENvdW50IiwiUHJvdmlkZXIiLCJDb25zdW1lciIsImNyZWF0ZUZhY3RvcnkiLCJjcmVhdGVSZWYiLCJmb3J3YXJkUmVmIiwiaXNWYWxpZEVsZW1lbnQiLCJsYXp5IiwibWVtbyIsInBlcmZvcm1hbmNlIiwiTWVzc2FnZUNoYW5uZWwiLCJ1bnN0YWJsZV9mb3JjZUZyYW1lUmF0ZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZmxvb3IiLCJwb3J0MiIsInBvcnQxIiwib25tZXNzYWdlIiwicG9zdE1lc3NhZ2UiLCJwb3AiLCJzb3J0SW5kZXgiLCJzdGFydFRpbWUiLCJleHBpcmF0aW9uVGltZSIsInByaW9yaXR5TGV2ZWwiLCJ1bnN0YWJsZV9Qcm9maWxpbmciLCJ1bnN0YWJsZV9jb250aW51ZUV4ZWN1dGlvbiIsInVuc3RhYmxlX2dldEZpcnN0Q2FsbGJhY2tOb2RlIiwidW5zdGFibGVfbmV4dCIsInVuc3RhYmxlX3BhdXNlRXhlY3V0aW9uIiwiZGVsYXkiLCJ1bnN0YWJsZV93cmFwQ2FsbGJhY2siLCJvYmpBIiwib2JqQiIsImNvbXBhcmVDb250ZXh0IiwicmV0Iiwia2V5c0EiLCJrZXlzQiIsImJIYXNPd25Qcm9wZXJ0eSIsImlkeCIsInZhbHVlQSIsInZhbHVlQiIsInN0eWxlVGFnVHJhbnNmb3JtIiwic2V0QXR0cmlidXRlcyIsImluc2VydCIsImRvbUFQSSIsImluc2VydFN0eWxlRWxlbWVudCIsInVuZGVmaW5lZCIsInN0eWxlc0luRG9tIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwib2JqIiwiY3NzIiwibWVkaWEiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwiYWRkU3R5bGUiLCJhcGkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2luZGV4Iiwic3BsaWNlIiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImdldFRhcmdldCIsImF0dHJpYnV0ZXMiLCJub25jZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY2hhckNvZGVBdCIsInByZWZpeCIsInVzZSIsIm1zR3JpZFJvdyIsIm1zR3JpZFJvd1NwYW4iLCJtc0dyaWRDb2x1bW4iLCJtc0dyaWRDb2x1bW5TcGFuIiwiV2Via2l0TGluZUNsYW1wIiwicmVhY3RQcm9wc1JlZ2V4IiwiY2FjaGUiLCJhcmciLCJwcm9wIiwiZnJlZXplIiwiXyIsInN0eWxlZENvbXBvbmVudElkIiwiUkVBQ1RfQVBQX1NDX0FUVFIiLCJTQ19BVFRSIiwiQm9vbGVhbiIsIlNDX0RJU0FCTEVfU1BFRURZIiwiUkVBQ1RfQVBQX1NDX0RJU0FCTEVfU1BFRURZIiwiaiIsImdyb3VwU2l6ZXMiLCJVaW50MzJBcnJheSIsImluZGV4T2ZHcm91cCIsImluc2VydFJ1bGVzIiwiaW5zZXJ0UnVsZSIsImNsZWFyR3JvdXAiLCJkZWxldGVSdWxlIiwiZ2V0R3JvdXAiLCJnZXRSdWxlIiwiUmVnRXhwIiwicmVnaXN0ZXJOYW1lIiwicGFyc2VJbnQiLCJnZXRUYWciLCJfX3dlYnBhY2tfbm9uY2VfXyIsImNoaWxkTm9kZXMiLCIkIiwic2hlZXQiLCJzdHlsZVNoZWV0cyIsIm93bmVyTm9kZSIsImNzc1J1bGVzIiwibm9kZXMiLCJydWxlcyIsImlzU2VydmVyIiwidXNlQ1NTT01JbmplY3Rpb24iLCJncyIsIm5hbWVzIiwic2VydmVyIiwiZ2V0QXR0cmlidXRlIiwicmVnaXN0ZXJJZCIsInJlY29uc3RydWN0V2l0aE9wdGlvbnMiLCJhbGxvY2F0ZUdTSW5zdGFuY2UiLCJoYXNOYW1lRm9ySWQiLCJjbGVhck5hbWVzIiwiY2xlYXIiLCJjbGVhclJ1bGVzIiwiY2xlYXJUYWciLCJhYnMiLCJzdGF0aWNSdWxlc0lkIiwiaXNTdGF0aWMiLCJjb21wb25lbnRJZCIsImJhc2VIYXNoIiwiYmFzZVN0eWxlIiwiZ2VuZXJhdGVBbmRJbmplY3RTdHlsZXMiLCJoYXNoIiwicGx1Z2lucyIsImxhc3RJbmRleE9mIiwicmVkdWNlIiwic3R5bGlzUGx1Z2lucyIsImRpc2FibGVDU1NPTUluamVjdGlvbiIsImRpc2FibGVWZW5kb3JQcmVmaXhlcyIsImdldE5hbWUiLCJpc0NzcyIsInRoZW1lIiwiR2UiLCJhdHRycyIsInBhcmVudENvbXBvbmVudElkIiwiZmlsdGVyIiwic2hvdWxkRm9yd2FyZFByb3AiLCJjb21wb25lbnRTdHlsZSIsImZvbGRlZENvbXBvbmVudElkcyIsIiRhcyIsImFzIiwiY2xhc3NOYW1lIiwid2l0aENvbXBvbmVudCIsIl9mb2xkZWREZWZhdWx0UHJvcHMiLCJ3aXRoQ29uZmlnIiwiY3JlYXRlU3R5bGVzIiwicmVtb3ZlU3R5bGVzIiwicmVuZGVyU3R5bGVzIiwiX2VtaXRTaGVldENTUyIsImdldFN0eWxlVGFncyIsInNlYWxlZCIsImdldFN0eWxlRWxlbWVudCIsInNlYWwiLCJjb2xsZWN0U3R5bGVzIiwiaW50ZXJsZWF2ZVdpdGhOb2RlU3RyZWFtIiwiU3R5bGVTaGVldCIsIm1hc3RlclNoZWV0IiwiQXBwIiwicGFyYW1zIiwic3VwZXIiLCJvZmZzZXRUaW1lbGluZUZpbmRJZCIsImRlZmF1bHRGaW5kSWQiLCJvZmZzZXRTaW5nbGVGaW5kSWQiLCJvZmZzZXRNdWx0aUZpbmRJZCIsIm9mZnNldENoaWxkRmluZElkIiwib2Zmc2V0TG9nc0ZpbmRJZCIsImlzTWVkaWFDaCIsImlzU2V0IiwiZ2V0SXNNZWRpYUNoIiwiaXNMaW5rQ2giLCJyb290Q2giLCJpc1Jvb3RDaCIsInJvb3RUaXRsZSIsInNyYyIsImdldE1lZGlhU3JjIiwicHJvdG9jb2wiLCJjaFR5cGUiLCJnZXRNZWRpYVR5cGUiLCJ0dW5lZCIsImRpc3BUaHJlYWRUeXBlIiwiZ2V0RGlzcFRocmVhZFR5cGUiLCJtdWx0aXN0cmVhbSIsImZpbmRUeXBlIiwiZmluZFR5cGVBbGwiLCJvZmZzZXRGaW5kSWQiLCJkZWZhdWx0T2Zmc2V0RmluZElkIiwiaW5wdXRQb3N0IiwiaW5wdXRTdGFtcElkIiwiaW5wdXRDdXJyZW50VGltZSIsImlucHV0U2VhcmNoIiwiaXNUb2dnbGVNdWx0aXN0cmVhbSIsImlzUmFua0RldGFpbE1vZGUiLCJhY3Rpb25lZCIsImRlYnVnIiwibWVkaWFUeXBlTXAzIiwibWVkaWFUeXBlTXA0IiwibWVkaWFUeXBlTTRhIiwibWVkaWFUYWdUeXBlQXVkaW8iLCJtZWRpYVRhZ1R5cGVWaWRlbyIsImdldE1lZGlhVHlwZUZyb21TcmMiLCJtZWRpYUNoVGFnVHlwZUtleXMiLCJtZWRpYUNoVGFnVHlwZXMiLCJtZWRpYUNoVGFnVHlwZUxlbmd0aCIsIm1lZGlhVHlwZSIsInJlZ0V4cCIsImlubmVyV2lkdGgiLCJOdW1iZXIiLCJpbm5lckhlaWdodCIsImNvbnRlbnRUeXBlIiwiaXNBdWRpb0NvbnRlbnRUeXBlIiwiaXNWaWRlb0NvbnRlbnRUeXBlIiwibWVkaWFDaHMiLCJzb21lIiwiZXh0IiwicmVnZXhwIiwiZGlzcFRocmVhZFR5cGVUaW1lbGluZSIsImRpc3BUaHJlYWRUeXBlTXVsdGkiLCJwb3N0cyIsIl9pZCIsImFwcCIsInJhbmtzIiwidGhyZWFkU3RhdHVzIiwidG9DaCIsImNsaWNrZWQiLCJhZnRlckRpc3BUaHJlYWRUeXBlIiwiYmVmb3JlRGlzcFRocmVhZFR5cGUiLCJnZXRTdGVwRGlzcFRocmVhZFR5cGUiLCJzdGVwVG8iLCJ1cGRhdGVkQXBwIiwiZGlzcFRocmVhZFR5cGVDaGlsZCIsImRpc3BUaHJlYWRUeXBlU2luZ2xlIiwiUG9zdCIsImRlZmF1bHRWYWx1ZXMiLCJjaHMiLCJmYXZpY29uIiwibGF5ZXIiLCJwb3N0Iiwic3RhbXBJZCIsImxpdmVDbnQiLCJ1aWQiLCJ1dHlwZSIsImRpc3BGbGciLCJjcmVhdGVUaW1lIiwiY3VycmVudFRpbWUiLCJ1cGRhdGVUaW1lIiwidmFsdWVzIiwiZGVmYXVsdEZhdmljb24iLCJUaHJlYWQiLCJib290T3B0aW9uIiwiVEFMS05fUFJPVE9DT0wiLCJjaGFyc2V0IiwiaG9zdCIsImdldERlZmF1bHRGYXZpY29uIiwiZ2V0RGVmYXVsdFRpdGxlIiwibWV0YXMiLCJlbW90aW9ucyIsInNlcnZlck1ldGFzIiwiY2xpZW50TWV0YXMiLCJsaW5rcyIsImgxcyIsImF1ZGlvcyIsInZpZGVvcyIsImdldExheWVyIiwibWVkaWFJbmRleCIsInBvc3RDbnQiLCJtdWx0aVBvc3RDbnQiLCJpc1NlbGZDaCIsInRocmVhZCIsImlzV2luZG93T2JqIiwiY29uc3RydWN0b3JGcm9tV2luZG93IiwiZmluZFR5cGVIdG1sIiwiZmluZFR5cGVNdXNpYyIsImZpbmRUeXBlVmlkZW8iLCJhc3NldHNVUkwiLCJhbGVydCIsImJvb3RDaCIsImdldENoIiwiaGFzU2xhc2giLCJoYXNzbGFzaCIsImdldEJvb2wiLCJnZXRQcm90b2NvbCIsImdldEhvc3QiLCJnZXRDaHMiLCJnZXRGYXZpY29uRnJvbVdpbmRvdyIsImdldElzU2VsZkNoIiwiX2NoIiwiY2hBcnIiLCJjaExlbmd0aCIsIm5ld0NoIiwiZG9tYWluIiwiZXZhbHVhdGUiLCJzdHJpbmdWYWx1ZSIsImhzIiwiaXNFeGlzdCIsInN0YXR1cyIsImRpc3BUeXBlIiwiaXNDcmVhdGUiLCJpc1JlcXVpcmVVcHNlcnQiLCJpc011bHRpc3RyZWFtIiwiZ2V0TW9yZSIsImdldFN0YXR1c0NyZWF0ZSIsImdldFN0YXR1c0lzUmVxdWlyZVVwc2VydCIsImdldFN0YXR1c0lzTXVsdGlzdHJlYW0iLCJnZXRTdGF0dXNJc1RvZ2dsZU11bHRpc3RyZWFtIiwiZ2V0U3RhdHVzSXNNZWRpYUNoIiwidGhyZWFkVXBkYXRlVGltZSIsImdldFRpbWUiLCJub3dZZWFyIiwiZ2V0RnVsbFllYXIiLCJub3dNb250aCIsImdldE1vbnRoIiwibm93RGF5IiwiZ2V0RGF0ZSIsIm5vd0hvdXIiLCJnZXRIb3VycyIsImdldE1pbnV0ZXMiLCJmaW5kT25lVGhyZWFkQWN0aXZlSG91ciIsImZpbmRUeXBlcyIsInNwbGl0ZWRDb250ZW50VHlwZSIsImluY2x1ZGVzIiwic3RyIiwiU1VCX0RPTUFJTlMiLCJERVZFTE9QTUVOVCIsIm1lZGlhU2Vjb25kSW50ZXJ2YWwiLCJzY3JlZW5TaXplIiwic21hbGwiLCJtaWRkbGUiLCJBU1NFVFMiLCJwb3J0YWxQYXRoIiwiQ0xJRU5UIiwiUE9SVEFMIiwiY2xpZW50UGF0aCIsImFzc2V0c1BhdGgiLCJzZXNzaW9uUGF0aCIsIlNFU1NJT04iLCJjYWNoZUtleSIsInNldHRpbmciLCJpRnJhbWVJZCIsImdldFdpZHRoIiwiZ2V0SGVpZ2h0IiwicG9zdHNIZWlnaHQiLCJnZXRTY3JlZW5TaXplIiwiZXh0ZW5zaW9uTW9kZSIsImV4dGVuc2lvbk1vZGVOb25lIiwiZXh0ZW5zaW9uV2lkdGgiLCJleHRlbnNpb25IZWlnaHQiLCJ0aHJlYWRTY3JvbGxZIiwiaXNPcGVuUG9zdHMiLCJnZXRJc09wZW5Qb3N0cyIsImlzT3BlblNldHRpbmciLCJpc09wZW5NZW51IiwiZ2V0SXNPcGVuTWVudSIsImlzT3BlbkRldGFpbCIsInNjcmVlblNpemVEZXRhaWxMYWJlbCIsImlzT3Blbk5ld1Bvc3QiLCJpc09wZW5Ob3RpZiIsImlzT3BlblBvc3RzU3VwcG9ydGVyIiwiaXNPcGVuQm9hcmQiLCJnZXRJc09wZW5Cb2FyZCIsImlzT3BlblNldENoTW9kYWwiLCJpc0J1YmJsZVBvc3QiLCJpc0Rpc3BQb3N0cyIsImlzT3BlbkxpbmtzIiwiaXNUcmFuc2l0aW9uIiwibWVudUNvbXBvbmVudCIsImdldERlZmF1bHRNZW51Q29tcG9uZW50Iiwib3BlbkxvY2tNZW51Iiwib3BlbkxvY2tNZW51TGFiZWxObyIsIm9wZW5Jbm5lck5vdGlmIiwiZGV0YWlsQ2giLCJpc0xvYWRpbmciLCJtZW51Q29tcG9uZW50UmFua0xhYmVsIiwiZXh0ZW5zaW9uSGVpZ3QiLCJ3aWR0aFB4Iiwic2NyZWVuU2l6ZVNtYWxsV2lkdGhQeCIsInNjcmVlblNpemVTbWFsbExhYmVsIiwic2NyZWVuU2l6ZU1pZGRsZVdpZHRoUHgiLCJzY3JlZW5TaXplTWlkZGxlTGFiZWwiLCJzY3JlZW5TaXplTGFyZ2VMYWJlbCIsImNhbGxlZCIsImV4dGVuc2lvbkNsb3NlSGVpZ2h0IiwiZXh0ZW5zaW9uTW9kZUJvdHRvbSIsImV4dGVuc2lvbk1vZGVNb2RhbCIsInByb2R1Y3Rpb24iLCJsb2NhbGhvc3QiLCJwcm9kdWN0aG9zdCIsInRhbGtuTGl2ZU1lZGlhSG9zdCIsIk1lZGlhVHlwZUNhdGVnb3J5QmFzZSIsIk1lZGlhVHlwZUNhdGVnb3J5UmFua2luZyIsIk1lZGlhVHlwZUNhdGVnb3J5QnV6ekN5Y2xlIiwiZGVmYXVsdE1lZGlhVHlwZUNhdGVnb3J5IiwiTWVkaWFUeXBlQXJ0aXN0cyIsIk1lZGlhVHlwZUNvbnRlbnRzIiwiTWVkaWFUeXBlTXVzaWMiLCJNZWRpYVR5cGVNb3ZpZXMiLCJNZWRpYVR5cGVBcHBzIiwiTWVkaWFUeXBlQm9va3MiLCJNZWRpYVR5cGVOZXdzIiwiTWVkaWFUeXBlR2lybHNOZXdzIiwiTWVkaWFUeXBlVHJlbmRXb3JkIiwiTmV0d29ya0NhdGVnb3J5TGlzdEJhc2VCZWxvbmdUeXBlIiwiTmV0d29ya0NhdGVnb3J5TGlzdFJhbmtpbmdCZWxvbmdUeXBlIiwiTmV0d29ya0NhdGVnb3J5TGlzdEJ1enpDeWNsZUJlbG9uZ1R5cGUiLCJOZXR3b3JrQ2F0ZWdvcnlMaXN0IiwiZGVmYXVsdE1lZGlhVHlwZSIsIk5ldHdvcmtOZXdzIiwic3ViRG9tYWluIiwibGFiZWwiLCJtZXRob2QiLCJlbmRwb2ludCIsIm5ld3MiLCJlbmRwb2ludEhvc3QiLCJoZWFkZXJzIiwiZW5kcG9pbnRLZXkiLCJkZXZQb3J0IiwiZ2V0SW1hZ2VQYXJhbXMiLCJOZXR3b3JrTGlzdCIsImdldE5ldHdvcmsiLCJmaW5kQ2FsbGJhayIsImZpbmQiLCJnZXRNeUhvc3QiLCJTY2hlbWEiLCJvcHRpb24iLCJnZXRUeXBlIiwiZm4iLCJmblN0cmluZyIsImRlZiIsImlzQWNjZXB0TnVsbCIsImlzQWNjZXB0QmxhbmsiLCJ2YWxpZCIsImlzRW1wdHlPYmplY3QiLCJ2YWxpZEZ1bmMiLCJfdmFsdWUiLCJwb2ludGVyIiwidmFsaWRWYWx1ZSIsInZhbGlkVHlwZSIsInBhcmFtc1ZhbHVlIiwicGFyYW1zVHlwZSIsInZhbGlkUmVzdWx0IiwidmFsaWRXYXJuIiwiZXJyb3JUaHJvdyIsIndhcm4iLCJjYW5TZXQiLCJjdXJyZW50VmFsdWUiLCJtZXJnZSIsImltbXV0YWJsZSIsIm9iaktleXMiLCJtZXJnZWRPYmoiLCJ0b0pTT04iLCJqc29uT2JqIiwiZnVuYyIsInJldHVybkltbXV0YWJsZSIsInNvcnQiLCJnZXRTaGlmdCIsInJlc3VsdHMiLCJTZXF1ZW5jZSIsIkFQSV9SRVFVRVNUX1RZUEUiLCJNRVRIT0RfQ09MT04iLCJBUElfUkVTUE9OU0VfVFlQRV9FTUlUIiwiQVBJX1JFU1BPTlNFX1RZUEVfQlJPQURDQVNUIiwidHVuZSIsInJlcXVlc3RQdWJsaWNTdGF0ZSIsInJlcXVlc3RQcml2YXRlU3RhdGUiLCJyZXNwb25zZUVtaXRTdGF0ZSIsInVzZXIiLCJyZXNwb25zZUJyb2FkY2FzdFN0YXRlIiwiZmV0Y2hQb3N0cyIsInVwZGF0ZVRocmVhZCIsImNoYW5nZVRocmVhZCIsImNoYW5nZVRocmVhZERldGFpbCIsImFkZEZpbmRDaGlsZCIsInJhbmsiLCJ1cGRhdGVUaHJlYWRTZXJ2ZXJNZXRhcyIsImRpc2Nvbm5lY3QiLCJzcGxpdGVkIiwic2VxdWVuY2UiLCJhY3Rpb25UeXBlIiwiYWN0aW9uTmFtZSIsImFjdGl2ZVJlc3BvbnNlTWFwIiwiYnJvYWRjYXN0IiwiQVBJX1NFUEFSQVRFX0lPX1RZUEVfU1RBUlQiLCJBUElfU0VQQVJBVEVfSU9fVFlQRV9FTkQiLCJBUElfU0VUVVAiLCJjb252ZXJ0QXBpVG9DbGllbnRBY3Rpb25UeXBlIiwiQVBJX1RPX1NFUlZFUl9SRVFVRVNUIiwiQVBJX1RPX0NMSUVOVF9SRVFVRVNUIiwiU0VSVkVSX1RPX0FQSV9FTUlUIiwiQVBJX1RPX0NMSUVOVF9FTUlUIiwiU0VSVkVSX1RPX0FQSV9CUk9BRENBU1QiLCJBUElfVE9fQ0xJRU5UX0JST0FEQ0FTVCIsInJlZHV4U3RhdGUiLCJyZXF1ZXN0UGFyYW1zIiwicmVxdWVzdFN0YXRlIiwiUkVEVVhfQUNUSU9OX0tFWSIsInN0YXRlS2V5IiwiY29sdW1uTmFtZSIsInJlc3BvbnNlVHlwZSIsInVwZGF0ZVN0YXRlIiwicmVzcG9uc2VTY2hlbWEiLCJyZXNwb25zZVN0YXRlIiwidXBkYXRlU3RhdGVLZXkiLCJjb2x1bW5OYW1lcyIsInVwZGF0ZVN0YXRlVmFsdWUiLCJfX3YiLCJyZXF1ZXN0UGFyYW1zMSIsInJlcXVlc3RQYXJhbXMyIiwiUFJPRFVDVElPTiIsIlBST0RVQ1RJT05fRE9NQUlOIiwiREVWRUxPUE1FTlRfRE9NQUlOIiwiUE9SVFMiLCJob3N0TmFtZSIsImhvc3RuYW1lIiwicG9ydCIsIkRFVkVMT1BNRU5UX0NMSUVOVCIsIkRFVkVMT1BNRU5UX0FQSSIsIkRFVkVMT1BNRU5UX0NPVkVSIiwiREVWRUxPUE1FTlRfQ09NUE9ORU5UUyIsIkRFVkVMT1BNRU5UX1RVTkUiLCJMT0NBTEhPU1QiLCJBV1NfSE9TVF9LRVkiLCJnZXRFbnYiLCJmaWxlcyIsImNsaWVudCIsIndzV29ya2VyIiwiY292ZXIiLCJjb21wb25lbnRzIiwiaXNEZXYiLCJ3d3dVUkwiLCJXV1ciLCJjb3ZlclVSTCIsIkNPVkVSIiwiYXBpVVJMIiwiQVBJIiwiYXBpQWNjZXNzVVJMIiwiY2xpZW50VVJMIiwiZGVzY1VSTCIsIkRFU0MiLCJwb3J0YWxVUkwiLCJhdXRvVVJMIiwiQVVUTyIsImV4dFVSTCIsIkVYVCIsImNvbXBVUkwiLCJDT01QIiwib3duVVJMIiwiT1dOIiwibmV3c1VSTCIsIk5FV1MiLCJ0dW5lVVJMIiwiVFVORSIsImNvbXBvbmVudHNVUkwiLCJDT01QT05FTlRTIiwiYXNzZXRzSW1nUGF0aCIsImNvbmYiLCJiYW5uZXJVUkwiLCJCQU5ORVIiLCJ0cmFuc2FjdGlvblVSTCIsIlRSQU5TQUNUSU9OIiwiYXNzZXRzQ292ZXJQYXRoIiwiYXNzZXRzSWNvblBhdGgiLCJhc3NldHNKc1BhdGgiLCJzZXNzaW9uVVJMIiwiZGVzY3JpcHRpb24iLCJhcGlWZXIiLCJscExhbmd1YWdlcyIsImRlZmF1bHRCaXJ0aGRheVVuaXh0aW1lIiwiZmluZE9uZVBvc3RDbnQiLCJmaW5kT25lTGltaXRDbnQiLCJvZ3BJbWFnZXMiLCJIdG1sIiwiTXVzaWMiLCJWaWRlbyIsImRlZmluZSIsIkFQUF9OQU1FIiwiUFJPRFVDVElPTl9JUCIsIkhPU1ROQU1FIiwiSFRUUCIsIkhUVFBTIiwiUkVESVMiLCJNT05HTyIsIlNPQ0tFVF9JTyIsIlJBTksiLCJBUFBfVFlQRVMiLCJFWFRFTlNJT04iLCJVUkwiLCJ0d2l0dGVyIiwiZmFjZWJvb2siLCJhcHBzdG9yZSIsInBsYXlzdG9yZSIsImNocm9tZUV4dGVuc2lvbiIsInRhbGtuQ2xpZW50SnMiLCJ0YWxrbkFwaUpzIiwidGFsa25SYW5rSnMiLCJub0lubmVyTm90aWYiLCJiYW5uZXJDbGFzcyIsInN0b3JhZ2VLZXkiLCJiYXNlS2V5IiwicG9zdHNUaW1lbGluZVplcm8iLCJwb3N0c1RpbWVsaW5lIiwicG9zdHNTaW5nbGUiLCJwb3N0c011bHRpIiwicG9zdHNDaGlsZCIsInBvc3RzTG9ncyIsInRocmVhZHMiLCJlbmRwb2ludFNlYXJjaEhvc3QiLCJtdXNpYyIsImNvbmZpZ1VzZXJDYXRlZ29yeUNoTGltaXQiLCJjb25maWdTdG9yaWVzTGltaXQiLCJjb25maWdJbml0Iiwic3Rvcmllc0luZGV4IiwidXNlckNhdGVnb3J5Q2hzIiwib2dwSW1hZ2UiLCJpYW1UYWdzIiwicmVsYXRpb25UYWdzIiwic3Rvcmllc0luZGV4SW5pdCIsImV5ZUNhdGNoIiwiaW50ZXJ2aWV3IiwiaXNVcmwiLCJnZXRTYXZlRmF2aWNvbk5hbWUiLCJmaWxlTmFtZSIsIl9maWxlTmFtZSIsInRyaW1QeCIsImdldFVwcGVyUHJlZml4IiwidGltZUFnb0Zvcm1hdHRlciIsInVuaXQiLCJzdWZmaXgiLCJzaG9ydFVuaXQiLCJwYXJzZUp3dCIsInRva2VuIiwianNvblBheWxvYWQiLCJkZWNvZGVVUklDb21wb25lbnQiLCJwYXJzZSIsImRlZXBDb3B5IiwiZGVlcEVxdWFscyIsIm9iajEiLCJvYmoyIiwiZ2V0QWdlQnlCaXJ0aGRheSIsImJpcnRoZGF5IiwicmV0dXJuQWdlIiwiYmlydGhEYXRlIiwibm93RGF0ZSIsImpzb24iLCJhc3luYyIsIl9ib2R5IiwicmVzcG9uc2UiLCJmZXRjaCIsImZvcm1EYXRhIiwiYnV0dG9uVGhlbWVIb3QiLCJob3RDb2xvciIsImJ1dHRvblRoZW1lRmxhdCIsImZsYXRDb2xvciIsImJ1dHRvblRoZW1lQ29sZCIsImNvbGRDb2xvciIsImJ1dHRvblRoZW1lQnJpZ2h0IiwiYnJpZ2h0Q29sb3IiLCJidXR0b25UaGVtZUJhc2UiLCJiYXNlQ29sb3IiLCJidXR0b25UaGVtZURlZmF1bHQiLCJ0aGVtZUNvbG9yIiwiZGlkTW91bnQiLCJzZXREaWRNb3VudCIsImZsZXhMYXlvdXRDZW50ZXJQcm9wc0luaXQiLCJMYXlvdXQiLCJsYXlvdXRQcm9wc0luaXQiLCJCdXR0b24iLCJiYXNlSGVpZ2h0IiwiTGF5b3V0Q3NzIiwiZG91YmxlUGFkZGluZyIsImdldENvbG9yIiwiZ2V0QmFja2dyb3VuZCIsImJvcmRlckNvbG9yIiwidHJhbnNpdGlvbkR1cmF0aW9uIiwic2hhZG93SG9yaXpvbkJyaWdodCIsIndoaXRlQ29sb3IiLCJDb250YWluZXIiLCJkaXYiLCJmbGV4TGF5b3V0UHJvcHNJbml0IiwiZmxvdyIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCIsImlubGluZSIsImZsZXhQcm9wc0luaXQiLCJ0YWdUeXBlIiwiRGl2IiwiU3BhbiIsIkZsZXhDc3MiLCJDb250YWluZXJDc3MiLCJzcGFuIiwiZ2V0Tm9kZSIsIm51bSIsIkNvbnRhaW5lcnMiLCJIQ3NzIiwiaDEiLCJmb250U2l6ZSIsImZvbnRDb2xvciIsImgyIiwiaDMiLCJoNCIsImg1IiwiaDYiLCJPbmUiLCJUd28iLCJUaHJlZSIsIkZvdXIiLCJGaXZlIiwiU2l4IiwiQ29udGVudCIsImNvbnRlbnRQcm9wc0luaXQiLCJDb250ZW50Q3NzIiwiaXNHYW5nZXJvdXNUYWciLCJodG1sIiwibHYiLCJQMSIsIlAyIiwiUDMiLCJQNCIsIlA1Iiwic2VjdGlvbiIsIkljb24iLCJfdW5peHRpbmUiLCJvbkNoYW5nZSIsInJlbGF0aW9uSWQiLCJnZXRVbml0dGltZVRvWW1kIiwieW1kIiwiRmxleEN1c3RvbSIsImh0bWxGb3IiLCJzaWRlTWFyZ2luIiwiSW5wdXQiLCJ1bml4dGltZSIsIklucHV0Q3NzIiwiZHJhZ1N0YXR1c0RyYWdvdmVyIiwiaW1hZ2VCZyIsImltYWdlSWNvbiIsImltYWdlRGVmYXVsdCIsImNvbnRhaW5lclJlZiIsImRyYWdEcm9wSW5wdXRSZWYiLCJkcmFnU3RhdHVzIiwic2V0RHJhZ1N0YXR1cyIsImRyYWdTdGF0dXNEcmFnbGVhdmUiLCJwcmV2aWV3IiwiZmlsZSIsImNvbnRhaW5lckVsbSIsInJlYWRlciIsIkZpbGVSZWFkZXIiLCJvbmxvYWQiLCJGb3JtRGF0YSIsImJhc2U2NFN0cmluZyIsImNyZWF0ZWRGaWxlIiwiRmlsZSIsImxhc3RNb2RpZmllZCIsImV4dFR5cGUiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJhcHBlbmQiLCJyZWFkQXNEYXRhVVJMIiwiZHJhZ0Ryb3BBcmVhSW5wdXQiLCJEcmFnRHJvcElucHV0IiwiYWNjZXB0IiwiYmdDc3MiLCJpY29uQ3NzIiwiZ2V0QmFja2dyb3VuZEltYWdlIiwiaW1hZ2UiLCJiYXNlTWFyZ2luIiwicXVhZE1hcmdpbiIsImdldFJnYmFDb2xvciIsInRoZW1lUmdiIiwiRHJvcEltYWdlIiwiVGV4dCIsIm5vU2VsZWN0T3B0aW9uIiwibm9TZWxlY3RPcHRpb25MYWJlbCIsImdldE5vU2VsZWN0T3B0aW9uIiwic2VsZWN0IiwiZGlzYWJsZWRCYXNlVGVuc2lvbiIsImJhc2VUZW5zaW9uIiwiZGlzYWJlbGRDb2xvciIsIlNpbmdsZSIsIk9wdGlvbiIsInZpZXdCb3giLCJlbmFibGVCYWNrZ3JvdW5kIiwiZmlsbCIsInNhdmVDaGVja0NvbG9yIiwieG1sbnMiLCJ4bWxTcGFjZSIsInByZXNlcnZlQXNwZWN0UmF0aW8iLCJ0cmFuc2Zvcm0iLCJzdHJva2UiLCJzdmdDc3MiLCJDaGVja21hcmsiLCJFZGl0IiwiUmVzZXQiLCJUYWciLCJVc2VyIiwiU3RvcnkiLCJBY2NvdW50TWVudXNNeU1lbnUiLCJBY2NvdW50TWVudXNTZWxlY3RBY2NvdW50IiwiQWNjb3VudE1lbnVzTG9nb3V0IiwiQWNjb3VudE1lbnVzIiwic2Vzc2lvbiIsInNldFNlc3Npb24iLCJzaG93TWVudSIsInNldFNob3dNZW51IiwiaGFuZGxlR29vbGdlQ3JlZGVudGlhbFJlc3BvbnNlIiwiZ29vbGdlQ3JlZGVudGlhbFJlc3BvbnNlIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsImNyZWRlbnRpYWwiLCJyZXF1ZXN0IiwiaXNzIiwibmJmIiwiYXVkIiwic3ViIiwiYXpwIiwicGljdHVyZSIsImlhdCIsImV4cCIsImp0aSIsImdpdmVuX25hbWUiLCJmYW1pbHlfbmFtZSIsImVtYWlsX3ZlcmlmaWVkIiwicmVsb2FkIiwic2Vzc2lvblN0ciIsImdldEl0ZW0iLCJwYXJzZWRTZXNzaW9uIiwiZ29vZ2xlIiwiYWNjb3VudHMiLCJpbml0aWFsaXplIiwiY2xpZW50X2lkIiwiY2FuY2VsX29uX3RhcF9vdXRzaWRlIiwicHJvbXB0Iiwibm90aWZpY2F0aW9uIiwiaXNOb3REaXNwbGF5ZWQiLCJpc1NraXBwZWRNb21lbnQiLCJjb29raWUiLCJMb2dpbiIsImJvcmRlciIsImJvcmRlclJhZGl1cyIsIk15QWNjb3VudCIsInNob3ciLCJzZXRTaG93IiwibWVudXMiLCJtZW51IiwicGFnZSIsInBhdGhuYW1lIiwiZGlzYWJsZUF1dG9TZWxlY3QiLCJyZW1vdmVJdGVtIiwiZml0UmlnaHQiLCJUaGVtZUdyZWVuIiwiTGFiZWxzIiwiQW5jaG9yIiwiQm94TGlzdCIsImFkZENsYXNzTmFtZSIsImFjdGl2ZSIsImJhc2VQYWRkaW5nIiwibWFya3VwQ29sb3IiLCJoZWFkZXJNZW51IiwiaWNvblR5cGUiLCJjaGVja0FuaW1hdGlvbiIsIlN2Z0ljb24iLCJTZWN0aW9uQ3VzdG9tIiwicmVzZXRPcmlnaW4iLCJ1cHBlck1hcmdpbiIsInNpZGVQYWRkaW5nIiwiYm90dG9tUGFkZGluZyIsImJvdHRvbU1hcmdpbiIsIkhlYWRlciIsInVwcGVyUGFkZGluZyIsInNwTGF5b3V0U3RyaWN0V2lkdGgiLCJVcHBlckxlZnQiLCJhc3NpZ25aZXJvIiwiVXBwZXJSaWdodCIsIkJvdHRvbUxlZnQiLCJCb3R0b21SaWdodCIsIkNoYXB0ZXJMZWZ0V2lkdGgiLCJzZXBTaXplIiwiQ2hhcHRlck1hcmdpbiIsInNlY3Rpb25NYXJnaW5Db2x1bW4iLCJJbm5lclBhZGRpbmciLCJzZWN0aW9uUGFkZGluZyIsImJhc2VTaXplIiwic3BMYXlvdXRXaWR0aCIsInNob3dBZHZlcnQiLCJoYW5kbGVPbkNsaWNrQ29udHJvbEFkdmVydCIsIkFkdmVydEhlYWRlciIsIkFkdmVydEF0dGFjaCIsIkFkdmVydFJpZ2h0IiwiQWR2ZXJ0TGVmdCIsIkFkdmVydENzcyIsImFkdmVydFdpZHRoIiwiYWR2ZXJ0Q29sb3IiLCJhZHZlcnRIb3ZlckNvbG9yIiwiZG91YmxlTWFyZ2luIiwiZG91YmxlQWR2ZXJ0V2lkdGgiLCJ0YWxrbkZyYW1lUmVmIiwiY2F0ZWdvcnlDaCIsInNlbGVjdENvbnRlbnRNZW51IiwiY29udGVudE1lbnVSZWYiLCJDb250ZW50TWVudU9yZGVyIiwiQ29udGVudE1lbnVMaXN0Iiwic2VsZWN0Q29udGVudE1lbnVQcm9maWxlIiwic2VsZWN0Q29udGVudE1lbnVCdXNpbmVzcyIsInNlbGVjdENvbnRlbnRNZW51U3RvcnkiLCJvbCIsImNvbnRlbnRzTWVudSIsImFscGhhQmdTZXQiLCJ1bCIsImFwcFdpZHRoIiwiZGFya0NvbG9yIiwidGFnTGFiZWxJbml0IiwiaW5kdXN0b3J5IiwiaW5kdXN0b3J5UGFyZW50Iiwic3RhcnR1cFNlcmllcyIsImpvYlBhcmVudCIsImpvYiIsInN0b3J5IiwiaXNNeVBhZ2UiLCJ0YWdQYXJlbnQiLCJzb21lVGFncyIsImlzRWRpdGFibGVzIiwiaXNDaGFuZ2VVc2VyVGFnIiwiaXNTYXZlZEFuaW1hdGlvbnMiLCJzZXRJc0VkaXRhYmxlcyIsImhhbmRsZU9uQ2xpY2tSZXNldCIsImhhbmRsZU9uQ2xpY2tUYWciLCJoYW5kbGVPbkNsaWNrUmVtb3ZlIiwiaGFuZGxlT25DbGlja1NhdmUiLCJpc0VkaXRhYmxlIiwidGFnUGFyZW50UHJvZmlsZSIsInRhZ1BhcmVudFN0b3J5IiwidGFnVHlwZUxvd2VyIiwidG9Mb2NhbGVMb3dlckNhc2UiLCJ0YWdTdHJ1Y3R1cmUiLCJsYWJlbHMiLCJnZXRDb252ZXJ0VGFnSWRUb0xhYmVsIiwidGFnU3RvcnkiLCJzdG9yeUlkIiwib25DbGlja1JlbW92ZSIsInRhZ1R5cGVzIiwidGFnQ250IiwidGFnSW52ZXN0b3IiLCJ0YWdGb3VuZGVyIiwidXBwZXJMZWZ0IiwidXBwZXJSaWdodCIsImJvdHRvbUxlZnQiLCJib3R0b21SaWdodCIsInllYXIiLCJ0YWdNZW1iZXIiLCJnZXRUYWdOb2RlIiwiZ2V0Q29udGVudCIsImluZHVzdG9yeUlkIiwiaW5kdXN0b3J5UGFyZW50SWQiLCJzdGFydHVwU2VyaWVzSWQiLCJqb2JJZCIsImpvYlBhcmVudElkIiwidGFnTGFiZWxzIiwidGFsa25TdGF0aWNUYWdzQnlJZCIsImpvYnMiLCJqb2JQYXJlbnRzIiwiZ2V0RGVzaWduIiwic2F2ZUNvbG9yIiwidGFnQmdDb2xvciIsImdldEhvdmVyIiwiTm9TZXRDb21wb25lbnMiLCJUYWdJZCIsIlByb2ZpbGVzIiwidXNlck1vZGFsT3B0aW9ucyIsImhhbmRsZU9uQ2hhbmdlTGFuZ3VhZ2VzIiwiaGFuZGxlT25DaGFuZ2VTZXhlcyIsImhhbmRsZU9uQ2hhbmdlQmlydGhkYXkiLCJ1bmRlcmxpbmUiLCJzZXhlcyIsImxhbmd1YWdlcyIsIk1vZGFsRm9vdGVyIiwib25DbGlja1Bvc2l0aXZlIiwiaGFuZGxlT25DbG9zZSIsInBvc2l0aXZlRGlzYWJlbGQiLCJzaG93UG9zaXRpdmUiLCJoYW5kbGVPblNlYXJjaCIsInJlcXVlc3RKc29uIiwiZ2V0SXNEaXNhYmxlZCIsImZpeFZhbHVlcyIsInRhZ1BhcmVudFNlbGYiLCJ0YWdQYXJlbnRTZWFyY2giLCJ0YWdQYXJlbnRUeXBlcyIsInRhZ01vZGVWaWV3IiwidGFnTW9kZUVkaXQiLCJpc0VkaXRhYmxlc0luaXQiLCJpc0NoYW5nZVVzZXJUYWdzSW5pdCIsImlzU2F2aW5nQW5pbWF0aW9uc0luaXQiLCJ0YWdQYXJlbnRUeXBlIiwidXNlck1vZGFsT3B0aW9uSW5pdCIsImljb24iLCJqb2JDYXRlZ29yeUlkIiwidXNlclRhZ3MiLCJ1c2VyVGFnc0luaXQiLCJzZXRVc2VyIiwic2V0VXNlclRhZ3MiLCJzZXRVc2VyVGFnc0luaXQiLCJzZXRTaG93U2VhcmNoTW9kYWxPcHRpb24iLCJpc0NoYW5nZVVzZXJUYWdzIiwic2V0SXNDaGFuZ2VVc2VyVGFncyIsInNlbGVjdEludmVzdG9yTW9kYWxPcHRpb24iLCJzZXRTZWxlY3RJbnZlc3Rvck1vZGFsT3B0aW9uIiwic2VsZWN0Rm91bmRlck1vZGFsT3B0aW9uIiwic2V0U2VsZWN0Rm91bmRlck1vZGFsT3B0aW9uIiwic2VsZWN0TWVtYmVyTW9kYWxPcHRpb24iLCJzZXRTZWxlY3RNZW1iZXJNb2RhbE9wdGlvbiIsInNlbGVjdFN0b3J5TW9kYWxPcHRpb24iLCJzZXRTZWxlY3RTdG9yeU1vZGFsT3B0aW9uIiwic2V0SXNTYXZlZEFuaW1hdGlvbnMiLCJ0YWdQYXJlbnRUeXBlTG93ZXIiLCJoYW5kbGVPbkNsaWNrUG9zaXRpdmUiLCJmaXhWYWx1ZSIsImhhbmRsZU9uT2siLCJjb2x1bW5UeXBlIiwidXBkYXRlSW5kZXhEYXRhIiwicHJvZmlsZUtleSIsInRhZ1BhcmVudEtleSIsImlzU2VsZlRhZ3MiLCJoYXNTZWxmVGFncyIsInVzZXJIYXNTZWxmVGFnc0luaXQiLCJyZXF1ZXN0VXNlclRhZ3MiLCJ0YWdUeXBlS2V5IiwiaXNFeGlzdEFjY291bnRUYWdzIiwidXBkYXRlSXNDaGFuZ2VVc2VyVGFncyIsInNsaWRlIiwib25DYW5jZWwiLCJmaXhWYWx1ZXNJbml0IiwiZGlzYWJsZUJ1dHRvbk9rIiwic2V0RGlzYWJsZUJ1dHRvbk9rIiwiaW5pdFZhbHVlcyIsInNldEluaXRWYWx1ZXMiLCJzZXRGaXhWYWx1ZXMiLCJTdHJ1Y3R1cmUiLCJjbG9zZU1vZGFsIiwiaGVhZGVyIiwib25DaGFuZ2VTdGFydHVwU2VyaWVzSWQiLCJvbkNoYW5nZVllYXIiLCJmb290ZXIiLCJvbkNoYW5nZUpvYiIsImNsaWNrZWRTdG9yeUlkIiwiQWdlIiwiQWdlUGFyYW1zIiwiX2JpcnRoZGF5Iiwic2V0QmlydGhkYXkiLCJhZ2UiLCJzZXRBZ2UiLCJoYW5kbGVPbkNoYW5nZSIsImRvdWJsZVNpemUiLCJfaW5kdXN0b3J5UGFyZW50SWQiLCJfaW5kdXN0b3J5SWQiLCJzZXRJbmR1c3RvcnlQYXJlbnRJZCIsInNldEluZHVzdG9yeUlkIiwiaW5kdXN0b3J5U3RhdGljRGF0YSIsInNldEluZHVzdG9yeVN0YXRpY0RhdGEiLCJ1cGRhdGVJbmR1c3RvcnlTdGF0aWNEYXRhIiwidGFsa25TdGF0aWNUYWdzIiwiaW5kIiwicGFyZW50SWQiLCJ1bmlxdWVJZCIsIl9qb2JQYXJlbnRJZCIsIl9qb2JJZCIsIl95ZWFyIiwic2V0Sm9iUGFyZW50SWQiLCJzZXRKb2JJZCIsImpvYlN0YXRpY0RhdGEiLCJzZXRKb2JTdGF0aWNEYXRhIiwic2V0WWVhciIsInVwZGF0ZUpvYlN0YXRpY0RhdGEiLCJhbGxMYW5ndWFnZSIsImVuIiwiZGVmYXVsdExhbmd1YWdlcyIsImxhbmd1YWdlc0luaXQiLCJsYW5ndWFnZSIsIl9sYW5ndWFnZXMiLCJpc0FjdGl2ZUFsbCIsInNldElzQWN0aXZlQWxsIiwic2V0TGFuZ3VhZ2VzIiwidXBkYXRlSXNBY3RpdmVBbGwiLCJ1cGRhdGVMYW5ndWFnZXMiLCJnZXRGdWxsTGFuZ3VhZ2VzIiwiQnV0dG9uQ3VzdG9tIiwiZ2V0QnV0dG9uVGhlbWUiLCJjbGlja2VkVW5pcXVlSWQiLCJjb25kaXRpb24iLCJhbGxTZXgiLCJkZWZhdWx0U2V4ZXMiLCJzZXhlc0luaXQiLCJfc2V4ZXMiLCJzZXRTZXhlcyIsInVwZGF0ZVNleGVzIiwiZ2V0RnVsbFNleGVzIiwic2V4IiwiX3NhcnR1cFNlcmllc0lkIiwic2V0U3RhcnR1cFNlcmllc0lkIiwiX3N0b3J5SWQiLCJzZXRTdG9yeUlkIiwiaXNTaG93IiwiZGVmYXVsdFllYXJzIiwic2hhZG93Q2lyY2xlRGFyayIsIkNsb3NlSWNvbiIsIkJvZHkiLCJNaWRkbHdGbGV4IiwiQm90dG9tRmxleCIsIm9wZW5NZW51Iiwic3Rvcmllc0luZGV4UG9pbnRlciIsIm1lbnVPcmRlclJlZiIsImZvY3VzTWVudU5vIiwidGFsa25Db25maWciLCJjb250ZW50cyIsIm5vIiwiQW5jaG9yUm93Iiwic2lkZU1lbnUiLCJhcHBIZWFkZXJIZWlnaHQiLCJjb21wb25lbnRCZ0NvbG9yIiwibWVudVBjV2lkdGgiLCJtZW51VGFiV2lkdGgiLCJuYXZpZ2F0aW9uTGF5b3V0Iiwic3Rvcmllc1JlZiIsInJlc3VtZVJlZiIsInN0b3JpZXNQb2ludGVyIiwiaGFuZGxlT25DbGlja05hdiIsIlN0b3JpZXMiLCJ0YWxrblN0b3JpZXMiLCJzZWN0aW9ucyIsIk5hdmlnYXRpb24iLCJIRml2ZUN1c3RvbSIsIk5hdmlnYXRpb25PcmRlciIsInJlc3VtZSIsImxheW91dFBhZGRpbmdMZWZ0IiwibmF2Iiwic3Rvcmllc0luZGV4Q29udGVudHNJbml0IiwiZ2V0U2Nyb2xsV2lkdGgiLCJzdG9yaWVzRXllQ2F0Y2hPcmRlclJlZiIsInN0b3JpZXNJbmRleGVzIiwic2V0U3Rvcmllc0luZGV4ZXMiLCJzZXRTdG9yaWVzSW5kZXgiLCJzdG9yaWVzRXllQ2F0Y2hzIiwic2V0U3Rvcmllc0V5ZUNhdGNocyIsIl9vZmZzZXQiLCJ0YWxrblN0b3JpZXNQb2ludGVyIiwibGltaXQiLCJfc3Rvcmllc0luZGV4ZXMiLCJyZXZlcnNlIiwiX3N0b3JpZXNFeWVDYXRjaHMiLCJ0YWxrblRocmVhZCIsIm9uU2Nyb2xsIiwic2Nyb2xsV2lkdGgiLCJzY3JvbGxJbmRleCIsImlzSW50ZWdlciIsInN0b3JpZXNJbmRleENudCIsInN0b3JpZXNFeWVDYXRjaCIsIkhlYWRFeWVDYXRjaExpc3QiLCJWaWV3QW5jaG9yIiwiYXJ0aWNsZUJnQ29sb3IiLCJhcnRpY2xlQmdIb3ZlckNvbG9yIiwiaG92ZXJBbmltYXRpb25Cb3hTaGFkb3ciLCJob3ZlckFuaW1hdGlvbkJsdXIiLCJob3ZlckFuaW1hdGlvbkRlZmF1bHQiLCJNYXJrIiwiTWFya0NvbnRhaW5lciIsImhhbmRsZU9uQ2xpY2siLCJpc1NhdmVkQW5pbWF0aW9uIiwiaG92ZXJBbmltYXRpb25UeXBlIiwiZnVsbFdpZHRoIiwidXNlR2xvYmFsQ29udGV4dCIsImlzSG92ZXIiLCJzZXRJc0hvdmVyIiwiY29udHJvbEhlaWdodCIsImdldENvbnRyb2xIZWlnaHQiLCJCYWNrZ3JvdW5kIiwib25Nb3VzZU92ZXIiLCJvbk1vdXNlTGVhdmUiLCJQcm9maWxlQ29udGVudCIsIlVzZXJJY29uIiwiZXllQ2F0Y2hWd1ZhbHVlIiwiZXllQ2F0Y2hNaW5IZWlnaHRQeFZhbHVlIiwiZ2V0Qm94U2hhZG93IiwiZ2V0QmFja2dyb3VuZFRyYW5zZm9ybSIsImdldEJhY2tkcm9wRmlsdGVyIiwiZXllQ2F0Y2hWaFZhbHVlIiwic2hhZG93SG9yaXpvbkJhc2UiLCJzZXRTZWxlY3RQcm9maWxlTW9kYWxPcHRpb24iLCJzZXRJc1NhdmVkQW5pbWF0aW9uIiwiaXNEaXNhYmxlZFNhdmVCdXR0b24iLCJzZXRJc0Rpc2FibGVkU2F2ZUJ1dHRvbiIsInNob3dNb2RhbCIsInNldFNob3dNb2RhbCIsImJnRm9ybURhdGEiLCJzZXRCZ0Zyb21EYXRhIiwiaWNvbkZvcm1EYXRhIiwic2V0SWNvbkZvcm1EYXRhIiwiSW5wdXREcm9wSW1hZ2VJY29uIiwicHJvbWlzZXMiLCJ1cGRhdGVVc2VyIiwiaXNVcGRhdGVJbWFnZSIsIlByb21pc2UiLCJhbGwiLCJoYW5kbGVPblNhdmUiLCJleWVDYXRjaFNjcm9sbEluZGV4Iiwic2V0RXllQ2F0Y2hTY3JvbGxJbmRleCIsImZpbmRJbmRleCIsIl9zdG9yaWVzSW5kZXgiLCJoYW5kbGVPbkNsaWNrQ2lyY2xlIiwic2Nyb2xsVG8iLCJkYXRhc2V0IiwiYmVoYXZpb3IiLCJFeWVDYXRjaENpcmNsZU9yZGVyIiwiY2lyY2xlIiwiZ2V0SGVhZEV5ZUNhdGNoU2VsZWN0T3JkZXJXaWR0aCIsIm1lbnVSZWYiLCJNZW51T2wiLCJob3ZlciIsImNvcGllZCIsInNldENvcGllZCIsImV4ZWNDb21tYW5kIiwiZm9udExpZ2h0Q29sb3IiLCJNZXNzYWdlIiwiQmFyQXJyb3dXcmFwIiwiQmFyIiwiQmFyQXJyb3ciLCJMb2dvIiwiQ29weXJpZ2h0Iiwic2VwTWFyZ2luIiwiX21lZGlhVHlwZSIsIkdyb3VwcyIsIk1lbWJlciIsImJnU3JjIiwiVG9Ub3AiLCJ0b1RvcCIsInF1aW50U2l6ZSIsIkZvb3RlciIsImhhbmRsZU9uQ2xpY2tNZW51IiwiSGVhZGVySW5TaWRlTWVudSIsIkhlYWRlclNpZGUiLCJtb2RhbENvbnRhaW5lckNsYXNzTmFtZSIsInNwTGF5b3V0U3RyaWN0V2lkdGhQeCIsIm9uVHJhbnNpdGlvbkVuZCIsIkJvYXJkIiwic3BhY2UiLCJnbG9iYWxDb250ZXh0Iiwib3B0aW5hbFBhcnRDbnQiLCJlbG0iLCJjbGFzc0xpc3QiLCJTZWN0aW9uQm9hcmQiLCJ3aW5kb3dJbm5lckhlaWdodCIsImZ1bGxIZWlnaHRDb250ZW50IiwiUGxhaW4iLCJUd2l0dGVyIiwiVHdpdHRlckljb24iLCJjaGFyU2V0IiwicmVsIiwic2V0SXNMb2FkaW5nIiwidXNlcnMiLCJzZXRVc2VycyIsImZldGNoRGF0YSIsImNhdGNoIiwiR2xvYmFsQ29udGV4dCIsInN0b3JpZXNJbml0Iiwic3Rvcmllc1ZlcnRpY2FsSW5pdGlhbCIsIm9mZnNldFRvcCIsIm9mZnNldEJvdHRvbSIsInN0b3JpZXNWZXJ0aWNhbERhdGFzIiwiZGF0YU1vdW50Iiwic2V0TW91bnREYXRhIiwiY29uZmlnIiwic2V0Q29uZmlnIiwic2V0VGhyZWFkIiwic2V0U2VydmVyTWV0YXMiLCJzdG9yaWVzIiwic2V0U3RvcmllcyIsInNldElzTXlQYWdlIiwiZ29vZ2xlU2Vzc2lvbkluaXQiLCJzZWxlY3RQcm9maWxlTW9kYWxPcHRpb24iLCJtYXhNYWluIiwic2V0TWF4TWFpbiIsInNldFNob3dBZHZlcnQiLCJzaG93U2VhcmNoTW9kYWxPcHRpb24iLCJzZXRVc2VyQ2F0ZWdvcnlDaHMiLCJzZXRTdG9yaWVzSW5kZXhQb2ludGVyIiwic2V0T3Blbk1lbnUiLCJzZXRTZWxlY3RDb250ZW50TWVudSIsInNlbGVjdENvbnRlbnRNZW51RGVmYXVsdCIsInNldFN0b3JpZXNQb2ludGVyIiwic2V0TmF2aWdhdGlvbkxheW91dCIsInNob3dTZWFyY2hNb2RhbCIsIndpbmRvd1NpemUiLCJzZXRXaW5kb3dTaXplIiwiaGFuZGxlUmVzaXplIiwidXNlV2luZG93U2l6ZSIsImNoYXB0ZXJJbmRleCIsInNjcm9sbFRvVG9wIiwiaGFuZGxlT25DbGlja01lbnVPdXQiLCJjbGllbnRIZWlnaHQiLCJ1c2VDYWxsYmFja1Njcm9sbCIsIl9zdG9yaWVzUG9pbnRlciIsInNjcm9sbFkiLCJyZXN1bWVFbG0iLCJyZXN1bWVTdHlsZSIsImdldENvbXB1dGVkU3R5bGUiLCJnZXRUcmltVW5pdE51bWJlciIsIm1hcmdpblRvcCIsIm1hcmdpblJpZ2h0IiwibWFyZ2luQm90dG9tIiwibWFyZ2luTGVmdCIsInBhZGRpbmdUb3AiLCJwYWRkaW5nUmlnaHQiLCJwYWRkaW5nQm90dG9tIiwicGFkZGluZ0xlZnQiLCJ1c2VyQ2F0ZWdvcnlDaENudCIsInRhbGtuU2VydmVyTWV0YXMiLCJ0YWxrblNlbGVjdENvbnRlbnRNZW51IiwidGFsa25Vc2VyIiwidGFsa25Vc2VyVGFncyIsIk1haW5Db250ZW50c0JvYXJkIiwiTWFpbkNvbnRlbnRzV3JhcCIsIk1haW5Db250ZW50cyIsInNlbGVjdENvbnRlbnRNZW51TGl2ZVBhZ2VzIiwiZm9udEJhc2VTaXplIiwibWFpbiIsInVzZVNlbGVjdCIsInRvcGxpbmUiLCJyYWRpdXNDaXJjbGUiLCJyYWRpdXNCdXR0b24iLCJyYWRpdXNJbnB1dCIsInNpemVPZmYiLCJzaXplU21hbGwiLCJzaXplTWlkZGxlIiwic2l6ZUxhcmdlIiwic2l6ZURlZmF1bHQiLCJnZXRQYWRkaW5nIiwiZ2V0TWFyZ2luIiwiZ2V0Qm9yZGVyIiwiZ2V0UmFkaXVzIiwid2hpdGVIb3ZlckNvbG9yIiwidHJpcGxlTWFyZ2luIiwidHJpcGxlUGFkZGluZyIsInRyaXBsZVNpemUiLCJxdWFkU2l6ZSIsInNpeFNpemUiLCJxdWludE1hcmdpbiIsInNleE1hcmdpbiIsInF1YWRQYWRkaW5nIiwicXVpbnRQYWRkaW5nIiwic2V4UGFkZGluZyIsInNlcFBhZGRpbmciLCJzaGFkb3dTaXplIiwiZ2V0UmdiQ29sb3IiLCJhbHBoYSIsImJhc2VBbHBoYSIsImRhcmtEZXB0aCIsImRhcmtlckRlcHRoIiwid2hpdGVSZ2IiLCJicmlnaHRlclJnYiIsImJyaWdodFJnYiIsImJhc2VSZ2IiLCJkYXJrUmdiIiwiZGFya2VyUmdiIiwiYmxhY2tSZ2IiLCJicmlnaHRBbHBoYSIsImRhcmtBbHBoYSIsImhvdFJnYiIsImZsYXRSZ2IiLCJjb2xkUmdiIiwiYnJpZ2h0ZXJDb2xvciIsImRhcmtlckNvbG9yIiwiYmxhY2tDb2xvciIsImZvbnREYXJrQ29sb3IiLCJhcnRpY2xlT3JkZXJIZWlnaHQiLCJhcnRpY2xlV2lkdGgiLCJhcnRpY2xlVG90YWxXaWR0aCIsImFydGljbGVDbG9zZUhlaWdodCIsImFydGljbGVPcGVuSGVpZ2h0IiwiYXJ0aWNsZU9wZW5TY2FsZSIsImFydGljbGVTaGFkb3dDb2xvciIsImltYWdlV2lkdGgiLCJzaGFkb3dDaXJjbGUiLCJzaGFkb3dIb3Jpem9uIiwiYmFzZVRleHRTaGFkb3ciLCJzaGFkb3dDaXJjbGVCcmlnaHRlciIsInNoYWRvd0NpcmNsZUJyaWdodCIsInNoYWRvd0NpcmNsZUJhc2UiLCJzaGFkb3dIb3Jpem9uQnJpZ2h0ZXIiLCJzaGFkb3dIb3Jpem9uRGFyayIsInNlbGVjdENvbnRlbnRNZW51Q3JlYXRvcnMiLCJzZWxlY3RDb250ZW50TWVudUNvbmZpZyIsImludmVzdG9yIiwiZm91bmRlciIsIm1lbWJlciIsInVzZXJJbml0Iiwic3BsaXRlZFVybCIsInNwbGl0ZWRVcmxMZW5ndGgiLCJsYXN0U2xhc2giLCJfdGFsa25TdG9yaWVzUG9pbnRlciIsInN1YnN0ciIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsImxvYWRlZCIsIl9fd2VicGFja19tb2R1bGVzX18iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZGVmaW5pdGlvbiIsInRvU3RyaW5nVGFnIiwibm1kIiwicGF0aHMiXSwic291cmNlUm9vdCI6IiJ9